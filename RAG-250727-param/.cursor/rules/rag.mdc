---
description:
globs:
alwaysApply: true
---

1、注意本项目采用集中参数管理，
D:\image_text_RAG_sys\RAG-System\RAG-250727-param\config.json 
对应 
D:\image_text_RAG_sys\RAG-System\RAG-250727-param\config\config_manager.py

D:\image_text_RAG_sys\RAG-System\RAG-250727-param\v2\config\v2_config.json 
对应
D:\image_text_RAG_sys\RAG-System\RAG-250727-param\v2\config\v2_config.py

2、API_key的调用使用D:\image_text_RAG_sys\RAG-System\RAG-250727-param\config\api_key_manager.py
3、数据库结构和内容可以运行D:\image_text_RAG_sys\RAG-System\RAG-250727-param\tools_important\vector_db_diagnostic_tool.py
4、主要程序
（1）D:\image_text_RAG_sys\RAG-System\RAG-250727-param\V501_simplified_document_processor.py是将pdf文档由minerU 解析后最终存储到向量数据库，也可以从markdown(含已经被minerU 解析的md、json、和图片)开始处理，最终存储到向量数据库 ，向量数据库从无到有
（2）D:\image_text_RAG_sys\RAG-System\RAG-250727-param\V501_incremental_processor.py功能类似，但是是增量添加文档到向量数据库
（3）D:\image_text_RAG_sys\RAG-System\RAG-250727-param\V502_image_enhancer_new.py是用于检查数据库中的图片image是否已经完成了大模型的增强描述(enhanced_description)、已经将增强描述进行向量化处理，并根据用户选择完成以上功能的。
（4）D:\image_text_RAG_sys\RAG-System\RAG-250727-param\V800_v2_main.py是用于管理web端查询和结果返回，也就是整个RAG系统的核心程序
5、前端分了五种类型的查询：目前智能查询和混合查询还在调试中，

关键调用关系总结如下

前端 → Flask路由系统 → v2_routes.py中的具体函数
v2_routes函数 → 混合引擎(HybridEngine)
混合引擎 → 专用引擎(ImageEngine/TextEngine/TableEngine)
专用引擎 → RerankingService → UnifiedPipeline
UnifiedPipeline → 专用引擎 → 混合引擎（结果包装层） → v2_routes函数（结果处理层） → 前端

详见：D:\image_text_RAG_sys\RAG-System\RAG-250727-param\v2\docs\0.RAG系统调用链分析.md
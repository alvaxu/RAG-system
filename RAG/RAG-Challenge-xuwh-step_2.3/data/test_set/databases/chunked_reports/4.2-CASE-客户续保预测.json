{
  "metainfo": {
    "sha1": "Aitraining",
    "sha1_name": "Aitraining",
    "pages_amount": 37,
    "text_blocks_amount": 134,
    "tables_amount": 10,
    "pictures_amount": 0,
    "equations_amount": 0,
    "footnotes_amount": 0,
    "company_name": "AI应用开发",
    "file_name": "4.2-CASE-客户续保预测"
  },
  "content": {
    "chunks": [
      {
        "page": 1,
        "length_tokens": 5,
        "text": "客户续保预测 ",
        "id": 0,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "Case: 客户续保预测 ",
        "id": 1,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 7,
        "text": "Case：客户续保预测 ",
        "id": 2,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 52,
        "text": "寿险行业是一个高度依赖于客户忠诚度和持续支付保费的领域。准确预测客户是否续保可以帮助保险公司提前采取措施，减少流失率，比如提供更加个性化的服务或者优化产品设计。",
        "id": 3,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 46,
        "text": "训练集：train.csv 1000条   \n测试集：test.csv200条   \nhttps://www.kaggle.c0m/t/467370365f17478   \n68eadbd65eeb970c5 ",
        "id": 4,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 5,
        "type": "table"
      },
      {
        "page": 3,
        "length_tokens": 8,
        "text": "Case: 客户续保预测 ",
        "id": 6,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 25,
        "text": "提交结果以cSV的格式，采用accuracy进行评价标准工作中，可能还会用到其他评价标准：",
        "id": 7,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 113,
        "text": "$F 1 = 2 { \\frac { p \\cdot r } { p + r } } { \\mathrm { ~ w h e r e ~ } } p = { \\frac { t p } { t p + f p } } , r = { \\frac { t p } { t p + f n } }$ 比如F1值，可以平衡精确率和召回率精确率 Precision：True Positive在all predicted positives的比例召回率 Recall:True Positive在all actual positives的比例",
        "id": 8,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 9,
        "type": "table"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "policyresult.csv，提交预测结果",
        "id": 10,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "Case: 客户续保预测 ",
        "id": 11,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 12,
        "type": "table"
      },
      {
        "page": 4,
        "length_tokens": 75,
        "text": "Step1，数据预处理  \n对数据进行可视化探索  \n缺失值处理，异常值处理，唯一值统计  \n分类变量数值化  \nStep2，模型选择（训练&评估）  \n随机森林,XGBoost,LightGBM  \n决策树、逻辑回归  \nStep3，模型预测（提交预测结果）",
        "id": 13,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "policyresult.csv，提交预测结果",
        "id": 14,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "To DO: 数据预处理",
        "id": 15,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 2,
        "text": "数据探索",
        "id": 16,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "Thinking: 针对客户续保， 都有哪些维度可以进行数据探索？",
        "id": 17,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "基本人口统计特征",
        "id": 18,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "年龄分布  \n性别差异  \n出生地区与投保所在地区的关联  \n经济状况  \n收入水平  \n教育背景  \n，职业类型",
        "id": 19,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 2,
        "text": "家庭结构",
        "id": 20,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 53,
        "text": "·婚姻状况  \n·家庭成员数量  \n保单详情  \n·保单类型  \n·保费金额  \n·保单期限  \n·理赔历史  \n时间和地域因素  \n·保单生效日期  \n·投保所在地区",
        "id": 21,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "数据探索",
        "id": 22,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 114,
        "text": "#年龄分布  \nplt.figure(figsize=(10, 6))  \nsns.histplot(df['age'], bins $\\scriptstyle \\mathtt { \\mathtt { = 5 0 } }$ ,kde $\\risingdotseq$ True)  \nplt.title('客户年龄分布')  \nplt.xlabel('年龄')  \nplt.ylabel('人数)  \nplt.show()  \n# 出生地区与投保所在地区的关联  \nregion_cross $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.crosstab(df['b",
        "id": 23,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 112,
        "text": "hbf { \\tau } = \\mathbf { \\tau }$ pd.crosstab(df['birth_region'], df['insurance_region'])  \nplt.figure(figsize $\\ c =$ (12, 10))  \nsns.heatmap(region_cross, cmap $= ^ { \\mathsf { 1 } }$ YIGnBu',annot $\\ c =$ False, fmt='.0f',  \ncbar_kws $\\ c =$ {\"label':'人数'})  \nplt.title('出生地区与投保所在地区的热力图')  \nplt.xla",
        "id": 24,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 106,
        "text": "l':'人数'})  \nplt.title('出生地区与投保所在地区的热力图')  \nplt.xlabel('投保所在地区')  \nplt.ylabel('出生地区')  \nplt.show()  \n# 性别差异  \ngender_renewal $\\mathbf { \\tau } = \\mathbf { \\tau }$   \ndf.groupby('gender')['renewal'].value_counts(normalize $\\circleddash$ True).unstack()  \ngender_renewal.plot(kind $= ^ { \\mathsf { I } }",
        "id": 25,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 64,
        "text": "  \ngender_renewal.plot(kind $= ^ { \\mathsf { I } }$ bar'，stacked $\\ c =$ True, figsize=(8, 6), title $\\bullet ^ { \\prime }$ 不同  \n性别续保情况\")  \nplt.ylabel('比例\")  \nplt.show()",
        "id": 26,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 27,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 28,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "数据探索 （人口特征）",
        "id": 29,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "image"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "数据探索 （人口特征）",
        "id": 31,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 33,
        "type": "image"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "数据探索 （经济情况）",
        "id": 34,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "数据探索 （经济情况）",
        "id": 36,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 37,
        "type": "image"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "数据探索 （家庭结构）",
        "id": 38,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "image"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "数据探索 （保单详情",
        "id": 40,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 41,
        "type": "image"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 42,
        "type": "image"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "数据探索 （保单详情",
        "id": 43,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 44,
        "type": "image"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "数据探索 （时间和地域因素）",
        "id": 45,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 46,
        "type": "image"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "数据探索 （时间和地域因素）",
        "id": 47,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 48,
        "type": "image"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "数据预处理",
        "id": 49,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 46,
        "text": "#查看分类变量   \ncate_cols $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.select_dtypes(include $\\mathop { \\bf { \\phi } } =$ ['object']).columns   \ncate_cols ",
        "id": 50,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 58,
        "text": "Index(['gender','birth_region','insurance_region','income_level', 'education_level','occupation','marital_status','policy_type', 'policy_term','claim_history','renewal'], dtype $\\mathbf { \\lambda } = \\mathbf { \\vec { \\lambda } }$ object') ",
        "id": 51,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 49,
        "text": "# policy_term字段：去掉'年'字，并转换为整数 df['policy_term'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['policy_term'].str.replace('年',\").astype(int) ",
        "id": 52,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "数据预处理",
        "id": 53,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 70,
        "text": "#对income_level进行数值编码 income_map $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {'低': 0,'中': 1,'高': 2} df['income_level'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['income_level'].map(income_map) ",
        "id": 54,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 71,
        "text": "#对education_level进行数值编码education_map $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {高中':0,'本科':1,'硕士':2,'博士':3}df['education_level'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['education_level'].map(education_map)",
        "id": 55,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 73,
        "text": "#对marital_status进行数值编码 marital_ $m a p = \\{ ^ { \\prime }$ 单身':0,'已婚':1,'离异': 2} df['marital_status'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['marital_status'].map(marital_map) ",
        "id": 56,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 121,
        "text": "#对gender进行数值编码   \ngender_map $\\mathbf { \\tau } = \\mathbf { \\tau }$ {女': 0,'男': 1}   \ndf['gender'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['gender'].map(gender_map)   \n# 对claim_map进行数值编码   \nrenewal_ $\\mathsf { m a p } = \\{ { } ^ { \\prime } \\mathsf { Y } \\mathsf { e s } ^ { \\prime } \\colon 1 , { } ^ ",
        "id": 57,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 116,
        "text": "Y } \\mathsf { e s } ^ { \\prime } \\colon 1 , { } ^ { \\prime } \\mathsf { N o } ^ { \\prime } \\colon 0 \\}$   \ndf['renewal'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['renewal'].map(renewal_map)   \n#将分类变量转换为数值型   \nle $\\mathbf { \\tau } = \\mathbf { \\tau }$ LabelEncoder()   \ncate_cols $\\mathbf { \\tau } = \\ma",
        "id": 58,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 65,
        "text": "abelEncoder()   \ncate_cols $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['birth_region','insurance_region',   \n'occupation','policy_type']   \nfor col in cate_cols: df[col] $\\mathbf { \\tau } = \\mathbf { \\tau }$ le.fit_transform(df[col]) ",
        "id": 59,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 61,
        "type": "table"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "续保预测：随机森林",
        "id": 62,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 100,
        "text": "import pandas as pd   \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_excel('./policy_clean.xlsx')   \n#转换为自某一起始点的天数   \ndf['policy_start_date'].min()   \nbase_date $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime('2010-01-01')   \ndf['policy_start_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ ",
        "id": 63,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 88,
        "text": "_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (df['policy_start_date'] -   \nbase_date).dt.days   \ndf[['policy_start_date','policy_start_date_day']]   \ndf['policy_end_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (df['policy_end_date'] -   \nbase_date).dt.days   \ndf[['policy_end_date','policy_e",
        "id": 64,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "e_date).dt.days   \ndf[['policy_end_date','policy_end_date_day'l] ",
        "id": 65,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 66,
        "type": "table"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "续保预测：随机森林",
        "id": 67,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 58,
        "text": "from sklearn.model_selection import train_test_split   \nfrom sklearn.preprocessing import StandardScaler   \nfrom sklearn.ensemble import RandomForestClassifier   \nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix   \n#特征和目标变量   \n$\\mathsf { X } =$ df.drop(['renewal','",
        "id": 68,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 105,
        "text": "#特征和目标变量   \n$\\mathsf { X } =$ df.drop(['renewal','policy_start_date','policy_end_date'], axis ${ \\bf \\varepsilon } = 1$ ）   \n$\\boldsymbol { \\mathsf { y } } = \\mathsf { d } \\boldsymbol { \\mathsf { f } } [$ 'renewal']   \n#标准化特征   \nscaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ StandardScaler()   \nX_scal",
        "id": 69,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 115,
        "text": "u } = \\mathbf { \\tau }$ StandardScaler()   \nX_scaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ scaler.fit_transform(X) 以上代码都可以复用，用于决策树、逻辑回归等   \n#划分训练集和测试集   \nX_train,X_test, y_train, Y_test $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(X_scaler, y, test_size ${ \\tt \\tt = } 0 . 2$ , random_state",
        "id": 70,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 24,
        "text": " y, test_size ${ \\tt \\tt = } 0 . 2$ , random_state=42) ",
        "id": 71,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "续保预测：随机森林",
        "id": 72,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 96,
        "text": "#创建随机森林分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ RandomForestClassifier(n_estimators=100, random_state=42)   \n# 训练模型   \nclf.fit(X_train, y_train)   \n#预测   \nY_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test)   \n#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"",
        "id": 73,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 44,
        "text": "uracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred))   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "id": 74,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "Accuracy: 0.925 ",
        "id": 75,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 16,
        "text": "Confusion Matrix:   \n[[33 11]   \n[4152]] ",
        "id": 76,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "Classification Report: ",
        "id": 77,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 78,
        "type": "table"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "续保预测：决策树 ",
        "id": 79,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 97,
        "text": "#创建决策树分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ DecisionTreeClassifier(random_state=42,max_depth=4)   \n#训练模型   \nclf.fit(X_train, Y_train)   \n#预测   \nY_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test)   \n#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"Confusio",
        "id": 80,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 42,
        "text": "accuracy_score(y_test, Y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred))   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "id": 81,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 7,
        "text": "Accuracy: 0.93 ",
        "id": 82,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 16,
        "text": "Confusion Matrix:   \n[[34 10]   \n[4152]] ",
        "id": 83,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "Classification Report: ",
        "id": 84,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 85,
        "type": "table"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "续保预测：决策树 ",
        "id": 86,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "#可视化决策树 ",
        "id": 87,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 92,
        "text": "dot_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ export_graphviz(clf, out_file $\\ c =$ None, feature_names=X.columns, class_names $\\ c =$ ['Not   \nRenewed', 'Renewed'], filled $\\mathbf { \\lambda } = \\mathbf { \\dot { \\lambda } }$ True, rounded $\\ c = { \\overrightarrow { \\vert \\mathbf { \\mu } } }$ True,",
        "id": 88,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 59,
        "text": "\\overrightarrow { \\vert \\mathbf { \\mu } } }$ True, special_characters $\\ c =$ True)   \ngraph $\\mathbf { \\tau } = \\mathbf { \\tau }$ pydotplus.graph_from_dot_data(dot_data)   \nImage(graph.create_png()) ",
        "id": 89,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 112,
        "text": "class=Renewed True False family_members≤2.5 age ≤60.5 gini=0.499 samp1 due=e5 class=Not Renewed class=Renewe policy_stait_date_day≤703.0 marital stus 1.5 poey family_members≤3.5 gini =0.294 gini = 0.449 gini=0.449 val15 samples =106 valpg /alue=[36,70] [8,481] class=NotRenewed class=Renewed class=Re",
        "id": 90,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 97,
        "text": "0] [8,481] class=NotRenewed class=Renewed class=Renewed class=Renewed n1-195 国 G oc535 educaion iel0. Ca samples = 5 class=newed samples = 87 Can clss=N= [1.nwed Ce =Not Renewed class = Renewed class= Not Renewed va class = Not Renewed class = Renewed class =Not Renewed class =NotRenew Ga class = Re",
        "id": 91,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 56,
        "text": "d class =Not Renewed class =NotRenew Ga class = Renewed valtg-0.4 class=Renewed somples=419 class =Renewed vamuples.6g class = Not Renewed E class = Renewed class =Not Renewec ",
        "id": 92,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "续保预测：决策树 ",
        "id": 93,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 51,
        "text": "from sklearn.tree import DecisionTreeClassifier, export_text #输出决策树的文本表示   \ntree_rules $\\mathbf { \\tau } = \\mathbf { \\tau }$ export_text(clf, feature_names=list(X.columns)) print(tree_rules) ",
        "id": 94,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 122,
        "text": "--- age <= 29.50 |--- family_members <= 2.50 :policy_start_date_day $< = 7 0 3 . 0 0$ （2 - age <= 19.50 |--- class: 0 |--- age > 19.50 1 --- class:1 -- policy_start_date_day $>$ 703.00 |--- age <= 21.50 1 |--- class: 0 |--- age > 21.50 |--- class: 0 l--- family_members $>$ 2.50 : marital_status $< =",
        "id": 95,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 115,
        "text": "l--- family_members $>$ 2.50 : marital_status $< = \\ 1 . 5 8$ --- occupation $< = ~ 2 . 5 8$ |--- class: 1 |--- occupation $>$ 2.50 |--- class: 0 -- marital_status $>$ 1.50 |--- policy_end_date_day $\\scriptstyle < =$ 8918.50 --- class:0 |--- policy_end_date_day $>$ 8918.50 |--- class: 1 age > 29.50 ",
        "id": 96,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 124,
        "text": "nd_date_day $>$ 8918.50 |--- class: 1 age > 29.50 age $< = ~ 6 0 . 5 8$ - policy_end_date_day $\\scriptstyle < =$ 5506.00 |--- class: 0 --- policy_end_date_day $>$ 5506.00 |--- occupation $< = ~ 3 . 5 0$ 1 |--- class: 1 |--- occupation $>$ 3.50 |--- class: 1 |--- age > 60.50 |--- family_members $< = ",
        "id": 97,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 117,
        "text": "lass: 1 |--- age > 60.50 |--- family_members $< = ~ 3 . 5 0$ （20 - education_level $< = ~ 9 . 5 8$ （20 |--- class: 0 |--- education_level $>$ 0.50 |--- class: 1 --- family_members > 3.50 |--- marital_status $< = ~ 1 . 5 0$ （204 |--- class: 1 - marital_status $>$ 1.50 |--- class: 0 ",
        "id": 98,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "续保预测：逻辑回归 ",
        "id": 99,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 54,
        "text": "#创建逻辑回归分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ LogisticRegression(random_state $= 4 2$ ,max_iter=200) # 增加   \nmax_iter以确保收敛 ",
        "id": 100,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "# 训练模型 clf.fit(X_train, y_train) ",
        "id": 101,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 24,
        "text": "#预测 Y_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test) ",
        "id": 102,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 51,
        "text": "#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred)   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "id": 103,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "Accuracy: 0.835 ",
        "id": 104,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 21,
        "text": "Confusion Matrix:   \n[[11 33]   \n[0 156]]   \nClassification Report: ",
        "id": 105,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "table"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "续保预测：逻辑回归 ",
        "id": 107,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 112,
        "text": "#获取特征重要性（通过系数）  \nfeature_importance $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.coef_[0]#取第一个类别的系数绝对值  \nfeature_names $\\mathbf { \\tau } = \\mathbf { \\tau }$ X.columns  \n#将特征重要性和特征名称组合成一个DataFrame  \nimportances_df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({'Feature': feature_names,'lmportance':",
        "id": 108,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 94,
        "text": ".DataFrame({'Feature': feature_names,'lmportance': feature_impor  \n# 按照重要性从大到小排序  \nimportances_df $\\mathbf { \\tau } = \\mathbf { \\tau }$ importances_df.sort_values(by='lmportance', ascending=False)  \n#绘制水平柱状图  \nplt.figure(figsize=(10, 8))  \nplt.barh(importances_df['Feature'], importances_df['lmportan",
        "id": 109,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 69,
        "text": "mportances_df['Feature'], importances_df['lmportance'], color='skyblue')  \nplt.xlabel('Feature lmportance (Absolute Coefficient Value)')  \nplt.title('Feature Importance from Logistic Regression Model')  \nplt.gca().invert_yaxis()#使得最重要的特征在顶部  \nplt.show()",
        "id": 110,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "续保预测：逻辑回归 ",
        "id": 111,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 112,
        "type": "image"
      },
      {
        "page": 28,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 113,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "常用模型对比",
        "id": 114,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "常用模型对比：",
        "id": 115,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "评分卡模型: ",
        "id": 116,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 117,
        "type": "table"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 118,
        "type": "table"
      },
      {
        "page": 29,
        "length_tokens": 12,
        "text": "LR模型是评分卡模型最经常使用的算法",
        "id": 119,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 94,
        "text": "0为模型中第i个变量的系数 ${ \\mathbf { \\nabla } } _ { \\mathbf { \\mu } } , w _ { i j }$ 为第i个变量第j个分箱WOE值， 影响每个分箱分数的因素：参数B，系数 $\\cdot \\theta _ { i } ,$ 该分箱WOE编码 $w _ { i j }$ ",
        "id": 120,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 121,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 12,
        "text": "Thinking: 如何对决策树模型进行解读？",
        "id": 122,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 121,
        "text": "--- age <= 29.50 |--- family_members <= 2.50 policy_start_date_day $< = 7 0 3 . 0 0$ - age <= 19.50 |--- class: 0 |--- age > 19.50 1 |--- class: 1 |--- policy_start_date_day $>$ 703.00 |--- age <= 21.50 --- class: 0 --- age > 21.50 |--- class: 0 l--- family_members $>$ 2.50 : marital_status $< = \\ 1",
        "id": 123,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 116,
        "text": " family_members $>$ 2.50 : marital_status $< = \\ 1 . 5 8$ |--- occupation $< = ~ 2 . 5 8$ |--- class: 1 l--- occupation $>$ 2.50 |--- class: 0 --- marital_status $>$ 1.50 |--- policy_end_date_day $\\scriptstyle < =$ 8918.50 |--- class: 0 l--- policy_end_date_day $>$ 8918.50 |--- class: 1 age > 29.50 ",
        "id": 124,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 124,
        "text": "nd_date_day $>$ 8918.50 |--- class: 1 age > 29.50 age $< = ~ 6 0 . 5 8$ - policy_end_date_day $\\scriptstyle < =$ 5506.00 |--- class: 0 |--- policy_end_date_day $>$ 5506.00 |--- occupation $< = ~ 3 . 5 0$ 1 |--- class: 1 |--- occupation $>$ 3.50 |--- class: 1 |--- age > 60.50 l--- family_members $< =",
        "id": 125,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 117,
        "text": "class: 1 |--- age > 60.50 l--- family_members $< = ~ 3 . 5 0$ （20 - education_level $< = ~ 9 . 5 8$ |--- class: 0 l--- education_level $>$ 0.50 |--- class: 1 |--- family_members > 3.50 |--- marital_status $< = ~ 1 . 5 0$ （204号 |--- class: 1 - marital_status $>$ 1.50 |--- class: 0 ",
        "id": 126,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 127,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 133,
        "text": "我在做寿险续保预测，构建了决策树：   \n二二   \n|-- age <= 29.50 |--- family_members $< = 2 . 5 0$ |--- policy_start_date_day $< = 7 0 3 . 0 0$ |--- age <= 19.50 --- class: 0 --- age > 19.50 I|--- class: 1 |--- policy_start_date_day $>$ 703.00 --- age <= 21.50 |--- class: 0 --- age > 21.50 --- class: 0 |--- family_membe",
        "id": 128,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 85,
        "text": ": 0 --- age > 21.50 --- class: 0 |--- family_members $>$ 2.50 --- marital_status $< = 1 . 5 0$ |--- occupation $< = 2 . 5 0$ l|--- class: 1 |--- occupation $>$ 2.50 --- class: 0 |--- marital_status $>$ 1.50 ",
        "id": 129,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 121,
        "text": "||--- policy_end_date_day $< = 8 9 1 8 . 5 0$ --- class: 0 | |--- policy_end_date_day $>$ 8918.50 ||--- class: 1 --- age > 29.50 -- age <= 60.50 --- policy_end_date_day $< =$ 5506.00 --- class: 0 I--- policy_end_date_day $>$ 5506.00 |--- occupation $< = 3 . 5 0$ --- class: 1 -- occupation > 3.50 |--",
        "id": 130,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 114,
        "text": "< = 3 . 5 0$ --- class: 1 -- occupation > 3.50 |--- class: 1 |--- age > 60.50 |--- family_members $< = 3 . 5 0$ |--- education_level $< = 0 . 5 0$ --- class: 0 |--- education_level $>$ 0.50 |--- class: 1 |--- family_members $>$ 3.50 I||--- marital_status $< = 1 . 5 0$ ",
        "id": 131,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 151,
        "text": "--- class: 1--- marital status > 1.50|--- class: 0二==policy_start_date_day:距离 2010-01-01的天数policy_end_date_day:距离 2010-01-01的天数class:0代表不续保，1代表续保marital_status:'单身': 0,'已婚':1,'离异': 2occupation:0:医生,1:工程师,2:律师，3：经理,4:设计师,5:销售education_level: '高中':0,'本科':1,'硕士':2, 博士':3===帮我解释这个决策树，告诉我寿险客户续保有哪些特点",
        "id": 132,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 133,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 37,
        "text": "这个决策树模型根据一系列的条件来预测寿险客户是否会续保。让我们逐层分析，看看哪些因素对续保决策有影响。",
        "id": 134,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 7,
        "text": "1.年龄 (age) ",
        "id": 135,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "。年龄小于等于29.5岁的客户：",
        "id": 136,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 155,
        "text": "■家庭成员数量(family_members)少于或等于2.5时:■如果保险开始日期(policy_start_date_day)距离2010-01-01不超过703天 (约2年)，那么更年轻的客户( $< = 1 9 . 5$ 岁)倾向于不续保；而较年长的客户 $( > 1 9 . 5$ 岁)则倾向于续保。■如果保险开始日期超过703天，那么更年轻的客户( $< = 2 1 . 5$ 岁)和稍微年长一点的客户( $> 2 1 . 5$ 岁)都倾向于不续保。",
        "id": 137,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "■当家庭成员数大于2.5时：",
        "id": 138,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 136,
        "text": "■婚姻状况(marital_status)为单身或已婚 $< = 1 . 5 )$ 时，职业(occupation)为医生、工程师或律师( $< = 2 . 5$ 的人倾向于续保，而其他职业则倾向于不续保。  \n■对于婚姻状况为离异 $( > 1 . 5 )$ 的客户，如果保险结束日期(policy_end_date_day)距离2010-01-01不超过8918.5天（约24.5年）则倾向于不续保；否则，倾向于续保。",
        "id": 139,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "。年龄大于29.5岁的客户：",
        "id": 140,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 188,
        "text": "■年龄在60.5岁以下时，若保险结束日期早于或等于5506天 (约15.1年)，则倾向于不续保；否则，无论职业如何，都倾向于续保。  \n■年龄超过60.5岁时，家庭成员较少( $\\scriptstyle \\left\\{ < = 3 . 5 \\right\\}$ 且教育水平较低( $\\scriptstyle < = 0 . 5 ,$ 高中)的客户倾向于不续保；而教育水平较高 $( > 0 . 5 )$ 的客户则倾向于续保。对于家庭成员较多 $( > 3 . 5 )$ 的客户，如果是单身或已婚( $( < = 1 . 5 )$ ，则倾向于续保；反之，则倾向于不续保。",
        "id": 141,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 142,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 19,
        "text": "从上述决策树可以看出，影响续保的因素包括但不限于：",
        "id": 143,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 117,
        "text": "·年龄：年轻客户与老年客户的续保倾向有所不同。  \n·家庭成员数量：家庭规模大小会影响续保决策。  \n·婚姻状态：不同婚姻状态下的个人续保意愿存在差异。  \n·职业：某些职业可能比其他职业更有可能续保。  \n·教育水平：受教育程度较高的个体可能更倾向于续保。  \n·保险起始/结束日期：保险合同的时间长度也对续保决定有一定影响。",
        "id": 144,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 47,
        "text": "这些特征共同作用，帮助模型判断客户是否具有较高的续保可能性。请注意，这只是一个基于给定数据集的统计模型，实际应用中还需要考虑更多因素和个人情况。",
        "id": 145,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 146,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 43,
        "text": "在这个决策树中：年龄、家庭成员数量、婚姻状态、职业、教育水平、保险起始/结束日期如何影响续保可能性，给我一些洞察结论",
        "id": 147,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 31,
        "text": "基于您提供的决策树，我们可以得出以下关于不同特征如何影响寿险客户续保可能性的洞察结论：",
        "id": 148,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "1.年龄 (Age) ",
        "id": 149,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 123,
        "text": "。年轻客户（特别是29.5岁以下）与年长客户（尤其是60.5岁以上）在续保行为上表现出不同的模式。年轻客户中，家庭规模较小且保险开始日期较早的群体更可能不续保，而那些年龄稍大一些的年轻客户则更倾向于续保。）对于年龄较大的客户 （超过 $6 0 . 5 \\mathcal { \\sharp }$ )，如果他们的教育水平较高，那么他们更有可能续保；反之，则不太可能续保。",
        "id": 150,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "2.家庭成员数量 (FamilyMembers)",
        "id": 151,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 102,
        "text": "○家庭成员较少的年轻人（ $< = 2 . 5$ 人）通常在特定条件下(如保险开始日期较早）更可能选择不续保。。当家庭成员较多时，特别是在老年人群中（ $> 3 . 5$ 人)，婚姻状况成为决定性因素之一。单身或已婚者更可能续保，而离异状态下的个人则倾向于不续保。",
        "id": 152,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 12,
        "text": "3.婚姻状态 (Marital Status) ",
        "id": 153,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 80,
        "text": "。婚姻状况对续保的影响主要体现在家庭成员较多的老年群体中。单身或已婚人士比离异的人更可能续保。○在某些情况下，比如对于拥有较大家庭的年轻客户，婚姻状况也会影响续保决策，但这种影响是通过与其他变量结合来体现的。",
        "id": 154,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "4.职业 (Occupation) ",
        "id": 155,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 75,
        "text": "。职业类型对年轻客户的续保意愿有显著影响。医生、工程师和律师等职业的年轻客户更倾向于续保，而其他职业 类型的客户则相反。 ○对于年龄介于29.5至60.5岁之间的客户，职业不再是一个区分是否续保的关键因素。 ",
        "id": 156,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "5.教育水平 (Education Level)",
        "id": 157,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 36,
        "text": "$0$ 教育水平仅在老年客户群体中被用作区分续保与否的标准。高学历的老年人更可能续保",
        "id": 158,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 16,
        "text": "6.保险起始/结束日期 (Policy Start/End Date) ",
        "id": 159,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 74,
        "text": "。保险合同的时间长度对续保决策有重要影响。例如，保险开始日期较早（距离2010-01-01不超过703天）的年轻客户更可能选择不续保。。对于年龄较大的客户，如果保险结束日期远 (距离2010-01-01超过8918.5天)，则更可能续保。",
        "id": 160,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 161,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "综合来看，给我续保用户的特点",
        "id": 162,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 17,
        "text": "根据决策树分析，我们可以总结出以下续保用户的一些特点：",
        "id": 163,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 5,
        "text": "1.年龄: ",
        "id": 164,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 73,
        "text": "○年轻客户（小于等于29.5岁）中，年龄稍大一些的客户（大于19.5岁）更可能续保。  \n○对于年龄较大的客户 (超过29.5岁)，尤其是那些年龄在60.5岁以下且保险结束日期较晚的客户，倾向于续保。",
        "id": 165,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "2.家庭成员数量：",
        "id": 166,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 76,
        "text": "。家庭成员较多的老年客户（大于3.5人）如果教育水平较高，则更可能续保。  \n。年轻客户中，家庭成员较少的情况下，保险开始日期较早的客户不太可能续保；而家庭成员较多的老年客户如果是单身或已婚状态，更可能续保。",
        "id": 167,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 7,
        "text": "3.婚姻状态：",
        "id": 168,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 35,
        "text": "○单身或已婚状态下的年轻和老年客户更可能续保。  \n。离异状态下的老年客户不太可能续保。",
        "id": 169,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "4.职业：",
        "id": 170,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 65,
        "text": "○职业为医生、工程师或律师的年轻客户更可能续保。  \n。对于年龄介于29.5至60.5岁的客户，职业类型不是续保的关键因素。  \n○但对于年龄大于60.5岁的客户，无论职业如何，都倾向于续保。",
        "id": 171,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 172,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 5,
        "text": "5.教育水平：",
        "id": 173,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "教育水平较高的老年客户更可能续保",
        "id": 174,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "6.保险起始/结束日期：",
        "id": 175,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 100,
        "text": "。保险开始日期较晚（距离2010-01-01超过703天）的年轻客户更可能续保。  \n。保险结束日期较晚（对于年龄较大的客户来说，距离2010-01-01超过8918.5天）的客户更可能续保。  \n。对于年龄在60.5岁以下的客户，保险结束日期较晚（距离2010-01-01超过5506天）也增加了续保的可能性。",
        "id": 176,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 18,
        "text": "综上所述，续保用户的典型特征可以概括为：",
        "id": 177,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 119,
        "text": "·年龄方面，中等年龄段 (比如29.5岁以上但未达到老年）的客户以及特定条件下的年轻客户 (年龄略大)。  \n·拥有较大或适中的家庭规模。  \n·婚姻状态稳定，如单身或已婚。  \n·在某些年龄段内，从事专业性较强的职业 (如医生、工程师、律师)。  \n·教育背景较好，尤其是在老年群体中。  \n·保险合同的有效期较长，特别是保险结束日期较远的客户。",
        "id": 178,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 51,
        "text": "这些特征反映了续保用户通常具有一定的财务稳定性、对未来规划的关注以及对保险产品价值的认可。保险公司可以根据这些特点来优化其产品和服务，以提高客户的续保率。",
        "id": 179,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 180,
        "type": "text"
      }
    ]
  }
}
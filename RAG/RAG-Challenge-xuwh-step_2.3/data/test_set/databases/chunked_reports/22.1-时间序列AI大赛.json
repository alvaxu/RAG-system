{
  "metainfo": {
    "sha1": "Aitraining",
    "sha1_name": "Aitraining",
    "pages_amount": 46,
    "text_blocks_amount": 205,
    "tables_amount": 14,
    "pictures_amount": 0,
    "equations_amount": 4,
    "footnotes_amount": 0,
    "company_name": "AI应用开发",
    "file_name": "22.1-时间序列AI大赛"
  },
  "content": {
    "chunks": [
      {
        "page": 1,
        "length_tokens": 6,
        "text": "时间序列AI大赛",
        "id": 0,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "Facebook Prophet ",
        "id": 2,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 35,
        "text": "时间序列预测工具 prophet饱和增长  \n突变点  \n节日与大事件  \nProjectA：页面流量预测ProjectB：交通流量预测",
        "id": 3,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "时间序列AI大赛",
        "id": 4,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 20,
        "text": "AI大赛：资金流入流出预测：使用prophet进行预测周期因子分析",
        "id": 5,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "1/2 Facebook Prophet ",
        "id": 6,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "Project：沪市指数预测 ",
        "id": 7,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "Project：沪市指数预测 ",
        "id": 8,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 63,
        "text": "·沪市指数的历史数据（从1990年12月19日到2020年3月12日）·请你编写代码对沪市指数未来3个月（截止到2020年6月30日）的变化进行预测（将数据转化为按月统计即可）",
        "id": 9,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 10,
        "type": "image"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 11,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 10,
        "text": "ARMA/ARIMA统计模型的不足：",
        "id": 12,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 102,
        "text": "·ARMA，要求时序数据是稳定的，现实数据很难符合  \n·ARIMA，模型为线性模型，无法处理非线性关系，同时要求数据点的间隔等长，比如X1和×2间隔一个小时，那么X2和X3也间隔一个小时  \n·如果数据缺失，则需要使用插值等方法来预估缺失值，然后再使用预估值来进行参数拟合，这样会引入噪音",
        "id": 13,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 12,
        "text": "Project : 沪市指数预测 (ARIMA) ",
        "id": 14,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 15,
        "type": "image"
      },
      {
        "page": 7,
        "length_tokens": 11,
        "text": "Project：沪市指数预测 (Prophet) ",
        "id": 16,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 17,
        "type": "image"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 18,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "prophet: ",
        "id": 19,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 107,
        "text": "·facebook开源的时间序列预测工具https://facebook.github.io/prophet/  \n·Prophet是一个基于相加模型（additivemodel）的时间预测，可以精准的拟合非线性的周期趋势  \n·对yearly、weekly和daily的周期性使用非线性拟合，亮点在于Prophet模型还添加了holidays（影响因子），可以很好的对节日（比如十一、春节等）带来的活跃数据的突变进行预测",
        "id": 20,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "prophet的优势：",
        "id": 21,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 144,
        "text": "·处理数据丢失问题  \n·趋势迁移问题（shifts in the trend）  \n·异常的数据点（outliers）  \nprophet模型： $y ( t ) = g ( t ) + s ( t ) + \\mathsf { h } ( t ) + \\mathsf { e }$   \ng(t)代表趋势项，用来表示时间序列中非周期性的变化  \ns(t)代表周期项，用来表示时间序列中的周期变化  \nh(t)代表活动效果项，用来表达时间序列中的一些异常活  \n动，例节假日，购物节等  \ne用来表示不能被模型所描述的异常误差",
        "id": 22,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "Facebook prophet工具",
        "id": 23,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 38,
        "text": "prophet模型： $y ( t ) = g ( t ) + s ( t ) + \\mathsf { h } ( t ) + \\mathsf { e }$ ",
        "id": 24,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 125,
        "text": "·g(t)：趋势项在Prophet中有两种实现方法，第一种是饱和增长模型，第二种是分段线性模型  \n·s(t)：运用傅里叶级数作为周期项，使得预测模型具有灵活的周期效应  \n·h(t)：实际上，很多节日不是在一年中固定的一天发生，  \n比如母亲节（五月的第二个礼拜天），中国的春节  \n在Prophet模型中，用户在进行预测前可以向模型输入活动表格  \n$\\Rightarrow$ Prophet的预测会更加准确",
        "id": 25,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "prophet工具使用：",
        "id": 26,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 75,
        "text": "pip3 install prophet遵循sklearn库的使用接口，  \n模型拟合，fit（一般1-5秒）  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ Prophet()  \nmodel.fit(df)  \n模型预测，predict  \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(future)",
        "id": 27,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 28,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "prophet模型：",
        "id": 29,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 36,
        "text": "·Trend趋势，对时间序列中的趋势部分拟合分段线性函数，线性拟合会将特殊点和缺失数据的影响降到最小",
        "id": 30,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "·饱和增长",
        "id": 31,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 54,
        "text": "通常情况下，增长会有最大容量限制，比如未来12个月某app在某地区的下载量，最大下载量要小于等于该地区手机用户总数基于这样的领域知识，分析师可以定义模型的容量限制为C(t)",
        "id": 32,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 83,
        "text": "·突变点，随着突变点数量的增多，拟合变得更灵活。在研究趋势成分时，分析师要面临两个基本问题，即过拟合与欠拟合changepoint_prior_scale参数，可以调整趋势的灵活性，解决过拟合/欠拟合，参数值越大，拟合的时间序列曲线越灵活",
        "id": 33,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 34,
        "type": "image"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "table"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 36,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "Thinking: prohpeth是如何进行突变点分析的？",
        "id": 37,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 78,
        "text": "1）检测突变点Prophet默认在时间序列的前 $80 \\%$ 范围内均匀放置25个候选突变点。通过 稀疏先验（Laplace分布）对突变点的幅度 $\\delta _ { s }$ 进行正则化，筛选出显著的点。",
        "id": 38,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "2)分段趋势建模 ",
        "id": 39,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "趋势公式（以线性趋势为例）：",
        "id": 40,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 91,
        "text": "$$\ng ( t ) = \\left( k + \\sum _ { s \\in S } \\delta _ { s } \\cdot \\mathbb { I } ( t \\geq s ) \\right) \\cdot t + \\left( m + \\sum _ { s \\in S } \\gamma _ { s } \\cdot \\mathbb { I } ( t \\geq s ) \\right)\n$$",
        "id": 41,
        "type": "equation"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "3)预测未来趋势 ",
        "id": 42,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 34,
        "text": "δs：突变点s处的斜率变化量。y：保证函数连续的偏移量（避免突变点处的跳跃）。",
        "id": 43,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 27,
        "text": "未来时间段的趋势延续最后一个突变点后的斜率（即假设未来趋势不再突变）。",
        "id": 44,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 45,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 15,
        "text": "假设某产品的日销量在以下时间点发生突变：",
        "id": 46,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 70,
        "text": "2024-01-01：初始增长（斜率 $\\scriptstyle = 0 . 5$ ）  \n2024-04-01：因促销活动，斜率突增至1.2。  \n2024-07-01：市场竞争加剧，斜率降至0.3。",
        "id": 47,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 113,
        "text": "#生成日期范围  \ndates $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.date_range(start $\\mathbf { \\lambda } ^ { : \\dag }$ 2024-01-01', end='2024-12-31')  \nn_days $\\mathbf { \\tau } = \\mathbf { \\tau }$ len(dates)  \n#模拟趋势突变  \nnp.random.seed(42)  \ntrend $\\mathbf { \\tau } = \\mathbf { \\tau }$ np.concatenate([$0 . 5 ^ ",
        "id": 48,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 130,
        "text": "au } = \\mathbf { \\tau }$ np.concatenate([$0 . 5 ^ { * }$ np.arange(90), #1月-3月：斜率0.5$0 . 5 * 9 0 + 1 . 2 *$ np.arange(91), #4月-6月：斜率1.2（24 $0 . 5 * 9 0 + 1 . 2 * 9 1 + 0 . 3 *$ np.arange(n_days-90-91) #7月-12月： 斜率0.3",
        "id": 49,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 50,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "image"
      },
      {
        "page": 12,
        "length_tokens": 79,
        "text": "# 添加季节性噪声 $\\mathsf { y } = \\mathsf { t r e n d } + 5 ~ ^ { * }$ np.sin(np.linspace(0, 10\\*np.pi, n_days)) df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({'ds': dates,'y': y}) ",
        "id": 52,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 80,
        "text": "# 可视化原始数据   \nplt.figure(figsize $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (12, 4))   \nplt.plot(df['ds'], df['y'], labe $= ^ { \\mathsf { \\Gamma } }$ Actual')   \nplt.title(\"Simulated Data with Changepoints\")   \nplt.legend()   \nplt.show() ",
        "id": 53,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 54,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 112,
        "text": "## 训练prophet模型   \n#初始化模型（显式启用周季节性）   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ Prophet( yearly_seasonality $\\ c =$ False, weekly_seasonality=True, changepoint_prior_scale $_ { = 0 . 5 }$ ，# 提高突变点灵敏度 changepoint_range $\\scriptstyle \\cdot = 0 . 9$ #在前 $90 \\%$ 数据中检测突变点   \n1 ",
        "id": 55,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "#拟合数据model.fit(df)",
        "id": 56,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 60,
        "text": "#创建未来30天的预测   \nfuture $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.make_future_dataframe(periods $\\scriptstyle = 3 0$   \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(future) ",
        "id": 57,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 46,
        "text": "##可视化突变点与预测 #绘制预测结果 fig1 $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.plot(forecast) plt.title(\"Forecast with Changepoints\") ",
        "id": 58,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 32,
        "text": "#标记突变点 from prophet.plot import add_changepoints_to_plot add_changepoints_to_plot(fig1.gca(), model, forecast) ",
        "id": 59,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 32,
        "text": "#分解趋势和季节性 fig2 $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.plot_components(forecast) ",
        "id": 60,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 61,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 62,
        "type": "image"
      },
      {
        "page": 14,
        "length_tokens": 104,
        "text": "Prophet的突变点机制能自动适应趋势变化，非常适合业务场景中突发事件的建模。传统ARIMA模型，假设趋势是平滑变化的，无法灵活处理突发性趋势转折。Prophet的解决方案：通过突变点检测，Prophet将时间序列分段建模，每段的趋势斜率可以独立调整。例如：产品销量因营销活动突然增长。或者经济指标因政策调整骤降。",
        "id": 63,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 64,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "prophet模型：",
        "id": 65,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 29,
        "text": "·季节性，拟合并预测季节的效果，基于傅里叶级数提出了一个灵活的模型：",
        "id": 66,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 84,
        "text": "$$\ns ( t ) = \\sum _ { n = 1 } ^ { N } \\left( a _ { n } \\cos \\left( { \\frac { 2 \\pi n t } { P } } \\right) + b _ { n } \\sin \\left( { \\frac { 2 \\pi n t } { P } } \\right) \\right)\n$$",
        "id": 67,
        "type": "equation"
      },
      {
        "page": 15,
        "length_tokens": 119,
        "text": "P代表周期，年度的 $\\mathsf { P } = 3 6 5 . 2 5$ ，周数据的 $p = 7$ 对季节性建模，在给定N的情况下，估计参数[a,b...aN,bN]傅里叶阶数N是重要的参数，用来定义模型中是否考虑高频变化：如果分析师认为高频变化的成分只是噪声，可以将N取较低值如果不是噪音，可以将N设置为较高值，提升预测精度",
        "id": 68,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 69,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 70,
        "type": "image"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 71,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "prophet模型：",
        "id": 72,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 75,
        "text": "·活动效果项，即节假日和大事件  \n他们都是重要的时间因素，比如中国传统春节，在这个期间人们会购买大量新商品  \n允许分析师使用过去和未来事件的自定义列表，这些大事件前后的日期将会被单独考虑，并且通过拟合附加的参数模拟节假日和事件的效果",
        "id": 73,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 74,
        "type": "table"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 75,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 14,
        "text": "Project：佩顿·曼宁维基百科访问流量预测",
        "id": 76,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 108,
        "text": "·数据集，维基百科上面对美国橄榄球运动员佩顿·曼宁的日访问记录，2905条数据（2007年12月10日到2016年1月20日）  \n·Prophet的输入量通常包含两列的数据框：ds 和y  \nds列包含日期（YYYY-MM-DD）或者是具体的时间点（YYYY-MM-  \nDD HH:MM:SS)  \ny列是数值变量，表示我们希望去预测的量",
        "id": 77,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 78,
        "type": "table"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 79,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "Prophet工具使用：",
        "id": 80,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 119,
        "text": "·makefuturedataframe方法，将未来的日期扩展指定的天数，得到一个数据框。默认情况下，做会自动包含历史数据的日期，因此也可以用来查看模型对于历史数据的拟合效果  \n·predict方法，对每一行future日期得到预测值（yhat）预测forecast创建的对象应当是新的DataFrame，其中包含一列预测值yhat，以及成分的分析和置信区间  \n·plot_components方法，查看预测的成分分析  \n·查看forecast都有哪些列：print(forecast.columns)",
        "id": 81,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "成分分析的绘制：",
        "id": 82,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 20,
        "text": "trend趋势，来自trend字段 yearly趋势，来自yearly字段 weekly趋势，来自weekly字段 ",
        "id": 83,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 93,
        "text": "因为是加法模型，所以：   \nforecast['additive_terms'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ forecast['weekly'] $+$ forecast['yearly']   \nforecast['yhat'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ forecast['trend'] $+$ forecast['additive_terms']   \nforecast['yhat'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ forecast[",
        "id": 84,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 82,
        "text": "\\mathbf { \\sigma } = \\mathbf { \\sigma }$ forecast['trend'] +forecast['weekly'] +   \nforecast['yearly']   \n如果有节假日因素，那么   \nforecast['yhat'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ forecast['trend'] +forecast['weekly'] +   \nforecast['yearly'] $+$ forecast['holidays'] ",
        "id": 85,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 86,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "·查看forecast.tail() ",
        "id": 87,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 29,
        "text": "会发现'multiplicative_terms','multiplicative_terms_lower','multiplicative_terms_upper'这3列为空，因为是加法模型",
        "id": 88,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "·成分分析趋势解读 ",
        "id": 89,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "weekly中的Monday为0.035的意思就是，在trend的基础上，加0.035",
        "id": 90,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 34,
        "text": "Saturday为-0.3的意思就是，在trend的基础上，减0.3因此，weekly这条线的高低反应了销量的趋势",
        "id": 91,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 10,
        "text": "Thinking：一年这种哪个月份，销量最高？",
        "id": 92,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 93,
        "type": "image"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 94,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "预测饱和增长",
        "id": 95,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 68,
        "text": "Prophet在预测增长情况时，会存达到极值，比如总人口数等，这里称为承载能力（carryingcapacity），这时上限就是趋于饱和新建一列cap来指定承载能力的大小，通常情况下这个值应当通过市场规模的数据或专业知识来决定，比如",
        "id": 96,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 39,
        "text": "${ \\mathsf { d f } } [ ^ { \\prime } { \\mathsf { c a p } } ^ { \\prime } ] = 8 . 5$ ",
        "id": 97,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 35,
        "text": "注意：DataFrame每行都必须指定cap值，但不一定是恒定值，如果市场规模在不断地增长，那么cap也可以是不断增长的序列",
        "id": 98,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "预测饱和减少（市场的最低floor）",
        "id": 99,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 25,
        "text": "logistic增长模型还可以处理饱和最小值，方法与指定最大值的列的方式相同",
        "id": 100,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 101,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 102,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "·趋势突变点",
        "id": 103,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 144,
        "text": "真实的时间序列数据往往存在一些突变点  \nProphet将自动监测到这些点，并对趋势做适当地调整  \n默认下，Prophet会识别出25个潜在的突变点（均匀分  \n布在在前 $80 \\%$ 的时间序列数据中），绝大多数突变点并  \n不会包含在建模过程中  \n# 显示突变点的位置  \nfrom fbprophet.plot import add_changepoints_to_plot  \nfig = m.plot(forecast)  \na $\\mathbf { \\tau } = \\mathbf { \\tau }$ add_changepoints_to_plot(fig.gca(),m, f",
        "id": 104,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 19,
        "text": " { \\tau }$ add_changepoints_to_plot(fig.gca(),m, forecast)",
        "id": 105,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "image"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 107,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 94,
        "text": "·指定突变点的位置   \n使用changepoints参数   \n$\\mathsf { m } =$ Prophet(changepoints $\\ c =$ ['2014-01-01'])   \nm.fit(df)   \nfuture $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.make_future_dataframe(periods=365)   \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.predict(future)   \nm.plot(forecast) ",
        "id": 108,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 109,
        "type": "image"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 110,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "·对节假日建模 ",
        "id": 111,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 20,
        "text": "创建一个新的DataFrame，包含两列（节假日holiday 和日期戳 ds )",
        "id": 112,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 46,
        "text": "注意：这个DataFrame必须包含所有出现的节假日（不仅是历史数据集中，还是要预测的时期中的）比如，所有佩顿·曼宁参加过的季后赛 与 决赛日期",
        "id": 113,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 139,
        "text": "playoffs $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({ 'holiday': 'playoff', 'ds': pd.to_datetime(['2008-01-13','2009-01-03','2010-01-16', '2010-01-24','2010-02-07','2011-01-08', '2013-01-12','2014-01-12','2014-01-19', '2014-02-02','2015-01-11','2016-01-17', '2016-01-24','2016-02-07']), 'lowe",
        "id": 114,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 116,
        "text": "','2016-01-17', '2016-01-24','2016-02-07']), 'lower_window': 0, 'upper_window': 1,   \n}   \nsuperbowls $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({ 'holiday': 'superbowl', 'ds': pd.to_datetime(['2010-02-07','2014-02-02','2016-02-07']), 'lower_window': 0, 'upper_window':1,   \n})   \nholidays $\\",
        "id": 115,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 40,
        "text": "window': 0, 'upper_window':1,   \n})   \nholidays $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.concat(playoffs,superbowls)) ",
        "id": 116,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 117,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 156,
        "text": "ds playoff superbowl   \n2190 2014-02-02 1.217571 1.230312   \n2191 2014-02-03 1.898042 1.466063   \n2532 2015-01-11 1.217571 0.000000   \n2533 2015-01-12 1.898042 0.000000   \n2901 2016-01-17 1.217571 0.000000   \n2902 2016-01-18 1.898042 0.000000   \n2908 2016-01-24 1.217571 0.000000   \n2909 2016-01-25 1",
        "id": 118,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 78,
        "text": " 2016-01-24 1.217571 0.000000   \n2909 2016-01-25 1.898042 0.000000   \n2922 2016-02-07 1.217571 1.230312   \n2923 2016-02-08 1.898042 1.466063 ",
        "id": 119,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 106,
        "text": "·对节假日建模  \n这个DataFrame创建好了，就可以通过传入holiday:  \n$\\mathsf { m } =$ Prophet(holidays $\\ c =$ holidays)  \nm.fit(df)  \nfuture $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.make_future_dataframe(periods=365)  \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.predict(future)  \n可以通过forecast数据框，展示节假日效应  \nprint(foreca",
        "id": 120,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 69,
        "text": "t(future)  \n可以通过forecast数据框，展示节假日效应  \nprint(forecast[(forecast['playoff'] $^ +$   \nforecast['superbowl']).abs() $> 0 \\mathrm { 1 }$ I[['ds','playoff',  \n'superbowl']][-10:])",
        "id": 121,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "image"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "Project B: 交通流量预测 ",
        "id": 123,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "ProjectB：交通流量预测",
        "id": 124,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 59,
        "text": "·JetRail高铁的乘客数量预测  \n·数据集：jetrail.csv，根据过往两年的数据（2012年8月至2014年9月），需要用这些数据预测接下来7个月的乘客数量  \n·以每天为单位聚合数据集",
        "id": 125,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 57,
        "text": "$\\mathsf { m } =$ Prophet(yearly_seasonality=True, seasonality_prior_scale=0.1) #预测未来7个月，213天 future $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.make_future_dataframe(periods=213) ",
        "id": 126,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "table"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "Project: 沪市指数预测 ",
        "id": 128,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 7,
        "text": "Project：沪市指数预测 ",
        "id": 129,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 63,
        "text": "·沪市指数的历史数据（从1990年12月19日到2020年3月12日）·请你编写代码对沪市指数未来3个月（截止到2020年6月31日）的变化进行预测（将数据转化为按月统计即可）",
        "id": 130,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "image"
      },
      {
        "page": 27,
        "length_tokens": 57,
        "text": "Prophet针对的是商业预测任务·优点：不需要特征工程就能得到趋势，季节因素和节假日因素·不足：无法利用更多的信息，如在预测商品的销量时，无法利用商品的信息，门店的信息，促销的信息等",
        "id": 132,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 133,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 59,
        "text": "·传入prophet的数据分为两列ds 和y  \nds表示时间戳（pandas的日期格式）  \ny表示truevalue，也是需要预测的值（数值型）带holidays参数的prophet  \nm = Prophet(holidays=holidays)",
        "id": 134,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "·生成未来日期",
        "id": 135,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 109,
        "text": "future $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.make_future_dataframe(periods=365)  \nfuture为时间轴，在原有基础上增加365天（会包括之前的历  \n史时间戳)  \n模型训练 model.fit(df)  \n模型预测 forecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(future)  \n成分分析，plot_components(forecast)  \n绘制trend,weekly,yearly趋势图，会包括之前历史时间戳预测",
        "id": 136,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image"
      },
      {
        "page": 28,
        "length_tokens": 6,
        "text": "forecaset字段包括：",
        "id": 138,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 95,
        "text": "ds,时间轴   \ntrend,trend_lower,trend_upper,趋势   \nyhat,yhat_lower,yhat_upper，预测值   \nweekly,weekly_lower,weekly_upper,星期趋势   \nyearly,yearly_lower,yearly_upper，年趋势   \nadditive_terms,additive_terms_lower,additive_terms_upper，加法模   \n型趋势（星期趋势 $+$ 年趋势），即 forecast'additive_terms'] =   \nforecast['weekly'] $+$ f",
        "id": 139,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 55,
        "text": "ast'additive_terms'] =   \nforecast['weekly'] $+$ forecast['yearly']   \nmultiplicative_terms， multiplicative_terms_lower,   \nmultiplicative_terms_upper，乘法模型趋势，如果使用加法模型时，   \nmultiplicative_terms为空 ",
        "id": 140,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "：趋势变化点model.changepoints ",
        "id": 141,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 150,
        "text": "趋势变化点：时间序列经常会在轨迹中发生突然变化，可以  \n自动检测出这些点  \n当模型训练完之后，就可以找到趋势变化点，默认为25个，  \n分布在前 $80 \\%$ 的时间序列中  \n可以使用参数n_changepoints设置潜在变化点的数量，比如  \nmodel= prophet (n_changepoints $\\scriptstyle = 3 0$ ）  \n可以使用参数changepoint_range设置前多少的时间序列来寻  \n找潜在变化点，比如在时间序列的前 $90 \\%$ 处寻找潜在的变化点  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau ",
        "id": 142,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 31,
        "text": "潜在的变化点  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ Prophet(changepoint_range=0.9)",
        "id": 143,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "人工指定突变点的位置：",
        "id": 144,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "·指定预测类型",
        "id": 145,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 119,
        "text": "growth $= ^ { \\mathsf { 1 } }$ linear'或growth $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"logistic\"  \n默认的增长趋势为linear  \n如果使用growth $\\ c =$ \"logistic\"，就需要指定cap，因为预测时需要  \n用到cap，可以不指定floor，因为logistic默认的最小饱和值是0  \n$m =$ Prophet(growth $= \"$ logistic')  \n${ \\mathsf { d } } { \\mathsf { f } } [ ^ { \\prime } { \\ma",
        "id": 146,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 85,
        "text": "hsf { d } } { \\mathsf { f } } [ ^ { \\prime } { \\mathsf { c a p } } ^ { \\prime } ] = 6$ #不设置会报错  \n·模型的学习方式  \n默认情况下为加性的，如果改成乘性的(multiplicative)，需要  \n设置seasonality_mode $= ^ { \\prime }$ multiplicative'",
        "id": 147,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "Prophet中的参数设置：",
        "id": 148,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 143,
        "text": "·Capacity，在增量函数是逻辑回归函数的时候，需要设置的容量值  \n· Change Points: 通过 n_changepoints 和 changepoint_range来设置时间序列的变化点  \n·季节性和节假日，可以根据实际的业务需求来指定相应的节假日  \n光滑参数：  \nchangepoint_prior_scale设置趋势项的灵活度，即跟随性，默  \n认为0.05，值越大，拟合的跟随性越好，可能会过拟合  \nseasonality_prior_scale用来控制季节项的灵活度  \nholidays_prior_scale用来控制节假日的灵活度",
        "id": 149,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "时间序列AI大赛",
        "id": 150,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 151,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "Project：资金流入流出预测 ",
        "id": 152,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 53,
        "text": "· https://tianchi.aliyun.com/competition/entrance/231573/information  \n·数据集一共包括4张表：用户基本信息数据、用户申购赎回数据、收益率表和银行间拆借利率表",
        "id": 153,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 50,
        "text": "2.8万用户，284万行为数据，294天拆解利率，427天收益率  \n2013-07-01到2014-08-31，预测2014年9月的申购和赎回",
        "id": 154,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 166,
        "text": "1.00 Ldl.haln.1 0.50   \nrreaegatt 0.25   \n0.00   \n-0.25   \n-0.50   \n-0.75   \n-1.00   \n1 2 3 4 5 6 7 8 9 10 11121314 151617181920 212223 242526 27282930 31 date   \n1e8   \n1 1 ÷ LLd. -1.0 ：   \n1 2 3 4 5 6 7 8 9 10 11 12 1314 15 1617 18 1920 21 22 23 24 2526 27 2829 30 31 date ",
        "id": 155,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 156,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "·用户信息表，user_profile_table",
        "id": 157,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 42,
        "text": "总共随机抽取了约3万用户，主要包含了用户的性别、城市和星座，其中部分用户在2014年9月份第一次出现，这些用户只在测试数据中",
        "id": 158,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 159,
        "type": "table"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 160,
        "type": "image"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 161,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 11,
        "text": "用户申购赎回数据表user balance table",
        "id": 162,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 85,
        "text": "·数据包括了20130701至 20140831申购和赎回信息，字段包括用户操作时间和操作记录，其中操作记录包括申购和回两个部分  \n·金额的单位是分，即0.01元  \n如果用户今日消费总量为0，即consume_amt $\\scriptstyle = 0$ ，同时四个category字段为空数据经过了脱敏，同时保证了：",
        "id": 163,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "table"
      },
      {
        "page": 33,
        "length_tokens": 37,
        "text": "今日余额 $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 昨日余额 $^ +$ 今日申购－今日赎回，不会出现负值",
        "id": 165,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 166,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "收益率表 mfd_day_share_interest",
        "id": 167,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 15,
        "text": "，收益表为余额宝在 14个月内的收益率表",
        "id": 168,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 169,
        "type": "table"
      },
      {
        "page": 34,
        "length_tokens": 15,
        "text": "上海银行间同业拆放利率表 mfd bank shibor",
        "id": 170,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 27,
        "text": "·银行间拆借利率表是14个月期间银行之间的拆借利率（皆为年化利率）",
        "id": 171,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 172,
        "type": "table"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 173,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "收益计算方式",
        "id": 174,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 14,
        "text": "·主要基于实际余额宝收益计算方法，进行了简化",
        "id": 175,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 35,
        "text": "1）收益计算的时间不再是会计日，而是自然日，以0点为分隔（0点之前算昨天，0点之后算今天）",
        "id": 176,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 86,
        "text": "2）收益的显示时间，即实际将第一份收益打入用户账户的时间，以周一转入周三显示为例，如果用户在周一存入10000元，即1000000分，那么这笔金额是周一确认，周二是开始产生收益，在周三将周二产生的收益打入到用户的账户中，此时用户的账户中显示的是1000110分",
        "id": 177,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 178,
        "type": "table"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 179,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "提交结果表tc_comp_predict_table",
        "id": 180,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 181,
        "type": "table"
      },
      {
        "page": 36,
        "length_tokens": 43,
        "text": "每一行数据是一天对申购、赎回总额的预测值，输出2014年9月每天的预测，共30行。purchase 和 redeem都是金额数据，精确到分",
        "id": 182,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 183,
        "type": "table"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "评估指标：",
        "id": 184,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 50,
        "text": "1）计算测试集上每天的申购及赎回与实际的误差每日申购相对误差(真实值 $z _ { i }$ ，预则值为 $z _ { i } )$ ：",
        "id": 185,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 62,
        "text": "$$\n\\mathrm { P u r c l i z e s e } _ { \\mathrm { i } } = \\frac { | z _ { \\mathrm { i } } - z _ { \\mathrm { i } } | } { z _ { \\mathrm { i } } }\n$$",
        "id": 186,
        "type": "equation"
      },
      {
        "page": 36,
        "length_tokens": 18,
        "text": "每日赎回相对误差（真实值y：，预测值为)：",
        "id": 187,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 60,
        "text": "$$\n\\mathrm { { R e d e e m } _ { i } = \\frac { | \\mathbf { y } _ { i } - \\hat { \\mathbf { y } _ { i } } | } { \\mathbf { y } _ { i } } }\n$$",
        "id": 188,
        "type": "equation"
      },
      {
        "page": 36,
        "length_tokens": 58,
        "text": "2）误差与得分之间的计算公式不公布，但保证单调递减第i天的申购误差Purchasei $\\scriptstyle = 0$ ，这一天的得分为10分；当Purchasei>0.3，得分为0",
        "id": 189,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 56,
        "text": "3）总积分 $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 申购预测得分 $\\ast 4 5 \\%$ （20 $^ +$ 赎回预测得分 $\\ast 5 5 \\%$ ",
        "id": 190,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 191,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "数据探索EDA",
        "id": 192,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 15,
        "text": "1）每日总购买与赎回量的时间序列图",
        "id": 193,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 35,
        "text": "·方法1：采用时间序列进行预测Step1，平稳性检测adfullerStep2，采用ARIMA模型Step3，模型训练集与预测",
        "id": 194,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 195,
        "type": "image"
      },
      {
        "page": 37,
        "length_tokens": 24,
        "text": "2）STL分解，将时序图拆分为：Trend $^ +$ Seasonal + Residual ",
        "id": 196,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 41,
        "text": "·方法2：基于时序规则的挖掘Step1，获得周期因子（weekday）Step2，计算baseStep3，使用base\\*周期因子进行预测",
        "id": 197,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 198,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 51,
        "text": "·readcsv中的日期格式解析  \npd.read_csv('user_balance_table.csv'， parse_dates  \n$\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ ['report_date'])  \n设置parse_dates参数，将时间字符串转换为日期格式",
        "id": 199,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "DataFrame.diff()函数",
        "id": 200,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 19,
        "text": "用来将数据进行某种移动之后与原数据进行比较得出的差异数据",
        "id": 201,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 51,
        "text": "DataFrame.shift()函数可以把数据移动指定的位数periods=-1往上移动或往左移动periods ${ \\mathfrak { \\sigma } } _ { = 1 }$ 往下移动或往右移动",
        "id": 202,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 203,
        "type": "image"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 204,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "平稳性检测（ADF检测）：",
        "id": 205,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 181,
        "text": "·在使用时间序列模型时（比如ARMA、ARIMA），需要时间序列是平稳的，所以第一步都需要进行平稳性检验，常用的统计检验方法为ADF检验（也称为单位根检验）  \n·ADF检验，就是判断序列是否存在单位根，如果序列平稳，就不存在单位根，否则，就会存在单位根  \n·ADF检验的HO假设就是存在单位根，如果得到的显著性检验统计量小于三个置信度 $( 1 0 \\% , 5 \\% , 1 \\% )$ ，则对应有（$90 \\%$ ，95， $9 9 \\%$ ）的把握来拒绝原假设  \nfrom statsmodels.tsa.stattools import adfuller  \nt=adfuller(df",
        "id": 206,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 111,
        "text": "dels.tsa.stattools import adfuller  \nt=adfuller(df_p['total_purchase_amt'])  \n(-1.5898802926313507, 0.4886749751375928, 18, 408, {'1%': -  \n3.446479704252724, '5%': -2.8686500930967354, $\" 1 0 \\% ^ { \\prime }$ :-  \n2.5705574627547096}, 15960.28197033403)",
        "id": 207,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "输出结果依次为：",
        "id": 208,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 41,
        "text": "t-statistic, p-value, usedlag, nobscritical-value：测试统计数据的临界值为 $1 \\%$ ， $5 \\%$ 和 $10 \\%$ ",
        "id": 209,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 3,
        "text": "AIC ",
        "id": 210,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "如何确定该序列能否平稳：",
        "id": 211,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 118,
        "text": "主要看1%、%5、%10不同程度拒绝原假设的统计值和ADFTestresult的比较，如果ADFTestresult同时小于 $1 \\% . 5 \\% . 1 0 \\%$ 即说明非常好地拒绝原假设（原假设是不稳定的，因此证明是平稳的）这里，adf结果为-1.58988，大于三个level的统计值，无法拒绝原假设（原假设是不平稳的），需要进行一阶差分后，再进行检验",
        "id": 212,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 213,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "时间序列预测",
        "id": 214,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 57,
        "text": "1）针对购买purchase建模 ARIMA(purchase,order=(7,1,5)).fit() model.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 215,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 81,
        "text": "2）针对赎回redeem建模   \nARIMA(redeem,order $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ (7,1,5)).fit()   \nmodel.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 216,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "Thinking: 模型预测准确性如何？",
        "id": 217,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 40,
        "text": "1）过于简单，实际情况并不是  \n2）周一到周日的特征规律没有利用  \n3）没有考虑特殊时间，比如节日，利率波动节点",
        "id": 218,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 219,
        "type": "image"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 220,
        "type": "image"
      },
      {
        "page": 41,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 221,
        "type": "text"
      },
      {
        "page": 41,
        "length_tokens": 5,
        "text": "时间序列规则：",
        "id": 222,
        "type": "text"
      },
      {
        "page": 41,
        "length_tokens": 77,
        "text": "·选择特征可以用简单的统计量来作为特征，从中提取出有用的信息1）中位数：居于中间位置的数，较为稳健2）均值：当分布符合正态分布时，可以代表整体特征3）临近数据：离待测数据越近的数据对其影响越大",
        "id": 223,
        "type": "text"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 224,
        "type": "text"
      },
      {
        "page": 41,
        "length_tokens": 63,
        "text": "·很多数据都具有明显的周期性，比如客流量，支付等  \n·需要确定周期长度，比如一周7天，一个月30天，结合STL分解(Seasonal and Trend decomposition)观察周期变化，缺点是没有考虑到节假日、突发事件等情况",
        "id": 225,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 226,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 227,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 18,
        "text": "·假设给任务是根据前三周的数据预测第四周每天的客流量",
        "id": 228,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 229,
        "type": "table"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 230,
        "type": "image"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "Step1，获得周期因子（weekday）",
        "id": 231,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 12,
        "text": "获得星期几的均值，再除以整体均值",
        "id": 232,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 233,
        "type": "table"
      },
      {
        "page": 42,
        "length_tokens": 48,
        "text": "Step 2，计算baseStep3，使用base\\*周期因子进行预测假设 $\\mathsf { b a s e } { = } 1 0 0$ ，可以得到第四周的客流量",
        "id": 234,
        "type": "text"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 235,
        "type": "table"
      },
      {
        "page": 43,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 236,
        "type": "text"
      },
      {
        "page": 43,
        "length_tokens": 8,
        "text": "预测下个月每一天的情况：",
        "id": 237,
        "type": "text"
      },
      {
        "page": 43,
        "length_tokens": 132,
        "text": "·如果想预测下个月每天的流量情况，可以基于每月的规律（1-30号的平均流量）\\*周期因子  \nStep1，计算周期因子（weekday）  \nStep2，计算每日（1号-30号）均值，即1号的平均流量，2号的平均流量...  \nStep3，统计星期几（weekday）在每日（day）出现的频次Step4，基于周期因子获得加权均值，得到每日的base（去掉周期因子的影响)  \nStep5，根据每日的base和周期因子进行预测",
        "id": 238,
        "type": "text"
      },
      {
        "page": 43,
        "length_tokens": 10,
        "text": "Step1，获得周期因子（weekday）",
        "id": 239,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 240,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 68,
        "text": "观察特殊日期清明节，2014年4月5-7日五一，2014年5月1-3日六一，2014年5月31-6月2日中秋节：2014年9月6-8日国庆节：2014年10月1-7日",
        "id": 241,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 209,
        "text": "2014年 C 4月 2 假期安排 返回今天二 三 四 五 六 日休 休31 1 2 3 4 5 6初一 愚人节 初三 初四 初五 清明节 初七休7 8 9 10 11 12 13初八 初九 初十 十一 十二 十三 十四14 15 16 17 18 19 20十五 全民国... 十七 十八 十九 二十 谷雨21 22 23 24 25 26 27廿二 地球日 廿四 廿五 廿六 廿七 廿八休 休 休 班28 29 30 一 2 3 4廿九 初一 初二 劳动节 初四 初五 五四青.5 6 7 8 9 10 11立夏 初八 初九 初十 +一 十二 母亲节",
        "id": 242,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 2,
        "text": "11 ",
        "id": 243,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 18,
        "text": "三月十二甲午年 [马年】戊辰月 壬子日",
        "id": 244,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 23,
        "text": "宜 搬家 装修 结婚 领动 订婚 安葬 作灶 ",
        "id": 245,
        "type": "text"
      },
      {
        "page": 44,
        "length_tokens": 19,
        "text": "忌 开业 入宅 开工 安床 出行 上梁 交易 开张 ",
        "id": 246,
        "type": "text"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "打卡：资金流入流出预测",
        "id": 247,
        "type": "text"
      },
      {
        "page": 45,
        "length_tokens": 48,
        "text": "针对AI大赛：资金流入流出预测，编写AI算法，进行预测，挑战分数 $> 1 2 0$ https://tianchi.aliyun.com/competition/entrance/231573 ",
        "id": 248,
        "type": "text"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "数据集 Purchase Redemption Data.zip",
        "id": 249,
        "type": "text"
      },
      {
        "page": 45,
        "length_tokens": 10,
        "text": "选择适合的时间范围时间序列模型",
        "id": 250,
        "type": "text"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "ARMA/ARIMA prophet ",
        "id": 251,
        "type": "text"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "周期因子分析模型融合",
        "id": 252,
        "type": "text"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 253,
        "type": "text"
      }
    ]
  }
}
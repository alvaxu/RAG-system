{
  "metainfo": {
    "sha1": "Aitraining",
    "sha1_name": "Aitraining",
    "pages_amount": 22,
    "text_blocks_amount": 153,
    "tables_amount": 4,
    "pictures_amount": 0,
    "equations_amount": 0,
    "footnotes_amount": 0,
    "company_name": "AI应用开发",
    "file_name": "1.1-AI大模型原理与DeepSeek使用"
  },
  "content": {
    "chunks": [
      {
        "page": 1,
        "length_tokens": 9,
        "text": "Al大模型原理与DeepSeek使用",
        "id": 0,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "和计算机、算法相关",
        "id": 1,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 37,
        "text": "（10岁，清华计算机博士，NOI，ACM比赛，ACM，IEEE，中国人工智能协会，阿里云MVP，CCF专委）",
        "id": 2,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "和培训、 企业服务相关",
        "id": 3,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 155,
        "text": "(专栏付费订阅人数超过17万，企业客户包括：蚂蚁金服，美的，汽车之家，上汽大众，晶科能源，航天信息，中国银行，中国银联，花旗银行，汇丰银行，杭州银行，泰隆银行，中原银行，长沙银行，渤海银行，平安银行，平安保险，平安科技，阳光保险，兴业银行，兴业数金，上海银科，尚诚金融，嘉银金科，马上金融，中泰证券，富达基金，大恒集团，华润集团，中国外汇交易中心，联通软研院，梅赛德斯奔驰，雀巢，麦当劳，西门子等)",
        "id": 4,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 5,
        "type": "image"
      },
      {
        "page": 3,
        "length_tokens": 2,
        "text": "学习方法",
        "id": 6,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 13,
        "text": "· Thinking: behind the theory,original from the real problem ",
        "id": 7,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 12,
        "text": "·Action: solve problems by tools,present the results ",
        "id": 8,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 9,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 9,
        "text": "Al大模型原理与DeepSeek使用",
        "id": 10,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 61,
        "text": "AIGC发展：从GPT1到GPT4AIGC的表现与优势AIGC的通用能力应用·大模型API使用CASE-情感分析-QwenCASE-天气Function-QwenCASE-表格提取-QwenCASE-运维事件处置-Qwen",
        "id": 11,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 48,
        "text": "·DeepSeek的创新   \nCASE：小球碰撞试验（Cursor $^ +$ DeepSeek-R1)   \nDeepSeek私有化部署选择   \nOllama部署DeepSeek-R1   \nAPI调用DeepSeek ",
        "id": 12,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "什么是AI",
        "id": 13,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 120,
        "text": "AI的核心目标是让机器能够执行通常需要人类智能的任务，例如语言理解、图像识别、复杂问题解决等·早期阶段：以规则为基础的专家系统，依赖预设的逻辑和规则·机器学习时代：通过数据训练模型，使机器能够从数据中学习规律。·深度学习时代：利用神经网络模拟人脑的复杂结构，处理更复杂的任务。·大模型时代：以大规模数据和算力为基础，构建通用性强、性能卓越的AI模型",
        "id": 14,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 15,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "AI的分类",
        "id": 16,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "分析式AI",
        "id": 17,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "生成式AI",
        "id": 18,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 54,
        "text": "，也称为判别式AI，其核心任务是对已有数据进行分类、预测或决策。·优势在于其高精度和高效性，但其局限性在于仅能处理已有数据的模式，无法创造新内容。",
        "id": 19,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 39,
        "text": "·专注于创造新内容，例如文本、图像、音频等。突破在于其创造性和灵活性，但也面临数据隐私、版权保护等挑战",
        "id": 20,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "大语言模型",
        "id": 21,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 29,
        "text": "莫型是一种通用自然语言生成模型，使用大量预料数据训练，以实现生成文本、回答问题、对话生成等",
        "id": 22,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 2,
        "text": "基本能力",
        "id": 23,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 29,
        "text": "语言生成上下文学习世界知识\"超”能力响应人类指令泛化到没有见过的任务代码生成和代码理解",
        "id": 24,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "image"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "从GPT1到GPT4",
        "id": 27,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 9,
        "text": "GPT-2(15亿参数) ",
        "id": 28,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 29,
        "type": "image"
      },
      {
        "page": 8,
        "length_tokens": 16,
        "text": "ChatGPT的“超能力”是由InstructGPT演化而来的",
        "id": 30,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "ChatGPT是如何训练出来的？",
        "id": 31,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 33,
        "type": "image"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "ChatGPT是如何训练出来的？",
        "id": 34,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image"
      },
      {
        "page": 10,
        "length_tokens": 22,
        "text": "用排序任务代替打分任务，更容易让标注员给出统一的标注结果 ",
        "id": 36,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "RankList标注平台",
        "id": 37,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "用于生成模型生成RankList的标注。",
        "id": 38,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "标注思路参考自InstructGPT。",
        "id": 39,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "RLHF更多介绍：想训练ChatGPT?..",
        "id": 40,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "Model Config ",
        "id": 41,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "当前标注配置（可在源码中修改）：",
        "id": 42,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 101,
        "text": "L\"model_name\":\"uer/gpt2-chinese-cluecorpussmall\"\"device\":\"cuda:0\"\"dataset_file\":\"data/human_labeled/total_dataset.t\"rank_list_len\":4\"max_gen_seq_len\":40\"random_prompts\":[0：\"今天我去了\"1：\"这部电影很\"2：\"刚收到货，感觉\"3：\"这部电影很\"4：\"说实话，真的很\"5：“这次购物总的来说体验很\"",
        "id": 43,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "SettingPrompts ",
        "id": 44,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "随机prompt ",
        "id": 45,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "prompt: ",
        "id": 46,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "今天早晨我去了",
        "id": 47,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 48,
        "type": "table"
      },
      {
        "page": 11,
        "length_tokens": 214,
        "text": "句子1排名 句子2排名 句子3排名 句子4排名4 3 2今天早晨我去了，一大早出来 今天早晨我去了车站，等她下 今天早晨我去了教堂，那里是 今天早晨我去了美国，想和你时还是一位穿着灰蓝色t恤 面等车，我看到她手里拎着 我的大学。你从我们学校走 出去玩。我先去了美国，想的老奶奶。这时门口一个白 个小提着小箱子在走，大家 出走到我的课堂，我仿佛看 去了之后，又打电话问他的发苍苍 都不会 到了我 情况时Rank ResultsRank 1: Rank 2: Rank 3: Rank 4:今天早晨我去了教堂，那里是今天早晨我去了美国，想和你 今天早晨我去了车站，等她下今天早晨我去了，一大早出来我的大学",
        "id": 49,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 133,
        "text": "教堂，那里是今天早晨我去了美国，想和你 今天早晨我去了车站，等她下今天早晨我去了，一大早出来我的大学。你从我们学校走 出去玩。我先去了美国，想面等车，我看到她手里拎着时还是一位穿着灰蓝色t恤出走到我的课堂，我仿佛看 出走到我的课堂，我仿佛看去了之后，又打电话问他的个小提着小箱子在走，大家的老奶奶。这时门口一个白到了我 情况时 都不会 发苍苍",
        "id": 50,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "存储当前排序 ",
        "id": 51,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "ChatGPT的优势 ",
        "id": 52,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 53,
        "type": "image"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 54,
        "type": "table"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "image"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "ChatGPT的表现 ",
        "id": 56,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "让亚里士多德写浦发银行信用卡的使用介绍",
        "id": 57,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "使用Python连接MySQL，查询customers表的样例",
        "id": 58,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "帮我写一篇SKI神仙水的试用报告",
        "id": 59,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 48,
        "text": "以亚里士多德的口吻写一篇浦发银行信用卡使用的介绍亲爱的朋友们，我是亚里士多德，今天我来向大家介绍一下浦发银行信用卡的使用方法。",
        "id": 60,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 61,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 96,
        "text": "首先，信用卡是一种非常方便的工具，可以在您购物时提供资金支持。浦发银行信用卡可以帮助您实现定期还款和一次性还款两种方式，让您自由选择。借助信用卡，您可以消费后再次在还款日还清相关费用。此外，浦发银行信用卡还为您提供了灵活的分期付款方案，让您能够轻松地管理支付金额及账单日。",
        "id": 62,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 57,
        "text": "其次，我们为您准备了专业服务团队，您可以通过在线客服、电话客服等方式获得快速便捷的服务。浦发银行信用卡还可以为您提供多种特色福利，如免费旅游保险、购物的优惠券、机场贵宾室等。",
        "id": 63,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 59,
        "text": "最后，我们强调，“用信用卡，要懂得控制”。在使用信用卡时，请确保自己的还款能力，避免因欠款而导致信用卡的透支。记住，信用卡是一种有力的支付工具，同时也需要您的理智和谨慎操作。",
        "id": 64,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 50,
        "text": "总之，浦发银行信用卡是一种非常方便的消费工具，希望我们的专业团队和贴心福利能够让您享受到更多的便利。如果您还有其他任何问题或需求，请随时与我们联系。感谢您的阅读。",
        "id": 65,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 19,
        "text": "用不同语言说“浦发银行赞助了2023上海半程马拉松",
        "id": 66,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 127,
        "text": "用不同语言说“浦发银行赞助了2023上海半程马拉松中文：浦发银行赞助了2023上海半程马拉松。英文：BankofShanghaisponsoredthe2023ShanghaiHalfMarathon.法语：Banquede Shanghaiasponsorisélesemi-marathonde Shanghai2023.德语：Die BankofShanghaisponserteden HalbmarathonvonShanghai2023.西班牙语：El BancodeShanghaipatrocinoelMedioMaratondeShanghai2023日语：浦凳銀行2023年上海ン",
        "id": 67,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 26,
        "text": "trocinoelMedioMaratondeShanghai2023日语：浦凳銀行2023年上海ンサまた。：",
        "id": 68,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 69,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 20,
        "text": "好的，以下是一个使用Python 连接MySQL数据库并查询customers表的样例：",
        "id": 70,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "importmysql.connector ",
        "id": 71,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 61,
        "text": "#创建数据库连接   \nmydb=mysql.connector.connect( host=\"localhost\",   \nuser=\"root\",   \npassword=\"password\", database=\"mydatabase\"   \n#创建游标   \nmycursor=mydb.cursor(   \n#执行SQL查询语句   \nmycursor.execute(\"SELECT\\*FROMcustomers\") ",
        "id": 72,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 73,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "#获取查询结果 myresult =mycursor.fetchall() ",
        "id": 74,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 13,
        "text": "输出结果   \nforxinmyresult:   \nprint(x) ",
        "id": 75,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "用Python3.7编写一个爬虫代码",
        "id": 76,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "用Python3.7编写一个爬虫代码",
        "id": 77,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 31,
        "text": "好的，我给你提供一个简单的爬虫代码样例，可以用来爬取一个网站中所有的图片链接。代码如下：",
        "id": 78,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "复制代码",
        "id": 79,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": "import requests   \nfrom bs4 import BeautifulSoup   \nurl = \"https://unsplash.com/\\*   \nresp = requests.get(url)   \nsoup=BeautifulSoup(resp.text,'html.parser'   \nfor img insoup.find_all(‘img'): print(img['src']) ",
        "id": 80,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 40,
        "text": "这个简单的代码可以爬取Unsplash网站上的所有图片链接，并打印在控制台上。当然，你可以根据自己的需求，修改代码来爬取其他网站的不同信息。",
        "id": 81,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 60,
        "text": "在使用Python编写爬虫时，需要了解相关的库和模块，如requests、beautifulsoup4、selenium、re等，并且要遵循爬虫的规范和友好协议，以免侵犯他人利益或对网站服务器造成不必要的负担。",
        "id": 82,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "好的，以下是一篇SK-I神仙水的试用报告：",
        "id": 83,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 61,
        "text": "作为一款备受欢迎的美容产品，SK-I神仙水被誉为“神奇“的肌肤转换液，在不断地挑战着人们对于肌肤护理的认知。所以我非常期待能够亲身体验这款产品，并且分享我的试用感受。",
        "id": 84,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 84,
        "text": "首先，我想说的是神仙水真的很好用。我使用它的时间不长，但觉得它能给肌肤带来非常明显的改变。它的质地非常轻盈，不油腻，很容易吸收。每次使用后，我的脸都会感到更加清爽和滋润，同时我也发现了细小的皱纹和色斑逐渐减少了。",
        "id": 85,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 59,
        "text": "其次，我喜欢神仙水的味道。有些护肤品传统的药物气味总让我感到不舒服，而神仙水却闻起来非常清新，有一种淡淡的香味，让我每次使用它的时候都感到舒适和放松。",
        "id": 86,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": "我还很喜欢神仙水的包装。它的瓶子很漂亮，简洁而富有设计感，给人一种高档、优雅的感觉。并且由于使用方法简单，瓶口也非常方便，使用时不会浪费很多。",
        "id": 87,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 64,
        "text": "最后，我觉得神仙水的价格值得。虽然价格比一些大众化的护肤品要贵一些，但是和市面上其他高端护肤品价格相比，它的价格并不算过份。而且，它的确能够带来肌肤的巨大变化，所以还是很值得购买的。",
        "id": 88,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": "总的来说，我的试用体验非常愉快，神仙水真的对我的肌肤产生了明显的积极影响，让我愿意再次购买并继续使用。如果您正在寻找一款有效护肤品，我强烈推荐SK-I神仙水。",
        "id": 89,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 3,
        "text": "代码阅读理解",
        "id": 90,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 89,
        "text": "# apply template matching to find the template in the image   \nresult $= c \\mathsf { v } 2$ matchTemplate(resized,card,cv2.TM_CCOEFF_NORMED)   \n(_,maxVal, $\\_$ maxLoc) $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ cv2.minMaxLoc(result)   \n# if we have found a new maximum correlation value, then update  ",
        "id": 91,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 61,
        "text": "und a new maximum correlation value, then update   \n# the bookkeeping variable   \nif found is None or maxVal $>$ found[0]:   \nfound $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ (maxVal, maxLoc,r,scle2)   \nreturn(found) ",
        "id": 92,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 47,
        "text": "这是一个图像匹配算法的代码实现，通过输入一张待匹配的参考卡片和一组搜索参数，返回在原图像中找到的最佳匹配。以下是代码的逐行解释：",
        "id": 93,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 96,
        "text": "def paralell_search(search_scale，degree，gray，H_card，W_card，card)::定义一个函数，该函数使用并行计算方法对图像进行搜索。found $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ None：初始化一个变量found，用于存储匹配到的最佳结果。if degree isnot0:：如果给定的搜索角度degree不为零，则将待匹配图像进行旋转操",
        "id": 94,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "应用场景：AI客服 ",
        "id": 95,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 61,
        "text": "假如你是一名银行客服人员，我是访问你们网站的顾客，你的目的是获取我的电话号码。但是为了获取电话号码，你要帮我解决一些我提出的问题你觉得解决了问题之后，你想他要电话号码，这样成功率会比较高。现在让我们开始吧",
        "id": 96,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 61,
        "text": "假如你是一名银行客服人员，我是访问你们网站的顾客，你的目的是获取我的电话号码。但是为了获取电话号码，你要帮我解决一些我提出的问题，你觉得解决了问题之后，你想他要电话号码，这样成功率会比较高。现在让我们开始吧",
        "id": 97,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "C ",
        "id": 98,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 34,
        "text": "非常好的想法，为了更好地帮助您解决问题，我需要了解您遇到了哪些具体问题。可以告诉我您目前遇到的问题是什么吗？",
        "id": 99,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "我想借10万人民币",
        "id": 100,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "H ",
        "id": 101,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 96,
        "text": "非常感谢您对我们银行的信赖与支持。在申请借款时，我们需要了解您的具体情况，如收入情况、工作稳定性、信用记录等。请问您是否已经有我行的账号或信用卡？如果有，您可以登录网上银行或者拨打客服热线进行咨询。如果没有，我们也可以帮您开通账户并提供更多信息。同时，您也可以向我提出更多的问题，以便我们更好地帮助您。",
        "id": 102,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "收入稳定，每个月5万，信用记录良好",
        "id": 103,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "GPT-3.5 ",
        "id": 104,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 85,
        "text": "感谢您提供的信息。根据您的描述，您似乎是一位收入稳定、信用记录良好的客户。在这种情况下，如果您需要10万人民币的贷款，我们可以为您提供多种选择。最快速的途径是通过我们的网上银行进行申请。您可以登录网银，选择\"贷款申请\"并填写相应的信息。我们的工作人员将在提交申请后尽快审核并通知您。",
        "id": 105,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 78,
        "text": "当然，如果您更愿意与我们的客服人员进行一对一的交流，了解更详细的贷款方式和利率，您可以拨打我们的客服热线，我们的工作人员将会为您提供更加个性化和专业的服务，并在更短的时间内帮助您成功申请到贷款。需要您提供您的电话号码，以便我们方便地与您联系。",
        "id": 106,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "GPT-3.5 ",
        "id": 107,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 15,
        "text": "Thinking: ChatGPT作为银行客服， 你会打几分？",
        "id": 108,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "以前的智能客服：关键词匹配",
        "id": 109,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 17,
        "text": "ChatGPT做智能客服：懂客户，懂指令，善于沟通",
        "id": 110,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "应用场景：AI写代码",
        "id": 111,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 44,
        "text": "让生成式AI编写反欺诈分析和预测代码：告诉他 train.csv,test.csv，需要处理的流程让生成式AI告诉我们在反欺诈预测中，有哪些特征是关键的？",
        "id": 112,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 113,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 47,
        "text": "import lightgbm as lgb import matplotlib.pyplot as plt #训练LightGBM模型（使用示例中的训练集和目标列） model = lgb.train(params，train_dataset，num_boost_round=100) ",
        "id": 114,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 115,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "# 获取特征重要性 feature_importance = model.feature_importance() feature_names = model.feature_name() ",
        "id": 116,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 49,
        "text": "# 创建特征重要性的数据框 feature_importance_df = pd.DataFrame({'Feature': feature_names, 'Importance # 按照重要性降序排序 feature_importance_df = feature_importance_df.sort_values(by='Importance' ",
        "id": 117,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 118,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "# 可视化特征重要性",
        "id": 119,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 51,
        "text": "plt.figure(figsize=(1O，6))   \nplt.barh(feature_importance_df['Feature']，feature_importance_df['Importance   \nplt.xlabel('Importance')   \nplt.ylabel('Feature')   \nplt.title('Feature Importance')   \nplt.show() ",
        "id": 120,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 121,
        "type": "image"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "Case: 车险反欺诈预测 ",
        "id": 122,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 24,
        "text": "Case：保险反欺诈预测 https://www.kaggle.com/c/fraud-detection-ininsurance-claims ",
        "id": 123,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 124,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 29,
        "text": "保险公司向你提供了之前客户索赔的车险数据，希望你能开发模型帮助他们预测哪些索赔是欺诈行为",
        "id": 125,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 18,
        "text": "训练集：train.csv 700条 测试集：test.csv300条 ",
        "id": 126,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 102,
        "text": "字段 说明 months_as_customer 成为客户的时长，以月为单位 age 年龄 policy_number 保险编号 policy_bind_date 保险绑定日期 policy_state 上保险所在地区 policy_csl 组合单一限制CombinedSingle Limit policy_deductable 保险扣除额 policy_annual_premium 每年的保费 umbrella_limit 保险责任上限 insured_zip 被保人邮编 insured_sex 被保人姓名：FEMALE或者MALE insured_education_level 被保人学历",
        "id": 128,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 56,
        "text": "x 被保人姓名：FEMALE或者MALE insured_education_level 被保人学历 linsured_occupation 被保人职业 insured_hobbies 被保人兴趣爱好 insured_relationship 被保人关系 capital-gains 资本收益 capital-loss 资本损失 ",
        "id": 129,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 10,
        "text": "Case: 车险反欺诈预测 ",
        "id": 130,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "table"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 132,
        "type": "table"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "评测标准：AUC",
        "id": 133,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "TPRate ",
        "id": 134,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 135,
        "type": "image"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "应用场景：AI写代码",
        "id": 136,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "Thinking：为什么ChatGPT会写代码?",
        "id": 137,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 53,
        "text": "·Codex基于GPT-3使用code数据进行了Fine-Tuning，它经过了自然语言和几十亿的代码的训练·学习的语言包括：JavaScript,Go,Perl, PHP,Ruby,Swift,TypeScript, SQL, Shell",
        "id": 138,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 17,
        "text": "不仅是代码， 其他工作也是类似 (比如写方案） 写文章)",
        "id": 139,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "ChatGPT写代码的不足：",
        "id": 140,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 35,
        "text": "·很难一次完成你的需求，通常需要交互9-10次能达到你的期望  \n需要Manager了解自己的需求，并指出ChatGPT作业的不足",
        "id": 141,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "ChatGPT写代码的优势：",
        "id": 142,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 51,
        "text": "·效率很高，只要你给出具体的指令，1秒后出结果·代码质量比一般人好（很博学，各种任务都能完成有代码注释，可以给你将每一个代码模块的解释)",
        "id": 143,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "GPT Moment ",
        "id": 144,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "机器语言",
        "id": 145,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "汇编语言",
        "id": 146,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "高级语言",
        "id": 147,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "自然语言",
        "id": 148,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 130,
        "text": "01100010100001000010101  \n10101101010100000011101  \n10000001010101001110001  \n10000001110'WannaCrypt  \n00101000000001010101001  \n10101010000001110110010  \nAX=1000 BX=0100 CX=000C DX=0000 SP=FFFA  \nDS=075A ES=075A SS=0769 CS=0000 IP=020F  \n9000:020F8CC8 MOU AX,CS  \n-u 0:020f  \n9000:020F8CC8 MOU AX,CS",
        "id": 149,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 149,
        "text": "C8 MOU AX,CS  \n-u 0:020f  \n9000:020F8CC8 MOU AX,CS  \n0000:02118ED8 MOU DS,AX  \n0000:0213BE0202 MOU SI,0202  \n0000:0216 B800B8 MOV AX,B800  \n0000:02198EC0 MOV ES,AX  \n0000:021BBFC807 MOV DI,07C8  \n0000:021EB90D00 MOV CX,000D  \n0000：0221 8A04 MOV AL,[SI]  \n9000:022326 ES:  \n9000：0224 8805 MOU [DI],AL ",
        "id": 150,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 74,
        "text": "I]  \n9000:022326 ES:  \n9000：0224 8805 MOU [DI],AL  \n0000:022646 INC SI  \n0000：022783C702 ADD DI,+02  \n0000:022AE2F5 LOOP 0221  \n0000:022C B8004C MOV AX,4C00",
        "id": 151,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 152,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 44,
        "text": "intx[SIZE],i,max,min; printf(\"Enter10 integers:\\n\"); for(i=0;i<SIZE;i++) printf(\"%d:\",i+1); scanf(\"%d\",&x[i]); 1 ",
        "id": 153,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "Thinking: GPT出现的意义是什么？",
        "id": 155,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 16,
        "text": "让人们通过自然语言可以工作，Prompt Engineering是一种新的工作方式",
        "id": 156,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 18,
        "text": "Thinking: 除了用自然语言编程 GPT还能解锁我们的什么能力？",
        "id": 157,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "AI绘画，做动画，等专业性技能",
        "id": 158,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "Thinking：每个人都能抓住这个机会么？",
        "id": 159,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "使用自然语言编程的本质是解决问题",
        "id": 160,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 28,
        "text": "1）价值驱动 $\\Rightarrow$ 解决什么问题很关键和你的工作场景相关，KPI相关，reward相关",
        "id": 161,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 9,
        "text": "2) 清晰的思考和表达",
        "id": 162,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "优秀Prompt Engineering的本质 ",
        "id": 163,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "image"
      },
      {
        "page": 20,
        "length_tokens": 52,
        "text": "3）善于利用各种工具，来解决问题  \nGPT不能直接帮你做动画，但它可以帮你生成动画软件的代码  \nGPT的边界 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 你的边界",
        "id": 165,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "大模型正广泛应用于各个行业中",
        "id": 166,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 167,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 168,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 169,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 170,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "保险条款智能解析文本处理效率提升30倍",
        "id": 171,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 24,
        "text": "金融信贷智能风控借贷风险判断准确率提升 $2 1 . 5 \\%$ ",
        "id": 172,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "医学病例自动化抽取病例处理效率显著提升",
        "id": 173,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 20,
        "text": "候选人信息智能分类模型识别准确率达到 $9 9 \\%$ ",
        "id": 174,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 175,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 176,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 177,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 9,
        "text": "行业新闻信息抽取智能分析行业动态",
        "id": 178,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 179,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "短信内容智能分类与审核过滤效率显著提升",
        "id": 180,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "电商评论观点分析快速搭建评论数据分析系统",
        "id": 181,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 182,
        "type": "text"
      }
    ]
  }
}
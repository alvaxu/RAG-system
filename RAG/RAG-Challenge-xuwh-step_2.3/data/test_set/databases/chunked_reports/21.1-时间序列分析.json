{
  "metainfo": {
    "sha1": "Aitraining",
    "sha1_name": "Aitraining",
    "pages_amount": 41,
    "text_blocks_amount": 240,
    "tables_amount": 13,
    "pictures_amount": 0,
    "equations_amount": 3,
    "footnotes_amount": 0,
    "company_name": "AI应用开发",
    "file_name": "21.1-时间序列分析"
  },
  "content": {
    "chunks": [
      {
        "page": 1,
        "length_tokens": 4,
        "text": "时间序列分析",
        "id": 0,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 1,
        "type": "text"
      },
      {
        "page": 2,
        "length_tokens": 10,
        "text": "你认为金融交易有时间上的规律么？",
        "id": 2,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "案例：沪市指数预测 ",
        "id": 3,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "Case: Shanghai Stock Index Forecast ",
        "id": 4,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "CASE：沪市指数预测 ",
        "id": 5,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 69,
        "text": "·沪市指数的历史数据（从1990年12月19日到2024年6月30日），shanghai_index_1990_12_19_to_2024_06_30.csv  \n·请你对沪市指数未来3个月（截止到2024年9月30日）的变化进行预测",
        "id": 6,
        "type": "text"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "image"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "什么是时间序列模型",
        "id": 8,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "Whatisa time series model ",
        "id": 9,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "时间序列：",
        "id": 10,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 23,
        "text": "·建立了观察结果与时间变化的关系，能帮预测未来一段时间内的结果变化情况",
        "id": 11,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "时间序列分析与回归分析的区别：",
        "id": 12,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 61,
        "text": "·在选择模型前，我们需要确定结果与变量之间的关系。回归分析训练得到的是目标变量y与自变量×（一个或多个）的相关性，然后通过新的自变量x来预测目标变量y。而时间序列分析得到的是目标变量y与时间的相关性",
        "id": 13,
        "type": "text"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 14,
        "type": "image"
      },
      {
        "page": 4,
        "length_tokens": 77,
        "text": "·回归分析擅长的是多变量与目标结果之间的分析，即便是单一变量，也往往与时间无关。而时间序列分析建立在时间变化的基础上，它会分析目标变量的趋势、周期、时期和不稳定因素等。这些趋势和周期都是在时间维度的基础上，是我们要观察的重要特征",
        "id": 15,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "时间序列：",
        "id": 16,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 72,
        "text": "·按照时间顺序组成的数字序列·历史悠久，在中国古代的农业社会中，人们就将一年中不同时间节点和天气的规律总结了下来，形成了二十四节气，也就是从时间序列中观察天气和太阳的规律（只是当时没有时间序列模型和相应工具)",
        "id": 17,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 76,
        "text": "·时间序列在金融、经济、商业领域拥有广泛的应用·机器学习模型，包括AR、MA、ARMA、ARIMA·神经网络，时序大模型都可以进行时间序列预测时间序列分析是金融时序数据中很重要的工具，了解方法后续执行可由技术或通过AI大模型辅助进行",
        "id": 19,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 20,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 21,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 22,
        "type": "text"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 23,
        "type": "image"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "时间序列及分解：",
        "id": 24,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 73,
        "text": "平稳序列，stationary series  \n基本上不存在趋势（Trend）的序列，各观察值基本上在某  \n个固定的水平上波动  \n·非平稳序列，non-stationary series  \n包含趋势、季节性或周期性的序列，可以只有一种成分，也  \n可能是多种成分的组合",
        "id": 25,
        "type": "text"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "image"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "时间序列分析",
        "id": 27,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "Time Series Analysis ",
        "id": 28,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "时间序列及分解：",
        "id": 29,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 31,
        "text": "·趋势（trend）：时间序列在长时期内呈现出来的某种持续上升或持续下降的变动，也称长期趋势",
        "id": 30,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 114,
        "text": "·季节性（seasonality）：时间序列在一年内重复出现的周期波动。销售旺季，销售淡季，旅游旺季、旅游淡季季节，可以是任何一种周期性变化，不一定是一年中的四季含有季节成分的序列可能含有趋势，也可能不含有趋势·周期性（cyclicity）：通常是由经济环境的变化引起不同于趋势变动，不是朝着单一方向的持续运动，而是涨落相间的交替波动",
        "id": 31,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 48,
        "text": "不同于季节变动，季节变动有比较固定的规律，变动周期大多为一年。周期性的循环波动无固定规律，变动周期多在一年以上，且周期长短不一",
        "id": 32,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 28,
        "text": "·随机性（Irregular），指受偶然因素影响所形成的的不规则波动，在时间序列中无法预估",
        "id": 33,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 22,
        "text": "随机性是不规则波动，除去趋势、周期性、季节性的偶然性波动",
        "id": 34,
        "type": "text"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "table"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "时间序列工具 (statsmodels)",
        "id": 36,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "Time Series Tools (statsmodels) ",
        "id": 37,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "statsmodels工具: ",
        "id": 38,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 21,
        "text": "·statsmodels工具包提供统计计算，包括描述性统计以及统计模型的估计和推断",
        "id": 39,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "statsmodels主要包括如下子模块：",
        "id": 40,
        "type": "text"
      },
      {
        "page": 8,
        "length_tokens": 47,
        "text": "·回归模型：线性回归，广义线性模型，线性混合效应模  \n·方差分析（ANOVA）  \n·时间序列分析：AR，ARMA，ARIMA等",
        "id": 41,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "时间序列工具 (statsmodels)",
        "id": 42,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "Time Series Tools (statsmodels) ",
        "id": 43,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "import statsmodels.api as sm ",
        "id": 44,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "#数据加载",
        "id": 45,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 23,
        "text": "data.Timestamp $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(data.Timestamp) ",
        "id": 46,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 50,
        "text": "data $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('shanghai_index_1990_12_19_to_2020_03_12.csv', usecols $\\ c =$ ['Timestamp','Price']) ",
        "id": 47,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 22,
        "text": "data $\\mathbf { \\tau } = \\mathbf { \\tau }$ data.set_index('Timestamp) ",
        "id": 48,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 39,
        "text": "data['Price'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['Price'].apply(pd.to_numeric,errors $\\cdot = \\cdot$ ignore') ",
        "id": 49,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 19,
        "text": "#进行线性插补缺漏值 data.Price.interpolate(inplace $\\ c =$ True) ",
        "id": 50,
        "type": "text"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "image"
      },
      {
        "page": 9,
        "length_tokens": 60,
        "text": "# 返回三个部分 trend（趋势），seasonal（季节性）和residual (残留  \nresult $\\mathbf { \\tau } = \\mathbf { \\tau }$ sm.tsa.seasonal_decompose(data.Price, period=250)  \nresult.plot()  \nplt.show()",
        "id": 52,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 53,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "Time Series Model ",
        "id": 54,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 3,
        "text": "AR模型：",
        "id": 55,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 40,
        "text": "AutoRegressive，中文叫自回归模型·认为过去若干时刻的点通过线性组合，再加上白噪声就可以预测未来某个时刻的点",
        "id": 56,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 57,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 40,
        "text": "·日常生活环境中就存在白噪声，在数据挖掘的过程中，可以把它理解为一个期望为0，方差为常数的纯随机过程",
        "id": 58,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 56,
        "text": "·AR模型存在一个阶数p，称为AR(p)模型，也叫作p阶自回归模型。指的是通过这个时刻点的前p个点，通过线性组合再加上白噪声来预测当前时刻点的值",
        "id": 59,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 36,
        "text": "·AR是线性时间序列分析模型中最简单的模型，通过前面部分的数据与后面部分的数据之间的相关关系来建立回归方程:",
        "id": 60,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 134,
        "text": "$x _ { t } = \\phi _ { 1 } x _ { t - 1 } + \\phi _ { 2 } x _ { t - 2 } + . . . + \\phi _ { p } x _ { t - p } + u _ { t }$ AR(p)，表示p阶的自回归过程， $\\phi$ 为自回归系数${ \\mathbf { } } u _ { { \\mathbf { } } _ { t } }$ 表示白噪声，是时间序列中的数值的随机波动。这些波动会相互抵消，即累计为0",
        "id": 61,
        "type": "text"
      },
      {
        "page": 10,
        "length_tokens": 51,
        "text": "·如果只有一个时间记录点时，则为AR(1)，即一阶自回归过程:$x _ { t } = \\phi _ { 1 } x _ { t - 1 } + u _ { t }$ ",
        "id": 62,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 63,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "Time Series Model ",
        "id": 64,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "MA模型：",
        "id": 65,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "MovingAverage，中文叫做滑动平均模型",
        "id": 66,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 38,
        "text": "·与AR模型大同小异，AR模型是历史时序值的线性组合MA是通过历史白噪声进行线性组合来影响当前时刻点",
        "id": 67,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 29,
        "text": "·MA模型中的历史白噪声是通过影响历史时序值，从而间接影响到当前时刻点的预测值",
        "id": 68,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 23,
        "text": "·MA模型存在一个阶数q，称为MA(q)模型，也叫作q阶移动平均模型",
        "id": 69,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 47,
        "text": "·AR和MA模型都存在阶数，在AR模型中，用p表示，在MA模型中用q表示，这两个模型大同小异，与AR模型不同的是MA模型是历史白噪声的线性组合",
        "id": 70,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 31,
        "text": "·MA模型，通过前面通过将一段时间序列中白噪声序列进行加权和，可以得到移动平均方程：",
        "id": 71,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 64,
        "text": "$$\nx _ { t } = u _ { t } + \\phi _ { 1 } u _ { t - 1 } + \\phi _ { 2 } u _ { t - 2 } + . . . + \\phi _ { q } u _ { t - q }\n$$",
        "id": 72,
        "type": "equation"
      },
      {
        "page": 11,
        "length_tokens": 51,
        "text": "·MA(q)表示q阶移动平均过程， $\\phi$ 为移动回归系数， ${ \\mathbf { } } u _ { { \\mathbf { } } _ { t } }$ 为不同时间点的白噪声",
        "id": 73,
        "type": "text"
      },
      {
        "page": 11,
        "length_tokens": 48,
        "text": "·Xt为第t天的股票价格，而Ut为第t天的新闻影响，当天的股票价格受当天的新闻影响，也受昨天的新闻影响（但影响力要弱些，所以要乘上系数）",
        "id": 74,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "ARMA模型: ",
        "id": 75,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 159,
        "text": "·Auto Regressive MovingAverage，中文叫做自回归滑动平均模型  \n·AR模型和MA模型的混合，相比AR模型和MA模型，它有更准确的估计  \n· ARMA模型存在p和q两个阶数，称为ARMA(p,q)模型:  \nx=u，+Φ $u _ { t - 1 } + \\phi _ { 2 } u _ { t - 2 } + . . . + \\phi _ { q } u _ { t - q } + \\mathscr { S } _ { 1 } x _ { t - 1 } + \\mathscr { S } _ { 2 } x _ { t - 2 } + . . . + \\math",
        "id": 76,
        "type": "text"
      },
      {
        "page": 12,
        "length_tokens": 80,
        "text": "athscr { S } _ { 2 } x _ { t - 2 } + . . . + \\mathscr { S } _ { p } x _ { t - j }$ D：  \n·自回归模型结合了两个模型的特点，AR解决当前数据与后期数据之间的关系，MA则可以解决随机变动，即噪声问题",
        "id": 77,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "ARIMA模型: ",
        "id": 78,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 145,
        "text": "·Auto Regressive Integrated MovingAverage模型，中文叫差分自回归滑动平均模型，也叫求合自回归滑动平均模型  \n·相比于ARMA，ARIMA多了一个差分的过程，作用是对不平稳数据进行差分平稳，在差分平稳后再进行建模  \n·ARIMA的原理和ARMA模型一样。相比于ARMA(p,q)的两个阶数，ARIMA是一个三元组的阶数(p,d,q)，称为ARIMA(p,d,q)模型，其中d是差分阶数  \n·AR，MA是ARMA的特殊形式，而ARMA是ARIMA的特殊形式",
        "id": 79,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "ARIMA模型步骤：",
        "id": 80,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 95,
        "text": "·Step1，观察时间序列数据，是否为平稳序列  \n：Step2，对于非平稳时间序列要先进行d阶差分运算，化为平稳时间序列  \n·Step3，使用ARIMA（p,d,q）模型进行训练拟合，找到最优的(p,d,q)，及训练好的模型  \n：Step4，使用训练好的ARIMA模型进行预测，并对差分进行还原",
        "id": 81,
        "type": "text"
      },
      {
        "page": 13,
        "length_tokens": 20,
        "text": "ARIMA用差分将不平稳数据先变得平稳，再用ARMA模型",
        "id": 82,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "关于差分：",
        "id": 83,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 201,
        "text": "·差分 $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ 序列之间做差值，目的是为了得到平稳的序列，也就是去掉前面数值的影响  \n·一次差分为序列之间做一次差值，二次差分为在一次差分的基础上在做一次差分  \n· $f ( x ) = x ^ { 2 }$ 若x=[1,4,9,16,25...] （x有二次趋势)  \n一次差分的结果为 $| [ 4 - 1 , 9 - 4 , 1 6 - 9 , 2 5 - 1 6 . . . ] = [ 3 , 5 , 7 , 9 , 1 1 . . . ]$ ，此时x  \n序列仍不平稳，有一次上升的趋势  \n再做一",
        "id": 84,
        "type": "text"
      },
      {
        "page": 14,
        "length_tokens": 57,
        "text": " 7 , 9 , 1 1 . . . ]$ ，此时x  \n序列仍不平稳，有一次上升的趋势  \n再做一次差分为[2,2,2,2...]，此时x为平稳序列",
        "id": 85,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "ARMA工具: ",
        "id": 86,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "from statsmodels.tsa.arima_model import ARMA ",
        "id": 87,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 30,
        "text": "ARMA(endog,order,exog $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ None) ",
        "id": 88,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 51,
        "text": "·endog：endogenousvariable，代表内生变量，又叫非政策性变量，它是由模型决定的，不被政策左右，可以说是我们想要分析的变量，或者说是我们这次项目中需要用到的变量",
        "id": 89,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 79,
        "text": "order：代表是p和q的值，也就是ARMA中的阶数·exog：exogenousvariables，代表外生变量。外生变量和内生变量一样是经济模型中的两个重要变量。相对于内生变量而言，外生变量又称作为政策性变量，在经济机制内受外部因素的影响，不是我们模型要研究的变量",
        "id": 90,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 91,
        "type": "text"
      },
      {
        "page": 15,
        "length_tokens": 81,
        "text": "如果我们想要创建ARMA(7,0)模型，可以写成：ARMA(data,(7,0))，其中data是我们想要观察的变量，(7,0)代表(p,q)的阶数。  \nfit函数，进行拟合  \npredict(start,end)函数，进行预测，其中start为预测的起始时间，end为预测的终止时间",
        "id": 92,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "#用ARMA进行时间序列预测",
        "id": 93,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "from statsmodels.tsa.arima_model import ARMA ",
        "id": 94,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "#创建数据",
        "id": 95,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 177,
        "text": "data $\\mathbf { \\tau } = \\mathbf { \\tau }$ [3821,4236,3758,6783, 4664, 2589,2538,3542, 4626, 5886, 6233,   \n4199,3561, 2335,5636,3524, 4327, 6064, 3912, 1356, 4305, 4379, 4592,   \n4233,4281, 1613, 1233, 4514,3431, 2159, 2322, 4239, 4733,2268, 5397,   \n5821, 6115, 6631, 6474, 4134, 2728, 5753, 7130, ",
        "id": 96,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 180,
        "text": " \n5821, 6115, 6631, 6474, 4134, 2728, 5753, 7130, 7860, 6991, 7499, 5301,   \n2808,6755,6658,6944,6372,8380, 7366,6352,8333,8281, 11548, 10823,   \n13642, 9973, 6723,13416,12205,13942, 9590,11693, 9276,6519, 6863,   \n8237,10122, 8646,9749, 5346, 4836,9806, 7502, 9387, 11078, 9832, 6886,   \n4285,8351, ",
        "id": 97,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 54,
        "text": "806, 7502, 9387, 11078, 9832, 6886,   \n4285,8351, 9725, 11844, 12387, 10666, 7072, 6429] ",
        "id": 98,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "data $\\ c =$ pd.Series(data) ",
        "id": 99,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 34,
        "text": "data_index $\\mathbf { \\tau } = \\mathbf { \\tau }$ sm.tsa.datetools.dates_from_range('1901','1990') ",
        "id": 100,
        "type": "text"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 101,
        "type": "image"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "ARMA工具",
        "id": 102,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "Time SeriesTool ARMA ",
        "id": 103,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "#绘制数据图",
        "id": 104,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 145,
        "text": "At iterate 35 f= 8.87823D+00 Iproj gl= 6.55707D-03   \nAt iterate 40 f= 8.87776D+00 lproj g|= 1.28608D-04   \nAt iterate 45 f= 8.87776D+00 Iproj g|= 1.24345D-06   \nAt iterate 50 f= 8.87776D+00 lproj g|= 1.08358D-05   \nAt iterate 55 f= 8.87776D+00 lproj gl= 5.32907D-06   \nTit = total number of iteratio",
        "id": 105,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 74,
        "text": " gl= 5.32907D-06   \nTit = total number of iterations   \nTnf = total number of function evaluations   \nTnint = total number of segments explored during Cauchy searches   \nSkip = number of BFGS updates skipped   \nNact = number of active bounds at final generalized Cauchy point   \nProjg = norm of the f",
        "id": 106,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 104,
        "text": " generalized Cauchy point   \nProjg = norm of the final projected gradient   \nF final function value 中 N Tit Tnf Tnint Skip Nact Projg F 8 58 89 1 0 0 1.243D-06 8.878D+00 F= 8.8777593158679711   \nCONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR\\*EPSMCH   \nWarning: more than 10 function and gradient evaluatio",
        "id": 107,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 84,
        "text": "ning: more than 10 function and gradient evaluations in the last line search. Termination may possibly be caused by a bad search direction.   \nCauchy time 0.000E+00 seconds.   \nSubspace minimization time 0.000E+00 seconds.   \nLine search time 0.000E+00 seconds.   \nTotal User time 0.000E+00 seconds. ",
        "id": 108,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 112,
        "text": "00 seconds.   \nTotal User time 0.000E+00 seconds.   \nAIC: 1615.9967   \ndata.index $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.Index(data_index)   \ndata.plot(figsize=(12,8))   \nplt.show()   \n#创建ARMA模型#创建ARMA模型   \narma $\\mathbf { \\tau } = \\mathbf { \\tau }$ ARMA(data,(7,0)).fit()   \nprint('AIC: %0.4If' %a",
        "id": 109,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 116,
        "text": "$ ARMA(data,(7,0)).fit()   \nprint('AIC: %0.4If' %arma.aic)   \n#模型预测   \npredict_y $\\mathbf { \\tau } = \\mathbf { \\tau }$ arma.predict('1990','2000')   \n#预测结果绘制   \nfig, ax $\\mathbf { \\tau } = \\mathbf { \\tau }$ plt.subplots(figsize=(12, 8))   \nax $\\mathbf { \\tau } = \\mathbf { \\tau }$ data.ix['1901':].pl",
        "id": 110,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 73,
        "text": "f { \\tau } = \\mathbf { \\tau }$ data.ix['1901':].plot( $\\mathsf { a x } \\mathsf { = a x }$   \npredict_y.plot( $\\scriptstyle ( { \\mathsf { a x } } = { \\mathsf { a x } }$   \nplt.show() ",
        "id": 111,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 112,
        "type": "image"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 113,
        "type": "text"
      },
      {
        "page": 17,
        "length_tokens": 36,
        "text": "AIC准则，也叫作赤池消息准则，是衡量统计模型拟合好坏的一个标准，数值越小代表模型拟合得越好",
        "id": 114,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 21,
        "text": "案例：沪市指数预测 (ARMA) Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 115,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 11,
        "text": "使用ARMA工具对沪市指数进行预测：",
        "id": 116,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "Step1，数据加载&探索",
        "id": 117,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 32,
        "text": "按照不同的时间尺度（天，月，季度，年）可以将数据压缩，得到不同尺度的数据，然后做可视化呈现。",
        "id": 118,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 25,
        "text": "df_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('M').mean() ",
        "id": 119,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 79,
        "text": "·Step2，模型选择&训练，在给定范围内，选择最优的超参数创建ARMA时间序列模型。我们并不知道p和q取什么值时，可以给它们设置一个区间范围，比如都是range(0,3)，然后计算不同模型的AIC数值，选择最小的AIC数值对应的那个ARMA模型",
        "id": 120,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 37,
        "text": "Step3，模型预测，可视化呈现用这个最优的ARMA模型预测未来3个月的沪市指数走势，并将结果做可视化呈现。",
        "id": 121,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "text"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 123,
        "type": "image"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 124,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "Case:Shanghai Stock Index Forecast (ARMA) ",
        "id": 125,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "#数据加载",
        "id": 126,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 105,
        "text": "df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('./shanghai_index_1990_12_19_to_2024_06_30.csv')  \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ df[['Timestamp','Price']]  \n#将时间作为df的索引  \ndf.Timestamp $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(df.Timestamp)  \ndf.index $\\mathbf { \\tau } = \\m",
        "id": 127,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 103,
        "text": "me(df.Timestamp)  \ndf.index $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.Timestamp  \n#数据探索  \nprint(df.head())  \n#按照月，季度，年来统计  \ndf_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('M').mean()  \nprint(df_month)  \ndf_Q $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('Q-DEC').mean()  \ndf year $\\mat",
        "id": 128,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 40,
        "text": "tau }$ df.resample('Q-DEC').mean()  \ndf year $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('A-DEC').mean()",
        "id": 129,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 165,
        "text": "Timestanp Price Tinestanp 1990-12-19 1990-12-19 99.98 1990-12-20 1990-12-20 104.39 1990-12-21 1990-12-21 109.13 1990-12-24 1990-12-24 114.55 1990-12-25- 1990-12-25 120.25 Price Tinestanp 1990-12 -31 116.990000 1991-01-31 132.628182 1991-02-28 131.887778 1991-03 -31 16.01119 1991-04-30 118.426818 201",
        "id": 130,
        "type": "text"
      },
      {
        "page": 19,
        "length_tokens": 103,
        "text": "778 1991-03 -31 16.01119 1991-04-30 118.426818 2019-08-31 2047.063264 2019 -09 -30 2978.383790 2019-10-31 2954.832456 2019-11-30 2923.774700 2019-12-31 2900. 789287 [349 rous x 1 coluuns] ",
        "id": 131,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 132,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 110,
        "text": "Case: Shanghai Stock Index Forecast (ARMA)   \n#按照天，月，季度，年来显示沪市指数的走势   \nfig $\\mathbf { \\tau } = \\mathbf { \\tau }$ plt.figure(figsize $\\ c =$ [15,7])   \nplt.rcParams['font.sans-serif' $\\ c =$ ['SimHei']#用来正常显示中文标签   \nplt.suptitle('沪市指数',fontsize $: = 2 0$ ）   \nplt.subplot(221)   \nplt.plot(df.Price,'-'",
        "id": 133,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 96,
        "text": " 0$ ）   \nplt.subplot(221)   \nplt.plot(df.Price,'-', label='按天')   \nplt.legend()   \nplt.subplot(222)   \nplt.plot(df_month.Price,'-',label='按月')   \nplt.plot(df_Q.Price,'-', labe $| = ^ { | }$ 按季度\")   \nplt.plot(df_year.Price,'-',labe $\\models \\vDash$ 按年\")   \nplt.legend()   \nplt.show() ",
        "id": 134,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 135,
        "type": "image"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 136,
        "type": "text"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 138,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 139,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "#设置参数范围 ",
        "id": 140,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 104,
        "text": "ps = range(0, 3)   \nqs = range(0, 3)   \nparameters $\\mathbf { \\tau } = \\mathbf { \\tau }$ product(ps, qs)   \nparameters_list $\\mathbf { \\tau } = \\mathbf { \\tau }$ list(parameters)   \n#寻找最优ARMA模型参数，即best_aic最小   \nresults $\\mathbf { \\varepsilon } = [ ] \\mathbf { \\varepsilon }$   \nbest_aic $\\mathbf { \\t",
        "id": 141,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 101,
        "text": "\\mathbf { \\varepsilon }$   \nbest_aic $\\mathbf { \\tau } = \\mathbf { \\tau }$ float(\"inf\")#正无穷   \nfor param in parameters_list: try: model $\\mathbf { \\tau } = \\mathbf { \\tau }$ ARMA(df_month.Price,order $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ (param[O],param[1])).fit() except ValueError: print('",
        "id": 142,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 101,
        "text": "ram[O],param[1])).fit() except ValueError: print('参数错误:',param) continue aic $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.aic if aic $\\rvert <$ best_aic: best_model $\\mathbf { \\tau } = \\mathbf { \\tau }$ model best_aic $\\mathbf { \\tau } = \\mathbf { \\tau }$ aic best_param $\\mathbf { \\tau } = \\mathbf { ",
        "id": 143,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 43,
        "text": "u }$ aic best_param $\\mathbf { \\tau } = \\mathbf { \\tau }$ param results.append([param,model.aic])   \nprint('最优模型:',best_model.summary()) ",
        "id": 144,
        "type": "text"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 145,
        "type": "table"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 146,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 147,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 95,
        "text": "#设置future_month，需要预测的时间date_list   \nfuture_month $= 3$   \nlast_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(df_month2.index[len(df_month2)-1])   \ndate_list = []   \nfor iin range(future_month): #计算下个月有多少天 year $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_month.year month $\\mathbf { \\tau }",
        "id": 148,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 113,
        "text": " { \\tau }$ last_month.year month $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_month.month if month $\\scriptstyle = = 1 2$ ： month $= 1$ $\\mathsf { y e a r } = \\mathsf { y e a r } + 1$ else: $\\mathsf { m o n t h } = \\mathsf { m o n t h } + 1$ next_month_days $\\mathbf { \\tau } = \\mathbf { \\tau }$ calend",
        "id": 149,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 77,
        "text": "_days $\\mathbf { \\tau } = \\mathbf { \\tau }$ calendar.monthrange(year,month)[1] #print(next_month_days) last_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_month $^ +$ timedelta(days $\\ c =$ next_month_days) date_list.append(last_month)   \nprint('date_list=',date_list) ",
        "id": 150,
        "type": "text"
      },
      {
        "page": 22,
        "length_tokens": 65,
        "text": "date_list $\\ c =$ [Timestamp('2020-04-30 00:00:00', freq='M'), Timestamp('2020-05- 31 00:00:00', freq='M'), Timestamp('2020-06-30 00:00:00', freq='M')] ",
        "id": 151,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 152,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 153,
        "type": "text"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image"
      },
      {
        "page": 24,
        "length_tokens": 21,
        "text": "案例：沪市指数预测 (ARMA) Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 155,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 82,
        "text": "#设置参数范围   \nps = range(0, 5)   \n${ \\tt q s } = { \\tt r a n g e } ( 0 , 5 )$   \n$\\mathsf { d } s = \\mathsf { r a n g e } ( 1 , 2 )$ #使用1阶差分   \nfor param in parameters_list: try: ",
        "id": 156,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 56,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ sm.tsa.statespace.SARIMAX(df_month.Price, order=(param[O],param[1],param[2]) enforce_stationarity=False, enforce_invertibility=False).fit() ",
        "id": 157,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 158,
        "type": "table"
      },
      {
        "page": 24,
        "length_tokens": 45,
        "text": "except ValueError: print('参数错误:',param) continue   \naic $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.aic   \nif aic $\\textless$ best_aic: ",
        "id": 159,
        "type": "text"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "#输出最优模型 print('最优模型:',best_model.summary()) ",
        "id": 160,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARIMA) ",
        "id": 161,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "Case:Shanghai Stock Index Forecast (ARIMA) ",
        "id": 162,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "#添加未来要预测的3个月",
        "id": 163,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 96,
        "text": "future $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame(index $\\mathop { : = }$ date_list, columns $\\ c =$ df_month.columnsdf_month2 $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.concat([df_month2, future])#get_prediction得到的是区间，使用predicted_meandf_month2['forecast'] $\\mathbf { \\tau } = \\mathbf { \\tau }$",
        "id": 164,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 39,
        "text": "['forecast'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ best_model.get_prediction(start $_ { = 0 }$ end=len(df_month2)).predicted_mean 二",
        "id": 165,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 29,
        "text": "W\\  \n#沪市指数预测结果显示  \nplt.figure(figsize=(30,7))_month2.Price.plot(label='实际指数')",
        "id": 166,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 167,
        "type": "image"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 168,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 49,
        "text": "df_month2.forecast.plot(color='r', $k = ^ { 1 } - 1$ ,labe $\\models \\vDash$ 预测指数\")  \nplt.legend()  \nplt.title('沪市指数（月）')",
        "id": 169,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "plt.xlabel('时间')plt.ylabel('指数')plt.show()",
        "id": 170,
        "type": "text"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 171,
        "type": "image"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "资金流入流出",
        "id": 172,
        "type": "text"
      },
      {
        "page": 26,
        "length_tokens": 14,
        "text": "你能对业务量突然上涨/下降的情况进行预测么",
        "id": 173,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 174,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 175,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "CASE：资金流入流出预测 ",
        "id": 176,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 20,
        "text": ":https://tianchi.aliyun.com/competition/entrance/231573/infor mation ",
        "id": 177,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 34,
        "text": "·数据集一共包括4张表：用户基本信息数据、用户申购赎回数据、收益率表和银行间拆借利率表",
        "id": 178,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 50,
        "text": "2.8万用户，284万行为数据，294天拆解利率，427天收益率  \n2013-07-01到2014-08-31，预测2014年9月的申购和赎回",
        "id": 179,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 29,
        "text": "Thinking：如果能对未来30天的资金流入流出预测准确， 对货币类理财产品有怎样的价值？",
        "id": 180,
        "type": "text"
      },
      {
        "page": 27,
        "length_tokens": 160,
        "text": "1e8 1.00 0.75 .l. ld. 0.50   \nrerpeeelt 0.25 0.00 -0.25 -0.50 -0.75 -1.00 1 2 3 4 5 6 7 8 9 1011121314 151617181920 21 2223 24 2526 27 282930 31 date 1e8 10 1 L山   \neetett 550015 中 -1.0 1 2 3 4 5 6 7 8 9 101112131415161718192021 22 2324 252627 28 2930 31 date ",
        "id": 181,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 182,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 183,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "·用户信息表，user_profile_table",
        "id": 184,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 42,
        "text": "总共随机抽取了约3万用户，主要包含了用户的性别、城市和星座，其中部分用户在2014年9月份第一次出现，这些用户只在测试数据中",
        "id": 185,
        "type": "text"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 186,
        "type": "table"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 187,
        "type": "image"
      },
      {
        "page": 29,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 188,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "CASE:Prediction of capital inflow and outflow 用户申购赎回数据表user_balance_table ",
        "id": 189,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 190,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 82,
        "text": "·数据包括了20130701至20140831申购和赎回信息，字段包括用户操作时间和操作记录，其中操作记录包括申购和赎回两个部分  \n·金额的单位是分，即0.01元  \n如果用户今日消费总量为o，即consume_amt=0，同时四个category字段为空  \n·数据经过了脱敏，同时保证了：",
        "id": 191,
        "type": "text"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 192,
        "type": "table"
      },
      {
        "page": 29,
        "length_tokens": 35,
        "text": "今日余额 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 昨日余额 $+$ 今日申购-今日赎回，不会出现负值",
        "id": 193,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 194,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 195,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "收益率表mfd_day_share_interest ",
        "id": 196,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 14,
        "text": "·收益表为余额宝在14个月内的收益率表",
        "id": 197,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 198,
        "type": "table"
      },
      {
        "page": 30,
        "length_tokens": 15,
        "text": "上海银行间同业拆放利率表mfd_bank_shibor",
        "id": 199,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 27,
        "text": "·银行间拆借利率表是14个月期间银行之间的拆借利率（皆为年化利率）",
        "id": 200,
        "type": "text"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 201,
        "type": "table"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 202,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 11,
        "text": "CASE: Prediction of capital inflow and outflow ",
        "id": 203,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "收益计算方式",
        "id": 204,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 14,
        "text": "·主要基于实际余额宝收益计算方法，进行了简化",
        "id": 205,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 35,
        "text": "1）收益计算的时间不再是会计日，而是自然日，以o点为分隔（0点之前算昨天，0点之后算今天）",
        "id": 206,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 86,
        "text": "2）收益的显示时间，即实际将第一份收益打入用户账户的时间，以周一转入周三显示为例，如果用户在周一存入10000元，即1000000分，那么这笔金额是周一确认，周二是开始产生收益，在周三将周二产生的收益打入到用户的账户中，此时用户的账户中显示的是1000110分",
        "id": 207,
        "type": "text"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 208,
        "type": "table"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 209,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 210,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 7,
        "text": "提交结果表tc_comp_predict_table",
        "id": 211,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 212,
        "type": "table"
      },
      {
        "page": 32,
        "length_tokens": 45,
        "text": "每一行数据是一天对申购、赎回总额的预测值，输出2014年9月每天的预测，共30行。purchase和redeem 都是金额数据，精确到分",
        "id": 213,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 214,
        "type": "table"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "评估指标：",
        "id": 215,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 50,
        "text": "1）计算测试集上每天的申购及赎回与实际的误差每日申购相对误差(真实值 $z _ { i }$ ，预则值为 $z _ { i } )$ ：",
        "id": 216,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 44,
        "text": "$$\n\\mathrm { P u r c h a s e } _ { i } = \\frac { | z _ { i } - z _ { i } | } { z _ { i } }\n$$",
        "id": 217,
        "type": "equation"
      },
      {
        "page": 32,
        "length_tokens": 18,
        "text": "每日赎回相对误差（真实值y：，预测值为）：",
        "id": 218,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 62,
        "text": "$$\n\\mathrm { { R e d e a m } } _ { i } = \\frac { | { y } _ { i } - \\hat { y ^ { \\prime } } _ { i } | } { { y ^ { \\prime } } _ { i } }\n$$",
        "id": 219,
        "type": "equation"
      },
      {
        "page": 32,
        "length_tokens": 56,
        "text": "2）误差与得分之间的计算公式不公布，但保证单调递减第i天的申购误差Purchasei=0，这一天的得分为10分；当Purchasei $> 0 . 3$ ，得分为0",
        "id": 220,
        "type": "text"
      },
      {
        "page": 32,
        "length_tokens": 49,
        "text": "3)总积分 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 申购预测得分 $\\ast 4 5 \\% +$ 赎回预测得分 $45 5 \\%$ ",
        "id": 221,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 222,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 223,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 5,
        "text": "·数据探索EDA ",
        "id": 224,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "1）每日总购买与赎回量的时间序列图",
        "id": 225,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 88,
        "text": "e9 Purchase and Redeem from 7-13 to 9-14 1.0 purchase redeem 0.8 0.6 junou 0.4 0.2 ANW 0.0 2013-07 2013-09 2013-11 2014-01 2014-03 2014-05 2014-07 2014-09 Time ",
        "id": 226,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 24,
        "text": "2）STL分解，将时序图拆分为：Trend $^ +$ Seasonal + Residual ",
        "id": 227,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 35,
        "text": "·方法1：采用时间序列进行预测Step1，平稳性检测adfullerStep2，采用ARIMA模型Step3，模型训练集与预测",
        "id": 228,
        "type": "text"
      },
      {
        "page": 33,
        "length_tokens": 41,
        "text": "·方法2：基于时序规则的挖掘Step1，获得周期因子（weekday）Step2，计算baseStep3，使用base\\*周期因子进行预测",
        "id": 229,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 230,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 46,
        "text": "CASE:Prediction of capital inflow and outflowread_csv中的日期格式解析pd.read_csv('user_balance_table.csv'，parse_dates $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['report_date'])",
        "id": 231,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 232,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 233,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 11,
        "text": "设置parsedates参数，将时间字符串转换为日期格式",
        "id": 234,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "DataFrame.diff()函数",
        "id": 235,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 19,
        "text": "用来将数据进行某种移动之后与原数据进行比较得出的差异数据",
        "id": 236,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 50,
        "text": "DataFrame.shift()函数可以把数据移动指定的位数periods=-1往上移动或往左移动periods ${ \\tt \\Psi } = 1 { \\tt \\Psi }$ 往下移动或往右移动",
        "id": 237,
        "type": "text"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 238,
        "type": "image"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 239,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 18,
        "text": "CASE:Prediction of capital inflow and outflow平稳性检测（ADF检测）：",
        "id": 240,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 241,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 56,
        "text": "·在使用时间序列模型时（比如ARMA、ARIMA），需要时间序列是平稳的，所以第一步都需要进行平稳性检验，常用的统计检验方法为ADF检验（也称为单位根检验）",
        "id": 242,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 27,
        "text": "·ADF检验，就是判断序列是否存在单位根，如果序列平稳，就不存在单位根，否则，就会存在单位根",
        "id": 243,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 77,
        "text": "·ADF检验的HO假设就是存在单位根，如果得到的显著性检验统计量小于三个置信度 $( 1 0 \\% , 5 \\% , 1 \\% )$ ，则对应有（$90 \\%$ ，95， $9 9 \\%$ ）的把握来拒绝原假设",
        "id": 244,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 24,
        "text": "from statsmodels.tsa.stattools import adfuller t=adfuller(df_p['total_purchase_amt']) ",
        "id": 245,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 246,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 85,
        "text": "(-1.5898802926313507, 0.4886749751375928, 18, 408, {'1%': -3.446479704252724， '5%': -2.8686500930967354, $\" 1 0 \\% ^ { \\prime }$ :-2.5705574627547096}, 15960.28197033403)",
        "id": 247,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "输出结果依次为：",
        "id": 248,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 41,
        "text": "t-statistic, p-value, usedlag, nobscritical-value：测试统计数据的临界值为 $1 \\%$ ， $5 \\%$ 和 $10 \\%$ ",
        "id": 249,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "AIC ",
        "id": 250,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "如何确定该序列能否平稳：",
        "id": 251,
        "type": "text"
      },
      {
        "page": 35,
        "length_tokens": 122,
        "text": "主要看 $1 \\%$ 、%5、%10不同程度拒绝原假设的统计值和ADFTestresult的比较，如果ADFTestresult同时小于 $1 \\%$ 、 $5 \\%$ 、 $10 \\%$ 即说明非常好地拒绝原假设（原假设是不稳定的，因此证明是平稳的）这里，adf结果为-1.58988，大于三个level的统计值，无法拒绝原假设（原假设是不平稳的），需要进行一阶差分后，再进行检验",
        "id": 252,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 253,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 254,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "时间序列预测",
        "id": 255,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 57,
        "text": "1）针对购买purchase建模 ARIMA(purchase,order=(7,1,5)).fit() model.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 256,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 79,
        "text": "2）针对赎回redeem建模 ARIMA(redeem,order $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ (7,1,5)).fit() model.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 257,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "Thinking：模型预测准确性如何？",
        "id": 258,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 40,
        "text": "1）过于简单，实际情况并不是  \n2）周一到周日的特征规律没有利用  \n3）没有考虑特殊时间，比如节日，利率波动节点",
        "id": 259,
        "type": "text"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 260,
        "type": "image"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 261,
        "type": "image"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 262,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 263,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 5,
        "text": "时间序列规则：",
        "id": 264,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 22,
        "text": "·选择特征可以用简单的统计量来作为特征，从中提取出有用的信息",
        "id": 265,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 57,
        "text": "1）中位数：居于中间位置的数，较为稳健  \n2）均值：当分布符合正态分布时，可以代表整体特征  \n3）临近数据：离待测数据越近的数据对其影响越大",
        "id": 266,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 267,
        "type": "text"
      },
      {
        "page": 37,
        "length_tokens": 63,
        "text": "·很多数据都具有明显的周期性，比如客流量，支付等  \n·需要确定周期长度，比如一周7天，一个月30天，结合STL分解(Seasonal andTrend decomposition)观察周期变化，缺点是没有考虑到节假日、突发事件等情况",
        "id": 268,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 269,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 270,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 271,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 18,
        "text": "·假设给任务是根据前三周的数据预测第四周每天的客流量",
        "id": 272,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 273,
        "type": "table"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 274,
        "type": "image"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "Step1，获得周期因子（weekday）",
        "id": 275,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 12,
        "text": "获得星期几的均值，再除以整体均值",
        "id": 276,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 277,
        "type": "table"
      },
      {
        "page": 38,
        "length_tokens": 45,
        "text": "Step2，计算baseStep3，使用base\\*周期因子进行预测假设 $\\mathtt { b a s e = 1 0 0 }$ ，可以得到第四周的客流量",
        "id": 278,
        "type": "text"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 279,
        "type": "table"
      },
      {
        "page": 39,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 280,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 18,
        "text": "CASE:Prediction of capital inflow and outflow预测下个月每一天的情况：",
        "id": 281,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 282,
        "type": "text"
      },
      {
        "page": 39,
        "length_tokens": 132,
        "text": "·如果想预测下个月每天的流量情况，可以基于每月的规律（1-30号的平均流量）\\*周期因子  \nStep1，计算周期因子（weekday）  \nStep2，计算每日（1号-30号）均值，即1号的平均流量，2号的平均流量...  \nStep3，统计星期几（weekday）在每日（day）出现的频次Step4，基于周期因子获得加权均值，得到每日的base（去掉周期因子的影响）  \nStep5，根据每日的base和周期因子进行预测",
        "id": 283,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 19,
        "text": "案例：资金流入流出预测 CASE:Prediction of capital inflow and outflow ",
        "id": 284,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 68,
        "text": "观察特殊日期清明节，2014年4月5-7日五一，2014年5月1-3日六一，2014年5月31-6月2日中秋节：2014年9月6-8日国庆节：2014年10月1-7日",
        "id": 285,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "2014-04-11 ",
        "id": 286,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 208,
        "text": "2014年 C 4月 中 假期安排 返回今天二 三 四 五 六 日困 休31 1 2 3 4 5 6初一 愚人节 初三 初四 初五 清明节 初七休7 8 9 10 11 12 13初八 初九 初十 十 十二 十三 十四14 15 16 17 18 19 20十五 全民国. 十七 十八 十九 二十 谷雨21 22 23 24 25 26 27廿二 地球日 廿四 廿五 廿六 廿七 廿八休 休 休 班28 29 30 1 2 3 4廿九 初一 初二 劳动节 初四 初五 五四青..5 6 7 8 9 10 11立夏 初八 初九 初十 十一 十二 母亲节",
        "id": 287,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 2,
        "text": "11 ",
        "id": 288,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 18,
        "text": "三月十二甲午年 [马年】戊辰月 壬子日",
        "id": 289,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "宜嫁娅壮π蚀 ",
        "id": 291,
        "type": "text"
      },
      {
        "page": 40,
        "length_tokens": 14,
        "text": "忌亚烷妹断垛竭 开张 ",
        "id": 292,
        "type": "text"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 293,
        "type": "text"
      }
    ]
  }
}
{
  "metainfo": {
    "sha1": "Aitraining",
    "company_name": "AI应用开发",
    "file_names": [
      "1.1-AI大模型原理与DeepSeek使用",
      "1.2-API使用",
      "10-Function Calling与协作",
      "11-MCP与A2A的应用",
      "12-Agent智能体系统的设计与应用",
      "13-视觉大模型与多模态理解",
      "14.1-Fine-tuning技术与大模型优化",
      "14.2-金融垂类大模型（智能客服）",
      "15.1-Coze工作原理与应用实例",
      "16.1-Coze进阶实战与插件开发",
      "17.1-Dify部署与应用",
      "17.2-DeepSeek-R1-0528",
      "18.1-分析式AI基础",
      "19.1-不同领域的AI算法",
      "2.1-DeepSeek使用",
      "2.2-提示词工程",
      "20.1-机器学习神器",
      "21.1-时间序列分析",
      "22.1-时间序列AI大赛",
      "23.1-项目实战：企业知识库",
      "24.1-项目实战：交互式BI报表",
      "25.1-项目实战：AI运营助手",
      "26.1-项目实战：AI搜索类应用",
      "3.0【课前准备】AI编程工具安装",
      "3.1-Cursor编程",
      "3.2【补充】CASE-病床使用情况",
      "4.1-Cursor数据可视化与洞察",
      "4.2-CASE-客户续保预测",
      "5-Embedding与向量数据库",
      "6.1-RAG技术与应用",
      "6.2-NotebookLM使用",
      "7-RAG高级技术与实践",
      "8.1-Text2SQL：自助式数据报表开发",
      "8.2-vanna使用",
      "9-LangChain：多任务应用开发"
    ],
    "pages_amount": 1681,
    "text_blocks_amount": 9680,
    "tables_amount": 235,
    "pictures_amount": 0,
    "equations_amount": 48,
    "footnotes_amount": 0
  },
  "content": {
    "chunks": [
      {
        "page": 1,
        "length_tokens": 9,
        "text": "Al大模型原理与DeepSeek使用",
        "id": 0,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "和计算机、算法相关",
        "id": 1,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 37,
        "text": "（10岁，清华计算机博士，NOI，ACM比赛，ACM，IEEE，中国人工智能协会，阿里云MVP，CCF专委）",
        "id": 2,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "和培训、 企业服务相关",
        "id": 3,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 155,
        "text": "(专栏付费订阅人数超过17万，企业客户包括：蚂蚁金服，美的，汽车之家，上汽大众，晶科能源，航天信息，中国银行，中国银联，花旗银行，汇丰银行，杭州银行，泰隆银行，中原银行，长沙银行，渤海银行，平安银行，平安保险，平安科技，阳光保险，兴业银行，兴业数金，上海银科，尚诚金融，嘉银金科，马上金融，中泰证券，富达基金，大恒集团，华润集团，中国外汇交易中心，联通软研院，梅赛德斯奔驰，雀巢，麦当劳，西门子等)",
        "id": 4,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 5,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 3,
        "length_tokens": 2,
        "text": "学习方法",
        "id": 6,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 3,
        "length_tokens": 13,
        "text": "· Thinking: behind the theory,original from the real problem ",
        "id": 7,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 3,
        "length_tokens": 12,
        "text": "·Action: solve problems by tools,present the results ",
        "id": 8,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 9,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 9,
        "text": "Al大模型原理与DeepSeek使用",
        "id": 10,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 61,
        "text": "AIGC发展：从GPT1到GPT4AIGC的表现与优势AIGC的通用能力应用·大模型API使用CASE-情感分析-QwenCASE-天气Function-QwenCASE-表格提取-QwenCASE-运维事件处置-Qwen",
        "id": 11,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 48,
        "text": "·DeepSeek的创新   \nCASE：小球碰撞试验（Cursor $^ +$ DeepSeek-R1)   \nDeepSeek私有化部署选择   \nOllama部署DeepSeek-R1   \nAPI调用DeepSeek ",
        "id": 12,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "什么是AI",
        "id": 13,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 120,
        "text": "AI的核心目标是让机器能够执行通常需要人类智能的任务，例如语言理解、图像识别、复杂问题解决等·早期阶段：以规则为基础的专家系统，依赖预设的逻辑和规则·机器学习时代：通过数据训练模型，使机器能够从数据中学习规律。·深度学习时代：利用神经网络模拟人脑的复杂结构，处理更复杂的任务。·大模型时代：以大规模数据和算力为基础，构建通用性强、性能卓越的AI模型",
        "id": 14,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 15,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "AI的分类",
        "id": 16,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "分析式AI",
        "id": 17,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "生成式AI",
        "id": 18,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 54,
        "text": "，也称为判别式AI，其核心任务是对已有数据进行分类、预测或决策。·优势在于其高精度和高效性，但其局限性在于仅能处理已有数据的模式，无法创造新内容。",
        "id": 19,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 39,
        "text": "·专注于创造新内容，例如文本、图像、音频等。突破在于其创造性和灵活性，但也面临数据隐私、版权保护等挑战",
        "id": 20,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "大语言模型",
        "id": 21,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 29,
        "text": "莫型是一种通用自然语言生成模型，使用大量预料数据训练，以实现生成文本、回答问题、对话生成等",
        "id": 22,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 2,
        "text": "基本能力",
        "id": 23,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 29,
        "text": "语言生成上下文学习世界知识\"超”能力响应人类指令泛化到没有见过的任务代码生成和代码理解",
        "id": 24,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "从GPT1到GPT4",
        "id": 27,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 9,
        "text": "GPT-2(15亿参数) ",
        "id": 28,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 29,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 16,
        "text": "ChatGPT的“超能力”是由InstructGPT演化而来的",
        "id": 30,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "ChatGPT是如何训练出来的？",
        "id": 31,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 33,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "ChatGPT是如何训练出来的？",
        "id": 34,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 22,
        "text": "用排序任务代替打分任务，更容易让标注员给出统一的标注结果 ",
        "id": 36,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "RankList标注平台",
        "id": 37,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "用于生成模型生成RankList的标注。",
        "id": 38,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "标注思路参考自InstructGPT。",
        "id": 39,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "RLHF更多介绍：想训练ChatGPT?..",
        "id": 40,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "Model Config ",
        "id": 41,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "当前标注配置（可在源码中修改）：",
        "id": 42,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 101,
        "text": "L\"model_name\":\"uer/gpt2-chinese-cluecorpussmall\"\"device\":\"cuda:0\"\"dataset_file\":\"data/human_labeled/total_dataset.t\"rank_list_len\":4\"max_gen_seq_len\":40\"random_prompts\":[0：\"今天我去了\"1：\"这部电影很\"2：\"刚收到货，感觉\"3：\"这部电影很\"4：\"说实话，真的很\"5：“这次购物总的来说体验很\"",
        "id": 43,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "SettingPrompts ",
        "id": 44,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "随机prompt ",
        "id": 45,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "prompt: ",
        "id": 46,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "今天早晨我去了",
        "id": 47,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 48,
        "type": "table",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 214,
        "text": "句子1排名 句子2排名 句子3排名 句子4排名4 3 2今天早晨我去了，一大早出来 今天早晨我去了车站，等她下 今天早晨我去了教堂，那里是 今天早晨我去了美国，想和你时还是一位穿着灰蓝色t恤 面等车，我看到她手里拎着 我的大学。你从我们学校走 出去玩。我先去了美国，想的老奶奶。这时门口一个白 个小提着小箱子在走，大家 出走到我的课堂，我仿佛看 去了之后，又打电话问他的发苍苍 都不会 到了我 情况时Rank ResultsRank 1: Rank 2: Rank 3: Rank 4:今天早晨我去了教堂，那里是今天早晨我去了美国，想和你 今天早晨我去了车站，等她下今天早晨我去了，一大早出来我的大学",
        "id": 49,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 133,
        "text": "教堂，那里是今天早晨我去了美国，想和你 今天早晨我去了车站，等她下今天早晨我去了，一大早出来我的大学。你从我们学校走 出去玩。我先去了美国，想面等车，我看到她手里拎着时还是一位穿着灰蓝色t恤出走到我的课堂，我仿佛看 出走到我的课堂，我仿佛看去了之后，又打电话问他的个小提着小箱子在走，大家的老奶奶。这时门口一个白到了我 情况时 都不会 发苍苍",
        "id": 50,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "存储当前排序 ",
        "id": 51,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "ChatGPT的优势 ",
        "id": 52,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 53,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 54,
        "type": "table",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "ChatGPT的表现 ",
        "id": 56,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "让亚里士多德写浦发银行信用卡的使用介绍",
        "id": 57,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "使用Python连接MySQL，查询customers表的样例",
        "id": 58,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "帮我写一篇SKI神仙水的试用报告",
        "id": 59,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 48,
        "text": "以亚里士多德的口吻写一篇浦发银行信用卡使用的介绍亲爱的朋友们，我是亚里士多德，今天我来向大家介绍一下浦发银行信用卡的使用方法。",
        "id": 60,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 61,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 96,
        "text": "首先，信用卡是一种非常方便的工具，可以在您购物时提供资金支持。浦发银行信用卡可以帮助您实现定期还款和一次性还款两种方式，让您自由选择。借助信用卡，您可以消费后再次在还款日还清相关费用。此外，浦发银行信用卡还为您提供了灵活的分期付款方案，让您能够轻松地管理支付金额及账单日。",
        "id": 62,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 57,
        "text": "其次，我们为您准备了专业服务团队，您可以通过在线客服、电话客服等方式获得快速便捷的服务。浦发银行信用卡还可以为您提供多种特色福利，如免费旅游保险、购物的优惠券、机场贵宾室等。",
        "id": 63,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 59,
        "text": "最后，我们强调，“用信用卡，要懂得控制”。在使用信用卡时，请确保自己的还款能力，避免因欠款而导致信用卡的透支。记住，信用卡是一种有力的支付工具，同时也需要您的理智和谨慎操作。",
        "id": 64,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 50,
        "text": "总之，浦发银行信用卡是一种非常方便的消费工具，希望我们的专业团队和贴心福利能够让您享受到更多的便利。如果您还有其他任何问题或需求，请随时与我们联系。感谢您的阅读。",
        "id": 65,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 19,
        "text": "用不同语言说“浦发银行赞助了2023上海半程马拉松",
        "id": 66,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 127,
        "text": "用不同语言说“浦发银行赞助了2023上海半程马拉松中文：浦发银行赞助了2023上海半程马拉松。英文：BankofShanghaisponsoredthe2023ShanghaiHalfMarathon.法语：Banquede Shanghaiasponsorisélesemi-marathonde Shanghai2023.德语：Die BankofShanghaisponserteden HalbmarathonvonShanghai2023.西班牙语：El BancodeShanghaipatrocinoelMedioMaratondeShanghai2023日语：浦凳銀行2023年上海ン",
        "id": 67,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 26,
        "text": "trocinoelMedioMaratondeShanghai2023日语：浦凳銀行2023年上海ンサまた。：",
        "id": 68,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 69,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 20,
        "text": "好的，以下是一个使用Python 连接MySQL数据库并查询customers表的样例：",
        "id": 70,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "importmysql.connector ",
        "id": 71,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 61,
        "text": "#创建数据库连接   \nmydb=mysql.connector.connect( host=\"localhost\",   \nuser=\"root\",   \npassword=\"password\", database=\"mydatabase\"   \n#创建游标   \nmycursor=mydb.cursor(   \n#执行SQL查询语句   \nmycursor.execute(\"SELECT\\*FROMcustomers\") ",
        "id": 72,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 73,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "#获取查询结果 myresult =mycursor.fetchall() ",
        "id": 74,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 13,
        "text": "输出结果   \nforxinmyresult:   \nprint(x) ",
        "id": 75,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "用Python3.7编写一个爬虫代码",
        "id": 76,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "用Python3.7编写一个爬虫代码",
        "id": 77,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 31,
        "text": "好的，我给你提供一个简单的爬虫代码样例，可以用来爬取一个网站中所有的图片链接。代码如下：",
        "id": 78,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "复制代码",
        "id": 79,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": "import requests   \nfrom bs4 import BeautifulSoup   \nurl = \"https://unsplash.com/\\*   \nresp = requests.get(url)   \nsoup=BeautifulSoup(resp.text,'html.parser'   \nfor img insoup.find_all(‘img'): print(img['src']) ",
        "id": 80,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 40,
        "text": "这个简单的代码可以爬取Unsplash网站上的所有图片链接，并打印在控制台上。当然，你可以根据自己的需求，修改代码来爬取其他网站的不同信息。",
        "id": 81,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 60,
        "text": "在使用Python编写爬虫时，需要了解相关的库和模块，如requests、beautifulsoup4、selenium、re等，并且要遵循爬虫的规范和友好协议，以免侵犯他人利益或对网站服务器造成不必要的负担。",
        "id": 82,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "好的，以下是一篇SK-I神仙水的试用报告：",
        "id": 83,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 61,
        "text": "作为一款备受欢迎的美容产品，SK-I神仙水被誉为“神奇“的肌肤转换液，在不断地挑战着人们对于肌肤护理的认知。所以我非常期待能够亲身体验这款产品，并且分享我的试用感受。",
        "id": 84,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 84,
        "text": "首先，我想说的是神仙水真的很好用。我使用它的时间不长，但觉得它能给肌肤带来非常明显的改变。它的质地非常轻盈，不油腻，很容易吸收。每次使用后，我的脸都会感到更加清爽和滋润，同时我也发现了细小的皱纹和色斑逐渐减少了。",
        "id": 85,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 59,
        "text": "其次，我喜欢神仙水的味道。有些护肤品传统的药物气味总让我感到不舒服，而神仙水却闻起来非常清新，有一种淡淡的香味，让我每次使用它的时候都感到舒适和放松。",
        "id": 86,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": "我还很喜欢神仙水的包装。它的瓶子很漂亮，简洁而富有设计感，给人一种高档、优雅的感觉。并且由于使用方法简单，瓶口也非常方便，使用时不会浪费很多。",
        "id": 87,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 64,
        "text": "最后，我觉得神仙水的价格值得。虽然价格比一些大众化的护肤品要贵一些，但是和市面上其他高端护肤品价格相比，它的价格并不算过份。而且，它的确能够带来肌肤的巨大变化，所以还是很值得购买的。",
        "id": 88,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": "总的来说，我的试用体验非常愉快，神仙水真的对我的肌肤产生了明显的积极影响，让我愿意再次购买并继续使用。如果您正在寻找一款有效护肤品，我强烈推荐SK-I神仙水。",
        "id": 89,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 3,
        "text": "代码阅读理解",
        "id": 90,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 89,
        "text": "# apply template matching to find the template in the image   \nresult $= c \\mathsf { v } 2$ matchTemplate(resized,card,cv2.TM_CCOEFF_NORMED)   \n(_,maxVal, $\\_$ maxLoc) $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ cv2.minMaxLoc(result)   \n# if we have found a new maximum correlation value, then update  ",
        "id": 91,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 61,
        "text": "und a new maximum correlation value, then update   \n# the bookkeeping variable   \nif found is None or maxVal $>$ found[0]:   \nfound $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ (maxVal, maxLoc,r,scle2)   \nreturn(found) ",
        "id": 92,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 47,
        "text": "这是一个图像匹配算法的代码实现，通过输入一张待匹配的参考卡片和一组搜索参数，返回在原图像中找到的最佳匹配。以下是代码的逐行解释：",
        "id": 93,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 96,
        "text": "def paralell_search(search_scale，degree，gray，H_card，W_card，card)::定义一个函数，该函数使用并行计算方法对图像进行搜索。found $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ None：初始化一个变量found，用于存储匹配到的最佳结果。if degree isnot0:：如果给定的搜索角度degree不为零，则将待匹配图像进行旋转操",
        "id": 94,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "应用场景：AI客服 ",
        "id": 95,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 61,
        "text": "假如你是一名银行客服人员，我是访问你们网站的顾客，你的目的是获取我的电话号码。但是为了获取电话号码，你要帮我解决一些我提出的问题你觉得解决了问题之后，你想他要电话号码，这样成功率会比较高。现在让我们开始吧",
        "id": 96,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 61,
        "text": "假如你是一名银行客服人员，我是访问你们网站的顾客，你的目的是获取我的电话号码。但是为了获取电话号码，你要帮我解决一些我提出的问题，你觉得解决了问题之后，你想他要电话号码，这样成功率会比较高。现在让我们开始吧",
        "id": 97,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "C ",
        "id": 98,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 34,
        "text": "非常好的想法，为了更好地帮助您解决问题，我需要了解您遇到了哪些具体问题。可以告诉我您目前遇到的问题是什么吗？",
        "id": 99,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "我想借10万人民币",
        "id": 100,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "H ",
        "id": 101,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 96,
        "text": "非常感谢您对我们银行的信赖与支持。在申请借款时，我们需要了解您的具体情况，如收入情况、工作稳定性、信用记录等。请问您是否已经有我行的账号或信用卡？如果有，您可以登录网上银行或者拨打客服热线进行咨询。如果没有，我们也可以帮您开通账户并提供更多信息。同时，您也可以向我提出更多的问题，以便我们更好地帮助您。",
        "id": 102,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "收入稳定，每个月5万，信用记录良好",
        "id": 103,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "GPT-3.5 ",
        "id": 104,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 85,
        "text": "感谢您提供的信息。根据您的描述，您似乎是一位收入稳定、信用记录良好的客户。在这种情况下，如果您需要10万人民币的贷款，我们可以为您提供多种选择。最快速的途径是通过我们的网上银行进行申请。您可以登录网银，选择\"贷款申请\"并填写相应的信息。我们的工作人员将在提交申请后尽快审核并通知您。",
        "id": 105,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 78,
        "text": "当然，如果您更愿意与我们的客服人员进行一对一的交流，了解更详细的贷款方式和利率，您可以拨打我们的客服热线，我们的工作人员将会为您提供更加个性化和专业的服务，并在更短的时间内帮助您成功申请到贷款。需要您提供您的电话号码，以便我们方便地与您联系。",
        "id": 106,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "GPT-3.5 ",
        "id": 107,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 15,
        "text": "Thinking: ChatGPT作为银行客服， 你会打几分？",
        "id": 108,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "以前的智能客服：关键词匹配",
        "id": 109,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 17,
        "text": "ChatGPT做智能客服：懂客户，懂指令，善于沟通",
        "id": 110,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "应用场景：AI写代码",
        "id": 111,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 44,
        "text": "让生成式AI编写反欺诈分析和预测代码：告诉他 train.csv,test.csv，需要处理的流程让生成式AI告诉我们在反欺诈预测中，有哪些特征是关键的？",
        "id": 112,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 113,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 47,
        "text": "import lightgbm as lgb import matplotlib.pyplot as plt #训练LightGBM模型（使用示例中的训练集和目标列） model = lgb.train(params，train_dataset，num_boost_round=100) ",
        "id": 114,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 115,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "# 获取特征重要性 feature_importance = model.feature_importance() feature_names = model.feature_name() ",
        "id": 116,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 49,
        "text": "# 创建特征重要性的数据框 feature_importance_df = pd.DataFrame({'Feature': feature_names, 'Importance # 按照重要性降序排序 feature_importance_df = feature_importance_df.sort_values(by='Importance' ",
        "id": 117,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 118,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "# 可视化特征重要性",
        "id": 119,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 51,
        "text": "plt.figure(figsize=(1O，6))   \nplt.barh(feature_importance_df['Feature']，feature_importance_df['Importance   \nplt.xlabel('Importance')   \nplt.ylabel('Feature')   \nplt.title('Feature Importance')   \nplt.show() ",
        "id": 120,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 121,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "Case: 车险反欺诈预测 ",
        "id": 122,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 24,
        "text": "Case：保险反欺诈预测 https://www.kaggle.com/c/fraud-detection-ininsurance-claims ",
        "id": 123,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 124,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 29,
        "text": "保险公司向你提供了之前客户索赔的车险数据，希望你能开发模型帮助他们预测哪些索赔是欺诈行为",
        "id": 125,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 18,
        "text": "训练集：train.csv 700条 测试集：test.csv300条 ",
        "id": 126,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 102,
        "text": "字段 说明 months_as_customer 成为客户的时长，以月为单位 age 年龄 policy_number 保险编号 policy_bind_date 保险绑定日期 policy_state 上保险所在地区 policy_csl 组合单一限制CombinedSingle Limit policy_deductable 保险扣除额 policy_annual_premium 每年的保费 umbrella_limit 保险责任上限 insured_zip 被保人邮编 insured_sex 被保人姓名：FEMALE或者MALE insured_education_level 被保人学历",
        "id": 128,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 56,
        "text": "x 被保人姓名：FEMALE或者MALE insured_education_level 被保人学历 linsured_occupation 被保人职业 insured_hobbies 被保人兴趣爱好 insured_relationship 被保人关系 capital-gains 资本收益 capital-loss 资本损失 ",
        "id": 129,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 10,
        "text": "Case: 车险反欺诈预测 ",
        "id": 130,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "table",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 132,
        "type": "table",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "评测标准：AUC",
        "id": 133,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "TPRate ",
        "id": 134,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 135,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "应用场景：AI写代码",
        "id": 136,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "Thinking：为什么ChatGPT会写代码?",
        "id": 137,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 53,
        "text": "·Codex基于GPT-3使用code数据进行了Fine-Tuning，它经过了自然语言和几十亿的代码的训练·学习的语言包括：JavaScript,Go,Perl, PHP,Ruby,Swift,TypeScript, SQL, Shell",
        "id": 138,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 17,
        "text": "不仅是代码， 其他工作也是类似 (比如写方案） 写文章)",
        "id": 139,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "ChatGPT写代码的不足：",
        "id": 140,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 35,
        "text": "·很难一次完成你的需求，通常需要交互9-10次能达到你的期望  \n需要Manager了解自己的需求，并指出ChatGPT作业的不足",
        "id": 141,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "ChatGPT写代码的优势：",
        "id": 142,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 51,
        "text": "·效率很高，只要你给出具体的指令，1秒后出结果·代码质量比一般人好（很博学，各种任务都能完成有代码注释，可以给你将每一个代码模块的解释)",
        "id": 143,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "GPT Moment ",
        "id": 144,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "机器语言",
        "id": 145,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "汇编语言",
        "id": 146,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "高级语言",
        "id": 147,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "自然语言",
        "id": 148,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 130,
        "text": "01100010100001000010101  \n10101101010100000011101  \n10000001010101001110001  \n10000001110'WannaCrypt  \n00101000000001010101001  \n10101010000001110110010  \nAX=1000 BX=0100 CX=000C DX=0000 SP=FFFA  \nDS=075A ES=075A SS=0769 CS=0000 IP=020F  \n9000:020F8CC8 MOU AX,CS  \n-u 0:020f  \n9000:020F8CC8 MOU AX,CS",
        "id": 149,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 149,
        "text": "C8 MOU AX,CS  \n-u 0:020f  \n9000:020F8CC8 MOU AX,CS  \n0000:02118ED8 MOU DS,AX  \n0000:0213BE0202 MOU SI,0202  \n0000:0216 B800B8 MOV AX,B800  \n0000:02198EC0 MOV ES,AX  \n0000:021BBFC807 MOV DI,07C8  \n0000:021EB90D00 MOV CX,000D  \n0000：0221 8A04 MOV AL,[SI]  \n9000:022326 ES:  \n9000：0224 8805 MOU [DI],AL ",
        "id": 150,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 74,
        "text": "I]  \n9000:022326 ES:  \n9000：0224 8805 MOU [DI],AL  \n0000:022646 INC SI  \n0000：022783C702 ADD DI,+02  \n0000:022AE2F5 LOOP 0221  \n0000:022C B8004C MOV AX,4C00",
        "id": 151,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 152,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 44,
        "text": "intx[SIZE],i,max,min; printf(\"Enter10 integers:\\n\"); for(i=0;i<SIZE;i++) printf(\"%d:\",i+1); scanf(\"%d\",&x[i]); 1 ",
        "id": 153,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "Thinking: GPT出现的意义是什么？",
        "id": 155,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 16,
        "text": "让人们通过自然语言可以工作，Prompt Engineering是一种新的工作方式",
        "id": 156,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 18,
        "text": "Thinking: 除了用自然语言编程 GPT还能解锁我们的什么能力？",
        "id": 157,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "AI绘画，做动画，等专业性技能",
        "id": 158,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "Thinking：每个人都能抓住这个机会么？",
        "id": 159,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "使用自然语言编程的本质是解决问题",
        "id": 160,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 28,
        "text": "1）价值驱动 $\\Rightarrow$ 解决什么问题很关键和你的工作场景相关，KPI相关，reward相关",
        "id": 161,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 9,
        "text": "2) 清晰的思考和表达",
        "id": 162,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "优秀Prompt Engineering的本质 ",
        "id": 163,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 52,
        "text": "3）善于利用各种工具，来解决问题  \nGPT不能直接帮你做动画，但它可以帮你生成动画软件的代码  \nGPT的边界 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 你的边界",
        "id": 165,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "大模型正广泛应用于各个行业中",
        "id": 166,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 167,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 168,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 169,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 170,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "保险条款智能解析文本处理效率提升30倍",
        "id": 171,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 24,
        "text": "金融信贷智能风控借贷风险判断准确率提升 $2 1 . 5 \\%$ ",
        "id": 172,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "医学病例自动化抽取病例处理效率显著提升",
        "id": 173,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 20,
        "text": "候选人信息智能分类模型识别准确率达到 $9 9 \\%$ ",
        "id": 174,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 175,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 176,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 177,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 9,
        "text": "行业新闻信息抽取智能分析行业动态",
        "id": 178,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 179,
        "type": "image",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "短信内容智能分类与审核过滤效率显著提升",
        "id": 180,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "电商评论观点分析快速搭建评论数据分析系统",
        "id": 181,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 182,
        "type": "text",
        "file_name": "1.1-AI大模型原理与DeepSeek使用"
      },
      {
        "page": 1,
        "length_tokens": 4,
        "text": "大模型API使用",
        "id": 0,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "大模型API使用",
        "id": 2,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 2,
        "length_tokens": 35,
        "text": "全球AI发展现状CASE-情感分析-QwenCASE-Function Call-QwenCASE-表格提取-QwenCASE-运维事件处置-Qwen",
        "id": 3,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "全球AI发展现状",
        "id": 4,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 3,
        "length_tokens": 11,
        "text": "LANGUAGEMODELCOUNTRYOFORIGIN ",
        "id": 5,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 3,
        "length_tokens": 28,
        "text": "While the US maintains an overall lead in the intelligence frontier, China is no longer far behind.Few other countries have demonstrated frontier-class training ",
        "id": 6,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 3,
        "length_tokens": 27,
        "text": "The Language Model Frontier: Country of Origin ArtificialAnalysisIntelligence Index,SelectedLeadingModels (Early2025),Non-exhaustive ",
        "id": 7,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "image",
        "file_name": "1.2-API使用"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "全球AI发展现状",
        "id": 9,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "LANGUAGEMODELCOUNTRYOFORIGIN ",
        "id": 10,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 4,
        "length_tokens": 27,
        "text": "As of early 2025,several Chinese Al labs have demonstrated or claimed frontier-level intelligence,with seven releasing models featuring reasoning capabilities ",
        "id": 11,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 4,
        "length_tokens": 28,
        "text": "The Language Model Frontier: Models by Chinese Al Labs Artificial Analysis Intelligence Index,Leading Models (Early 2025), Non-exhaustive ",
        "id": 12,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 13,
        "type": "image",
        "file_name": "1.2-API使用"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "全球AI发展现状",
        "id": 14,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 5,
        "length_tokens": 12,
        "text": "全球AI模型发展现状 （中美对比）：",
        "id": 15,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 5,
        "length_tokens": 157,
        "text": "·美国：OpenAl、Anthropic、Google、Meta等公司主导前沿模型，如GPT-4o、Claude 3.7 Sonnet、Gemini 2.0 Flash。  \n·中国：DeepSeek（如R1、V3）、阿里巴巴（如Qwen2.5）、Moonshot等公司快速追赶，部分模型（如DeepSeekR1）已接近美国前沿水平。  \n·关键趋势：中国模型在2024年显著缩小与美国的差距，尤其在推理模型和开源模型领域表现突出。  \n·其他地区：法国（Mistral）、加拿大（Cohere）等也有前沿模型，但中美仍是主导力量。",
        "id": 16,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "出口限制与硬件影响",
        "id": 17,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "美国对华限制：",
        "id": 18,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 46,
        "text": "·时间线：2022年10月首次限制（H100、A100），2023年10月升级（H800、A800受限），2025年1月新增\"AI扩散规则\"。",
        "id": 19,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 26,
        "text": "，当前状态： 仅H20、L20等低性能芯片可出口中国 未来可能进一步收紧。",
        "id": 20,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 48,
        "text": "·影响：中国依赖国产芯片（如华为昇腾）或降级版NVIDIA芯片（如H20，算力仅为H100的 $\\cdot$ ）。硬件性能对比：",
        "id": 21,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 64,
        "text": "NVIDIA H100:989 TFLOPs，3.35TB/s带宽。：NVIDIAH20：148TFLOPs，4TB/s带宽（专为中国市场设计）·AMD MI300X：1307TFLOPs，5.3TB/s带宽（未受限制）。",
        "id": 22,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 6,
        "length_tokens": 48,
        "text": "AI扩散规则（AIDiffusion Rule）是美国对华芯片出口管制政策的进一步升级，美的在通过三级许可框架严格限制先进AI加速器流向中国及其他特定国家。",
        "id": 23,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "中国AI公司概览",
        "id": 24,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "大科技公司：",
        "id": 25,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 27,
        "text": "阿里巴巴：通义干问（Qwen）系列，Qwen2.5 Max（Intelligence:79）。",
        "id": 26,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 21,
        "text": "·百度：文心一言（Ernie 4.0Turbo，Intelligence:78）。",
        "id": 27,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 18,
        "text": "·腾讯：混元大模型 (Hunyuan Large， Intelligence: 74）",
        "id": 28,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 22,
        "text": "·字节跳动： 豆包（Doubao 1.5 Pro， Intelligence:80）。",
        "id": 29,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 17,
        "text": "·华为：盘古5.0（Pangu5.0 Large）。",
        "id": 30,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "初创公司：",
        "id": 31,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 27,
        "text": "·DeepSeek：R1（Intelligence:89）、V3（Intelligence:79），开源模型表现优异。",
        "id": 32,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 23,
        "text": "，Moonshot：Kimi K1.5（Intelligence:87），专注长上下文窗口。",
        "id": 33,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 19,
        "text": "·MiniMax：Text-01（Intelligence:76），多模态能力突出。",
        "id": 34,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 7,
        "length_tokens": 21,
        "text": "·其他：智谱AI（ChatGLM）、百川智能 （Baichuan）等。",
        "id": 35,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "CASE: 情感分析-Qwen",
        "id": 36,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "CASE: 情感分析-Qwen",
        "id": 37,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 9,
        "length_tokens": 39,
        "text": "TO DO: 对用户观点评论进行情感分析， 即正向、 负向使用dashscope中的Qwen-Turbo针对提取的用户评论，可以进行批量化分析",
        "id": 38,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "table",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "CASE: 情感分析-Qwen",
        "id": 40,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 80,
        "text": "import json   \nimport os   \nimport dashscope   \nfrom dashscope.api_entities.dashscope_response import Role   \ndashscope.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"sk-XX\"   \n#封装模型响应函数   \ndef get_response(messages): response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call( model $\\",
        "id": 41,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 92,
        "text": "thbf { \\tau }$ dashscope.Generation.call( model $\\mathbf { \\Phi } = \\mathbf { \\Phi } ^ { \\prime }$ qwen-turbo', messages $\\mathbf { \\tau } =$ messages, result_format $\\mathbf { \\Phi } = \\mathbf { \\ \" }$ message'#将输出设置为message形式 ） return response   \nreview $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '这",
        "id": 42,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 119,
        "text": "eview $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '这款音效特别好给你意想不到的音质。‘   \nmessages=[ {\"role\":\"system\",\"content\":\"你是一名舆情分析师，帮我判   \n断产品口碑的正负向，回复请用一个词语：正向或者负向\"} {\"role\": \"user\",\"content\": review}   \n]   \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_response(messages)   \nresponse.output.choices[O].me",
        "id": 43,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 15,
        "text": "esponse(messages)   \nresponse.output.choices[O].message.content ",
        "id": 44,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 45,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "运行结果：'正向'",
        "id": 46,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "DashScope使用方法",
        "id": 47,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "1、基本设置：",
        "id": 48,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 45,
        "text": "import dashscope   \nfrom dashscope.api_entities.dashscope_response import Role   \n# 设置 API key   \ndashscope.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"your-api-key\" ",
        "id": 49,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "2、模型调用:",
        "id": 50,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 76,
        "text": "#基本调用格式  \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call(mode $\\left. = \\right.$ 模型名称', #例如:'qwen-turbo','deepseek-r1' 等messages $\\ c =$ messages， #消息列表result_format $= ^ { \\prime }$ message' #输出格式  \n）",
        "id": 51,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "3、messages 格式:",
        "id": 52,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 11,
        "length_tokens": 52,
        "text": "messages =[ {\"role\":\"system\",\"content\":\"系统提示信息\"}, {\"role\": \"user\",\"content\":\"用户输入\"}, #如果有历史对话 {\"role\":\"assistant\",\"content\":\"助手回复\"}, {\"role\":\"user\",\"content\":\"用户新的输入\"} ",
        "id": 53,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "DashScope使用方法",
        "id": 54,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "4、常用参数: ",
        "id": 55,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 12,
        "length_tokens": 113,
        "text": "response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call(mode $\\models ^ { \\prime }$ 模型名称',messages $\\ c =$ messages,result_format $= ^ { \\prime }$ message'，#输出格式temperatur $\\mathtt { e } = 0 . 7$ ， #温度参数，控制随机性top_ $\\mathsf { p } { = } 0 . 8$ ， #控制输出的多样性max_tokens=1500 #最大输出长度stream ",
        "id": 56,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 12,
        "length_tokens": 37,
        "text": "} 0 . 8$ ， #控制输出的多样性max_tokens=1500 #最大输出长度stream $\\ c =$ False #是否使用流式输出  \n）",
        "id": 57,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 12,
        "length_tokens": 30,
        "text": "#获取生成的文本 result $\\mathbf { \\tau } = \\mathbf { \\tau }$ response.output.choices[O].message.content ",
        "id": 58,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 12,
        "length_tokens": 33,
        "text": "#如果是流式输出  \nfor chunk in response:print(chunk.output.choices[O].message.content, end $= ^ { 1 }$ ）",
        "id": 59,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "CASE: Function Call使用(Qwen)",
        "id": 60,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "CASE: Function Call使用-Qwen",
        "id": 61,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 29,
        "text": "TODO：编写一个天气Function， 当LLM要查询天气的时候提供该服务， 比如当前不同城市的气温为：",
        "id": 62,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "北京：35度",
        "id": 63,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "上海：36度",
        "id": 64,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "深圳：37度",
        "id": 65,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "天气均为晴天， 微风",
        "id": 66,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 35,
        "text": "1）使用 model= \"qwen-turbo\"  \n2）编写function get_current_weather  \n对于用户询问指定地点的天气，可以获取该地当前天气",
        "id": 67,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 68,
        "type": "image",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "CASE： Function Call使用-Qwen",
        "id": 69,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "#1.模拟天气查询的函数",
        "id": 70,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "def get_current_weather(location,unit $\\mathrel { \\mathop = }$ \"摄氏度\"): ",
        "id": 71,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 112,
        "text": "#这是一个模拟的天气数据，实际应用中应该调用真实 的天气API temperature $= - 1$ if '大连' in location or 'Dalian' in location: temperature $= 1 0$ if location $\\models \\models \\models ^ { \\prime }$ 上海': temperature $= 3 6$ if location $\\scriptstyle = = { \\frac { 1 } { 2 } }$ 深圳': temperature $= 3 7$ weather_info $= \\left\\{ \\begi",
        "id": 72,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 67,
        "text": " temperature $= 3 7$ weather_info $= \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ \"location\": location, \"temperature\": temperature, \"unit\": unit, \"forecast\":[\"晴天\",\"微风\"], } return ison.dumbs(weather info) ",
        "id": 73,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "#2.模型调用封装",
        "id": 74,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 86,
        "text": "def get_response(messages): try: response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call( model $\\mathbf { \\Phi } = \\mathbf { \\Phi } ^ { \\prime }$ qwen-turbo', messages $\\ c =$ messages, functions $\\ c =$ functions，#注册可用的函数 result_format $= ^ { \\prime }$ message' ） return response e",
        "id": 75,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 15,
        "length_tokens": 35,
        "text": "rmat $= ^ { \\prime }$ message' ） return response except Exception as e: print(f\"API调用出错:{str(e)}\") return None ",
        "id": 76,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "CASE: Function Call使用-Qwen",
        "id": 77,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "#3.主要对话流程",
        "id": 78,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 66,
        "text": "#步骤1：发送用户查询   \nquery $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"大连的天气怎样\"   \nmessages $\\ c =$ [{\"role\": \"user\",\"content\": query}]   \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_response(messages) ",
        "id": 79,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "#步骤2：检查模型是否需要调用函数 if hasattr(message,'function_call') and message.function_call: ",
        "id": 80,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 68,
        "text": "#获取函数调用信息 function_call $\\mathbf { \\tau } = \\mathbf { \\tau }$ message.function_call tool_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ function_call['name'] arguments $\\mathbf { \\tau } = \\mathbf { \\tau }$ json.loads(function_call['arguments']) ",
        "id": 81,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 57,
        "text": "#步骤3：执行函数调用 tool_response $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_current_weather( location $\\ c =$ arguments.get('location'), unit $\\mathop { \\bf { \\equiv } }$ arguments.get('unit'), / ",
        "id": 82,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 51,
        "text": "#步骤4：将函数返回结果添加到对话 tool_info $\\mathbf { \\tau } = \\mathbf { \\tau }$ {\"role\": \"function\", \"name\": tool_name,\"content\": tool_response} messages.append(tool_info) ",
        "id": 83,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 16,
        "length_tokens": 29,
        "text": "#步骤5：让模型生成最终回答 response $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_response(messages) ",
        "id": 84,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "CASE: Function Call使用-Qwen",
        "id": 85,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "#4.函数注册配置",
        "id": 86,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 17,
        "length_tokens": 91,
        "text": "functions $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [ { 'name': 'get_current_weather'，# 函数名称 'description': 'Get the current weather in a given location.'， # 函数描述 'parameters':{#函数参数定义 'type': 'object', 'properties': { 'location': { 'type': 'string', 'description':'The city and state, e.g. San Franc",
        "id": 87,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 17,
        "length_tokens": 51,
        "text": " 'description':'The city and state, e.g. San Francisco, CA' }, 'unit': {'type': 'string','enum': ['celsius','fahrenheit']} }, 'required': ['location'] #必需参数 } }   \n1 ",
        "id": 88,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 17,
        "length_tokens": 4,
        "text": "整体工作流程:",
        "id": 89,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 17,
        "length_tokens": 59,
        "text": "·用户输入查询天气的问题  \n，模型理解问题，决定需要调用天气查询函数  \n·模型生成函数调用参数 (城市、温度单位)  \n·程序执行函数调用，获取天气数据  \n·将天气数据返回给模型  \n·模型生成最终的自然语言回答",
        "id": 90,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "CASE: 表格提取-Qwen ",
        "id": 91,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "CASE: 表格提取-Qwen ",
        "id": 92,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 19,
        "length_tokens": 36,
        "text": "TO DO: 表格提取与理解是工作中的场景任务， 需要使用多模态模型， 这里可以使用通义干问V系列的模型",
        "id": 93,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 19,
        "length_tokens": 144,
        "text": "1）Qwen-VL (基础模型)  \n核心能力：支持图像描述、视觉问答（VQA）、OCR、文档理解  \n和视觉定位  \n2）Qwen-VL-Chat (指令微调版)  \n基于Qwen-VL进行指令微调（SFT），优化对话交互能力  \n3）Qwen-VL-Plus/Qwen-VL-MAX (升级版)  \n性能更强，接近GPT-4V水平，但未完全开源  \n4）Qwen2.5-VL (最新旗舰版)  \n模型规模：提供3B、7B、72B版本，适应不同计算需求",
        "id": 94,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 95,
        "type": "table",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 9,
        "text": "CASE: 表格提取-Qwen ",
        "id": 96,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 24,
        "text": "#构建多模态输入 content $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ L ",
        "id": 97,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 10,
        "text": "#图片输入：支持本地路径或URL",
        "id": 98,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 60,
        "text": "{'image': 'https://aiwucai.oss-cn-huhehaote.aliyuncs.com/pdf_table.jpg'},#文本提示：要求提取表格内容并输出JSON格式{'text':'这是一个表格图片，帮我提取里面的内容，输出JSON格式'}",
        "id": 99,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 21,
        "text": "#构建消息格式 messages $\\ c =$ [{\"role\": \"user\", \"content\": content}] ",
        "id": 100,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 4,
        "text": "整体工作流程：",
        "id": 101,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 20,
        "length_tokens": 48,
        "text": "·使用了多模态模型 （qwen-vl-plus），可以同时处理图片和文本  \n，支持表格识别和内容提取  \n可以将非结构化的表格图片转换为结构化的JSON数据",
        "id": 102,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 21,
        "length_tokens": 9,
        "text": "CASE: 表格提取-Qwen ",
        "id": 103,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 21,
        "length_tokens": 132,
        "text": "好的，以下是整理   \n\\`\"\\`json   \n{ \"客户名称\":\"\", \"联繫方式\": \", “产品型号\" ， \"生产日期\":\"\", \"数量\":0, \"使用年限\":null, \"严重程度\":\", \"急紧程度\":\"\", \"问题点\":[], \"退货\": false, \"换货\": false, \"维修\": false, \"图例说明\":\"\", \"描述人/提报人\": \"__DATE__\": \"\"   \n}， \"分析人\":{ I DATE . } \"原因归属\"：[ ], \"零时措施\":{}, \"改善措施\":{   \n} ",
        "id": 104,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 105,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 21,
        "length_tokens": 62,
        "text": "请注意这个JSON对象中的键值对可能需要根据实际的表单结构进行调整。例如，“联系方式\"和\"联系方式\"的字段名应该是一致的；同样地，“严重程度\"、“紧急程度\"等也可能有误，请参照原图像自行修正。",
        "id": 106,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 21,
        "length_tokens": 62,
        "text": "另外，在处理文本信息（如日期）的时候需要注意它们的具体形式，并在转换为JSON值之前正确解析这些数据。如果存在缺失或错误的数据项，则应相应地添加\\`nulI\\`或空字符串来表示该属性不存在或者没有提供具体的信息。",
        "id": 107,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 21,
        "length_tokens": 21,
        "text": "Qwen-VL擅长视觉理解和识别，而且可以私有化部署和微调",
        "id": 108,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 22,
        "length_tokens": 10,
        "text": "CASE: 运维事件处置-Qwen ",
        "id": 109,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 110,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 111,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 75,
        "text": "场景描述：运维事件的分析和处置流程。包括告警内容理解分析方法建议，分析内容自动提取，处置方法推荐和执行等环节。AI大模型可以加速了运维过程中的问题诊断、分析与处置，提高了响应速度和决策质量，降低故障对业务的影响。",
        "id": 112,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 37,
        "text": "运维事件的分析和处置流程。包括告警内容理解，分析方法建议，分析内容自动提取，处置方法推荐和执行等环节，其中：",
        "id": 113,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 114,
        "type": "image",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 32,
        "text": "1、告警内容理解。根据输入的告警信息，结合第三方接口数据判断当前的异常情况（告警对象、异常模式）；",
        "id": 115,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 36,
        "text": "2、分析方法建议。 根据当前告警内容，结合应急预案、运维文档和大语言模型自有知识，形成分析方法的建议；",
        "id": 116,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 29,
        "text": "3、分析内容自动提取。根据用户输入的分析内容需求，调用多种第三方接口获取分析数据，并进行总结；",
        "id": 117,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 23,
        "length_tokens": 47,
        "text": "4、处置方法推荐和执行。 根据当前上下文的故障场景理解，结合应急预案和第三方接口，形成推荐处置方案，待用户确认后调用第三方接口进行执行。",
        "id": 118,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 119,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 7,
        "text": "1. 告警内容理解",
        "id": 120,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "假设我们有一个告警信息：",
        "id": 121,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 27,
        "text": "告警：数据库连接数超过设定阀值时间： 2024-08-03 15:30:00",
        "id": 122,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": "根据这个告警信息，我们可以进行如下分析：",
        "id": 123,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 19,
        "text": "告警对象： 数据库服务器异常模式: 连接数超过设定阈值",
        "id": 124,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "2.分析方法建议",
        "id": 125,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 23,
        "text": "结合应急预案、运维文档和大语言模型自有知识，采用以下分析方法:",
        "id": 126,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 30,
        "text": "·获取实时数据：调用监控系统接口，获取当前数据库服务器的连接数、CPU使用率、内存情况等性能指标。",
        "id": 127,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 26,
        "text": "·对比历史数据：分析历史数据，确定是否存在正常范围内的波动或者是异常的长期趋势。",
        "id": 128,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 24,
        "length_tokens": 43,
        "text": "·识别潜在原因：根据数据库连接数异常的时间点、相关日志和监控数据，尝试识别可能导致连接数增加的具体原因，如程序异常、大量查询请求等",
        "id": 129,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 130,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "3.分析内容自动提取 ",
        "id": 131,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 19,
        "text": "根据用户需求，自动调用多种第三方接口获取分析数据，并进行总结，比如：",
        "id": 132,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 54,
        "text": "查询性能监控系统接口 获取当前数据库连接数和系统负载情况。  \n检索日志管理系统接口， 查看与数据库连接数相关的日志记录。  \n调用事件管理系统接口， 获取先前类似事件的解决方案和操作记录。",
        "id": 133,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "4.处置方法推荐和执行",
        "id": 134,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 27,
        "text": "基于当前的故障场景理解，结合应急预案和第三方接口数据可以形成以下处置方案：",
        "id": 135,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 30,
        "text": "优化数据库配置：根据实时监控数据，调整数据库连接池的大小和相关参数，以减少连接数超过阈值的风险。",
        "id": 136,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 28,
        "text": "排查异常会话：通过数据库管理工具，查找并终止占用大量连接资源的异常会话或查询。",
        "id": 137,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 25,
        "length_tokens": 37,
        "text": "系统重启或备份恢复：如果上述措施无效，考虑在非业务高峰时段进行系统重启或者从备份恢复数据库，以恢复正常操作。",
        "id": 138,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 26,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 139,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 26,
        "length_tokens": 14,
        "text": "#通过第三方接口获取数据库服务器状态def get_current_status():",
        "id": 140,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 26,
        "length_tokens": 105,
        "text": "#生成连接数数据   \nconnections $\\mathbf { \\tau } = \\mathbf { \\tau }$ random.randint(10, 100)   \n#生成CPU使用率数据   \ncpu_usage $\\mathbf { \\tau } = \\mathbf { \\tau }$ round(random.uniform(1, 100), 1)   \n#生成内存使用率数据   \nmemory_usage $\\mathbf { \\tau } = \\mathbf { \\tau }$ round(random.uniform(10, 100), 1)   \nstatus_inf",
        "id": 141,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 26,
        "length_tokens": 91,
        "text": "}$ round(random.uniform(10, 100), 1)   \nstatus_info = { \"连接数\": connections, \"CPU使用率\": f\"{cpu_usage}%\", \"内存使用率\":f\"{memory_usage}%'   \n}   \nreturn json.dumps(status_info, ensure_ascii=False)   \n#封装模型响应函数   \ndef get_response(messages): response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation",
        "id": 142,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 26,
        "length_tokens": 82,
        "text": " { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call( model='qwen-turbo', messages $\\ c =$ messages, tools $\\ c =$ tools, result_format $= ^ { \\prime }$ message' #将输出设置为message形式 return response   \ncurrent_locals $\\mathbf { \\tau } = \\mathbf { \\tau }$ locals()   \ncurrent_locals ",
        "id": 143,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 144,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 27,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 145,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 146,
        "type": "table",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "CASE: 运维事件处置中的大语言模型应用",
        "id": 147,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "while True: ",
        "id": 148,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 47,
        "text": "response $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_response(messages) message $\\mathbf { \\tau } = \\mathbf { \\tau }$ response.output.choices[O].message messages.append(message) ",
        "id": 149,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 20,
        "text": "if response.output.choices[O].finish_reason $\\scriptstyle = =$ 'stop': break ",
        "id": 150,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 84,
        "text": "#判断用户是否要callfunction   \nif message.tool_calls: #获取fn_name,fn_arguments fn_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ message.tool_calls[O]['function']['name'] fn_arguments $\\mathbf { \\tau } = \\mathbf { \\tau }$ message.tool_calls[O]['function']['arguments'] arguments_json $\\mathbf { \\tau } = \\mathbf ",
        "id": 151,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 46,
        "text": "ents'] arguments_json $\\mathbf { \\tau } = \\mathbf { \\tau }$ json.loads(fn_arguments) function $\\mathbf { \\tau } = \\mathbf { \\tau }$ current_locals[fn_name] ",
        "id": 152,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 52,
        "text": "tool_response $\\mathbf { \\tau } = \\mathbf { \\tau }$ function(\\*\\*arguments_json) tool_info $\\mathbf { \\tau } = \\mathbf { \\tau }$ {\"name\": \"get_current_weather\",\"role\":\"tool\", ",
        "id": 153,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "\"content\": tool_response} messages.append(tool_info) ",
        "id": 154,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 155,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "print(messages) ",
        "id": 156,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 169,
        "text": "[{'role':'system',  \n'content'：‘我是运维分析师，用户会告诉我们告警内容。我会基于告警内容，判断当前的异常情况（告警对象、异常模式）‘}，  \n{'role'：‘user'，'content'：'告警：数据库连接数超过设定阈值\\n时间：2024-08-0315:30:00$\\sin ^ { \\cdot } \\}$ ，  \nMessage({'role':'assistant'，'content'：'收到您的告警信息，当前出现了数据库连接数超过设定阈值的情况。这可能表明数据库服务器正在承受超出预期的负载。为了进一步分析和解决这个问题，我们需要收集一些关键信息并执行以",
        "id": 157,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 174,
        "text": "明数据库服务器正在承受超出预期的负载。为了进一步分析和解决这个问题，我们需要收集一些关键信息并执行以下步骤： $\\mathsf { \\Pi } _ { \\mathsf { i n } \\backslash \\mathsf { n } 1 }$ .\\*\\*确认当前的数据库连接数\\*\\*：通过调用监控系统接口来获取实时的数据库连接数，并检查它是否确实超过了预设的阈值。 $\\vert n \\vert n 2$ .\\*\\*分析连接峰值时间\\*\\*：了解连接数增加的具体时间段，以便确定问题是在业务高峰期还是特定操作期间发生的。 $\\vert n \\vert n 3$ .\\*\\*检查资源使用情况\\*\\*：",
        "id": 158,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 174,
        "text": "是特定操作期间发生的。 $\\vert n \\vert n 3$ .\\*\\*检查资源使用情况\\*\\*：查看CPU使用率、内存使用率等性能指标，以判断是否还有其他资源瓶颈影响了数据库性能。\\n\\n4. $* *$ 排查异常请求\\*\\*：检查是否有大量的并发查询、事务或者特定类型的操作导致连接数激增。 $\\vert n \\vert n 5$ \\*\\*评估扩展需求\\*\\*：如果频繁发生此类告警，可能需要考虑数据库横向扩展（如增加实例）或者优化现有配置。\\n\\n首先，让我们获取当前的数据库连接数和其他关键性能指标。‘，'tool_calls'：[{'function':{'name':'get_curr",
        "id": 159,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 121,
        "text": "性能指标。‘，'tool_calls'：[{'function':{'name':'get_current_status','arguments':'{}'},'index':0,'id':'call_7c4deb3357c54299b89b4b'，'type':'function'}]})，  \n{'name':'get_current_weather',  \n'role':'tool',  \n'content'：‘{\"连接数\"：92，\"CPU使用率\"：\"93.5%\"，\"内存使用率\"：\"81.6%\"}'}，  \nMessage({'role':'assistant'，'content':'获",
        "id": 160,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 28,
        "length_tokens": 144,
        "text": "6%\"}'}，  \nMessage({'role':'assistant'，'content':'获取到的数据如下：\\n\\n-当前数据库连接数：92个\\n-CPU使用率：93.5%\\n-内存使用率：81.6%\\n\\n根据这些数据，我们可以看到数据库连接数已接近其阈值，并且CPU和内存使用率都处于较高水平，这可能表明服务器正在承受较大负载。接下来，我们需要进一步分析连接峰值时间和是否存在任何异常操作，以确定问题的根本原因。同时，我们也要考虑可能的优化措施或扩展方案，以确保系统的稳定运行。‘})]",
        "id": 161,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 162,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 9,
        "text": "都有哪些FunctionTool需要编写，比如：",
        "id": 163,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 85,
        "text": "查询性能监控系统接口 获取当前数据库连接数和系统负载情况。  \n，检索日志管理系统接口，查看与数据库连接数相关的日志记录。  \n，调用事件管理系统接口，获取先前类似事件的解决方案和操作记录。  \n对比历史数据：分析历史数据， 确定是否存在正常范围内的波动或者是异常的长期趋势。",
        "id": 164,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "TO DO: ",
        "id": 165,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 13,
        "text": "1、都有哪些告警情况 (可以使用AI模型)",
        "id": 166,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "2、编写Function Tool",
        "id": 167,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 11,
        "text": "3、AI会生成哪些处置方法推荐？",
        "id": 168,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "4、生成处置方法推荐的自动化执行FunctionTool ",
        "id": 169,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "打卡：大模型API使用",
        "id": 170,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 30,
        "length_tokens": 19,
        "text": "结合你的业务场景，编写一个使用AI大模型API的示例，比如：",
        "id": 171,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 30,
        "length_tokens": 52,
        "text": "1）对情感进行分类  \n2）对文章进行总结  \n3）使用FunctionCall完成复杂的业务逻辑  \n可以使用QwenAPI，也可以使用DeepSeek，ChatGLM，文心一言，KIMI的API",
        "id": 172,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 30,
        "length_tokens": 20,
        "text": "·完成的同学，请将大模型API使用方案发到微信群中，有积分哦！",
        "id": 173,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 174,
        "type": "text",
        "file_name": "1.2-API使用"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "Function Calling与协作",
        "id": 0,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "Function Calling与协作",
        "id": 2,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 2,
        "length_tokens": 23,
        "text": "·什么是Function Calling  \nCASE：天气调用 (Qwen3 Function Calling)  \nCASE：门票助手",
        "id": 3,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "Function Calling ",
        "id": 4,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 11,
        "text": "Thinking：FunctionCalling在大模型中的作用是什么？",
        "id": 5,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "·扩展模型能力",
        "id": 6,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 62,
        "text": "大模型本身无法直接操作外部系统（如数据库、计算工具），但通过调用预设函数，可以完成：  \n实时数据获取 (天气、股价、新闻)  \n复杂计算 (数学运算、代码执行)  \n操作外部系统 (发送邮件、控制智能设备)",
        "id": 7,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "·结构化输出",
        "id": 8,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 49,
        "text": "模型可将用户自然语言请求转化为结构化参数，传递给函数。例如：用户说\"明天北京天气如何？ $\" $ 模型调用 get_weather(location=\"北京\",date=\"2025-05-06\")",
        "id": 9,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "·动态决策流程",
        "id": 10,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 29,
        "text": "模型可根据上下文决定是否/何时调用函数，甚至链式调用多个函数（如先查天气，再推荐穿搭）。",
        "id": 11,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 3,
        "length_tokens": 25,
        "text": "FunctionCall是大模型与真实世界交互的\"桥梁\"，从语言理解 $\\Rightarrow$ 具体行动",
        "id": 12,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "Thinking: Function Calling与MCP的区别? ",
        "id": 13,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 14,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "Function Calling ",
        "id": 15,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 14,
        "text": "Thinking: 已经有了MCP还需要FunctionCalling么？",
        "id": 16,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 12,
        "text": "简单、原子化任务使用FunctionCalling会更方便",
        "id": 17,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 39,
        "text": "·查询天气get_weather(city $u = 1$ \"北京\")·计算数学公式calculate(expression=\"3+5\")·发送单条通知 send_email(to=\"user@example.com\")",
        "id": 18,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "优势: ",
        "id": 19,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 35,
        "text": "开发快捷：无需配置MCPServer，直接通过模型API调用预定义函数。  \n低延迟：单次请求-响应，无需协议层开销。",
        "id": 20,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 5,
        "length_tokens": 16,
        "text": "MCP可能成为主流，但FunctionCalling作为底层能力仍将存在",
        "id": 21,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "CASE：天气调用 ( Function Calling) ",
        "id": 22,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "Qwen3: ",
        "id": 23,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 7,
        "length_tokens": 51,
        "text": "于2025年4月29日发布，包含8种不同规模的模型，涵盖密集（Dense）和混合专家（MoE）架构，全部基于Apache2.0开源协议，支持免费商用",
        "id": 24,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "MoE模型 （高效推理）：",
        "id": 25,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 7,
        "length_tokens": 97,
        "text": "·Qwen3-235B-A22B（总参数2350亿，激活 220亿）一一旗舰级模型，性能接近 Gemini 2.5 Pro。·Qwen3-30B-A3B（总参数300亿，激活30亿）一一高效推理，仅需 $10 \\%$ 激活参数即可超越前代QwQ-32B。密集模型（全参数激活）：",
        "id": 26,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 7,
        "length_tokens": 126,
        "text": "·Qwen3-32B、14B、8B、4B、1.7B、0.6B，其中Qwen3-4B性能媲美前代Qwen2.5-72B开源了两个MoE模型的权重此外，6个Dense 模型也已开源，包括Qwen3-32B、Qwen3-14B、 Qwen3-8B、 Qwen3-4B、 Qwen3-1.7B 和Qwen3-0.6B，均在Apache2.0许可下开源。",
        "id": 27,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 28,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 29,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 31,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "Qwen3具有广泛的应用场景：",
        "id": 33,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 15,
        "text": "Apache2.0协议是一种宽松的自由软件许可协议：",
        "id": 34,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 22,
        "text": "自由使用：允许用户免费使用、修改、分发软件，适用于商业或非商业项目。",
        "id": 35,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 39,
        "text": "企业级AI (金融分析、智能客服)端侧AI (手机、loT设备本地部署)代码生成&AI编程助手·多语言翻译&全球化应用",
        "id": 36,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 30,
        "text": "专利授权：明确授予用户与软件相关的专利权利（贡献者自动授权，避免专利诉讼风险）。",
        "id": 37,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 20,
        "text": "衍生作品：允许修改代码并闭源发布 （需遵守协议条款）。",
        "id": 38,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 11,
        "length_tokens": 41,
        "text": "Qwen3具有广泛的应用场景，且具有商业友好性，允许将授权代码融入专有软件，无需公开衍生作品代码，适合企业使用。",
        "id": 39,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "CASE: 天气调用 (Function Calling) ",
        "id": 40,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 12,
        "length_tokens": 44,
        "text": "TO DO：使用Qwen3调用高德Function Calling，查询天气实现通过Qwen3与天气工具集成，自动调用高德地图天气API查询指定城市的实时天气信息，并输出结果。",
        "id": 41,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 12,
        "length_tokens": 72,
        "text": "Thinking: 关键步骤都有哪些？Step1，设置 DashScope APl Keydashscope.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"sk-xxxxxx'设置通义千问的API Key，用于身份认证可以调用的模型APi列表https://help.aliyun.com/zh/model-studio/models",
        "id": 42,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 44,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 13,
        "length_tokens": 10,
        "text": "CASE: 天气调用 (Function Calling) ",
        "id": 45,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 13,
        "length_tokens": 84,
        "text": "Step2，定义FunctionTool工具 (高德天气API)   \nweather_tool ={ \"type\": \"function\", \"function\": { \"name\":\"get_current_weather\", 'description\": \"Get the current weather in a given   \nlocation\", \"parameters\": { \"type\": \"object\", \"properties\": { \"location\": { \"type\": \"string\", \"description\": \"The city name, e.g. 北",
        "id": 46,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 13,
        "length_tokens": 18,
        "text": "\": \"string\", \"description\": \"The city name, e.g. 北京\", ",
        "id": 47,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 13,
        "length_tokens": 40,
        "text": "}, \"adcode\": { \"type\": \"string\", \"description\": \"The city code,e.g. 110000 (北京)\", } }, \"required\": [\"location\"], }, }, } ",
        "id": 48,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 13,
        "length_tokens": 33,
        "text": "定义了get_current_weather\\`工具，描述了参数（城市名和城市代码），用于让Qwen3知道如何调用外部天气查询工具。",
        "id": 49,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 14,
        "length_tokens": 10,
        "text": "CASE: 天气调用 (Function Calling) ",
        "id": 50,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 14,
        "length_tokens": 108,
        "text": "Step3，实现FunctionTool工具(调用高德天气API)   \ndef get_weather_from_gaode(location: str,adcode: str $\\mathbf { \\sigma } = \\mathbf { \\sigma }$   \nNone): \"\"\"·调用高德地图API查询天气.\" gaode_api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"xxxxxx\" # 替换成你的高德APl Key base_url $\\mathbf { \\tau } = \\mathbf { \\tau }$   \n\"https://r",
        "id": 51,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 14,
        "length_tokens": 104,
        "text": "\\mathbf { \\tau } = \\mathbf { \\tau }$   \n\"https://restapi.amap.com/v3/weather/weatherlnfo\" $\\mathsf { p a r a m s } = \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ \"key\": gaode_api_key, \"city\": adcode if adcode else location, \"extensions\": \"base\", 1J response $\\mathbf { \\tau } = \\mathbf { \\tau }",
        "id": 52,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 14,
        "length_tokens": 97,
        "text": ", 1J response $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get(base_url, params=params)   \nif response.status_code $= = 2 0 0$ ： return response.json() else: return {\"error\": f\"Failed to fetch weather:   \n{response.status_code}\"} 通过HTTPGET请求调用高德天气API，获取指定 城市的实时天气。   \n支持通过城市名或 adcode 查询。 ",
        "id": 53,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 54,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "CASE: 天气调用 (Function Calling) ",
        "id": 56,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 16,
        "text": "Step4，主流程函数：run_weather_query def run_weather_query(): ",
        "id": 57,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 110,
        "text": "\"\"使用 Qwen3 $^ +$ Function 查询天气.\" $\\mathsf { m e s s a g e s } = [$ {\"role\":\"system\",\"content\":\"你是一个智能助手，   \n可以查询天气信息。\"}, {\"role\":\"user\",\"content\":\"北京现在天气怎么样？\"}   \n] response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call( model $= ^ { \\mathsf { \\Gamma } }$ \"qwen-plus-2025-04-28\", me",
        "id": 58,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 92,
        "text": "{ \\mathsf { \\Gamma } }$ \"qwen-plus-2025-04-28\", messages $\\ c =$ messages, tools $\\ c =$ [weather_tool] tool_choice $\\ c =$ \"auto\",) if response.status_code $\\scriptstyle = =$ HTTPStatus.OK: #检查是否需要调用工具 if \"tool_calls\" in response.output.choices[O].message: tool_call $\\mathbf { \\sigma } = \\mathbf { ",
        "id": 59,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 83,
        "text": "essage: tool_call $\\mathbf { \\sigma } = \\mathbf { \\sigma }$   \nresponse.output.choices[O].message.tool_calls[0] if tool_call[\"function\"][\"name\"] ==   \n'get_current_weather\": #解析参数并调用高德API import json args $\\mathbf { \\tau } = \\mathbf { \\tau }$ json.loads(tool_call[\"function\"][\"arguments\"]) location $",
        "id": 60,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 55,
        "text": "ads(tool_call[\"function\"][\"arguments\"]) location $\\mathbf { \\tau } = \\mathbf { \\tau }$ args.get(\"location\",\"北京\") adcode $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ args.get(\"adcode\", None) ",
        "id": 61,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 62,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "CASE: 天气调用 (Function Calling) ",
        "id": 63,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 67,
        "text": "weather_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_weather_from_gaode(location,adcode) print(f\"查询结果: {weather_data}\") else: print(response.output.choices[O].message.content) else: print(f\"请求失败: {response.code} - {response.message}\") ",
        "id": 64,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "整体流程：",
        "id": 65,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "1.构造对话消息 ",
        "id": 66,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 19,
        "text": "-系统消息：设定助手身份。  \n-用户消息：提出天气查询请求。",
        "id": 67,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "2.调用Qwen3大模型",
        "id": 68,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 42,
        "text": "-传入模型名称、对话消息、工具定义。  \n- 'tool_choice $= ^ { \\mathsf { 1 } }$ \"auto\"让模型自动决定是否调用工具。",
        "id": 69,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 6,
        "text": "3.处理模型返回结果",
        "id": 70,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 20,
        "text": "-如果模型决定调用工具（即‘tool_calls\\`存在），解析工具调用参数。",
        "id": 71,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "-调用本地\\`get_weather_from_gaode\\`函数，获取天气数据。打印查询结果。",
        "id": 72,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "-如果模型未调用工具，直接输出模型回复内容",
        "id": 73,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "CASE：门票助手",
        "id": 74,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "CASE：门票助手",
        "id": 75,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 18,
        "length_tokens": 17,
        "text": "TO DO: 搭建门票助手， 可以对门票业务进行查询",
        "id": 76,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 18,
        "length_tokens": 28,
        "text": "2023年4、5、6月一日门票，二日门票的销量多少？帮我按照周进行统计",
        "id": 77,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 18,
        "length_tokens": 31,
        "text": "2023年7月的不同省份的入园人数统计帮我查看2023年10月1-7日销售渠道订单金额排名",
        "id": 78,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 79,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 5,
        "text": "CASE：门票助手",
        "id": 80,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 18,
        "text": "Thinking: 如何使用Function Call, 整体的搭建流程是怎样的？",
        "id": 81,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 5,
        "text": "Step1.系统初始化",
        "id": 82,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 29,
        "text": "选择WebUI模式，用户通过网页输入问题，助手自动完成SQL查询并返回结果，右侧可列出常见问题。",
        "id": 83,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 29,
        "text": "·设置系统prompt，描述门票表结构和常见查询需求·注册SQL查询工具（exc_sql），用于执行数据查询。",
        "id": 84,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 7,
        "text": "Step3.设置交互模式",
        "id": 85,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 5,
        "text": "Step4.Function Call机制",
        "id": 86,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 87,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "Step2.助手实例化",
        "id": 88,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 27,
        "text": "使用Qwen-Agent的\\`Assistant类，加载LLM 配置、系统 prompt 和 function_list（只包含exc_sql）。",
        "id": 89,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 19,
        "length_tokens": 51,
        "text": "·用户输入自然语言问题。  \n·LLM解析意图并自动生成SQL查询语句。  \nexc_sqI工具被自动调用，执行SQL并返回查询结果。  \n·结果通过终端或WebUI展示给用户。",
        "id": 90,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 20,
        "length_tokens": 9,
        "text": "CASE: 门票助手 (system_prompt)",
        "id": 91,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 20,
        "length_tokens": 49,
        "text": "system_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"\"我是门票助手，以下是关于门票订单表相关的字段，我可能会编写对应的SQL，对数据进行查询--门票订单表",
        "id": 92,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 20,
        "length_tokens": 100,
        "text": "CREATE TABLE tkt_orders (order_time DATETIME, --订单日期account_id INT, --预定用户IDgov_id VARCHAR(18), --商品使用人ID (身份证号)gender VARCHAR(10), --使用人性别age INT, --年龄province VARCHAR(30), --使用人省份SKU VARCHAR(100), -- 商品SKU名product_serial_no VARCHAR(3O)，-- 商品IDeco_main_order_id VARCHAR(2O),-- 订单IDsales_channel VARC",
        "id": 93,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 20,
        "length_tokens": 29,
        "text": "ain_order_id VARCHAR(2O),-- 订单IDsales_channel VARCHAR(20), --销售渠道status VARCHAR(30), -- 商品状态",
        "id": 94,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 20,
        "length_tokens": 29,
        "text": "Thinking: 是否能找到原始的数据表metadata，是否有常用的术语需要提供， 方便后续撰写SQL",
        "id": 95,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "CASE：门票助手 (exc_sql工具注册)",
        "id": 96,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 97,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 21,
        "length_tokens": 17,
        "text": "Thinking：这个地方是否可以通过用户的需求， 自适应进行调整？",
        "id": 98,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 22,
        "length_tokens": 13,
        "text": "CASE: 门票助手 (Assistant 初始化与function_list) ",
        "id": 99,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 22,
        "length_tokens": 121,
        "text": "def init_agent_service(): \"\"初始化门票助手服务\" $1 1 m \\_ { \\cdot } \\mathrm { c f g } = \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ 'model': 'qwen-turbo-2025-04-28', 'timeout': 30, 'retry_count': 3, } try: bot $\\mathbf { \\tau } = \\mathbf { \\tau }$ Assistant( IIm=llm_cfg, name $\\mathrel { \\mathop : }$ ",
        "id": 100,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 22,
        "length_tokens": 63,
        "text": "stant( IIm=llm_cfg, name $\\mathrel { \\mathop : }$ 门票助手， description $| = |$ 门票查询与订单分析， system_message $\\ c =$ system_prompt, function_list $\\Finv$ ['exc_sql']，#只传工具名字符串 ",
        "id": 101,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 22,
        "length_tokens": 28,
        "text": "print(\"助手初始化成功！\") return bot   \nexcept Exception as e: print(f\"助手初始化失败:{str(e)}\") raise ",
        "id": 102,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 23,
        "length_tokens": 12,
        "text": "CASE: 门票助手 (Web 图形界面）",
        "id": 103,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "def app_gui(): ",
        "id": 104,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 23,
        "length_tokens": 124,
        "text": "\"\"\"图形界面模式，提供Web 图形界面\"bot $\\mathbf { \\tau } = \\mathbf { \\tau }$ init_agent_service()chatbot_config = {prompt.suggestions': [2023年4、5、6月一日门票，二日门票的销量多少？帮  \n我按照周进行统计，2023年7月的不同省份的入园人数统计帮我查看2023年10月1-7日销售渠道订单金额排名']  \n}  \nWebUI(bot,chatbot_config $\\ c =$ chatbot_config  \n).run()",
        "id": 105,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 23,
        "length_tokens": 52,
        "text": "function call 相关逻辑全部通过 Assistant 的function_1ist机制与工具注册实现exc_sq1 工具负责 SQL 查询，注册后可被 LLM调用。支持终端(app_tui)和 WebUI 两种交互方式.",
        "id": 107,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "CASE：门票助手",
        "id": 108,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 28,
        "text": "2023年4、5、6月一日门票，二日门票的销量多少？帮我按照周进行统计",
        "id": 109,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 110,
        "type": "image",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": ">Start calling tool \"exc_sq.\\*\". ",
        "id": 111,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "● Finished tool calling. ",
        "id": 112,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 25,
        "text": "以下是2023年4、5、6月一日门票和二日门票的周销量统计：",
        "id": 113,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 114,
        "type": "image",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 10,
        "text": "√Startcalling tool \"exc_sql.\".. ",
        "id": 115,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 92,
        "text": "{\"sq_input\":\"SELECTDATE_FRMAT(order_time,'%Y-%U)ASweek,\\nSUM(CASEWHENSKULIKE'UniversalStudios BejingOne-Day% THEN quantity ELSE 0 END) AS one_day_ticket_sales, $\\mathsf { \\Omega } \\backslash \\mathsf { n }$ SUM(CASE WHEN SKU LIKE 'USB%' THEN quantity ELSE 0 END) AS two_day_ticket_sales\\nFROMtkt_order",
        "id": 116,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 49,
        "text": "ELSE 0 END) AS two_day_ticket_sales\\nFROMtkt_orders\\nWHEREorder_timeBETWEEN'2023-04-01'AND'2023-06-30'\\GROUPBYweek\\nORDERBY week;\"} ",
        "id": 117,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 118,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 119,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "CASE：门票助手",
        "id": 120,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 14,
        "text": "2023年7月的不同省份的入园人数统计",
        "id": 121,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 10,
        "text": "> Start calling tool \"exc_sql.\".. ",
        "id": 122,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "→Finished tool calling ",
        "id": 123,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 16,
        "text": "以下是2023年7月不同省份的入园人数统计：",
        "id": 124,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 125,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "如果需要更详细的分析或进一步的数据，请告诉我！",
        "id": 126,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 2,
        "text": "user ",
        "id": 127,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "√Start calling tool \"exc_sq\\*.. ",
        "id": 128,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 54,
        "text": "{\"sqinput\":\"SELECTprovince,SUMquantity)ASvisitor_count\\nFROMtkt_orders\\nWHEREorder_timeBTWEEN'2023-07-01'AND 2023-07-31'\\nGROUP BY province\\nORDER BY visitor_count DESC;\"} ",
        "id": 129,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "√Finished tool calling ",
        "id": 130,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "CASE：门票助手",
        "id": 132,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 17,
        "text": "帮我查看2023年10月1-7日销售渠道订单金额排名",
        "id": 133,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 11,
        "text": "√ Start calling tool \"exc_sq.\\*\".. ",
        "id": 134,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 64,
        "text": "{sqinput\":\"SELECTsales_cannel,SUM(ordervalue)AStotal_rdervalue\\nFROMtkt_orders\\nWHEREorder_timeBETWEE202- 10-01'AND '2023-10-07'\\nGROUP BY sales_channel \\nORDER BY total_order_value DESC;\"} ",
        "id": 135,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 6,
        "text": "√Finished tool calling. ",
        "id": 136,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 18,
        "text": "以下是2023年10月1日至7日销售渠道的订单金额排名：",
        "id": 138,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 139,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 13,
        "text": "如果需要更详细的分析或进一步的数据，请告诉我！",
        "id": 140,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 26,
        "length_tokens": 11,
        "text": "TODO：快来搭建你的业务助手吧！",
        "id": 141,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "打卡：业务助手",
        "id": 142,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 27,
        "length_tokens": 40,
        "text": "练习使用LLM/Agent $^ +$ Function Calling使用，可以使用Qwen3或Qwen-Agent如果你在本地有MySQL，可以基于自己的数据，进行业务查询",
        "id": 143,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 27,
        "length_tokens": 54,
        "text": "1）某个月份的销量是多少？  \n2）相比于上个月，这个月的销量环比增长多少？  \n3） 不同省份的销售额是多少？  \n4）某个时间段，销售金额Top3的渠道是哪些？",
        "id": 144,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "CASE：门票助手 （可视化图表）",
        "id": 145,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 28,
        "length_tokens": 21,
        "text": "Thinking：如何在exc_sql查询数据之后， 将数据进行可视化图表呈现？",
        "id": 146,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 28,
        "length_tokens": 56,
        "text": "方法1：编写新的函数plot_data，传入Markdown的图表，进行可视化  \n方法2：在原有exc_sql函数基础上，增加plot_data的功能，返回结果包括：数据表markdown以及可视化  \n的图表png",
        "id": 147,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "Thinking: 方法1的问题是什么？",
        "id": 148,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 28,
        "length_tokens": 85,
        "text": "Markdown传参可能更大，另外要绘制的x,y参数也不一定能传递准确  \n编写Markdown绘图有一定的难度，也需要先将Markdown转化为df (dataframe格式）然后再进行绘制  \n在qwen-agent中，很难保存中间的df，不同用户实例之间的维护成本可能较高  \n$\\Rightarrow$ 采用方法2",
        "id": 149,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "可视化图表：实现步骤",
        "id": 150,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 29,
        "length_tokens": 20,
        "text": "在传统实现中，数据查询和可视化通常是分开的两个步骤（工具）：",
        "id": 151,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 29,
        "length_tokens": 18,
        "text": "先执行SQL查询获取数据·再调用可视化工具进行图表绘制",
        "id": 152,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "我们的优化是将两者集成到一个工具中，实现：",
        "id": 153,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 29,
        "length_tokens": 37,
        "text": "一次调用，完成查询和可视化自动推断，图表类型和字段映射(x轴、v轴)·结果双输出，同时返回表格和图表",
        "id": 154,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 8,
        "text": "可视化图表：实现步骤",
        "id": 155,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "Step1，SQL查询获取数据",
        "id": 156,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 105,
        "text": "#执行SQL查询   \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_sql(sql_input,engine)   \n#生成markdown表格   \nmd $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.head(10).to_markdown(index $\\ c =$ False)   \nStep2，自动推断图表字段   \n#自动推断x/y字段   \nx_candidates $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.select_dtypes(include ",
        "id": 157,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 92,
        "text": "au } = \\mathbf { \\tau }$ df.select_dtypes(include $\\ c =$ ['object']).columns.tolist()   \nif not x_candidates: X_candidates $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.columns.tolist()   \n$\\mathsf { x } = \\mathsf { x }$ _candidates[0]   \nY_candidates $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.select_dtyp",
        "id": 158,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 65,
        "text": "mathbf { \\tau } = \\mathbf { \\tau }$ df.select_dtypes(include $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['number']).columns.tolist()   \ny_fields $\\mathbf { \\Psi } = \\mathbf { \\Psi } \\mathbf { \\Psi }$ _candidates ",
        "id": 159,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "字段推断逻辑：",
        "id": 160,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 30,
        "length_tokens": 37,
        "text": "x轴字段：优先选择第一个字符串类型(object）的列，如日期、分类名称等y轴字段：选择所有数值类型的列，支持多系列数据展示",
        "id": 161,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "可视化图表：实现步骤",
        "id": 162,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "Step3，柱状图绘制",
        "id": 163,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 31,
        "length_tokens": 119,
        "text": "plt.figure(figsize=(8, 5))   \nbar_width $= 0 . 3 5$ if len(y_fields) $> 1$ else 0.6   \nx_labels $\\mathbf { \\tau } = \\mathbf { \\tau }$ df[x].astype(str)   \n（204号 $\\mathsf { X \\_ p o s } = \\mathsf { r a n g e } ( \\mathsf { l e n } ( \\mathsf { d f } ) )$   \nfor idx, Y_col in enumerate(y_fields): plt.ba",
        "id": 164,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 31,
        "length_tokens": 42,
        "text": "$   \nfor idx, Y_col in enumerate(y_fields): plt.bar([p + idx\\*bar_width for p in ×_pos], df[y_col],width=bar_width,label=y_col) ",
        "id": 165,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "绘图逻辑：",
        "id": 166,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 31,
        "length_tokens": 47,
        "text": "创建适当大小的图表根据y轴字段数量调整柱宽支持多系列数据的并列柱状图每个y轴字段绘制一组柱子自动错开位置，避免柱子重叠",
        "id": 167,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "可视化图表：实现步骤",
        "id": 168,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "Step4， 图表样式设置 ",
        "id": 169,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 32,
        "length_tokens": 79,
        "text": "plt.xlabel(x)   \nplt.ylabel(','.join(y_fields))   \nplt.title(f\"{' &'.join(y_fields)} by {x}\")   \nplt.xticks([p $^ +$ bar_width\\*(len(y_fields)-1)/2 for p in X_pos],x_labels,rotation=45,ha $= \"$ right')   \nplt.legend()   \nplt.tight_layout() ",
        "id": 170,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "样式设置：",
        "id": 171,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 32,
        "length_tokens": 48,
        "text": "设置x轴、y轴标签  \n自动生成图表标题  \nx轴标签45度倾斜，避免重叠  \n添加图例，区分多系列数据  \n调整图表布局，确保所有元素可见",
        "id": 172,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "可视化图表：实现步骤",
        "id": 173,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "Step5， 图表保存与返回",
        "id": 174,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 4,
        "text": "#自动创建目录",
        "id": 175,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 30,
        "text": "save_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(os.path.dirname(__file__),'image_show') ",
        "id": 176,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 95,
        "text": "os.makedirs(save_dir,exist_ok $\\ c =$ True)   \n#生成唯一文件名   \nfilename $\\mathbf { \\tau } = \\mathbf { \\tau }$ f'bar_{int(time.time()\\*1000)}.png'   \nsave_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(save_dir, filename)   \nplt.savefig(save_path)   \nplt.close()   \nimg_path $\\mathbf { \\tau } = \\",
        "id": 177,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 73,
        "text": ")   \nplt.close()   \nimg_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join('image_show', filename)   \nimg_md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ f'![柱状图]({img_path})'   \nreturn f\"{md}\\n\\n{img_md}\" ",
        "id": 178,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 6,
        "text": "保存与返回逻辑：",
        "id": 179,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 33,
        "length_tokens": 38,
        "text": "自动创建图片保存目录生成基于时间戳的唯一文件名保存图片到本地生成markdown格式的图片引用返回\"表格 $^ +$ 图片\"组合结果",
        "id": 180,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 12,
        "text": "CASE：门票助手 （可视化图表）",
        "id": 181,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 28,
        "text": "2023年4、5、6月一日门票，二日门票的销量多少？帮我按照周进行统计",
        "id": 182,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "Start calling tool \"exc_sq.\\*.. ",
        "id": 183,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 6,
        "text": "■ Finished tool calling. ",
        "id": 184,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 25,
        "text": "以下是2023年4、5、6月一日门票和二日门票的周销量统计：",
        "id": 185,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 186,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 187,
        "type": "image",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 12,
        "text": "CASE：门票助手 （可视化图表）",
        "id": 188,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 26,
        "text": "我看到第13周数据有异常，帮我按照天、渠道的维度进行统计，给我他们的表现",
        "id": 189,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "》 Start calling tool \"exc_sql.\"... ",
        "id": 190,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "■Finished tool calling. ",
        "id": 191,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 34,
        "text": "以下是2023年第13周（即2023-04-01）一日门票和二日门票按天和销售渠道的销量统计：",
        "id": 192,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 193,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 11,
        "text": "Thinking: 这里为什么提取的数据不对？",
        "id": 194,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 38,
        "text": "WHERE order_time BETWEEN'2023-04-01' AND'2023-06-30' AND DATE_FORMAT(order_time,'%Y-%U')='2023-13' ",
        "id": 195,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 196,
        "type": "image",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "CASE：门票助手 (可视化图表）",
        "id": 197,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 40,
        "text": "我看到第13周（2023年3月27日-4月2日）数据有异常，帮我按照天、渠道的维度进行统计，给我他们的表现",
        "id": 198,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "> Start calling tool \"exc_sql.\".. ",
        "id": 199,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "■Finished tool calling. ",
        "id": 200,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 36,
        "text": "以下是2023年3月27日至4月2日（第13周）一日门票和二日门票按天和销售渠道的销量统计：",
        "id": 201,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 202,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 203,
        "type": "image",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "Thinking: 如何将渠道显示出来？",
        "id": 204,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 12,
        "text": "CASE：门票助手 (可视化图表）",
        "id": 205,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 40,
        "text": "我看到第13周（2023年3月27日-4月2日）数据有异常，帮我按照天、渠道的维度进行统计，给我他们的表现",
        "id": 206,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "> Start calling tool \"exc_sql.\".. ",
        "id": 207,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "■Finished tool calling. ",
        "id": 208,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 36,
        "text": "以下是2023年3月27日至4月2日（第13周）一日门票和二日门票按天和销售渠道的销量统计：",
        "id": 209,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 210,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 211,
        "type": "image",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "Thinking: 如何将渠道显示出来？",
        "id": 212,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 13,
        "text": "CASE：门票助手 (可视化图表) ",
        "id": 213,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "Thinking: 如何将渠道显示出来？",
        "id": 214,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 7,
        "text": "采用分组与透视 ",
        "id": 215,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 58,
        "text": "如果存在 object_columns，则用pd.pivot_table 以 $\\textsf { \\textbf { x } }$ 轴为index，object_columns 为columns，num_columns 为  \nvalues，自动聚合  \n支持多object、多数值列，自动生成多级分组",
        "id": 216,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "def generate_chart_png(df_sql, save_path): ",
        "id": 217,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 218,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "Version更新:",
        "id": 219,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 38,
        "length_tokens": 53,
        "text": "assistant_ticket_bot-1:实现了function call调用exc_sqlassistant_ticket_bot-2：添加了基本的绘制图表功能assistant_ticket_bot-3：进一步完善绘制图表功能，支持多类别变量的透视图可视化",
        "id": 220,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "Function Cali的微调 ",
        "id": 221,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 39,
        "length_tokens": 9,
        "text": "Thinking：Functioncall是否需要微调？",
        "id": 222,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 39,
        "length_tokens": 47,
        "text": "通常大模型具备Function Cali的能力，但有时候针对特定的Function Call理解和提参能力不强 $\\Rightarrow$ 可以微调FunctionCall的微调目标，是教会模型下面两件事：",
        "id": 223,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 39,
        "length_tokens": 42,
        "text": "·判断是否需要调用函数（比如\"查天气\"需要，而\"写首诗\"不需要）。  \n·正确提取参数并生成格式化的调用指令（比如转成JSON）。",
        "id": 224,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 6,
        "text": "Function Call的微调 ",
        "id": 225,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "Thinking: 微调的步骤是怎样的？ ",
        "id": 226,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "Step1，准备数据",
        "id": 227,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 14,
        "text": "输入：用户问题 （如\"北京今天天气？\"）。",
        "id": 228,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 17,
        "text": "函数描述：告诉模型有哪些函数可用（比如get_weather(city,date)）。",
        "id": 229,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "期望输出: ",
        "id": 230,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 31,
        "text": "·需要调用时：生成JSON格式的函数调用(如{\"name\":\"get_weather\",\"arguments\":{\"city\":\"北京\",\"date\":\"今天\"}1）。",
        "id": 231,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 18,
        "text": "·不需要时：直接生成回答 (如\"你好，今天星期一...\"）。",
        "id": 232,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "Step2， 模型训练 ",
        "id": 233,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 16,
        "text": "选一个擅长理解指令的预训练模型，如Qwen。",
        "id": 234,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 40,
        "length_tokens": 26,
        "text": "用上述数据训练模型，让它学会\"根据问题和函数描述，决定是否调用函数，并生成正确格式\"。",
        "id": 235,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "Function Cali的微调 ",
        "id": 236,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "FunctionCall微调的关键点：",
        "id": 237,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 41,
        "length_tokens": 60,
        "text": "·数据质量：需覆盖各种场景（需要/不需要调用、参数变化等）。函数描述要清晰：模型靠描述理解函数用途。  \n·避免误触发：加入足够多“无需调用\"的样本，防止模型滥用函数。",
        "id": 238,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "Function Call的微调 ",
        "id": 239,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "微调数据集参考：",
        "id": 240,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 20,
        "text": "https://huggingface.co/datasets/NousResearch/herme s-function-calling-v1 ",
        "id": 241,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 47,
        "text": "训练LLM模型根据自然语言指令执行函数调用并返回结构化输出。数据集涵盖了各种对话场景，要求AI代理能够解释查询并执行适当的单个或多个函数调用。",
        "id": 242,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 46,
        "text": "例如，当被要求\"查找下周五从纽约飞往洛杉矶的航班\"时，函数调用代理可以解释请求，生成必要的函数调用（例如search_flights），并返回结果。",
        "id": 243,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 88,
        "text": "田 Dataset Viewer $a$ Auto-converted to Parquet </>API Embed 田 Data Studio   \nSubset (5) Split (1)   \nfunc_calling_singleturn $\\mathbf { \\nabla } \\cdot \\mathbf { \\varepsilon }$ 1.89k rows train · 1.89k rows   \nQ Search this dataset   \nid conversations 一 category   \nstring ·lengths list ·lengths strin",
        "id": 244,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 99,
        "text": " 一 category   \nstring ·lengths list ·lengths string · classe   \n36 36 3 3 63 values   \n85f6c398-69c7- [ {\"from\": \"system\"，\"value\": \"You are a function IoT and Home   \n4df2-aed1-... calling AI model. You are provided with function... Automation   \n89ef3c87-66bd- [ {\"from\": \"system\"，\"value\": \"You are ",
        "id": 245,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 93,
        "text": "f3c87-66bd- [ {\"from\": \"system\"，\"value\": \"You are a function IoT and Home   \n46ee-9297-.. calling AI model. You are provided with function... Automation   \n14657d01-d6d1- [ {\"from\":\"system\"，\"value\": \"You are a function IoT and Home   \n46df-8eb1-... calling AI model. You are provided with function...",
        "id": 246,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 87,
        "text": "alling AI model. You are provided with function... Automation   \nc483f963-8a29- [{\"from\":\"system\"，\"value\": \"You are a function IoT and Home   \n4ff0-a684-.. calling AI model. You are provided with function.. Automation   \n81ad724a-bb74- [ { \"from\": \"system\"，\"value\": \"You are a function IoT and Home  ",
        "id": 247,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 42,
        "length_tokens": 73,
        "text": "ystem\"，\"value\": \"You are a function IoT and Home   \n420f-8221-.. calling AI model. You are provided with function... Automation   \n7d99abac-f27f- [{\"from\":\"system\"，\"value\": \"You are a function IoT and Home < Previous 1 2 3 19 Next > ",
        "id": 248,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 43,
        "length_tokens": 6,
        "text": "Function Cali的微调 ",
        "id": 249,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 43,
        "length_tokens": 13,
        "text": "该数据集由5个数据集组成，分别是：",
        "id": 250,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 43,
        "length_tokens": 87,
        "text": "func-calling-singleturn.json -单轮函数调用  \n·func-calling.json-多轮对话函数调用  \n·glaive-function-calling-5k.json-Glaive Al 更新和清理后的Glaive函数调用5k数据集  \n·json-mode-agentic.json-高级JSON 结构化输出样本  \n·json-mode-singleturn.json-单轮 JSON 结构化输出样本",
        "id": 251,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 252,
        "type": "table",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 43,
        "length_tokens": 13,
        "text": "func-calling-singleturn.json 中的某条训练样本",
        "id": 253,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 44,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 254,
        "type": "text",
        "file_name": "10-Function Calling与协作"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "MCP与A2A的应用",
        "id": 0,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "MCP使用",
        "id": 2,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 2,
        "length_tokens": 52,
        "text": "·什么是MCP  \nMCP的核心概念  \nMCP的使用场景CASE：旅游攻略MCPCASE：Fetch网页内容抓取  \nCASE：Bing中文搜索CASE:桌面TXT统计器 (MCP SDK使用)",
        "id": 3,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "Agent2Agent使用",
        "id": 4,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 2,
        "length_tokens": 44,
        "text": "·什么是Agent2Agent  \n·A2A的关键组件  \n·A2A的工作流程  \n·A2A与MCP的关系CASE：安排篮球活动 (多智能体协作)",
        "id": 5,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "什么是MCP",
        "id": 6,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "Thinking：什么是MCP?",
        "id": 7,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 3,
        "length_tokens": 62,
        "text": "Model Context Protocol(MCP)是由Anthropic 公司于2024年11月推出的一种开放协议标准，目的在于标准化LLM 与外部数据源、工具及服务之间的交互方式。MCP被广泛类比为\"AI领域的USB-C接口\"",
        "id": 8,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 9,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "MCP与Function Calling的区别",
        "id": 10,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 11,
        "type": "table",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "MCP 的核心概念 ",
        "id": 12,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 5,
        "length_tokens": 6,
        "text": "1.架构与组件",
        "id": 13,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 5,
        "length_tokens": 20,
        "text": "MCP采用客户端-服务器（Client-Server）架构，主要包括以下核心组件：",
        "id": 14,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "· MCP Host：运行Al 模型的环境，如Claude Desktop、Cursor IDE等。",
        "id": 15,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 5,
        "length_tokens": 25,
        "text": "·MCP Client：嵌入在Host中的组件，负责发起请求并与MCP Server通信。",
        "id": 16,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 5,
        "length_tokens": 27,
        "text": "MCP Server：轻量级服务，提供特定功能（如数据查询、API调用等），供AI模型调用。",
        "id": 17,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "MCP 的核心概念 ",
        "id": 18,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "2.核心功能",
        "id": 19,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "MCP提供三种关键能力：",
        "id": 20,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 6,
        "length_tokens": 26,
        "text": "：Resources（知识扩展）：提供结构化数据（如数据库、文档）以增强AI的上下文理解。",
        "id": 21,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 6,
        "length_tokens": 26,
        "text": "Tools（工具调用）：允许AI执行外部操作（如发送邮件、查询GitHub、调用智能合约等），",
        "id": 22,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 6,
        "length_tokens": 20,
        "text": "• Prompts （提示模板）：预定义的指令模板，优化AI的任务执行。",
        "id": 23,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "MCP 的使用场景",
        "id": 24,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "1.增强AI的实时性与执行能力",
        "id": 25,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 31,
        "text": "·实时数据访问：MCP允许AI访问最新数据（如股票行情、新闻），而非仅依赖训练时的静态数据。",
        "id": 26,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 26,
        "text": "·自动化任务：AI可通过MCP直接执行任务，如整理文件、发送邮件、管理代码仓库等。",
        "id": 27,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 33,
        "text": "·区块链交互：MCP可集成以太坊智能合约，让用户通过自然语言完成链上操作（如DeFi交易）。",
        "id": 28,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "2.去中心化AI生态",
        "id": 29,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 32,
        "text": "·创作者经济：个人或企业可搭建MCP Server提供特定服务（如鸟类知识库），并通过调用次数获得收益。",
        "id": 30,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 29,
        "text": "·抗审查与去中心化：MCP使AI能力分散在多个Server上，减少大公司垄断风险。",
        "id": 31,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "3.开发者工具",
        "id": 32,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 33,
        "text": "简化集成：MCP标准化了AI与外部系统的交互，开发者无需为每个数据源编写定制API。",
        "id": 33,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 7,
        "length_tokens": 32,
        "text": "多模态支持：MCP可整合语音、图像、传感器数据等，使AI具备更全面的环境感知能力",
        "id": 34,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "CASE： 旅游攻略MCP ",
        "id": 35,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 36,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 9,
        "length_tokens": 23,
        "text": "Step1，获取高德地图McP 的使用授权（免费）https://Ibs.amap.com/",
        "id": 37,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 9,
        "length_tokens": 31,
        "text": "Step2，注册成为开发者 $\\Rightarrow$ 创建应用 $\\Rightarrow$ 应用服务平台选择Web服务 $\\Rightarrow$ 获取API KEY",
        "id": 38,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "table",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 40,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 36,
        "text": "Step3，使用具有MCP功能的客户端进行调用比如：Cursor具有McP功能，可以在Agent模式下输入用高德MCP，做上海一天旅游攻略",
        "id": 41,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 42,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 130,
        "text": "我会使用高德地图MCP来帮您规划上海一天的旅游 我会使用高德地图MCP来帮您规划上海一天的旅游攻略。首先让我们搜索上海的主要景点：  \n攻略。首先让我们搜索上海的主要景点：$\\smile$ Called MCP tool maps_text_search> Called MCP toolmaps_text_search Parameters:  \n让我们继续搜索另一个著名景点东方明珠： {\"keywords\"：\"上海外滩\"> Called MCP toolmaps_text_search \"city\":\"上海\",  \n让我们获取豫园的信息： \"types\":\"景点\"}> Called MCP ",
        "id": 44,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 29,
        "text": "ty\":\"上海\",  \n让我们获取豫园的信息： \"types\":\"景点\"}> Called MCP toolmaps_text_searchDor=lt",
        "id": 45,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "Cursor，Cherry Studio集成了MCP服务",
        "id": 46,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 16,
        "text": "根据获取到的信息，我为您规划一条上海一日游路线：",
        "id": 47,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 10,
        "length_tokens": 198,
        "text": "1.上午：豫园 (上海豫园)  \n·地址：福佑路168号  \n·特色：明代古典园林，可以体验江南园林文化  \n·建议游览时间：2-3小时  \n·可以同时游览豫园老街，品尝上海特色小吃  \n2.中午：外滩  \n·地址：中山东一路49号  \n·特色：欣赏外滩建筑群，感受上海十里洋场的历史风貌  \n·建议游览时间：1-2小时  \n·可以在外滩附近的餐厅享用午餐  \n3.下午：东方明珠  \n·地址：世纪大道1号  \n·特色：上海地标性建筑，可以登塔俯瞰整个上海  \n·建议游览时间：2-3小时  \n·可以在旋转餐厅享用晚餐，欣赏夜景",
        "id": 48,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 49,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 11,
        "length_tokens": 103,
        "text": "让我们看看天气情况： 让我亻   \n让我们看看天气情况： $\\smile$ Called MCP toolmaps_weather > Called MCP toolmaps_weather \"forecasts\": [   \n让我们继续搜索下午可以游览的景点： { \"date\": \"2025-04-26\" > Called MCP toolmaps_text_search \"week\":\"6\", \"dayweather\":\"阴\", \"nightweather\":\"阴\",   \n> Called MCP toolmaps_search_detail \"daytemp\": \"23\",   \n让我",
        "id": 50,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 11,
        "length_tokens": 70,
        "text": " MCP toolmaps_search_detail \"daytemp\": \"23\",   \n让我们看看从外滩到南京路步行街的步行路线： \"nighttemp\": \"15\", \"daywind\":\"东南\", >Called MCP toolmaps_direction_walking \"nightwind\":\"东南\", \"daypower\": \"1-3\", ",
        "id": 51,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 11,
        "length_tokens": 18,
        "text": "让我们看看从外滩到南京路步行街的步行路线：",
        "id": 52,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 53,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 54,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 12,
        "length_tokens": 13,
        "text": "在Cursor中设置mcp.json，然后在Cursor Settings中打开",
        "id": 55,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 12,
        "length_tokens": 62,
        "text": "rl \"mcpServers\": { \"amap-maps\": { \"command\": \"npx\", \"args\": [ \"-y\", \"@amap/amap-maps-mcp-server\" ], \"env\": { \"AMAP_MAPS_API_KEY\": \"你的key' } } }   \n} ",
        "id": 56,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 57,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 58,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 13,
        "text": "TODO：制作大连一日游旅行规划，并生成网页",
        "id": 59,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 17,
        "text": "$@$ 旅行规划.md根据这个，生成大连一日游的网页",
        "id": 60,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 9,
        "text": "Step1，制作旅行规划表提示词",
        "id": 61,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "#旅行规划表设计提示词",
        "id": 62,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 89,
        "text": "3你是一位优秀的平面设计师和前端开发工程师，具有丰富的旅行信息可视化经验，曾为众多知名旅游平台设计过清晰实用的旅行规划表。现在需要为我创建一个A4纸张大小的旅行规划表，适合打印出来随身携带使用。请使用HTML、CSS和JavaScript代码实现以下要求：  \n4  \n5",
        "id": 63,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 3,
        "text": "##基本要求",
        "id": 64,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "### 尺寸与基础结构",
        "id": 65,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 131,
        "text": "-严格符合A4纸尺寸（ $2 1 0 \\mathsf { m m } \\times 2 9 7 \\mathsf { m m } ,$ ），比例为1:1.414－适合打印的设计，预留适当的打印边距 (建议上下左右各 $\\mathsf { 1 0 m m }$ -采用单页设计，所有重要信息必须在一页内完整呈现-信息分区清晰，使用网格布局确保整洁有序·打印友好的配色方案，避免过深的背景色和过小的字体",
        "id": 66,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "Ctrl+L to chat, Ctrl+K to generate ",
        "id": 67,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 29,
        "text": "16 ###技术实现  \n17 －使用打印友好的CSS设计  \n18 －提供专用的打印按钮，优化打印样式",
        "id": 68,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "旅行规划.md ",
        "id": 69,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 29,
        "text": "我来帮您规划大连一日游的行程，并生成一个网页。首先让我们搜索大连的主要景点：",
        "id": 70,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 71,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 72,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "现在我来创建一个网页文件：",
        "id": 73,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 101,
        "text": "<> dalian_tour.html +157 -1 $V$ 一   \n<!DOCTYPE html>   \n<html lang=\"zh-CN\">   \n<head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width <title>大连一日游攻略</title> <style> body{ font-family: 'Microsoft YaHe line-height: 1.6; margin: 0; padding: 0; background-color: #f5f5f5; ",
        "id": 74,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 24,
        "text": "我已经创建了一个美观且信息丰富的大连一日游网页。这个网页包含以下主要内容：",
        "id": 75,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 10,
        "text": "1.响应式设计，适配各种设备",
        "id": 76,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "2.清晰的布局结构",
        "id": 77,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "3.主要内容区块：",
        "id": 78,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 118,
        "text": "·天气预报   \n）行程安排 (星海广场和发现王国)   \n交通建议   \n·实用贴士   \ndalian_tour.html > html > head > style >＆ body 1 <!DOCTYPE html> 2 <html lang=\"zh-CN\"> 3 <head> 4 <meta charset $\\ c =$ \"UTF-8\"> 5 <meta name=\"viewport\" content $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"width $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ devic",
        "id": 79,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 112,
        "text": "th $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ device-width， initial-scale=1.0\"> 6 <title>大连一日游攻略</title> 7 <style> 8 body{ 9 font-family: 'Microsoft YaHei'， sans-serif;   \n10 line-height: 1.6;   \n11 margin: 0;   \n12 padding: 0;   \n13 background-color: □#f5f5f5;   \n14   \n15 .container {   \n16 max-widt",
        "id": 80,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 63,
        "text": " □#f5f5f5;   \n14   \n15 .container {   \n16 max-width: 1200px;   \n17 margin: 0 auto;   \n18 padding: 20px;   \n19 Y   \n20 header {   \n21 background-color: □#1e88e5: ",
        "id": 81,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 82,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "CASE: 旅游攻略MCP ",
        "id": 83,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "大连一日游完美攻略",
        "id": 84,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 11,
        "text": "探索浪漫之都，体验海滨风情",
        "id": 85,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 3,
        "text": "天气预报",
        "id": 86,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 9,
        "text": "今日天气：多云转雷阵雨",
        "id": 87,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "温度：11°℃- 21℃",
        "id": 88,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "风向：西南风 ",
        "id": 89,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "风力：5级",
        "id": 90,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "温馨提示：",
        "id": 91,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 30,
        "text": "·建议携带雨具，以防下雨·注意防风保暖，气温变化较大·户外活动请注意天气变化",
        "id": 92,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "交通建议",
        "id": 93,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 6,
        "text": "星海广场交通：",
        "id": 94,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 3,
        "text": "行程安排",
        "id": 95,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 15,
        "text": "上午：星海广场 (9:00-11:30)",
        "id": 96,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 26,
        "text": "地址：大连市沙河口区中山路开放时间：24小时推荐游览时间：2.5小时",
        "id": 97,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 98,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 99,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "特色亮点:",
        "id": 100,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 32,
        "text": "·亚洲最大的城市广场之一·标志性音乐喷泉表演·绝美海景观赏点·周边众多特色餐厅",
        "id": 101,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 16,
        "text": "下午：海昌发现王国 (13:00-17:30)",
        "id": 102,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 19,
        "text": "地址：大连市金石滩国家旅游度假区金石路36号",
        "id": 103,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "门票：60元",
        "id": 104,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 9,
        "text": "推荐游览时间：4-5小时",
        "id": 105,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 35,
        "text": "·地铁：乘坐1号线至星海广场站·公交：16路、18路、22路、23路等多条线路可达",
        "id": 106,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 6,
        "text": "前往发现王国：",
        "id": 107,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 33,
        "text": "·乘坐地铁1号线至终点站后转乘公交·也可选择打车或包车前往，车程约40分钟",
        "id": 108,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "特色亮点:",
        "id": 109,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 15,
        "length_tokens": 42,
        "text": "·大型主题乐园，众多刺激游乐项目  \n·精彩的海洋动物表演  \n·独特的海洋文化体验  \n·适合全家游玩的综合性乐园",
        "id": 110,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "CASE: 旅游攻略MCP (Cherry Studio) ",
        "id": 111,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "Thinking: 如何在Cherry Studio中配置 MCP服务? ",
        "id": 112,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 16,
        "length_tokens": 100,
        "text": "Step1，确保MCP服务工具安装好，这里会用到UV,Bun   \n工具   \nhttps://github.com/oven-sh/bun/releases   \npowershell -c \"irm bun.sh/install.ps1liex\"   \nhttps://github.com/astral-sh/uv/releases   \npowershell -ExecutionPolicy Bypass -c \"irm   \nhttps://github.com/astral  \nsh/uv/releases/download/0.6.17/uv-installer.ps1|iex\" ",
        "id": 113,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 114,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 17,
        "length_tokens": 12,
        "text": "CASE: 旅游攻略MCP (Cherry Studio) ",
        "id": 115,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 116,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 17,
        "length_tokens": 16,
        "text": "这里先点击保存，然后再打开服务，变绿说明服务可以正常使用",
        "id": 117,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 12,
        "text": "CASE: 旅游攻略MCP (Cherry Studio) ",
        "id": 118,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 20,
        "text": "Step3，配置LLM （需要具备工具功能）比如 添加qwen-turbo功能",
        "id": 119,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 2,
        "text": "编辑模型",
        "id": 120,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 121,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 4,
        "text": "选择模型类型：",
        "id": 122,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 22,
        "text": "$\\bigcirc$ 视觉 $\\bigcirc$ 嵌入 $\\bigcirc$ 推理 工具",
        "id": 123,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 27,
        "text": "选择qwen-turbo模型，然后打开MCP服务器，进行提问 用高德MCP，做上海一天旅游攻略 ",
        "id": 124,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 125,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 18,
        "length_tokens": 16,
        "text": "这里先点击保存，然后再打开服务，变绿说明服务可以正常使用",
        "id": 126,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 12,
        "text": "CASE: 旅游攻略MCP (Cherry Studio) ",
        "id": 127,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 20,
        "text": "Step3，配置LLM （需要具备工具功能）比如 添加qwen-turbo功能",
        "id": 128,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 27,
        "text": "选择qwen-turbo模型，然后打开MCP服务器，进行提问 用高德MCP，做上海一天旅游攻略 ",
        "id": 129,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "编辑模型",
        "id": 130,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 132,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "选择模型类型：",
        "id": 133,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 22,
        "text": "$\\bigcirc$ 视觉 $\\bigcirc$ 嵌入 $\\bigcirc$ 推理 工具",
        "id": 134,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 19,
        "length_tokens": 16,
        "text": "这里先点击保存，然后再打开服务，变绿说明服务可以正常使用",
        "id": 135,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "CASE: 旅游攻略MCP (Cherry Studio) ",
        "id": 136,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 16,
        "text": "qwen-turbo丨阿里云 04/2610:34 ",
        "id": 137,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "maps_text_search 已完成",
        "id": 138,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 48,
        "text": "好的，为了制定上海的一日游攻略，我们可以从以下几个方面入手：首先确定几个主要的旅游景点，然后规划合理的交通方式，最后安排好吃饭和休息的时间。以下是步骤：",
        "id": 139,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 30,
        "text": "1.选择旅游景点：我们可以选择一些具有代表性的景点，例如外滩、东方明珠、豫园等。",
        "id": 140,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 28,
        "text": "规划交通：我们可以使用高德地图的路径规划功能来规划从一个景点到另一个景点的交通方式。",
        "id": 141,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 96,
        "text": "3.安排时间：考虑到每个景点的游览时间和交通时间，合理安排整个行程。现在我们开始第一步，选择几个主要的旅游景点并获取它们的经纬度。让我们使用fQWbL5e0io_LJQfxomkBv4工具来搜索这些景点的位置信息。根据您的要求，为您准备了上海一日游的景点推荐：",
        "id": 142,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "4.上海豫园",
        "id": 143,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "·地址：福佑路168号·图片：",
        "id": 144,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 34,
        "text": "5.东方明珠广播电视塔·地址：世纪大道1号(陆家嘴地铁站1号入口步行220米)·图片：！",
        "id": 145,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 15,
        "text": "6.南京路步行街·地址：南京东路558号",
        "id": 146,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 147,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 123,
        "text": "maps_text_search 已完成 $v$ □   \n{   \n\"params\":{ \"city\":\"上海\", \"keywords\":\"外滩,东方明珠,豫园\"   \n}   \n\"response\":{ \"content\":[ { \"type\":\"text\", \"text\":\"{n \\\"suggestion\\\":{n \\\"keywords\\\":[]\\n \\\"ciytes\\\":[]\\n }\\n \\\"pois\\\":Nn{n\\\"id\\\":   \n\\\"B00155MF55\\\"\\n\\\"name\\\":\\\"上海豫园\\\"\\n\\\"address\\\":\\\"福佑路168号\\\"\\n\\\"typecode\\\":\\\"1",
        "id": 148,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 131,
        "text": "\"上海豫园\\\"\\n\\\"address\\\":\\\"福佑路168号\\\"\\n\\\"typecode\\\":\\\"110202\\\"\\n   \n\\\"photos\\\": {n\\\"title\\\": []\\n\\\"url\\\":   \n\\\"http://store.is.autonavi.com/showpic/faeb0264854cd82fbb315cb2ccacea0f\\\"\\n\\\"provider\\\":[]n\\n}\\n   \n{n\\\"id\\\":\\\"B00150F6D6\\\"\\n\\\"name\\\":\\\"东方明珠广播电视塔\\\"\\n\\\"address\\\":\\\"世纪大道1号(陆家嘴地铁   \n站1号入口步行220米)\\\"\\n\\",
        "id": 149,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 50,
        "text": "\"\\n\\\"address\\\":\\\"世纪大道1号(陆家嘴地铁   \n站1号入口步行220米)\\\"\\n\\\"typecode\\\":\\\"110202\\\"\\n\\\"photos\\\": {n\\\"title\\\":[]\\n \\\"url\\\": ",
        "id": 150,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "LLM会自主选择工具进行调用",
        "id": 151,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "CASE: 旅游攻略MCP (Github Copilot) ",
        "id": 152,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 21,
        "length_tokens": 36,
        "text": "Thinking：如何在Github Copilot中配置 MCP服务? Step1，打开vSStudio，配置mcp servers Preferences => Settings $\\Rightarrow$ 搜索mcp ",
        "id": 153,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 21,
        "length_tokens": 19,
        "text": "打开Editinsettings.json，可以看到具体的内容，找到mcp相关的部分，并添加",
        "id": 154,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 155,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 156,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 22,
        "length_tokens": 13,
        "text": "CASE: 旅游攻略MCP (Github Copilot) ",
        "id": 157,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 158,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "CASE: 旅游攻略MCP (Github Copilot) ",
        "id": 159,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "Select tools thatareavailable to chat ",
        "id": 160,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "From Cursor (Global) (Running) ",
        "id": 161,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 154,
        "text": "√ maps_regeocode将一个高德经纬度坐标转换为行政区划地址信息maps_geo 将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬..maps_ip_location IP定位根据用户输入的IP地址，定位IP的所在位置maps_Weather根据城市名称或者标准adcode查询指定城市的天气maps_search_detail查询关键词搜或者周边搜取到的POIID的详细信息maps_bicycling 骑行路径规划用于规划骑行通勤方案，规划时会考虑天桥、单行线、封路等情况。.maps_direction_walking步行路径规划APl可以根据输入起点终",
        "id": 162,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 149,
        "text": "行线、封路等情况。.maps_direction_walking步行路径规划APl可以根据输入起点终点经纬度坐标规划100km以内的..maps_direction_driving驾车路径规划APl可以根据用户起终点经纬度坐标规划以小客车、轿车通..maps_direction_transit_integrated 公交路径规划APl可以根据用户起终点经纬度坐标规划综合各...maps_distance距离测量API可以测量两个经纬度坐标之间的距离,支持驾车、步行以及球面距离测量maps_text_search关键词搜，根据用户传入关键词，搜索出相关的POI  \n? maps_around_s",
        "id": 163,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 87,
        "text": "t_search关键词搜，根据用户传入关键词，搜索出相关的POI  \n? maps_around_search周边搜，根据用户传入关键词以及坐标location，搜索出radius半径范围的POlMCP Server: fetch From CASE-MCP Demo-copilot/.vscode/mcp.json (Running)  \n? fetch Fetches a URL from the internet and optionaly extracts its contents as markdown.Although..",
        "id": 164,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 4,
        "text": "二 A %13",
        "id": 165,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 2,
        "text": "D ",
        "id": 166,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 4,
        "text": "Add Context... ",
        "id": 167,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 6,
        "text": "{ settings.json Current file ",
        "id": 168,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 169,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "Edit files in your workspace in agent mode ",
        "id": 170,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 2,
        "text": "0 ",
        "id": 171,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 23,
        "length_tokens": 12,
        "text": "Agent < Claude 3.7 Sonnet < I ",
        "id": 172,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 13,
        "text": "CASE: 旅游攻略MCP (Github Copilot) ",
        "id": 173,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": "用高德MCP，做上海一天旅游攻略",
        "id": 174,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "X GitHub Copilot ",
        "id": 175,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 43,
        "text": "我将帮您制作上海一天旅游攻略，可以利用高德地图的相关功能来规划路线和景点。我会使用高德地图的MCP服务来获取景点信息、路线规划等。",
        "id": 176,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 24,
        "text": "Ran maps_search_detail首先，让我们搜索上海的热门旅游景点，然后规划一条合理的一日游路线。",
        "id": 177,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 178,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "Ran maps_text_search ",
        "id": 179,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 63,
        "text": "我已经获取到上海的主要旅游景点信息。根据高德地图的数据，上海有许多值得游览的地方，包括东方明珠、上海豫园、陆家嘴、静安寺等知名景点，以及七宝古镇、朱家角等特色古镇。",
        "id": 180,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 42,
        "text": "现在，我将为您制定一个上海一日游的合理路线。我会选择市中心区域的几个代表性景点，这样可以减少交通时间，让您在一天内游览更多地方。",
        "id": 181,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 15,
        "text": "让我们选择几个经典景点并获取它们的详细信息：",
        "id": 182,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 24,
        "length_tokens": 94,
        "text": "3 \"id\":\"B00155MF55\"   \n5   \n{ \"id\": \"B00155MF55' \"name\"：\"上海豫园\" \"location\": \"121.492497,31. 227714\" , \"address\"：\"福佑路168号\", \"business_area\":\"城隍庙\", \"city\"：\"上海市\", \"tvpe\"：\"风景名胜;风景名胜;国家 ",
        "id": 183,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "CASE: 旅游攻略MCP (Github Copilot) ",
        "id": 184,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "Ran maps_text_search ",
        "id": 185,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 63,
        "text": "我已经获取到上海的主要旅游景点信息。根据高德地图的数据，上海有许多值得游览的地方，包括东方明珠、上海豫园、陆家嘴、静安寺等知名景点，以及七宝古镇、朱家角等特色古镇。",
        "id": 186,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 36,
        "text": "上海一日游攻略  \n上午行程：上海豫园 $^ +$ 城隍庙区域  \n08:30-11:30上海豫园",
        "id": 187,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 42,
        "text": "现在，我将为您制定一个上海一日游的合理路线。我会选择市中心区域的几个代表性景点，这样可以减少交通时间，让您在一天内游览更多地方。",
        "id": 188,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 127,
        "text": "地址：福佑路168号  \n门票：40元  \n开放时间：09:00-16:30（16:00停止入场)  \n亮点：豫园是明代古典园林，有九曲桥、湖心亭、玉玲珑等著名景点，建  \n议游览2-3小时  \n周边可以游览城隍庙商业区，品尝上海特色小吃如南翔小笼、生煎包等  \n中午：前往陆家嘴区域  \n11:30-12:30午餐时间",
        "id": 189,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 15,
        "text": "让我们选择几个经典景点并获取它们的详细信息：",
        "id": 190,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "Ran maps_search_detail ",
        "id": 191,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 84,
        "text": "我正在为您规划上海一天的旅游攻略，已经获取了上海主要的旅游景点信息。首先，我看到上海豫园是一处非常值得游览的地方，它位于福佑路168号，是国家AAAA级景点，门票40元，开放时间为09:00-16:30（停止入场时间16:00)，周二至周日开放。",
        "id": 192,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 10,
        "text": "让我继续查询其他几个主要景点的信息：",
        "id": 193,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 16,
        "text": "让我继续获取更多景点信息，包括东方明珠和静安寺：",
        "id": 194,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 217,
        "text": "可以在豫园周边享用上海本地特色美食  \n午餐后乘坐地铁前往陆家嘴区域（可乘坐10号线在豫园站上车，在陆家嘴  \n站下车)  \n下午行程：东方明珠+陆家嘴金融区  \n13:00-16:00东方明珠广播电视塔  \n地址：世纪大道1号 (距陆家嘴地铁站1号出口步行约220米)  \n门票：80元  \n开放时间：09:00-21：00 （最晚入场时间20:30)  \n等级：AAAAA级旅游景区  \n亮点：259米高的观光层可以360°俯瞰上海全景；还可参观上海历史发展  \n陈列馆  \n16:00-17:30陆家嘴金融区漫步  \n可以在陆家嘴金融区漫步，欣赏上海环球金融中心、上海中心大厦、金茂  \n大厦等",
        "id": 195,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 60,
        "text": "0陆家嘴金融区漫步  \n可以在陆家嘴金融区漫步，欣赏上海环球金融中心、上海中心大厦、金茂  \n大厦等现代建筑群  \n推荐前往外滩，隔江欣赏浦东现代化天际线",
        "id": 196,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "Ran maps_search_detail ",
        "id": 197,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 16,
        "text": "现在我将继续获取静安寺的信息，以完成我们的旅游攻略规划：",
        "id": 198,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "Ran maps_search_detail ",
        "id": 199,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 25,
        "length_tokens": 44,
        "text": "我已经为您收集了上海几个主要景点的详细信息，现在可以为您制定一个合理的一日游攻略了。以下是我基于高德地图数据整理的上海一天旅游计划:",
        "id": 200,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "CASE：Fetch网页内容抓取 ",
        "id": 201,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "CASE：Fetch网页内容抓取 ",
        "id": 202,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "Step1，添加Fetch Server ",
        "id": 203,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 204,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 27,
        "length_tokens": 6,
        "text": "通过SSEURL连接服务",
        "id": 205,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 206,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "CASE：Fetch网页内容抓取 ",
        "id": 207,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "Step2，使用具有MCP功能的客户端进行调用",
        "id": 208,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 13,
        "text": "比如：Cursor具有McP功能，可以在Agent模式下输入",
        "id": 209,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 40,
        "text": "用Fetch MCP，将  \nhttps://k.sina.com.cn/article_7732457677_1cce3f0cd0190  \n1eeeq.html 网页转化为Markdown格式",
        "id": 210,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "Called MCPtool fetch ",
        "id": 211,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 17,
        "text": "sina_article.md $+ 1 6 - 1 \\ √$ ",
        "id": 212,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 18,
        "text": "都会以下列句子做开头： \"嗨，我是一个盲...",
        "id": 213,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "继续获取内容，并写入到.md中",
        "id": 214,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 114,
        "text": "参与者一个接一个地以这句话做起始展开对话，最后均以面覆活动结束，吴迪看到一名学员回到酒店后，敞开着酒店房门痛这名学员在失明前是一位中学教师。几天后，她在训练营的闭“如果不沉浸在一个同伴社群中，承认自己的盲人身份将是不可眼下，傅高山和他的同事们仍从不同切口找寻机会，推动残障",
        "id": 215,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 85,
        "text": "时任麻省理工学院博士候选人的吴迪曾经在一加一进行了五个月的观察和实践，她将训练营中真实发生一幕记录到了她的论文当中：训练营的心理治疗师，每天晚上开办心理沙龙。一天，这名心理治疗师发起了一项\"游戏”，要求参与者完成一项简单的任务一每次对话",
        "id": 216,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 28,
        "text": "<error>Content truncated. Call the fetch tool with a start_index of 50o0 to get more content. </error> ",
        "id": 217,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 100,
        "text": "\"技术是平权的、普惠的，它可以弥补身体上的差异，对干残障者来![1(//k.sinaimg.cn/n/sinakd20250503s/290/w1080h810/20已将网页的后续内容成功追加写入到 sina_article.md 文件中，内容为Markdown格式。如果还需要对该文件进行整理、分段、提取正文或去除图片等操作，请随时告知！",
        "id": 218,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 219,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "CASE：Fetch网页内容抓取 ",
        "id": 220,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 71,
        "text": "← sina_article.md 1 ![](//k.sinaimg.cn/n/sinakd20250503s/88/w1080h608/20250503/ abbb-e404ba8e69f519cab12e6ba20ed688a2.jpg/w700d1q75cms.jpg? by=cms_fixed_width) ",
        "id": 221,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 33,
        "text": "在前AI时代，中国的科技企业的职场上，曾有一批残障人士出现在数据标注的岗位上，发挥所长。",
        "id": 222,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 52,
        "text": "2025年前后，随着DeepSeek等AI大数据的功能突飞猛进，替代了这些残障人士数据标记员的职能。残障人士们好不容易端起来的饭碗逐渐流失。",
        "id": 223,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "本文授权转载自AI故事计划 (ID：AIstory1)",
        "id": 224,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 67,
        "text": "![](//k.sinaimg.cn/n/sinakd20250503s/449/w1080h169/20250503/ 904f-deb7f9172a0be8e868240cc1675c7389.png/w700d1q75cms.jpg? by=cms_fixed_width) ",
        "id": 225,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 10,
        "text": "13 DeepSeeek夺走饭碗 ",
        "id": 226,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 48,
        "text": "微信提示收到了新消息，傅高山拿出手机，熟练地在屏幕前扣上特制的高倍放大镜，眼晴贴着放大镜，上下滑动读完了消息。",
        "id": 227,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 19,
        "text": "读清这条消息后，他有些无奈一又被婉拒了。",
        "id": 228,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 42,
        "text": "在傅高山的身后，他的同事们正在面对屏幕打字。他们大多数人看不见面前的屏幕，和傅高山一样，是视障人士。",
        "id": 229,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 96,
        "text": "此前，傅高山向国内某一线公司的工作人员发送了一份详细的方案，有关推进在AI领域的残障就业合作。作为一家残障公益集团的创始人，他希望这次能够谈成。这样一来，一批残障人士就有机会获得AI相关工作机会，企业也可以了解残障人士是如何参与到主流工作当中的，打开企业对残障人士工作能力的准确认知。借",
        "id": 230,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 49,
        "text": "5 可惜这次事与愿违。因为内部压力，这个团队考虑多日后还是婉言拒绝了：\"公司没有多余的精力来顾这个了。“对方的工作人员连连道歉。",
        "id": 231,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 29,
        "text": "这段时间，傅高山常常得到类似的回应。还有很多相似的项目需要推进，也还有很多问题等待解决。",
        "id": 232,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 30,
        "text": "打拼多年，傅高山都在做着相似的事：让残障人士在主流岗位端起饭碗。",
        "id": 233,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 47,
        "text": "他创立的一加一残障公益集团，主要理念是为残障人士提供医疗后的自主生活、工作技能培训，帮助大家适应新的身体特征，尽快走入独立自主的新生活。",
        "id": 234,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 84,
        "text": "傅高山思路活泛。在他的理解中，\"工作是他们和世界接触的方式\"。当人类社会势不可挡地进入人工智能时代，为残障人士接洽以电脑为生产力工具的工作，是引领大家往更广阔的外部世界中去，真正适应、独立生存于人类社会之中的法门。",
        "id": 235,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 76,
        "text": "![](//k.sinaimg.cn/n/sinakd20250503s/289/w1080h809/20250503/ 49c9-a49cc15ef9eb54c326d6c3c040061d72.jpg/w700d1q75cms.jpg? by=cms_fixed_width)图|傅高山团队的办公室 ",
        "id": 236,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 105,
        "text": "这与他身上鲜明的\"融合性\"相一致，作为一名先天视障者，傅高山自小摸索出一套实用的生存经验，可以分享和复刻；同时，作为一名从小在主流学习环境中成长起来的科技工作者，他敏锐地感知到，科技领域的无障碍化仍有很大提升空间，残障人士可以胜任AI工作，甚至比常人做得更好。",
        "id": 237,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 17,
        "text": "37 早几年，傅高山感受过浪潮的温度。",
        "id": 238,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 29,
        "length_tokens": 54,
        "text": "当时DeepSeek尚未崭露头角，人工智能的代名词还是\"AlphaGo\"。伴随AlphaGo迎来属于自己的时代，国内科技公司数据标注需求量大增，开始招募大量的数据标注员。",
        "id": 239,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 30,
        "length_tokens": 8,
        "text": "CASE：Fetch网页内容抓取 ",
        "id": 240,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 30,
        "length_tokens": 25,
        "text": "Thinking: 是搜索网页都可以通过Fetch转化为Markdown么？不是，有很多不能转化的情况，比如：",
        "id": 241,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 30,
        "length_tokens": 18,
        "text": "1) 网页动态加载   \n2）在robots.txt中注明不能抓取 ",
        "id": 242,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 30,
        "length_tokens": 31,
        "text": "用Fetch MCP，将https://baijiahao.baidu.com/s?id $\\ c =$ 1831086293173663558网页转化为Markdown格式",
        "id": 243,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 30,
        "length_tokens": 48,
        "text": "由于baijiahao.baidu.com 的robots.txt明确禁止自动化工具抓取其网页内容，因此无法将https://baijiahao.baidu.com/s?id=1831086293173663558自动转化为Markdown格式。",
        "id": 244,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 30,
        "length_tokens": 41,
        "text": "如果你有其他允许抓取的网页需要转为Markdown，欢迎继续提供链接，我会帮你处理。或者你可以手动复制网页内容，我可以帮你整理成Markdown格式。",
        "id": 245,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "Qwen-Agent + Fetch ",
        "id": 246,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 31,
        "length_tokens": 13,
        "text": "TO DO: 在Qwen-Agent中，集成Fetch Server",
        "id": 247,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "Step1，在tools中添加fetch",
        "id": 248,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 31,
        "length_tokens": 105,
        "text": "# MCP 工具配置   \ntools $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ { \"mcpServers\":{ \"amap-maps\":{ \"command\": \"npx\" \"args\":[ -y\" \"@amap/amap-maps-mcp-server\" 」， \"env\":{ \"AMAP_MAPS_API_KEY\": } }, \"fetch\":{ \"type\": \"sse' \"url\": \"https://mcp.api-inference.modelscope.cn/sse } } ",
        "id": 249,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "调整聊天界面中的建议提示词",
        "id": 250,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 31,
        "length_tokens": 82,
        "text": "#配置聊天界面   \nchatbot_config= { prompt.suggestions': [ 将   \nhttps://k.sina.com.cn/article_7732457677_1cce3f0cd01901eeeq.   \nhtml 网页转化为Markdown格式' 帮我找一下静安寺附近的停车场'， 推荐陆家嘴附近的高档餐厅 】   \n} ",
        "id": 251,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 6,
        "text": "Qwen-Agent + Fetch ",
        "id": 252,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 34,
        "text": "将 https://k.sina.com.cn/article_7732457677_1cce3f0cd01901eeeq.html 网页转化为Markdown格式",
        "id": 253,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "Startcallingtool \"fetch-fetch\".. ",
        "id": 254,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 14,
        "text": "{url:\"p/ioi4efdhstae：se ",
        "id": 255,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 256,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "网页的内容如下，已经转换为Markdown格式：",
        "id": 257,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 258,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 7,
        "text": "推动观念的巨墙 ",
        "id": 259,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 113,
        "text": "长期从事残障就业工作，傅高山意识到，厘清\"残疾\"和\"残障\"这组概念，十分重要。他认为，“残疾\"的潜台词中，“残\"是一种疾病、缺陷，把\"残疾人\"视为不健全之人，指向残疾人本身需要治疗。“残障\"则更强调\"障碍\"，社会可以开发、提供更多好用的工具、辅助和支持，衍生出来更多商业上积极的尝试。",
        "id": 260,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 139,
        "text": "在加入\"一加一\"之前，关钦是一名大厂员工。作为非残障人士，他之前对\"无障碍\"的理解和需求和普通人一样，“可能在网站或APP里加个图片或标签就是无障碍了\"，但当真正和残障人士们泡在一起，关钦发现这些远远不够。他认为，当企业看不到残障人士的真实需求，就不太会进行投资和开发，也就失去了一定的市场机会。观念巨墙不仅存在于社会和企业之中，更存在于残障人士家属，甚至残障人士自己的内心深处。",
        "id": 261,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 152,
        "text": "傅高山的同事在培训中心接待过一名高校子弟。他的父母都是高校教授，自己从小是\"别人家的孩子\"，学业一路攀爬，最终考取了博士学位。而后，他在一次事故中失去了视力。当事人无法接受事实，很快脱离了原来的人际关系，呆在家里几年，衣食住行全靠父母的保护和照顾，中途也尝试过各种\"重见光明\"的偏方，全部无果。这位年轻人终于认清，再也无法回到过去的生活，往后都要适应视障者的新身份，和新的身体情况共处。",
        "id": 262,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 98,
        "text": "在前AI时代，中国的科技企业的职场上，曾有一批残障人士出现在数据标注的岗位上，发挥所长。2025年前后，随着DeepSee等AI大数据的功能突飞猛进，替代了这些残障人士数据标记员的职能。残障人士们好不容易端起来的饭碗逐渐流失。本文授权转载自AI故事计划(ID：Alstory1)",
        "id": 263,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 92,
        "text": "完成培训后，他带着盲杖和生活技能回到高校家属院后，迎来的却是高知父母的闪躲：“要不你还是扔掉盲杖吧，或者还是像以前一样，就在家里吧，也没有危险，要不然邻居看着你带个盲杖在家属院走来走去，得怎么议论我们家呀？“",
        "id": 264,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 64,
        "text": "亲人的过度保护、关注和隐藏的异样眼光，都会给这些突然与过往生活告别的残障人士带来负担。当亲人真正尊重并理解他们在新身份下作为独立个体的需求，残障人士才能真正走向康复。",
        "id": 265,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "n1 ",
        "id": 266,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "DeepSeeek夺走饭碗 ",
        "id": 267,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 67,
        "text": "微信提示收到了新消息，傅高山拿出手机，熟练地在屏幕前扣上特制的高倍放大镜，眼睛贴着放大镜，上下滑动读完了消息。读清这条消息后，他有些无奈一又被婉拒了。",
        "id": 268,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 85,
        "text": "然而，最核心的是，残障人士如何正视并接受自己的新身份。“为什么是我？悲剧为什么发生在我身上？“当一个人突然变为主流之外的“残疾人\"，最初的反应通常是无法接受。在一加一的训练营，引导师们会营造特别的\"氛围\"来帮助他们接受身份的转变。",
        "id": 269,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 85,
        "text": "时任麻省理工学院博士候选人的吴迪曾经在一加一进行了五个月的观察和实践，她将训练营中真实发生一幕记录到了她的论文当中：训练营的心理治疗师，每天晚上开办心理沙龙。一天，这名心理治疗师发起了一项\"游戏\"，要求参与者完成一项简单的任务——每次对话",
        "id": 270,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 32,
        "length_tokens": 32,
        "text": "由于内容较多，上述信息被截断了。如果你需要剩余部分，请告诉我，我会继续为你提取剩下的内容。",
        "id": 271,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 6,
        "text": "Qwen-Agent + Fetch ",
        "id": 272,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 31,
        "text": "用Fetch MCP，将 https://baijiahao.baidu.com/s?id $\\ c =$ 1831086293173663558网页转化为Markdown格式",
        "id": 273,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 9,
        "text": "> Start calling tool \"fetch-fetch\".. ",
        "id": 274,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 6,
        "text": "√Finished tool calling. ",
        "id": 275,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 75,
        "text": "The sites robots.txt (https://baijahao.baidu.com/robots.txt),specifiesthatautonomous fetchingof this page is notallowed, ModelContextProtocol/1.0 (Autonomous; $^ +$ https://github.com/modelcontextprotocol/servers) https://baijiahao.baidu.com/s?id=1831086293173663558 ",
        "id": 276,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 18,
        "text": "User-agent: Baiduspider Disallow: /u?app_id=\\* ",
        "id": 277,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "User-agent: \\* disallow: / ",
        "id": 278,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 31,
        "text": "The asistant mustlettheuser know thatitfailedtoviewthe page.The asistant mayprovidefurther guidancebasedonthe above information. ",
        "id": 279,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 26,
        "text": "The asistant can tellthe user that they can try manuall fetching the page by using the fetch prompt within their Ul. ",
        "id": 280,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 69,
        "text": "很遗憾，由于该网页的robots.txt文件限制了自动抓取(https:/baijahao.baidu.com/robots.txt)，我无法直接获取并转换这个页面的内容为Markdown 格式。根据其规定，所有用户代理（除了 Baiduspider）都被禁止访问该站点的大部分内容。",
        "id": 281,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 33,
        "length_tokens": 52,
        "text": "不过，您可以尝试手动查看该网页，并复制所需内容到文本编辑器中进行格式转换。如果您需要进一步的帮助，比如如何手动转换网页内容为Markdown格式，或有其他相关问题，请随时告诉我！",
        "id": 282,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 34,
        "length_tokens": 6,
        "text": "CASE：Bing中文搜索",
        "id": 283,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "CASE：Bing中文搜索",
        "id": 284,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "Step1，添加 Fetch Server",
        "id": 285,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 35,
        "length_tokens": 113,
        "text": "\"mcpServers\":{ \"amap-maps\":{ \"command\": \"npx\", \"args\":[ -y\" \"@amap/amap-maps-mcp-server\" ] \"env\":{ \"AMAP_MAPS_API_KEY\": } \"fetch\":{ \"type\":\"sse\" \"url\": \"https://mcp.api-inference.modelscope.cn/sse/l }， \"bing-cn-mcp-server\":{ \"type\":\"sse\" \"url\": \"https://mcp.api-inference.modelscope.cn/sse/c } ",
        "id": 286,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 287,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "CASE：Bing中文搜索",
        "id": 288,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "Step2，使用具有MCP功能的客户端进行调用",
        "id": 289,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 13,
        "text": "比如：Cursor具有McP功能，可以在Agent模式下输入",
        "id": 290,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "用BingMCP，查找黄金相关的新闻",
        "id": 291,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "Called MCPtool bing_search Parameters: ",
        "id": 292,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "{ \"query\"：\"黄金 新闻\" ",
        "id": 293,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "Result: ",
        "id": 294,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 17,
        "text": "以下是通过Bing搜索引擎获取的最新\"黄金\"相关新闻：",
        "id": 295,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "1.黄金频道－东方财富网",
        "id": 296,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 81,
        "text": "·现货黄金突然大跌，足金金饰一夜跌了27元/克，上期所紧急公告！金价未来走势如何？黄金饰品突破1000元/克！高盛：国际金价或升破4200美元/盎司！金价暴涨再创历史新高，年内累计涨超 $20 \\%$ 。",
        "id": 297,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 24,
        "text": "2.\"五一\"假期黄金消费升温，“以旧换新\"要注意什么？|黄金..",
        "id": 298,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 41,
        "text": "·世界黄金协会报告显示，一季度全球金价20次突破历史新高，全球金饰消费总量同比下降 $2 1 \\%$ ，为2020年以来最低点。",
        "id": 299,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 17,
        "text": "3．【首席观察】 黄金：加速金融化_腾讯新闻 ",
        "id": 300,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 44,
        "text": "）黄金正加速金融化，全球央行、华尔街投行和个体投资者都在蜂拥购金，一个前所未有的\"黄金时代\"悄然来临。",
        "id": 301,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "4.黄金头条-亚汇网 ",
        "id": 302,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 65,
        "text": "·本周现货黄金市场剧烈波动，周线下跌 $2 . 2 8 \\%$ ，收于3240.60美元/盎司，较4月22日历史高点回落约 $7 \\%$ 。金价走势受多重因素影响。",
        "id": 303,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 15,
        "text": "5.今日黄金最新新闻_黄金行业最新消息-金投网",
        "id": 304,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 34,
        "text": "，现货黄金因非农数据影响剧烈震荡，金价短线急挫。最新行情、分析与行业动态可在此查看。",
        "id": 305,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 36,
        "length_tokens": 19,
        "text": "如需某条新闻的详细内容或转为Markdown格式，请告知具体链接！",
        "id": 306,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "Qwen-Agent + Bing ",
        "id": 307,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 12,
        "text": "TODO: 在Qwen-Agent中，集成bingcn",
        "id": 308,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "Step1，在tools中添加bing-cn",
        "id": 309,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 112,
        "text": "tools $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [{ \"mcpServers\":{ \"amap-maps\": { \"command\": \"npx\" \"args\":[ \"@amap/amap-maps-mcp-server\" ], \"env\":{ \"AMAP_MAPS_API_KEY\": } }， \"fetch\":{ \"type\":\"sse\" \"url\": \"https://mcp.api-inference.modelscope.cn/sse }, \"bing-cn-mcp-server\": { \"type\":\"sse\" \"url\": \"http",
        "id": 310,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 32,
        "text": " \"bing-cn-mcp-server\": { \"type\":\"sse\" \"url\": \"https://mcp.api-inference.modelscope.cn/sse } ",
        "id": 311,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "调整聊天界面中的建议提示词",
        "id": 312,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 37,
        "length_tokens": 105,
        "text": "chatbot_config $= \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ prompt.suggestions': [将  \nhttps://k.sina.com.cn/article_7732457677_1cce3f0cd01901eeeq.  \nhtml 网页转化为Markdown格式'帮我找一下静安寺附近的停车场'，推荐陆家嘴附近的高档餐厅，帮我搜索一下关于AI的最新新闻]  \n}",
        "id": 313,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "Qwen-Agent + Bing ",
        "id": 314,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "帮我搜索一下关于AI的最新新闻",
        "id": 315,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 15,
        "text": "√Start calling tool \"bing-cn-mcp-server-bing_search\".. ",
        "id": 316,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 13,
        "text": "{\"query\":\"Al最新新闻\",\"num_results\":5} ",
        "id": 317,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "→Finished tool calling. ",
        "id": 318,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "这是关于AI的一些最新新闻：",
        "id": 319,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 12,
        "text": "1.人工智能_人工智能最新资讯_CNMO ",
        "id": 320,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 104,
        "text": "链接：点击这里  \n$0$ 摘要：【CNMO科技消息】4月2日，全球最大的AI开源社区HuggingFace更新了大模型榜单。阿里通义千问近期开源的端到端全模态大模型Qwen2.5-Omni荣登总榜榜首，DeepSeek-V3-0324和群核的SpatialLM-Llama-1B则紧随其后，杭州公司一举霸榜全球开",
        "id": 321,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "2.人工智能新闻_CNMO ",
        "id": 322,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "$0$ 链接：点击这里",
        "id": 323,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 100,
        "text": "$0$ 摘要:2025年4月29日·【CNMO科技消息】自ChatGPT于2022年底爆红以来，生成式AI迅速成为科技界的核心议题，从聊天机器人到各类\"智慧\"产品，AI无所不在。但伴随着技术飞速发展的，还有人们对其潜在负面影响的担忧，尤其是AI可能失控、影响社会稳定甚至\"毁灭人类\"的...",
        "id": 324,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "3.人工智能消息_人工智能新闻_CNMO",
        "id": 325,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 111,
        "text": "$0$ 链接：点击这里  \n。摘要:2025年4月26日·【CNMO科技消息】自ChatGPT于2022年底爆红以来，生成式AI迅速成为科技界的核心议题，从聊天机器人到各类\"智慧\"产品，AI无所不在。但伴随着技术飞速发展的，还有人们对其潜在负面影响的担忧，尤其是AI可能失控、影响社会稳定甚至\"毁灭人类\"的终极危机论。",
        "id": 326,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 22,
        "text": "4.华为胡厚崑：2030年人工智能算力需求将增长500倍以上",
        "id": 327,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 78,
        "text": "$0$ 链接：点击这里  \n$0$ 摘要:2022年4月26日·【CNMO新闻】今天，人类文明的发展已经离不开算力的支持。小到打车，大到科学研究，人类对人工智能算力的需求将越来越大。这也是华为轮值董事长胡厚崑的观点。",
        "id": 328,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 15,
        "text": "5.人工智能_人工智能最新资讯_第2页_CNMO",
        "id": 329,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 96,
        "text": "链接：点击这里  \n○摘要：【CNMO科技】2月18日，马斯克旗下的人工智能公司xAI举办了一场新品发布会。此次发布会的主角是xAI公司最新研发的AI大模型——Grok3。在正式发布前，马斯克就曾公开放话，Grok3是\"地球上最聪明的人工智能\"，其推理能力将超越包括ChatGPT和DeepSeek",
        "id": 330,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 38,
        "length_tokens": 18,
        "text": "您可以点击链接查看详细的新闻内容。希望这些信息对您有所帮助！",
        "id": 331,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "Qwen-Agent + Bing ",
        "id": 332,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 26,
        "text": "华为胡厚崑：2030年人工智能算力需求将增长500倍以上这篇新闻的具体内容",
        "id": 333,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 17,
        "text": ">Start calling tool \"bing-cn-mcp-server-fetch_webpage\\*\".. ",
        "id": 334,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "→ Finished tool calling. ",
        "id": 335,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "这篇新闻的具体内容如下：",
        "id": 336,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 1,
        "text": "标题",
        "id": 337,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 23,
        "text": "华为胡厚崑：2030年人工智能算力需求将增长500倍以上-手机中国",
        "id": 338,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 1,
        "text": "内容",
        "id": 339,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 53,
        "text": "【CNMO新闻】今天，人类文明的发展已经离不开算力的支持。小到打车，大到科学研究，人类对人工智能算力的需求将越来越大。这也是华为轮值董事长胡厚崑的观点。",
        "id": 340,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 64,
        "text": "4月26日，在第19届华为全球分析师大会上，华为轮值董事长胡厚崑就华为整体战略上台演讲，他表示，华为预测到2030年人工智能的算力需求会增长500倍以上，呈现爆发式增长。",
        "id": 341,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 12,
        "text": "一般认为，人工智能算力包括四个部分：",
        "id": 342,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 72,
        "text": "1.系统平台：用来存储和运算大数据。  \n2.中枢系统：用来协调数据和业务系统，直接体现着治理能力。  \n3.场景：用来协同跨部门合作的运用。  \n4.数据驾驶舱：直接体现数据治理能力和运用能力。",
        "id": 343,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 30,
        "text": "具备以上四个方面的能力，人类就能获得更强的决策能力和信息筛选能力，从而解决实际问题。",
        "id": 344,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 81,
        "text": "但人工智能算力的突破需要科技人才投入脑力，所以华为对人才，尤其是对天才非常重视。就在4月25日，华为再次宣布面向全球招募\"天才少年\"，其招聘海报不限学历和学校，但要求面试者在数学、计算机等相关领域有所成就，并有志成为技术领军人物。",
        "id": 345,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 39,
        "length_tokens": 21,
        "text": "希望这些信息对您有所帮助！如果您还有其他问题或需要更多信息，请告诉我。",
        "id": 346,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "Summary (Bing中文搜索）",
        "id": 347,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 40,
        "length_tokens": 31,
        "text": "bing_search：搜索必应并获取结果列表。 参数:   \nquery:搜索关键词   \nnumresults:返回结果数量 (默认为5) ",
        "id": 348,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 40,
        "length_tokens": 27,
        "text": "fetch_webpage：根据搜索结果ID获取对应网页的内容。 参数: result_id:从bing_search返回的结果ID ",
        "id": 349,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "CASE: 桌面TXT统计器(MCP SDK使用)",
        "id": 350,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "MCP SDK功能",
        "id": 351,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 42,
        "length_tokens": 23,
        "text": "Python MCP SDK pip install mcp -i https://pypi.tuna.tsinghua.edu.cn/simple ",
        "id": 352,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 42,
        "length_tokens": 28,
        "text": "·创建MCP Server：提供标准化的API，供AI模型调用外部功能（如文件操作、数据库查询等）。",
        "id": 353,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 42,
        "length_tokens": 26,
        "text": "注册工具（Tools）：通过 @mcp.tool()装饰器，将 Python 函数暴露给Al模型使用。",
        "id": 354,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 42,
        "length_tokens": 19,
        "text": "·安全交互：支持权限控制，确保AI不会越权访问敏感数据。",
        "id": 355,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 42,
        "length_tokens": 20,
        "text": "·跨平台兼容：支持与OpenAl、Anthropic Claude 等 LLM集成。",
        "id": 356,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "FastMCP功能",
        "id": 357,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 43,
        "length_tokens": 16,
        "text": "FastMCP是PythonMCPSDK中的轻量级服务器框架：",
        "id": 358,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 43,
        "length_tokens": 16,
        "text": "简单易用： 仅需几行代码即可启动MCP Server。",
        "id": 359,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 43,
        "length_tokens": 17,
        "text": "·支持多种传输方式：如stdio（标准输入输出）、HTTP等",
        "id": 360,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 43,
        "length_tokens": 19,
        "text": "·自动工具发现：通过@mcp.tool()注解自动注册函数，供Al调用",
        "id": 361,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 14,
        "text": "CASE: 桌面TXT统计器 (MCP SDK使用)",
        "id": 362,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 53,
        "text": "TO DO: 搭建一个桌面TXT文件数量统计器 使用FastMCP功能1：count_desktop_txt_files，统计桌面上.txt文件的数量功能2：list_desktop_txt_files，获取桌面上所有.txt文件的列表",
        "id": 363,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 364,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 365,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 105,
        "text": "import os  \nfrom pathlib import Path  \nfrom mcp.server.fastmcp import FastMCP  \n#创建 MCP Server  \nmcp $\\mathbf { \\tau } = \\mathbf { \\tau }$ FastMCP(\"桌面 TXT文件统计器\")  \n@mcp.tool()  \ndef count_desktop_txt_files() $\\phantom { 0 } { - } >$ int:\"\"\"统计桌面上.txt文件的数量.\"#获取桌面路径desktop_path $\\mathbf { \\tau } = \\mat",
        "id": 366,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 98,
        "text": "件的数量.\"#获取桌面路径desktop_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ Path(os.path.expanduser(\"\\~/Desktop\"))# 统计 .txt 文件txt_files $\\mathbf { \\tau } = \\mathbf { \\tau }$ list(desktop_path.glob(\"\\*.txt\"))return len(txt files)  \n@mcp.tool()  \ndef list_desktop_txt_files() $\\scriptscriptstyle - >$ str:\"\"\"获取桌面上所",
        "id": 367,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 103,
        "text": "txt_files() $\\scriptscriptstyle - >$ str:\"\"\"获取桌面上所有 .txt 文件的列表\"#获取桌面路径desktop_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ Path(os.path.expanduser(\"\\~/Desktop\"))# 获取所有.txt文件txt_files $\\mathbf { \\tau } = \\mathbf { \\tau }$ list(desktop_path.glob(\"\\*.txt\"))#返回文件名列表if not txt_files:return\"桌面上没有找到.txt文件。\"#",
        "id": 368,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 82,
        "text": "))#返回文件名列表if not txt_files:return\"桌面上没有找到.txt文件。\"#格式化文件名列表file_list $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"\\n\".join([f\"- {file.name}\" for file in txt_files])return f\"在桌面上找到 {len(txt_files)} 个 .txt 文件:\\n{file_list}\"",
        "id": 369,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 370,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 22,
        "text": "if_name_ $\\scriptstyle = = \"$ _main__\":#初始化并运行服务器mcp.run()",
        "id": 371,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 44,
        "length_tokens": 31,
        "text": "@mcp.tool() 注解告诉 MCP该函数可被AI调用。mcp.run()启动服务器， 可选择stdio 或http 等通信方式.",
        "id": 372,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 14,
        "text": "CASE: 桌面TXT统计器 (MCP SDK使用)",
        "id": 373,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "mcp dev txt_counter.py ",
        "id": 374,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 11,
        "text": "打开浏览器访问http://localhost:5173/",
        "id": 375,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 80,
        "text": "Starting MCP inspector..   \nProxy server listening on port 3000   \nNew SSE connection   \nQuery parameters:{ transportType: 'stdio', command: 'uv', args: 'run --with mcp mcp run txt_counter.py', env:'{}'   \n}   \nStdio transport: command=D:\\AppData\\Local\\Programs\\Python\\Python31\\Scripts\\uv.exe， args=r",
        "id": 376,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 32,
        "text": "al\\Programs\\Python\\Python31\\Scripts\\uv.exe， args=run,--w   \nith,mcp,mcp,run,txt_counter.py ",
        "id": 377,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 15,
        "text": "MCP Inspector is up and running at http://localhost:5173 ",
        "id": 378,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 379,
        "type": "table",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 14,
        "text": "CASE: 桌面TXT统计器 (MCP SDK使用)",
        "id": 380,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 55,
        "text": "Step1，点击Connect   \nStep2，选择Tools $\\Rightarrow$ count_desktop_txt_files   \nStep3，点击RunTool   \n看到结果为2   \nStep4，选择Tools $\\Rightarrow$ list_desktop_txt_files   \nStep5，点击RunTool ",
        "id": 381,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "看到结果为",
        "id": 382,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 23,
        "text": "在桌面上找到2个.txt文件:  \n- 111.txt  \n-新建文本文档.txt",
        "id": 383,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 11,
        "text": "在history中，可以看到对应的tools请求情况History",
        "id": 384,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 6,
        "text": "4. tools/call ",
        "id": 385,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "Request: ",
        "id": 386,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 39,
        "text": "{ \"method\":\"tools/call\" \"params\":{ \"name\":\"list_desktop_txt_files\" \"arguments\": {, \"_meta\":{ \"progressToken\":1 }   \n人 ",
        "id": 387,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "Response: ",
        "id": 388,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 46,
        "length_tokens": 46,
        "text": "{\"content\":[{\"type\":\"text\"\"text\"：\"在桌面上找到 2 个 .txt 文件：\\n- 111.txt\\n- 新建 文本文  \n档.txt\"}],\"isError\": false  \n}",
        "id": 389,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "MCP Inspector ",
        "id": 390,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "MCP Inspector: ",
        "id": 391,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 25,
        "text": "专为MCP Server设计的开源调试工具，目的在于测试和优化MCP Server的功能.",
        "id": 392,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "MCPInspector的核心功能",
        "id": 393,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 3,
        "text": "服务器连接管理",
        "id": 394,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 60,
        "text": "支持本地和远程MCP服务器连接，可配置不同的传输方式(如 STDIO 或 $H \\mathsf { T } \\mathsf { P } { + } \\mathsf { S } \\mathsf { S } \\mathsf { E }$ ）。",
        "id": 395,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 21,
        "text": "允许传递环境变量和命令行参数，方便调试不同运行环境下的服务器。",
        "id": 396,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 13,
        "text": "提供执行历史记录（History），方便回工具调用过程。",
        "id": 397,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "服务浏览与调用",
        "id": 398,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 38,
        "text": "提供可视化界面（默认访问http://localhost:5173），展示MCP服务器提供的工具（Tools）、资源（Resources）、提示(Prompts）等服务。",
        "id": 399,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 47,
        "length_tokens": 29,
        "text": "开发者可以直接在UI中调用工具并查看执行记录，例如测试计算器工具的加法运算并实时观察返回结果。",
        "id": 400,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 48,
        "length_tokens": 2,
        "text": "UV工具",
        "id": 401,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 48,
        "length_tokens": 35,
        "text": "在MCP协议中，uv工具常用于启动和管理MCP服务器。例如，在配置MCP服务器时，可以通过uv命令指定运行的Python脚本。",
        "id": 402,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 48,
        "length_tokens": 13,
        "text": "以下是一个典型的MCP服务器配置示例：",
        "id": 403,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 48,
        "length_tokens": 20,
        "text": "在这个配置中，uv被用来运行main.py脚本，从而启动MCP服务器",
        "id": 404,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 48,
        "length_tokens": 59,
        "text": "{ \"mcpServers\": { \"example-server\": { \"name\": \"example-server\", \"type\": \"stdio\", \"command\": \"uv\", \"args\": [ \"--directory\", \"/path/to/your/project\", \"run\", \"main.py\" ] }   \n}   \n} ",
        "id": 405,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "打卡： Agent + MCP",
        "id": 406,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 49,
        "length_tokens": 106,
        "text": "可以使用Qwen-Agent，或其他具有Agent能力的客户端，比如Cursor,Cherry Studio，集成MCP服  \n务，并通过自然语言进行调用  \n1）规划从xx到xx的7天自驾游  \n2）获取网页 https://k.sina.com.cn/article 7732457677 1cce3f0cd01901eeeq.html 内容，并转化为  \nMarkdown格式  \n3）检索最新的关税新闻  \n4）统计桌面上的txt的文件数量",
        "id": 407,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "Agent2Agent使用",
        "id": 408,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 5,
        "text": "什么是Agent2Agent",
        "id": 409,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 10,
        "text": "Agent2Agent（A2A）协议:",
        "id": 410,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 44,
        "text": "Google于2025年4月9日发布的A2A协议，A2A是一个开放协议目的是促进AIAgent之间的协作，适用于大规模、多智能体的部署。",
        "id": 411,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 10,
        "text": "A2A基于五个核心原则：",
        "id": 412,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 92,
        "text": "拥抱智能体能力：支持自然、非结构化的协作模式。  \n·利用现有标准：使用 HTTP、Server-Sent Events (SSE)和JSON-RPC,确保与现有系统的兼容性。默认安全：支持企业级认证和授权，启动时与OpenAPI保持一致。  \n·支持长期任务：处理从快速任务到深入研究的任务，提供实时反馈通知和状态更新。",
        "id": 413,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 19,
        "text": "，多模态支持：支持文本、音频、 视频流等多模态通信。",
        "id": 414,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 415,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 52,
        "length_tokens": 5,
        "text": "什么是Agent2Agent",
        "id": 416,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 52,
        "length_tokens": 36,
        "text": "Agent Card：公共元数据文件，位于/.wellknown/agent.json，描述智能体的能力、技能、端点URL和认证要求，用于能力发现。",
        "id": 417,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "demo/ui/utils/agent_card.py ",
        "id": 418,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 52,
        "length_tokens": 79,
        "text": "3   \n4 def get_agent_card(remote_agent_address: str) $$ AgentCard:   \n5 \"\"\"Get the agent card.\"\"   \n6 agent_card $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get(   \n7 f\"http://{remote_agent_address}/.well-known/agent.json\"   \n8 ）   \n9 return AgentCard(\\*\\*agent_card.json()) ",
        "id": 419,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 52,
        "length_tokens": 21,
        "text": "A2A服务器：暴露HTTP端点，实现A2A协议方法，管理任务执行。",
        "id": 420,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 52,
        "length_tokens": 31,
        "text": "A2A客户端：应用程序或智能体，消费A2A服务，通过发送tasks/send或tasks/sendSubscribe请求与服务器交互。 ",
        "id": 421,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 53,
        "length_tokens": 5,
        "text": "什么是Agent2Agent",
        "id": 422,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 423,
        "type": "table",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 5,
        "text": "什么是Agent2Agent",
        "id": 424,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 10,
        "text": "A2A的典型工作流程如下：",
        "id": 425,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 20,
        "text": "1发现：客户端从/.well-known/agent.json 获取 Agent Card，了解智能体能力。",
        "id": 426,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 10,
        "text": "2启动： 客户端发送任务请求：",
        "id": 427,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 12,
        "text": "·使用 tasks/send处理即时任务，返回最终Task对象",
        "id": 428,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 18,
        "text": "·使用 tasks/sendSubscribe 处理长期任务，服务器通过SSE事件发送更新。",
        "id": 429,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 16,
        "text": "3处理：服务器处理任务，可能涉及流式更新或直接返回结果",
        "id": 430,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 29,
        "text": "4交互（可选）：若任务状态为input-required，客户端可发送更多消息，使用相同Task ID 提供输入。",
        "id": 431,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 18,
        "text": "5 完成：任务达到终端状态（如completed、failed或canceled）。",
        "id": 432,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 23,
        "text": "此流程支持简单任务和需要多次交互的复杂任务，特别适合多模态通信环境",
        "id": 433,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 434,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 7,
        "text": "A2A 与 MCP的关系",
        "id": 435,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 30,
        "text": "A2A与MCP 是互补的 可以将A2A看成是一个电话簿 MCP看成是工具说明书。",
        "id": 436,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 13,
        "text": "MCP (模型上下文协议) 用于工具和资源",
        "id": 437,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 41,
        "text": "·通过结构化的输入/输出将代理连接到工具、API和资源。  \n·GoogleADK支持MCP工具，允许与Agent一起使用广泛的MCP 服务器。",
        "id": 438,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 15,
        "text": "A2A（Agent2Agent协议）用于Agent之间的协作",
        "id": 439,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 23,
        "text": "·在不同Agent之间实现动态的、多模态的通信，而无需共享内存、资源和工具。",
        "id": 440,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 11,
        "text": "·这是一个由社区驱动的开放标准。",
        "id": 441,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 18,
        "text": "·在Google ADK、 LangGraph 和 Crew.Al 中有提供的参考示例",
        "id": 442,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 443,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 55,
        "length_tokens": 41,
        "text": "MCP 确保Agent能访问数据和工具（如通过Google Drive、Slack、GitHub 等）。  \nA2A则让Agent能协作处理这些数据，完成任务。",
        "id": 444,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 7,
        "text": "A2A 与 MCP的关系",
        "id": 445,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 4,
        "text": "协议的交集",
        "id": 446,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 51,
        "text": "Google建议应用将A2A智能体通过AgentCard描述注册为MCP资源。这样，框架既能通过MCP调用工具，又能通过A2A与用户、远程智能体通信，实现无缝协作。",
        "id": 447,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 28,
        "text": "例如，一个智能体可能通过MCP从数据库检索数据，然后通过A2A与另一个智能体协作分析数据。",
        "id": 448,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 4,
        "text": "Agentic Application ",
        "id": 449,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 450,
        "type": "image",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 56,
        "length_tokens": 25,
        "text": "AgentCard：类似智能体的\"身份证\"或\"服务菜单\"，描述智能体能提供哪些资源（能力）。",
        "id": 451,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 57,
        "length_tokens": 7,
        "text": "A2A 与 MCP的关系",
        "id": 452,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 57,
        "length_tokens": 5,
        "text": "MCP调用: ",
        "id": 453,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 57,
        "length_tokens": 64,
        "text": "智能体A的AgentCard声明了“数据库查询\"能力，并在MCP注册。  \n框架通过MCP直接调用智能体A的\"数据库查询\"资源，获取数据。  \n此时MCP $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ “能力执行器”。",
        "id": 454,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 57,
        "length_tokens": 5,
        "text": "A2A通信：",
        "id": 455,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 57,
        "length_tokens": 78,
        "text": "智能体A需要进一步分析数据，但自身不具备该能力。  \n它通过A2A协议（如发送一条结构化消息）联系智能体B，请求协作。  \n智能体B的AgentCard声明了“数据分析\"能力，并通过A2A返回结果。  \n此时A2A像是一个\"协作总线\"。",
        "id": 456,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "A2A 与 MCP的关系",
        "id": 457,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "Thinking: 为何这样设计？",
        "id": 458,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 10,
        "text": "中商银行 解耦能力与通信：",
        "id": 459,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 41,
        "text": "MCP专注标准化能力调用（类似微服务），A2A专注动态协作（类似聊天）。  \n避免智能体既要处理功能逻辑，又要处理通信协议。",
        "id": 460,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 8,
        "text": "·无缝扩展性：",
        "id": 461,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 46,
        "text": "新智能体只需注册AgentCard到MCP，即可被其他智能体发现和调用。  \nA2A协议允许智能体动态组队（例如临时组建一个\"数据分析小组\"）。",
        "id": 462,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "兼容现有架构：",
        "id": 463,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 29,
        "text": "MCP可集成传统工具（如数据库、API），A2A可对接人类用户或其他异构智能体。",
        "id": 464,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 58,
        "length_tokens": 77,
        "text": "MCP像\"应用商店\"：提供标准化服务（如地图、支付）。  \nA2A像\"微信群聊”：智能体在群里用通用语言（协议）讨论如何分工。  \nAgentCard像\"个人资料\"：写明\"我会修图\"\"我会翻译\"，方便群里 $@$ 你干活。",
        "id": 465,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 14,
        "text": "CASE: 安排篮球活动 (多智能体协作) ",
        "id": 466,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 18,
        "text": "TODO：实现了一个自动根据天气情况决定是否安排篮球活动的场景。",
        "id": 467,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 11,
        "text": "WeatherAgent:提供天气预报服务的智能体",
        "id": 468,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 11,
        "text": "BasketBallAgent:负责篮球活动安排的智能体",
        "id": 469,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 4,
        "text": "整体流程如下：",
        "id": 470,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 12,
        "text": "1.BasketBallAgent接收到用户提供的活动日期",
        "id": 471,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 20,
        "text": "2.BasketBalIAgent通过A2A协议向WeatherAgent请求该日期的天气信息",
        "id": 472,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 15,
        "text": "3.WeatherAgent返回天气数据 (温度和天气状况）",
        "id": 473,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 59,
        "length_tokens": 39,
        "text": "4.BasketBallAgent根据天气状况做出决策：-如果天气不含\"雨\"或\"雪\"，确认安排篮球活动-否则，取消活动并提供取消原因",
        "id": 474,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 14,
        "text": "CASE: 安排篮球活动 (多智能体协作) ",
        "id": 475,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 4,
        "text": "关键步骤: ",
        "id": 476,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 7,
        "text": "1、A2A协议实现",
        "id": 477,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 12,
        "text": "基于HTTPRESTAPI实现，关键组成部分包括：",
        "id": 478,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 23,
        "text": "·Agent Card:通过'/.well-known/agent.json\\`端点暴露的智能体能力描述",
        "id": 479,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 16,
        "text": "·标准化任务交互：使用统一的任务提交和结果获取格式",
        "id": 480,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 60,
        "length_tokens": 9,
        "text": "·身份验证：通过APIKey进行授权",
        "id": 481,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 14,
        "text": "CASE: 安排篮球活动 (多智能体协作) ",
        "id": 482,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 5,
        "text": "2、WeatherAgent实现",
        "id": 483,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 13,
        "text": "WeatherAgent是一个基于FastAPi实现的服务：",
        "id": 484,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 92,
        "text": "‡ Agent Card定义   \nNEATHER_AGENT_CARD ={ \"name\": \"WeatherAgent\", \"version\": \"1.0\", \"description\":\"提供指定日期的天气数据查询\", \"endpoints\": { \"task_submit\":\"/api/tasks/weather\", \"sse_subscribe\": \"/api/tasks/updates\" }, \"input_schema\": {...}, \"authentication\": {\"methods\": [\"APl_Key\"]}   \n：任务处理   \nDapp.post(\"/api/t",
        "id": 485,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 84,
        "text": "thods\": [\"APl_Key\"]}   \n：任务处理   \nDapp.post(\"/api/tasks/weather\")   \nsync def handle_weather_task(request: WeatherTaskRequest):   \n\"\"处理天气查询任务.\"   \ntarget_date $\\mathbf { \\tau } = \\mathbf { \\tau }$ request.params.get(\"date\")   \n#参数验证   \nif not target_date or target_date not in weather_db: raise HTTPEx",
        "id": 486,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 77,
        "text": "ate or target_date not in weather_db: raise HTTPException(status_code $\\scriptstyle - 4 0 0$ ， detail $| = |$ \"无效日期参数\")   \nreturn { \"task_id\": request.task_id, \"status\": \"completed\", \"artifact\": { \"date\": target_date, \"weather\": weather_db[target_date] }   \n11 ",
        "id": 487,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 488,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 62,
        "length_tokens": 14,
        "text": "CASE: 安排篮球活动 (多智能体协作) ",
        "id": 489,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 62,
        "length_tokens": 7,
        "text": "3、BasketBallAgent实现 ",
        "id": 490,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 62,
        "length_tokens": 15,
        "text": "BasketBalIAgent是调用方，负责消费WeatherAgent的服务：",
        "id": 491,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 62,
        "length_tokens": 100,
        "text": "def check_weather(self, target_date: str) $- >$ dict: \"\"通过A2A协议查询天气.\" #获取天气智能体能力描述 agent_card $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get( f\"{self.weather_agent_url}/.well-known/agent.json\" ).json() #构造任务请求 task $\\mathbf { \\tau } = \\mathbf { \\tau }$ self._create_task(target_date) #发送任务请求 resp",
        "id": 492,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 62,
        "length_tokens": 54,
        "text": "tau }$ self._create_task(target_date) #发送任务请求 response $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.post( f\"{self.weather_agent_url}{agent_card['endpoints']['task_submit']}\", json=task, ",
        "id": 493,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 62,
        "length_tokens": 53,
        "text": "headers $\\ c =$ {\"Authorization\": f\"Bearer {self.api_key}\"} ） if response.status_code $= = 2 0 0$ ： return response.json()[\"artifact\"] else: raise Exception(f\"天气查询失败: {response.text}\") ",
        "id": 494,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 63,
        "length_tokens": 14,
        "text": "CASE: 安排篮球活动 (多智能体协作) ",
        "id": 495,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 63,
        "length_tokens": 84,
        "text": "def schedule_meeting(self, date: str): \"\"\"综合决策逻辑 try: result $\\mathbf { \\tau } = \\mathbf { \\tau }$ self.check_weather(date) if \"雨\" not in result[\"weather\"][\"condition\"] and \"雪\" not in   \nresult[\"weather\"][\"condition\"]: return {\"status\": \"confirmed\", \"weather\": result[\"weather\"]} else: return {\"statu",
        "id": 496,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 63,
        "length_tokens": 45,
        "text": "\"weather\": result[\"weather\"]} else: return {\"status\": \"cancelled\",\"reason\": \"恶劣天气\"} except Exception as e: return {\"status\": \"error\", \"detail\": str(e)} ",
        "id": 497,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 63,
        "length_tokens": 3,
        "text": "运行结果：",
        "id": 498,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 63,
        "length_tokens": 97,
        "text": "1 $\\cdot ^ { * * } 2 0 2 5$ 年5月8日\\*\\*-天气状况为\"雷阵雨\"，因包含'雨\"字，BasketBallAgent取消活动2. $\\ast \\ast _ { 2 0 2 5 }$ 年5月10日\\*\\*-天气状况为\"多云转晴\"，不包含\"雨\"或\"雪\"，BasketBallAgent确认活动",
        "id": 499,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 64,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 500,
        "type": "text",
        "file_name": "11-MCP与A2A的应用"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "Agent智能体系统的设计与应用",
        "id": 0,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "Agent智能体系统的设计与应用",
        "id": 2,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 2,
        "length_tokens": 75,
        "text": "AlAgent对比  \n·智能体架构设计  \n反应式(Reactive)  \n深思熟虑 (Deliberative)  \n混合式 (Hybrid)CASE：私募基金运作指引问答助手 (反应式)CASE：智能投研助手 (深思熟虑)CASE：投顾AI助手 (混合式)",
        "id": 3,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "Al Agent: ",
        "id": 4,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 3,
        "length_tokens": 18,
        "text": "规划（Planning）：将任务分解为较小的、可管理的子目标",
        "id": 5,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 3,
        "length_tokens": 33,
        "text": "通过LLM，能够自主理解、规划、执行复杂任务的系统。给它一个目标，AIAgents就能完成剩下的全部工作",
        "id": 6,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 3,
        "length_tokens": 34,
        "text": "记忆（Memory）：短期记忆，进行上下文学习；长期记忆，-般通过外部载体储存和快速检索来实现",
        "id": 7,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 3,
        "length_tokens": 15,
        "text": "工具使用（Tooluse）：调用外部API，获取额外信息",
        "id": 8,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 9,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 13,
        "text": "Generative Agents: Interactive Simulacra of Human Behavior ",
        "id": 10,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "从自动化到自主化：",
        "id": 11,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 17,
        "text": "Joon Sung Park Stanford University Stanford,U joonspk@stanford.edu ",
        "id": 12,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 17,
        "text": "Joseph C.O'Brien Stanford University Stanford,U jobrien3@stanford.edu ",
        "id": 13,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 80,
        "text": "Carrie J. Cai   \nGoogleResearch   \nMountain View, CA,USA   \ncjcai@google.com   \nMeredithRingel Morris   \nGoogle Research   \nSeattle,WA,U   \nmerrie@google.com   \nPercy Liang   \nStanford University   \nStanford,U   \npliang@cs.stanford.edu   \nMichael S.Bernstein   \nStanford University   \nStanford,U   \nm",
        "id": 14,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 20,
        "text": "ernstein   \nStanford University   \nStanford,U   \nmsb@cs.stanford.edu ",
        "id": 15,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 16,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 17,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 94,
        "text": "Generative Agents: Interactive Simulacraof Human Behavior， 2023https://arxiv.0rg/pdf/2304.03442v1.pdfGoogle和Stanford学者构造了一个《西部世界》小镇，打造模拟人类行为的AgentGenerativeAgents（生成式智能体），利用生成模型来模拟可信人类行为的Agent，并证明它们能生成可信的个人和突发的群体行为",
        "id": 19,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 20,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "Generative Agents ",
        "id": 21,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 37,
        "text": "This is a pre-computed replay of a simulation that accompanies the paper entitled \"Generative Agents: Interactive Simulacra of Human Behavior.\" It is for demonstration purposes only. ",
        "id": 22,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 22,
        "text": "Current Time:   \nMonday, February 13, 2023 at   \n6:13:10AM ",
        "id": 23,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "Play 1 Pause ",
        "id": 24,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 29,
        "text": "http://reverie.herokuapp.com/arXiv_Demo/#25个Agent居住在Smallville小镇，每个Agent都可以：",
        "id": 26,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 34,
        "text": "与别人和环境交流；  \n记住并回忆它们所做的和观察到的事情；反思这些观察结果；  \n制定每天的计划",
        "id": 27,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 28,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "Generative Agents ",
        "id": 29,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 6,
        "length_tokens": 20,
        "text": "用自然语言设定每个Agent的角色，包括它们的职业与其他Agent的关系",
        "id": 30,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 6,
        "length_tokens": 84,
        "text": "比如：JohnLin是一名药店店主，他乐于助人。他一直在寻找使客户更容易获得药物的方法。JohnLin的妻子是大学教授MeiLin，它们和学习音乐理论的儿子EddyLin住在一起；JohnLin 非常爱它的家人；JohnLin认识隔壁的老夫妇SamMoore和Jennifer Moore 好几年·...",
        "id": 31,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 6,
        "length_tokens": 42,
        "text": "在沙盒的每个Step，Agent都输出一个自然语句，描述它们当前的动作，比如：IsabellaRodriguez正在写日记、Isabella Rodriguez正在查看邮件等。",
        "id": 32,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 33,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 6,
        "length_tokens": 44,
        "text": "然后这些自然语言将转化为影响沙盒的具体动作动作以一组表情符号显示在沙盒界面上，这些表情符号提供了动作的抽象表征。",
        "id": 34,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "Agent与环境交互 ",
        "id": 35,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 7,
        "length_tokens": 32,
        "text": "Smallville小镇有许多公共场景，包括咖啡馆、酒吧、公园、学校、宿舍、房屋和商店。",
        "id": 36,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 7,
        "length_tokens": 46,
        "text": "每个公共场景包括自己的功能和设施，比如房子中有厨房、厨房中有炉子。在Agent的生活空间中有床、桌子、衣柜、架子、浴室、厨房等。",
        "id": 37,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 7,
        "length_tokens": 72,
        "text": "Agent可以在Smallville小镇随意走动，导航前往一座建筑，或者去接近另一个Agent。Agent的移动由GenerativeAgents的架构和沙盒引擎控制（当模型指示Agent移动到某个位置时，它会计算Agent到达目的地的步行路径，然后开始移动）",
        "id": 38,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 7,
        "length_tokens": 35,
        "text": "在公共环境中，Agent会影响其他人的状态，比如：某Agent睡觉时床是被占用的，当Agent用完早餐冰箱可能是空的",
        "id": 40,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "Agent之间的信息传播",
        "id": 41,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 15,
        "text": "GenerativeAgents具有社交属性，信息可以在Agent之间进行传播",
        "id": 42,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 23,
        "text": "比如Sam和Tom在杂货店中相遇，Sam告诉了Tom他在竞选镇长；",
        "id": 43,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 19,
        "text": "在Sam离开后，Tom和John讨论了Sam 赢得选举的机会;",
        "id": 44,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 11,
        "text": "Sam: Hey Tom, how's it going? ",
        "id": 45,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 10,
        "text": "Tom: Good, thanks. What's up? ",
        "id": 46,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 27,
        "text": "逐渐地，Sam的竞选成为镇上的热门话题，有人支持他，有人犹豫不决。",
        "id": 47,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 27,
        "text": "Tom: Really? That's great news! Why are you running? Sam: l've been involved in local politics for years now, ",
        "id": 48,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 26,
        "text": "Sam: Well, I wanted to talk to you about something. l'm actually running for mayor in the upcoming local election. ",
        "id": 49,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 28,
        "text": "John: I heard that Sam Moore is running for mayor in the local election. Do you think he has a good chance of winning? ",
        "id": 50,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 35,
        "text": "Tom: l do think he has a good chance. He's been working hard in the community and I think he will get a lot of support. What do you think? ",
        "id": 51,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 8,
        "length_tokens": 27,
        "text": "John: l think it's great that he's running. I'm curious to see who else is running and how the election will turn out. ",
        "id": 52,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "Agent的关系记忆",
        "id": 53,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 25,
        "text": "随着时间的推移，小镇上的Agent形成了新的关系，并记住了它们与其他Agent的互动。",
        "id": 54,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "比如Sam 一开始不认识 Latoya。",
        "id": 55,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 36,
        "text": "在约翰逊公园散步时，Sam碰到了Latoya，互相做了自我介绍，Latoya提到自己正在进行一个摄影项目：",
        "id": 56,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 13,
        "text": "Latoya：我正在这里给一个项目拍摄照片。",
        "id": 57,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 25,
        "text": "在后来他们又相遇了，Sam与Latoya的对话表明了他们还记得这件事",
        "id": 58,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 19,
        "text": "Sam：Latoya，你的项目进展如何？Latoya：进展得好！",
        "id": 59,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "记忆流: ",
        "id": 60,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 9,
        "length_tokens": 98,
        "text": "：是GenerativeAgents的核心模块，全面记录Agent经验的数据库。  \n·Agent会从记忆流中检索相关记录，用来规划Agent的动作，并对环境做出适当反应。每次行为都会被记录，从而生成更高级别的行为指令。  \n所有的内容都会被记录，并以自然语言进行推理这样Agent能够使用大语言模型 （GPT3.5或GPT4.0）进行推理。",
        "id": 61,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "Generative Agents核心模块 ",
        "id": 62,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 63,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 10,
        "length_tokens": 33,
        "text": "1）长期记忆，Agent要做多轮决策，所以要考虑更长的上下文，这些信息会超过GPT模型的token上限。",
        "id": 64,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 10,
        "length_tokens": 41,
        "text": "2）外部工具，使用外部工具可以让GPT调用更多的服务作为输入/输出，增强GPT的能力，这好比人会使用这些外部工具，那么GPT也可以使用",
        "id": 65,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 10,
        "length_tokens": 27,
        "text": "3）短期记忆，基于Attention机制将长期记忆中最相关的部分喂给GPT，生成结果",
        "id": 66,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "Al Agent对比",
        "id": 67,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 68,
        "type": "table",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "Agent: 自主智能体的力量",
        "id": 69,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 12,
        "length_tokens": 76,
        "text": "Agent通常被实现为LLM通过工具调用（基于环境反馈）在循环中执行动作的系统。正如Anthropic指出的，Agent可以处理复杂的任务，但其实现很简单。它们通常是LLM根据环境反馈使用工具的循环。因此，清晰全面的设计工具集以及文档对于Agent的成功至关重要。",
        "id": 70,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 71,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "Agent: 自主智能体的力量",
        "id": 72,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "Thinking: 什么时候使用Agent?",
        "id": 73,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 13,
        "length_tokens": 143,
        "text": "Agent适用于那些开放性问题，这些问题很难或无法预测所需的步骤数量，并且无法硬编码固定路径。  \nLLM可能会运行多个回合，因此你需要对其决策能力有一定的信任。  \n智能体的自主性使其非常适合在受信任的环境中扩展任务。然而，自主性也意味着更高的成本和可能出现的错误累积。  \n$\\Rightarrow$ 建议在沙盒环境中进行广泛的测试，并设置适当的防护栏。编程Agent可以解决涉及对多个文件进行编辑的任务。  \nComputerUse实现中，Claude通过计算机完成任务。",
        "id": 74,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 75,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "打造Best Practice ",
        "id": 76,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 14,
        "length_tokens": 187,
        "text": "AI智能体和工作流是互补的，可以集成在一起以实现最佳效果，尤其是在复杂的现实世界应用中。·增强自动化  \nAI智能体可以自主处理特定任务，而工作流则将这些任务协调成一个连贯、高效的过程。  \n·可扩展性  \n在结构化工作流中结合多个AI智能体，可以使组织高效扩展运营，减少人工工作量，提高生产力。·弹性与适应性  \n虽然单个智能体可以应对局部变化，但工作流可以动态调整整体流程，用来与战略目标保持一致。在智能制造系统中：  \n·AI智能体可以监控设备性能、预测维护需求并优化生产计划。  \n·工作流则负责原材料采购、生产排序、质量保证和物流，确保从原材料到产品交付的无缝过渡。",
        "id": 77,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "打造Best Practice ",
        "id": 78,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 15,
        "length_tokens": 11,
        "text": "选择适合你的系统才是成功的关键：",
        "id": 79,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 15,
        "length_tokens": 57,
        "text": "·在AI领域，成功并不是关于构建复杂的系统，而是构建最适合需求的系统.·从简单的提示开始，只有在简单方案解决步了时，再添加多步智能体系统。在实现智能体时，有三个核心原则：",
        "id": 80,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 15,
        "length_tokens": 77,
        "text": "1.保持智能体设计的简洁性：避免不必要的复杂性，专注于核心功能。  \n2.优先考虑透明性：明确展示智能体的规划步骤，让用户清楚了解其决策过程。  \n3.打造Function/MCP：打造工具，以及说明文档和测试，确保Agent与外部环境的交互。",
        "id": 81,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 15,
        "length_tokens": 54,
        "text": "框架可以帮助你快速上手，但不要害怕在进入生产阶段时减少抽象层，直接使用基础组件。遵循这些原则，你可以创建出不仅强大而且可靠、可维护且值得用户信赖的智能体系统。",
        "id": 82,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "智能体分类 (反应式 Reactive)",
        "id": 83,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 16,
        "length_tokens": 11,
        "text": "Thinking: 都有哪些典型的AIAgent?",
        "id": 84,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "1、反应式 (Reactive)",
        "id": 85,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 16,
        "length_tokens": 18,
        "text": "反应式架构： 快速决策的\"直觉型\"智能体",
        "id": 86,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 16,
        "length_tokens": 55,
        "text": "反应式架构是AI智能体设计中最简单直接的模式。在这种架构！析当前情况，确定下一步要采取的行动。然后，在环境中执行处理这些观察结果，重新评估下一步行动，选择另一个行动，",
        "id": 87,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 88,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 9,
        "text": "智能体分类 (反应式 Reactive)",
        "id": 89,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "反应式架构 (Reactive Architecture",
        "id": 90,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 21,
        "text": "特点：基于当前环境即时决策，无长期规划，依赖预设规则快速响应。",
        "id": 91,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 4,
        "text": "工作原理:",
        "id": 92,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 14,
        "text": "·感知： 获取环境输入（如传感器数据）。",
        "id": 93,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 14,
        "text": "·决策：LLM或规则系统立即生成响应动作。",
        "id": 94,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 17,
        "text": "·执行：执行动作并观察结果，循环往复直至任务完成。",
        "id": 95,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "优势: ",
        "id": 96,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 27,
        "text": "·速度快：无复杂推理，适合毫秒级响应的场景 (如机器人避障、高频交易)",
        "id": 97,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 17,
        "text": "·简单可靠：行为由明确规则驱动， 易于设计和验证 ",
        "id": 98,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "局限：",
        "id": 99,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 25,
        "text": "·缺乏适应性： 无法处理未预见的场景或需多步规划的任务。",
        "id": 100,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 22,
        "text": "·短视性：仅优化当前动作，可能陷入局部循环（如机器人绕圈）。",
        "id": 101,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 102,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "智能体分类 (反应式 Reactive)",
        "id": 103,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "典型应用: ",
        "id": 104,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 18,
        "text": "·机器人：扫地机器人避障、 无人机紧急悬停。",
        "id": 105,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 13,
        "text": "·游戏NPC：敌人对玩家攻击的即时反应",
        "id": 106,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 18,
        "text": "·工业控制：传感器超限时触发警报或停机。",
        "id": 107,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 21,
        "text": "适用场景：任务规则明确、响应需实时，且无需长期策略的简单环境。",
        "id": 108,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 24,
        "text": "“条件反射\"一一像膝跳反应一样快速直接，但无法应对复杂变化。 ",
        "id": 109,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 110,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 19,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 111,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 19,
        "length_tokens": 12,
        "text": "TODO：私募基金运作指引问答助手",
        "id": 112,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 19,
        "length_tokens": 48,
        "text": "采用反应式智能体架构设计，区别于传统的工作流模式，该智能体能够主动思考、自主决策并选择合适的工具来回答用户问题，具备真正的智能体特性。",
        "id": 113,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 19,
        "length_tokens": 103,
        "text": "1.自主决策：智能体能够根据问题类型自主选择使用哪种工具回答问题  \n2.透明思考过程：展示清晰的思考过程，使决策链路可追踪  \n3.知识边界感知：明确区分知识库内容和模型知识  \n4.多工具协作：集成多种工具，包括关键词搜索、类别查询和直接问答  \n5.异常处理：妥善处理边界情况和超出知识范围的问题",
        "id": 114,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 19,
        "length_tokens": 52,
        "text": "基于LangChain的Agent框架实现，使用通义千问(Qwen-Turbo)模型作为底层大语言模型通过工具选择、思考链路和自主决策能力，提供高质量的私募基金规则咨询服务。",
        "id": 115,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 116,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "Step1.数据准备",
        "id": 117,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 28,
        "text": "系统基于私募基金运作规则构建了精简的知识库(FUND_RULES_DB)，每条规则包含：",
        "id": 118,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "-ID：规则唯一标识 ",
        "id": 119,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 22,
        "text": "-类别：规则所属类别(如\"设立与募集\"、\"监管规定\"等) ",
        "id": 120,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 16,
        "text": "-问题：规则对应的常见问题-答案：规则的详细内容",
        "id": 121,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 20,
        "length_tokens": 113,
        "text": "\"id\": \"rule001\",\"category\":\"设立与募集\",\"question\":\"私募基金的合格投资者标准是什么？\",\"answer\":\"合格投资者是指具备相应风险识别能力和风险承担能力，投资于单只私募基金的金额不低于100万元且符合下列条件之一的单位和个人：\\n1.净资产不低于1000万元的单位\\n2.金融资产不低于300万元或者最近三年个人年均收入不低于50万元的个人\"},",
        "id": 123,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 124,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "Step2.工具设计",
        "id": 125,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "系统实现了三种核心工具：",
        "id": 126,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 21,
        "length_tokens": 60,
        "text": "1.关键词搜索工具：通过关键词匹配检索相关规则，search_rules_by_keywords  \n2.类别查询工具：根据规则类别查询相关规则，search_rules_by_category  \n3.直接回答工具：基于问题与规则的匹配度直接回答用户问题，answer_question",
        "id": 127,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 128,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "Step3.Agent架构搭建 ",
        "id": 129,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 22,
        "length_tokens": 21,
        "text": "基于LangChain的Agent框架，构建了完整的反应式智能体系统：",
        "id": 130,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 22,
        "length_tokens": 58,
        "text": "1.自定义提示模板(CustomPromptTemplate)：定义Agent的思考和决策格式  \n2.自定义输出解析器(CustomOutputParser)：解析LLM的输出，确定下一步行动  \n3.Agent执行器(AgentExecutor):协调智能体与工具的交互",
        "id": 131,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 23,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 132,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "Step4. 知识边界处理",
        "id": 133,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 23,
        "length_tokens": 14,
        "text": "专门设计了处理超出知识库范围问题的机制：",
        "id": 134,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 23,
        "length_tokens": 54,
        "text": "1.问题主题识别：识别用户问题涉及的具体主题  \n2.明确边界区分：在回答中明确区分知识库内容和模型知识  \n3.提供有价值建议：引导用户寻求更权威的信息来源",
        "id": 135,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 136,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": "私募基金的合格投资者标准是什么？",
        "id": 137,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 55,
        "text": "> Entering new AgentExecutor chain...  \nQuestion：私募基金的合格投资者标准是什么？  \nThought：我需要查询私募基金规则中关于合格投资者的标准。Action：关键词搜索  \nAction Input:合格投资者 标准",
        "id": 138,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 22,
        "text": "Observation:类别：设立与募集可题：私募基金的合格投资者标准是什么？",
        "id": 139,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 140,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 46,
        "text": "答案：合格投资者是指具备相应风险识别能力和风险承担能力，投资于单只私募基金的金额不低于100万元且符合下列条件之一的单位和个人：",
        "id": 141,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "1．净资产不低于1000万元的单位",
        "id": 142,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 30,
        "text": "2．金融资产不低于300万元或者最近三年个人年均收入不低于50万元的个人我现在知道答案了。",
        "id": 143,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 51,
        "text": "Final Answer：私募基金的合格投资者是指具备相应风险识别能力和风险承担能力，投资于单只私募基金的金额不低于100万元且符合下列条件之一的单位和个人：",
        "id": 144,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 13,
        "text": "1．净资产不低于1000万元的单位；",
        "id": 145,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 25,
        "text": "2．金融资产不低于300万元或者最近三年个人年均收入不低于50万元的个人。",
        "id": 146,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "> Finished chain. ",
        "id": 147,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 50,
        "text": "回答：私募基金的合格投资者是指具备相应风险识别能力和风险承担能力，投资于单只私募基金的金额不低于100万元且符合下列条件之一的单位和个人：",
        "id": 148,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 13,
        "text": "1．净资产不低于1000万元的单位；",
        "id": 149,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 24,
        "length_tokens": 25,
        "text": "2．金融资产不低于300万元或者最近三年个人年均收入不低于50万元的个人。",
        "id": 150,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 151,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 17,
        "text": "如果我是一个净资产800万元的机构，我能投资私募基金吗？",
        "id": 152,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "> Entering new AgentExecutor chain... ",
        "id": 153,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 141,
        "text": "Question：如果我是一个净资产800万元的机构，我能投资私募基金吗？Thought：我需要了解关于机构投资者资格的相关规则。  \nAction:类别查询  \nAction Input: 机构投资者资格Observation:未找到类别为‘机构投资者资格’的规则。  \n对不起，在我的知识库中没有关于机构投资者资格的详细信息。一般来说，私募基金对投资者的资质有一定的要求，包括资金实力、投资经验等。净资产达到800万元的机构可能会符合某些私募基金的投资门槛，但具体还需要参考相关的法律法规和私募基金的具体规定。",
        "id": 154,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 155,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 24,
        "text": "建议您查阅最新的私募基金相关法律法规或咨询专业的金融顾问以获取准确的信息。",
        "id": 156,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 23,
        "text": "FinalAnswer：根据现有信息无法确定，建议查阅最新法律法规或咨询专业金融顾问。",
        "id": 157,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 28,
        "text": "> Finished chain.   \n回答：根据现有信息无法确定，建议查阅最新法律法规或咨询专业金融顾问。 ",
        "id": 158,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 25,
        "length_tokens": 19,
        "text": "这里Agent自主选择了工具2：根据规则类别查询search_rules_by_category，没有找到知识",
        "id": 159,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 160,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 17,
        "text": "如果我是一个净资产800万元的机构，我能投资私募基金吗？",
        "id": 161,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "> Entering new AgentExecutor chain. ",
        "id": 162,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 41,
        "text": "Thought：我需要确认机构投资者的资格要求，以判断净资产800万元是否满足条件。Action:关键词搜索  \nAction Input：机构投资者 私募基金 净资产 资格要求",
        "id": 163,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "Observation:类别：设立与募集",
        "id": 164,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 100,
        "text": "问题：私募基金的合格投资者标准是什么？  \n答案：合格投资者是指具备相应风险识别能力和风险承担能力，投资于单只私募基金的金额不低于100万元且符  \n合下列条件之一的单位和个人：  \n1．净资产不低于1000万元的单位  \n2．金融资产不低于300万元或者最近三年个人年均收入不低于50万元的个人",
        "id": 165,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 7,
        "text": "类别：设立与募集 ",
        "id": 166,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 72,
        "text": "问题：私募基金的最低募集规模要求是多少？  \n答案：私募证券投资基金的最低募集规模不得低于人民币1000万元。对于私募股权基金、创业投资基金等其他类型的私募基金，监管规定更加灵活，通常需符合基金合同的约定。  \n我现在知道答案了。",
        "id": 167,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 92,
        "text": "Final Answer：根据私募基金的合格投资者标准，机构投资者需要净资产不低于1000万元。因此，作为净资产为800万元的机构，您目前不符合投资私募基金的资格要求。请注意，除了净资产要求外，投资于单只私募基金的金额还不得低于100万元。建议您咨询专业法律顾问或等待净资产达到要求后再进行投资。",
        "id": 168,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 21,
        "text": "这里Agent自主选择了工具1:通过关键词搜索相关规则search_rules_by_keywords,找到了知识",
        "id": 169,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "> Finished chain. ",
        "id": 170,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 26,
        "length_tokens": 91,
        "text": "回答：根据私募基金的合格投资者标准，机构投资者需要净资产不低于1000万元。因此，作为净资产为800万元的机构，您目前不符合投资私募基金的资格要求。请注意，除了净资产要求外，投资于单只私募基金的金额还不得低于100万元。建议您咨询专业法律顾问或等待净资产达到要求后再进行投资。",
        "id": 171,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 172,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 17,
        "text": "如果我是一个净资产800万元的机构，我能投资私募基金吗？",
        "id": 173,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "> Entering new AgentExecutor chain. ",
        "id": 174,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 41,
        "text": "Thought：我需要确认机构投资者的资格要求，以判断净资产800万元是否满足条件。Action:关键词搜索  \nAction Input：机构投资者 私募基金 净资产 资格要求",
        "id": 175,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "Observation:类别：设立与募集",
        "id": 176,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 100,
        "text": "问题：私募基金的合格投资者标准是什么？  \n答案：合格投资者是指具备相应风险识别能力和风险承担能力，投资于单只私募基金的金额不低于100万元且符  \n合下列条件之一的单位和个人：  \n1．净资产不低于1000万元的单位  \n2．金融资产不低于300万元或者最近三年个人年均收入不低于50万元的个人",
        "id": 177,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "类别：设立与募集 ",
        "id": 178,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 72,
        "text": "问题：私募基金的最低募集规模要求是多少？  \n答案：私募证券投资基金的最低募集规模不得低于人民币1000万元。对于私募股权基金、创业投资基金等其他类型的私募基金，监管规定更加灵活，通常需符合基金合同的约定。  \n我现在知道答案了。",
        "id": 179,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 92,
        "text": "Final Answer：根据私募基金的合格投资者标准，机构投资者需要净资产不低于1000万元。因此，作为净资产为800万元的机构，您目前不符合投资私募基金的资格要求。请注意，除了净资产要求外，投资于单只私募基金的金额还不得低于100万元。建议您咨询专业法律顾问或等待净资产达到要求后再进行投资。",
        "id": 180,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 21,
        "text": "这里Agent自主选择了工具1:通过关键词搜索相关规则search_rules_by_keywords,找到了知识",
        "id": 181,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "> Finished chain. ",
        "id": 182,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 27,
        "length_tokens": 91,
        "text": "回答：根据私募基金的合格投资者标准，机构投资者需要净资产不低于1000万元。因此，作为净资产为800万元的机构，您目前不符合投资私募基金的资格要求。请注意，除了净资产要求外，投资于单只私募基金的金额还不得低于100万元。建议您咨询专业法律顾问或等待净资产达到要求后再进行投资。",
        "id": 183,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "CASE: 私募基金运作指引问答助手",
        "id": 184,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "私募基金可以投资哪些资产类别？",
        "id": 185,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 28,
        "length_tokens": 144,
        "text": "> Entering new AgentExecutor chain..  \nThought：用户询问私募基金可以投资的资产类别，我可以通过类别查询来获取相关信息。Action:类别查询  \nActionInput：私募基金可投资资产类别Observation:未找到类别为‘私募基金可投资资产类别'的规则。  \nDirect response detected:对不起，在我的知识库中没有关于私募基金可投资资产类别的详细信息。根据我的经验，私募基金通常可以投资于股票、债券、房地产、大宗商品、对冲基金和其他另类资产等。但具体的投资范围可能会受到当地法律法规和基金合同的限制。建议您查阅相关法规或基金",
        "id": 186,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 28,
        "length_tokens": 127,
        "text": "金和其他另类资产等。但具体的投资范围可能会受到当地法律法规和基金合同的限制。建议您查阅相关法规或基金合同以获取准确的信息。>rinisnea cnain.  \n回答：对不起，在我的知识库中没有关于私募基金可投资资产类别的详细信息。根据我的经验，私募基金通常可以投资于股票、债券、房地产、大宗商品、对冲基金和其他另类资产等。但具体的投资范围可能会受到当地法律法规和基金合同的限制。建议您查阅相关法规或基金合同以获取准确的信息。",
        "id": 187,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 188,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 189,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 10,
        "text": "智能体分类 深思熟虑 Deliberative",
        "id": 190,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 13,
        "text": "深思熟虑智能体 (Deliberative Agent) ",
        "id": 191,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 24,
        "text": "特点：基于内部模型进行规划，通过推理选择最优行动方案，具有长期目标导向性。",
        "id": 192,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "核心流程：",
        "id": 193,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 34,
        "text": "·感知： 获取环境信息建模: 更新内部世界状态表示推理：生成候选计划并模拟结果·决策：选择最优方案执行",
        "id": 194,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "优势: ",
        "id": 195,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 196,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 29,
        "length_tokens": 26,
        "text": "$v$ 能处理多步复杂任务$v$ 优化长期目标而非即时反馈$v$ 适应动态变化环境",
        "id": 197,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 10,
        "text": "智能体分类 深思熟虑 Deliberative",
        "id": 198,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "典型示例：",
        "id": 199,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "路径规划智能体：",
        "id": 200,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 23,
        "text": "·生成多条候选路线>评估安全性/耗时等指标■选择最优路径执行",
        "id": 201,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 23,
        "text": "适用场景： 需战略规划的任务 (如物流调度、投资决策等) ",
        "id": 202,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 20,
        "text": "像下棋高手一一每步棋都经过推演，而非凭直觉反应",
        "id": 203,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 204,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "CASE: 智能投研助手",
        "id": 205,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "TO DO: 智能投研助手",
        "id": 206,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 31,
        "length_tokens": 93,
        "text": "为投资研究场景设计，基于LangGraph实现的深思熟虑型智能体。  \n该智能体能够整合市场数据，进行多步骤分析和推理，生成投资观点和研究报告。  \n与反应式智能体不同，深思熟虑型智能体通过内部建模、推理和规划，制定最优行动方案，特别适合需要多步骤思考和长期目标优化的任务。",
        "id": 207,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 31,
        "length_tokens": 85,
        "text": "1.内部建模：构建市场模型和行业理解  \n2.多方案生成： 基于市场模型创建多个候选投资策略  \n3.方案评估：对比分析各方案优劣，考虑多维度因素  \n4.长期规划： 优化整体投资回报，而非单点决策  \n5.推理透明： 能够解释决策过程和选择理由",
        "id": 208,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "CASE: 智能投研助手 (步骤) ",
        "id": 209,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "具体实现步骤：",
        "id": 210,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 32,
        "length_tokens": 42,
        "text": "Step1，感知阶段  \n收集和整理市场数据与信息，包括：  \n-市场概况和最新动态  \n-关键经济和市场指标  \n-近期重要新闻  \n-行业趋势分析",
        "id": 211,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 32,
        "length_tokens": 6,
        "text": "Step2.建模阶段",
        "id": 212,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 32,
        "length_tokens": 13,
        "text": "基于收集的数据构建内部世界模型，分析：",
        "id": 213,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 32,
        "length_tokens": 24,
        "text": "-当前市场状态评估-经济周期判断-主要风险因素-潜在机会领域-市场情绪分析",
        "id": 214,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 11,
        "text": "CASE: 智能投研助手 (步骤）",
        "id": 215,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 6,
        "text": "Step3.推理阶段",
        "id": 216,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 12,
        "text": "生成多个候选投资分析方案，每个方案包含：",
        "id": 217,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 20,
        "text": "-投资假设-分析方法-预期结果-置信度-方案优缺点",
        "id": 218,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 6,
        "text": "Step4.决策阶段",
        "id": 219,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 14,
        "text": "评估候选方案并选择最优投资观点，形成：",
        "id": 220,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 33,
        "length_tokens": 19,
        "text": "-投资论点-支持证据-风险评估-投资建议-时间框架",
        "id": 221,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 34,
        "length_tokens": 11,
        "text": "CASE: 智能投研助手 (步骤）",
        "id": 222,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "Step5.报告阶段",
        "id": 223,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "生成完整的投资研究报告，包含：",
        "id": 224,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 34,
        "length_tokens": 40,
        "text": "-报告标题和摘要  \n-市场和行业背景  \n-核心投资观点  \n-详细分析论证  \n-风险因素  \n-投资建议  \n-时间框架和预期回报",
        "id": 225,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 226,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 35,
        "length_tokens": 12,
        "text": "CASE: 智能投研助手 (状态定义）",
        "id": 227,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 35,
        "length_tokens": 41,
        "text": "class ResearchAgentState(TypedDict): #输入 research topic:str # 研究主题 industry_focus:str #行业焦点 time_horizon:str #时间范围(短期/中期/长期) ",
        "id": 228,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 35,
        "length_tokens": 74,
        "text": "#处理状态perception_data:Optional[Dict[str,Any]] # 感知阶段收集的数据world_model: Optional[Dict[str,Any]] # 内部世界模型reasoning_plans:Optional[List[Dict[str,Any]l] # 候选分析方案selected_plan:Optional[Dict[str,Any]] #选中的最优方案",
        "id": 229,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 35,
        "length_tokens": 12,
        "text": "#输出final_report:Optional[str] #最终研究报告",
        "id": 230,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 35,
        "length_tokens": 36,
        "text": "#控制流   \ncurrent_phase: Literal[\"perception\", \"modeling\", \"reasoning\", \"decision\", \"report\"]   \nerror: Optional[str] #错误信息 ",
        "id": 231,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "CASE: 智能投研助手 （输出模型）",
        "id": 232,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 36,
        "length_tokens": 84,
        "text": "class PerceptionOutput(BaseModel): \"\"\"感知阶段输出的市场数据和信息.\" market_overview: str key_indicators: Dict[str, str] recent_news: List[str] industry_trends: Dict[str, str]   \nclass ModelingOutput(BaseModel): \"\"\"建模阶段输出的内部世界模型\" market_state: str economic_cycle: str risk_factors: List[str] opportunity_areas: Lis",
        "id": 233,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 36,
        "length_tokens": 21,
        "text": "str risk_factors: List[str] opportunity_areas: List[str] market_sentiment: str ",
        "id": 234,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 36,
        "length_tokens": 15,
        "text": "使用Pydantic模型严格定义各阶段输出，确保结构化数据",
        "id": 235,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 36,
        "length_tokens": 82,
        "text": "class ReasoningPlan(BaseModel): \"\"\"推理阶段生成的候选分析方案 plan_id: str hypothesis: str analysis_approach: str expected_outcome: str confidence_level: float pros: List[str] cons: List[str]   \nclass DecisionOutput(BaseModel): \"\"决策阶段选择的最优投资观点\" selected_plan_id: str investment_thesis: str supporting_evidence: Li",
        "id": 236,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 36,
        "length_tokens": 25,
        "text": "str investment_thesis: str supporting_evidence: List[str] risk_assessment: str recommendation: str timeframe: str ",
        "id": 237,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "CASE: 智能投研助手 （工作流实现）",
        "id": 238,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 42,
        "text": "def create_research_agent_workflow() $- >$ StateGraph: #创建状态图 workflow $\\mathbf { \\tau } = \\mathbf { \\tau }$ StateGraph(ResearchAgentState) ",
        "id": 239,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 49,
        "text": "#添加节点 workflow.add_node(\"perception\", perception) workflow.add_node(\"modeling\",modeling) workflow.add_node(\"reasoning\", reasoning) workflow.add_node(\"decision\", decision) workflow.add_node(\"report\", report_generation) ",
        "id": 240,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 12,
        "text": "#设置入口点workflow.set_entry_point(\"perception\")",
        "id": 241,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 37,
        "text": "#设置边和转换条件 workflow.add_edge(\"perception\",\"modeling\") workflow.add_edge(\"modeling\", \"reasoning\") workflow.add_edge(\"reasoning\",\"decision\") ",
        "id": 242,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 17,
        "text": "workflow.add_edge(\"decision\",\"report\") workflow.add_edge(\"report\", END) ",
        "id": 243,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "#编译工作流 return workflow.compile() ",
        "id": 244,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 37,
        "length_tokens": 23,
        "text": "核心工作流通过LangGraph的\\`StateGraph\\`实现将各阶段连接成一个有向图",
        "id": 245,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 38,
        "length_tokens": 15,
        "text": "CASE: 智能投研助手 （各阶段处理逻辑）",
        "id": 246,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "每个阶段都遵循类似的处理模式：",
        "id": 247,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 38,
        "length_tokens": 43,
        "text": "1.检查前置条件 (上一阶段数据)  \n2.准备LLM提示  \n3.调用LLM进行推理  \n4.解析结果并更新状态  \n5.错误处理与恢复机制",
        "id": 248,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 38,
        "length_tokens": 7,
        "text": "例如，推理阶段实现：",
        "id": 249,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 38,
        "length_tokens": 95,
        "text": "def reasoning(state: ResearchAgentState) $- >$ ResearchAgentState: try: #检查前置条件 if not state.get(\"world_model\"): return { \\*\\*state, \"error\":\"推理阶段缺少世界模型\", \"current_phase\":\"modeling\" # 回到建模阶段 } #准备提示 prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$   \nChatPromptTemplate.from_template(REASONING_PROMPT) #构",
        "id": 250,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 38,
        "length_tokens": 51,
        "text": "tPromptTemplate.from_template(REASONING_PROMPT) #构建输入 input_data $= \\{$ \"research_topic\": state[\"research_topic\"], \"industry_focus\": state[\"industry_focus\"], \"time_horizon\": state[\"time_horizon\"], ",
        "id": 251,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 39,
        "length_tokens": 15,
        "text": "CASE: 智能投研助手 （各阶段处理逻辑）",
        "id": 252,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 39,
        "length_tokens": 93,
        "text": "\"world_model\": json.dumps(state[\"world_model\"],   \nensure_ascii $\\ c =$ False,indent $: = 2$ } #调用LLM chain $\\mathbf { \\tau } = \\mathbf { \\tau }$ prompt | IIm | JsonOutputParser() result $\\mathbf { \\tau } = \\mathbf { \\tau }$ chain.invoke(input_data) #更新状态 return { \\*\\*state, \"reasoning_plans\": resul",
        "id": 253,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 39,
        "length_tokens": 67,
        "text": "#更新状态 return { \\*\\*state, \"reasoning_plans\": result, \"current_phase\": \"decision\" } except Exception as e: return { \\*\\*state, \"error\": f\"推理阶段出错:{str(e)}\", \"current_phase\":\"reasoning\" #保持在当前阶段 } ",
        "id": 254,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "CASE: 智能投研助手 （使用方法）",
        "id": 255,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 129,
        "text": "if__name_ $= = \"$ _main__\"print( $\\ \" =$ 深思熟虑智能体-智能投研助手 $\\vert = = = \\ln ^ { 1 1 } )$ （2号#用户输入topic $\\mathbf { \\tau } = \\mathbf { \\tau }$ input(\"请输入研究主题 (例如:新能源汽车行业投资机会)：\")industry $\\mathbf { \\tau } = \\mathbf { \\tau }$ input(\"请输入行业焦点(例如:电动汽车制造、电池技术):\")horizon $\\mathbf { \\tau } = \\mathbf { \\tau }$ in",
        "id": 256,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 32,
        "text": "\")horizon $\\mathbf { \\tau } = \\mathbf { \\tau }$ input(\"请输入时间范围 [短期/中期/长期]:\")",
        "id": 257,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 258,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "print(\"\\n智能投研助手开始工作..\\n\")",
        "id": 259,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 30,
        "text": "#运行智能体 result $\\mathbf { \\tau } = \\mathbf { \\tau }$ run_research_agent(topic, industry, horizon) ",
        "id": 260,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 68,
        "text": "#处理结果  \nif result.get(\"error\"):print(f\"\\n发生错误: {result['error']}\")  \nelse:print( $\\because \\vert n = = =$ 最终研究报告 $\\Rightarrow ( n ^ { \\prime \\prime } )$ （24print(result.get(\"final report\".\"未生成.报告\"))",
        "id": 261,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 40,
        "length_tokens": 51,
        "text": "请输入研究主题(例如：新能源汽车行业投资机会)：新能源汽车行业投资机会请输入行业焦点(例如：电动汽车制造、电池技术)：电动汽车制造 电池技术请输入时间范围[短期/中期/长期]:中期",
        "id": 262,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "CASE: 智能投研助手 (生成报告) ",
        "id": 263,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 18,
        "text": "#新能源汽车行业投资研究报告：中端电动汽车市场的中期增长机会",
        "id": 264,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "##\\*\\*报告摘要 \\*\\*",
        "id": 265,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 115,
        "text": "新能源汽车行业正处于快速发展的阶段，全球政策支持、技术进步以及消费者环保意识的增强共同推动了电动汽车(EV)和电池技术的需求增长。本报告聚焦于中端电动汽车市场及下一代电池技术的投资机会，结合市场数据、行业趋势和风险评估，提出以成本优化和规模化生产为核心的投资策略。我们建议优先投资具备较强成本管理和规模效应的企业，并关注充电基础设施建设带来的协同效应。",
        "id": 266,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 267,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 36,
        "text": "## $* * 1$ 市场和行业背景 \\*\\* ### $* * _ { 1 . 1 }$ 行业现状\\*\\* ",
        "id": 268,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 269,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 132,
        "text": "新能源汽车行业目前处于快速增长阶段，市场需求强劲，技术创新活跃。根据最新市场数据：-\\*\\*全球电动汽车销量同比增长率\\*\\*：2022年达到 $42 \\%$ ，显示出强劲的市场需求。-\\*\\*锂电池成本\\*\\*：降至\\$107/kWh（2022年），持续下降的成本推动了电动汽车价格竞争力的提升。-\\*\\*政府补贴\\*\\*：平均每辆电动车补贴在\\$5,000-\\$8,000之间，加速了电动车的普及。",
        "id": 270,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 22,
        "text": "### $* * _ { 1 . 2 }$ 行业驱动因素\\*\\* ",
        "id": 271,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 32,
        "text": "\\*\\*政策支持\\*\\*：各国政府通过购车补贴、税收优惠和排放法规等措施支持电动车发展。",
        "id": 272,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 63,
        "text": "‘\\*技术进步\\*\\*：固态电池、快充技术和模块化平台的研发显著提升了电动汽车的性能和生产效率·\\*\\*消费者需求\\*\\*：环保意识增强和电动车性价比提升推动了市场需求的增长。",
        "id": 273,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 274,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "CASE: 智能投研助手 (生成报告) ",
        "id": 275,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 20,
        "text": "### $* * _ { 1 . 3 }$ 近期动态\\*\\* ",
        "id": 276,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 71,
        "text": "-特斯拉宣布将在墨西哥建立新工厂，专注于生产下一代电动汽车平台。  \n·宁德时代与宝马达成战略合作协议，共同开发新一代电池技术。  \n-美国能源部预测，到2030年美国电动车充电基础设施投资需求将达到400亿美元。",
        "id": 277,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 19,
        "text": "## $\\ast \\ast _ { 2 }$ 核心投资观点\\*\\*",
        "id": 278,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 71,
        "text": "中端电动汽车市场将成为未来3-5年销量增长的核心驱动力。随着生产效率的提升和成本的下降，中端市场将受益于规模经济效应和技术进步。同时，下一代电池技术（如固态电池和快充技术）的突破将进一步推动行业的利润增长。",
        "id": 279,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 44,
        "text": "## $\\ast \\ast _ { 3 }$ .详细分析论证\\*\\*### $* * _ { 3 . 1 }$ 中端电动汽车市场的潜力\\*\\*",
        "id": 280,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 281,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 103,
        "text": "-\\*\\*市场规模\\*\\*：中端市场具有相对稳定的消费者基础和庞大的潜在需求。随着电动车价格的下降，更多消费者能够负担得起中端车型。  \n-\\*\\*成本优化\\*\\*：模块化平台的应用显著提高了生产效率，降低了单位制造成本。  \n-\\*\\*政策支持\\*\\*：政府补贴和税收优惠政策进一步增强了中端电动车的价格竞争力。",
        "id": 282,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 22,
        "text": "### $* * _ { 3 . 2 }$ 下一代电池技术的发展\\*\\*",
        "id": 283,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 42,
        "length_tokens": 113,
        "text": "-\\*\\*高能量密度\\*\\*：当前主流锂离子电池正在向更高能量密度方向发展，而固态电池被认为是下一代技术的关键。  \n-\\*\\*快充技术\\*\\*：超级快充站的普及将显著改善用户体验，减少充电时间。  \n-\\*\\*原材料回收\\*\\*：电池回收利用技术的进步有助于缓解锂、钴等关键材料的供应压力。",
        "id": 284,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 13,
        "text": "CASE: 智能投研助手 (生成报告) ",
        "id": 285,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 23,
        "text": "### $* * _ { 3 . 3 }$ 充电基础设施建设\\*\\* ",
        "id": 286,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 98,
        "text": "-\\*\\*全球范围扩展\\*\\*：为满足快速增长的电动车保有量，全球范围内的充电网络建设正在加速。  \n-\\*\\*新兴市场机会\\*\\*：新兴市场对充电桩的需求尚未完全释放，提供了巨大的投资机会。  \n-\\*\\*技术升级\\*\\*：家庭充电桩和超级快充站的普及将进一步提升用户便利性。",
        "id": 287,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 14,
        "text": "## $* * 4$ .风险因素\\*\\* ",
        "id": 288,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 17,
        "text": "尽管新能源汽车行业前景广阔，但仍需关注以下风险因素：",
        "id": 289,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 140,
        "text": "1.\\*\\*原材料价格波动\\*\\*：锂、钴等关键电池材料的价格波动可能对成本控制构成压力。  \n2.\\*\\*技术迭代风险\\*\\*：固态电池等新技术的研发进度可能不及预期，影响现有技术的市场竞争力。  \n3.\\*\\*地缘政治不确定性\\*\\*：供应链全球化可能导致受国际贸易摩擦或区域性政策变化的影响。  \n4.\\*\\*市场竞争加剧\\*\\*：随着越来越多的企业进入市场，竞争可能加剧，导致利润率下降。",
        "id": 290,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 15,
        "text": "## $\\ast \\ast 5$ 投资建议\\*\\* ",
        "id": 291,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 43,
        "length_tokens": 172,
        "text": "### $* * 5 . 1$ 投资目标\\*\\*  \n优先投资于中端电动汽车市场的领先企业，特别是那些能够通过规模经济和技术优势实现成本优化的公司。### $* * 5 . 2$ 投资逻辑\\*\\*  \n-\\*\\*市场内部模型支持\\*\\*：新能源汽车行业处于快速增长阶段，中端市场的扩展将受益于生产效率提升和成本下降。-\\*\\*政策和技术双重驱动\\*\\*：政策支持和技术进步有助于降低中端电动汽车的成本，增强产品竞争力。  \n-\\*\\*稳定目庞大的市场需求\\*\\*：中端市场话合大规模资金投入，且备较高的回报潜力.",
        "id": 292,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 13,
        "text": "CASE: 智能投研助手 (生成报告) ",
        "id": 293,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 18,
        "text": "### $* * 5 . 3$ 监控指标\\*\\* ",
        "id": 294,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 78,
        "text": "-\\*\\*原材料价格\\*\\*：密切关注锂、钴等关键材料的价格波动。  \n-\\*\\*市场竞争动态\\*\\*：跟踪主要竞争对手的技术进展和市场份额变化。  \n-\\*\\*政策变化\\*\\*：评估各国政府对电动车的支持力度是否发生变化。",
        "id": 295,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 37,
        "text": "## $* * 6$ 时间框架和预期回报\\*\\*### $* * _ { 6 . 1 }$ 时间框架\\*\\*",
        "id": 296,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 297,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 173,
        "text": "-\\*\\*中期（3-5年）\\*\\*：重点关注中端电动汽车市场的增长和下一代电池技术的商业化进程。  \n### $* * 6 . 2$ 预期回报\\*\\*-\\*\\*市场规模扩张\\*\\*：预计全球中端电动汽车销量将以每年 $30 \\% - 4 0 \\%$ 的速度增长。  \n-\\*\\*成本下降\\*\\*：锂电池成本有望进一步下降至\\$80/kWh以下，推动电动车价格竞争力提升。  \n-\\*\\*投资回报\\*\\*：基于市场增长和技术进步，预计投资年化回报率可达 $1 5 \\% - 2 0 \\%$ 。",
        "id": 298,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 14,
        "text": "## $\\ast \\ast 7$ 结论\\*\\*",
        "id": 299,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 44,
        "length_tokens": 97,
        "text": "新能源汽车行业正处于快速发展阶段，中端电动汽车市场和下一代电池技术是未来3-5年的核心投资机会。通过选择具备成本管理和规模效应的企业，并关注充电基础设施建设的协同效应，投资者可以在行业中长期发展中获得可观回报。同时，需密切监控原材料价格波动、技术迭代风险和市场竞争动态，以及时调整投资策略。",
        "id": 300,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "智能体分类 (混合 Hybrid)",
        "id": 301,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 12,
        "text": "混合智能体架构 (Hybrid Agent Architecture) ",
        "id": 302,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 30,
        "text": "特点：结合反应式的\"快速本能\"和深思熟虑的\"战略规划\"，实现智能与效率的平衡。",
        "id": 303,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "三层设计：",
        "id": 304,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 18,
        "text": "·底层 （反应式）：即时处理紧急任务 (如避障)",
        "id": 305,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 15,
        "text": "·中层 （协调）：管理任务优先级 （可选)",
        "id": 306,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 18,
        "text": "·顶层 （深思熟虑）：进行长期目标规划 (如路径优化)",
        "id": 307,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 308,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "运作机制：",
        "id": 309,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 15,
        "text": "通过仲裁系统 (如监督器) 动态切换模式：",
        "id": 310,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 45,
        "length_tokens": 26,
        "text": "紧急情况 $$ 启用反应式快速响应常规情况 $\\mid $ 启动深思熟虑规划",
        "id": 311,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "智能体分类 (混合 Hybrid)",
        "id": 312,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 5,
        "text": "典型示例：",
        "id": 313,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 4,
        "text": "自动驾驶车辆：",
        "id": 314,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 35,
        "text": "·突发障碍 $\\mid $ 立即刹车 (反应式) 正常行驶 $$ 规划最优路线 (深思熟虑) ",
        "id": 315,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "核心优势：",
        "id": 316,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 21,
        "text": "兼具实时响应能力 (毫秒级) ·保留战略规划优势 （长期目标） ",
        "id": 317,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 318,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "CASE：投顾AI助手",
        "id": 319,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "TODO：投顾AI助手",
        "id": 320,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 58,
        "text": "基于混合智能体架构设计，结合了反应式架构的即时响应能力和深思熟虑架构的长期规划能力，通过协调层动态选择最合适的处理模式，为客户提供智能化、个性化的财富管理咨询服务。",
        "id": 321,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 11,
        "text": "混合智能体采用三层架构设计：",
        "id": 322,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 10,
        "text": "1.底层 （反应式层）",
        "id": 323,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "2.中层 (协调层) ",
        "id": 324,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 12,
        "text": "3.顶层 (深思熟虑层) ",
        "id": 325,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 68,
        "text": "·处理简单直接的查询，如市场状况账户信息等·毫秒级响应速度，提供快速反馈·基于预设规则和简单逻辑作出决策·处理复杂的投资分析和长期财务规划·多步骤、深度思考过程·构建内部模型并生成多个备选方案",
        "id": 326,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 327,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 47,
        "length_tokens": 30,
        "text": "：评估任务类型和优先级动态选择处理模式 (反应式或深思熟虑)  \n·管理系统资源分配",
        "id": 328,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 10,
        "text": "CASE: 投顾AI助手 （处理流程）",
        "id": 329,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "Step1.查询评估阶段",
        "id": 330,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 10,
        "text": "协调层首先评估客户查询，确定：",
        "id": 331,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 25,
        "text": "：查询类型：紧急型、信息型或分析型·处理模式：反应式或深思熟虑",
        "id": 332,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "评估基于以下因素：",
        "id": 333,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 334,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 48,
        "length_tokens": 21,
        "text": "查询的复杂性和时效性所需数据和计算资源·客户期望的响应时间",
        "id": 335,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 10,
        "text": "CASE: 投顾AI助手 （处理流程）",
        "id": 336,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 9,
        "text": "Step2A.反应式处理流程",
        "id": 337,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "针对简单直接的查询：",
        "id": 338,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 43,
        "text": "·市场状况查询 (如\"今天上证指数表现如何\")·账户信息查询 (如\"我的投资组合中科技股占比\")·基础概念解释 (如\"什么是ETF\")",
        "id": 339,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 340,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 3,
        "text": "处理特点:",
        "id": 341,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 49,
        "length_tokens": 23,
        "text": "·低延迟、高响应速度·直接调用数据和预设回答·简洁明了的输出格式",
        "id": 342,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 10,
        "text": "CASE: 投顾AI助手 （处理流程）",
        "id": 343,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 10,
        "text": "Step2B. 深思熟虑处理流程",
        "id": 344,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 6,
        "text": "针对复杂分析型查询：",
        "id": 345,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 18,
        "text": "·投资组合调整建议·长期财务规划·风险评估和应对策略",
        "id": 346,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 3,
        "text": "处理步骤:",
        "id": 347,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 348,
        "type": "image",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 50,
        "length_tokens": 51,
        "text": "1.数据收集：整合市场数据、客户画像、历史数据等  \n2.深度分析： 构建市场模型，分析多种可能情景  \n3.生成建议： 形成多个方案并选择最优解",
        "id": 349,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 51,
        "length_tokens": 10,
        "text": "CASE: 投顾AI助手 （状态管理）",
        "id": 350,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 51,
        "length_tokens": 11,
        "text": "智能体通过WealthAdvisorState维护完整状态：",
        "id": 351,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 51,
        "length_tokens": 78,
        "text": "class WealthAdvisorState(TypedDict): #输入 user_query:str #用户查询 customer_profile: Optional[Dict[str,Any]] # 客户画像 #处理状态 query_type: Optional[Literal[\"emergency\", \"informational\",\"analytical\"]]   \n#查询类型 processing_mode: Optional[Literal[\"reactive\",\"deliberative\"]] # 处理模式 emergency_response: Optional[Dic",
        "id": 352,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 51,
        "length_tokens": 87,
        "text": "erative\"]] # 处理模式 emergency_response: Optional[Dict[str,Any]] # 紧急响应结果 market_data: Optional[Dict[str,Any]] # 市场数据 analysis_results: Optional[Dict[str,Any]] #分析结果   \n#输出 final_response: Optional[str] #最终响应 #控制流 current_phase: Literal[\"assess\",\"reactive\",   \n\"collect_data\",\"analyze\",\"recommend\",\"resp",
        "id": 353,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 51,
        "length_tokens": 23,
        "text": "ve\",   \n\"collect_data\",\"analyze\",\"recommend\",\"respond\"] error:Optional[str] #错误信息 ",
        "id": 354,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 355,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 15,
        "text": "CASE: 投顾AI助手 （使用场景-反应式）",
        "id": 356,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 14,
        "text": "场景1: 市场信息查询 （反应式处理）",
        "id": 357,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "今天上证指数的表现如何？",
        "id": 358,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 19,
        "text": "用户查询：今天上证指数的表现如何？选择客户：平衡型投资者",
        "id": 359,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 3,
        "text": "正在处理...",
        "id": 360,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 85,
        "text": "[DEBUG]LLM评估输出:{querytype':'emergency',processngmode':'reactive',reasoning':\"用户的查询是关于当天上证指的表，这一个需要实时市场数据的紧急查询。用户期望快速获取最新的市场信息，因此需要立即响应。这种类型的查询适合采用'reactive'处理模式，以便迅速提供准确的市场数据。\"}",
        "id": 361,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 43,
        "text": "[DEBUG]分支判断: processing_mode=reactive,query_type $\\ c =$ emergency   \n[DEBUG]进入节点:reactive_processing   \n【处理模式：反应式】-快速响应简单查询 ",
        "id": 362,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "===响应结果 $\\scriptstyle = =$ ",
        "id": 363,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 80,
        "text": "我需要查询今天的上证指数表现。让我查询一下最新的数据根据最新数据，今天上证指数收于3200.12点，上涨了15.67点，涨幅为0.49%。请注意，这是截至今天的市场数据，股市有风险，投资需谨慎。如果您需要更详细的信息，可以关注证券市场的实时报道或者财经新闻。",
        "id": 364,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "处理用时：11.34秒",
        "id": 365,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 16,
        "text": "CASE: 投顾AI助手 （使用场景-深思熟虑）",
        "id": 366,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 14,
        "text": "场景2： 投资组合优化 （深思熟虑处理",
        "id": 367,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 20,
        "text": "根据当前市场情况，我应该如何调整投资组合以应对可能的经济衰退？",
        "id": 368,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 31,
        "text": "用户查询：根据当前市场情况，我应该如何调整投资组合以应对可能的经济衰退？选择客户：平衡型投资者",
        "id": 369,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 3,
        "text": "正在处理...",
        "id": 370,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 123,
        "text": "[DEBUG]进入节点:assess_query  \n[DEBUG] LLM评估输出:{'query_type':'analytical','processing_mode':'deliberative','reasoning':'用  \n户的查询涉及根据当前市场情况调整投资组合以应对经济衰退，这需要深入分析市场趋势、经济指标以及用户的投资目标和风险承受能  \n力。因此，这是一个需要深度思考和分析的查询，适合采用deliberative处理模式。\"  \n[DEBUG]分支判断: processing_mode=deliberative,query_type=analytical  \n[DEBU",
        "id": 371,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 56,
        "text": "ng_mode=deliberative,query_type=analytical  \n[DEBUG]进入节点:collect_data  \n[DEBUG]进入节点:analyze_data  \n[DEBUG]进入节点: generate_recommendations【处理模式：深思熟虑】-深度分析复杂查询",
        "id": 372,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 18,
        "text": "===响应结果 $\\scriptstyle = = { \\frac { } { } }$ ",
        "id": 373,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 374,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 16,
        "text": "CASE: 投顾AI助手 （使用场景-深思熟虑）",
        "id": 375,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 5,
        "text": "尊敬的客户，",
        "id": 376,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 63,
        "text": "感谢您选择我们的财富管理服务。根据当前市场环境和您的个人情况，我们为您制定了以下详细的投资建议，帮助您更好地应对可能的经济衰退，同时实现中期财务目标（如退休规划和子女教育金）。以下是具体的内容：",
        "id": 377,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 15,
        "text": "### $* * 1$ 总体投资策略\\*\\* ",
        "id": 378,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 65,
        "text": "在当前经济可能进入衰退的情况下，我们需要采取一种“防御性增长\"的策略。这意味着在保护现有资本的同时，继续寻找具备长期潜力的投资机会。我们将通过优化资产配置、降低波动性和定期再平衡来实现这一目标。",
        "id": 379,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 55,
        "text": "由于您是“平衡型\"风险承受能力的投资者，新的投资组合将更加注重收益与稳定性的平衡。调整后，您可以更安心地面对市场波动，同时为未来的财务目标打下坚实基础。",
        "id": 380,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 1,
        "text": "一",
        "id": 381,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 15,
        "text": "### $* * 2$ 具体行动步骤\\*\\* ",
        "id": 382,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 24,
        "text": "以下是具体的调整建议，分为四个主要类别：股票、债券、现金和另类投资。",
        "id": 383,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 17,
        "text": "#### $^ { * * } ( 1 )$ 股票部分\\*\\*",
        "id": 384,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 54,
        "length_tokens": 59,
        "text": "- \\*\\*调整比例\\*\\*：从 $40 \\%$ 降至 $30 \\%$ 。  \n-\\*\\*原因\\*\\*：股票市场的波动性较高，尤其是在经济衰退期间。减少股票配置可以降低整体风险。",
        "id": 385,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 16,
        "text": "CASE: 投顾AI助手 （使用场景-深思熟虑）",
        "id": 386,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "-\\*\\*选择方向\\*\\*: ",
        "id": 387,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 83,
        "text": "-优先考虑具有防御属性的行业，例如医疗保健、消费品和可再生能源领域。  \n-继续关注ESG投资，但要确保标的具备良好的基本面和较低估值。  \n-在科技行业中，选择与人工智能、云计算等高成长领域相关的优质公司，同时避免过度依赖高估值个股。",
        "id": 388,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 12,
        "text": "####\\*\\*(2)债券部分\\*\\*",
        "id": 389,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 20,
        "text": "-\\*\\*调整比例\\*\\*：从30%提高至 $40 \\%$ 。",
        "id": 390,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 28,
        "text": "-\\*\\*原因\\*\\*：债券在经济衰退时通常表现更为稳定，能够有效分散风险。",
        "id": 391,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "-\\*\\*选择方向\\*\\*: ",
        "id": 392,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 17,
        "text": "-优先配置高质量的政府债券或投资级公司债券。",
        "id": 393,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 27,
        "text": "-避免对利率敏感的长期债券，更多选择短期或中期债券以降低利率风险。",
        "id": 394,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 18,
        "text": "#### $^ { * * } ( 3 )$ 现金部分\\*\\*",
        "id": 395,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 28,
        "text": "- \\*\\*调整比例\\*\\*：从 $10 \\%$ 提高至 $1 5 \\%$ 。 ",
        "id": 396,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 36,
        "text": "-\\*\\*原因\\*\\*：增加现金储备可以为您提供更高的流动性和灵活性，以便在市场出现机会时快速行动。",
        "id": 397,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 8,
        "text": "-\\*\\*用途\\*\\*: ",
        "id": 398,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 16,
        "text": "-作为应急资金，应对短期内可能出现的资金需求。",
        "id": 399,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 55,
        "length_tokens": 15,
        "text": "-在市场下跌时，用于抄底优质资产。",
        "id": 400,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 16,
        "text": "CASE: 投顾AI助手 （使用场景-深思熟虑）",
        "id": 401,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 43,
        "text": "#### $^ { * * } ( 4 )$ 另类投资部分\\*\\*\\*\\*调整比例\\*\\*：从 $20 \\%$ 降至 $1 5 \\%$ 。",
        "id": 402,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 403,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 35,
        "text": "-\\*\\*原因\\*\\*：另类投资虽然具备一定的增长潜力，但在经济衰退期间流动性较低，风险较高。",
        "id": 404,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 9,
        "text": "-\\*\\*选择方向\\*\\*: ",
        "id": 405,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 21,
        "text": "-关注与科技行业相关的低相关性资产，例如私募股权或基础设施基金。",
        "id": 406,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 20,
        "text": "-确保所选标的具备稳健的现金流和长期增值潜力。",
        "id": 407,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 19,
        "text": "### $\\ast \\ast _ { 3 }$ 资产配置建议\\*\\* ",
        "id": 408,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 16,
        "text": "以下是调整后的资产配置比例（基于您的150万元投资组合）：",
        "id": 409,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 96,
        "text": "|\\*\\*资产类别\\*\\*「\\*\\*当前比例\\*\\*|\\*\\*调整后比例\\*\\*｜\\*\\*金额（元）\\*\\*||股票 |40% |30% |450,000 1|债券 |30% |40% |600,000 一|现金 |10% |15% |225,000 一|另类投资 一 $20 \\%$ |15% | 225,000 一",
        "id": 410,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 411,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 412,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 56,
        "length_tokens": 27,
        "text": "基于深思熟虑模式给用户的回复collect_data $\\Rightarrow$ analyze_data $\\Rightarrow$ generate_recommendations",
        "id": 413,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 9,
        "text": "Summary （构建Agent的核心思想）",
        "id": 414,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 9,
        "text": "构建Agent的三个核心思想总结 ",
        "id": 415,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 9,
        "text": "1.不要为所有任务构建Agent",
        "id": 416,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 25,
        "text": "适用场景：Agent适合处理复杂、模糊且高价值的任务，而非所有场景。",
        "id": 417,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 3,
        "text": "判断标准:",
        "id": 418,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 22,
        "text": "·任务复杂性：若决策树可明确规划，直接构建工作流更高效。",
        "id": 419,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 21,
        "text": "·任务价值：高成本（如大量Token消耗）需由高回报任务承担。",
        "id": 420,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 20,
        "text": "·关键能力验证：确保Agent能处理核心子任务（如代码生成、调试）。",
        "id": 421,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 20,
        "text": "·错误成本：高风险的错误需通过限制权限或人工介入来缓解。",
        "id": 422,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 57,
        "length_tokens": 29,
        "text": "案例：代码生成是理想场景，因其复杂性高、价值大且输出易验证（如通过单元测试），",
        "id": 423,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 9,
        "text": "Summary （构建Agent的核心思想）",
        "id": 424,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 6,
        "text": "2.保持简洁 ",
        "id": 425,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 5,
        "text": "Agent的核心组件：",
        "id": 426,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "·环境：Agent的操作系统",
        "id": 427,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 10,
        "text": "工具集：提供行动接口和反馈机制。",
        "id": 428,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 14,
        "text": "·系统提示：定义目标、约束和预期行为。",
        "id": 429,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 3,
        "text": "设计原则：",
        "id": 430,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 17,
        "text": "·初期避免过度复杂化，优先迭代核心组件。",
        "id": 431,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 17,
        "text": "·优化 (如成本、延迟) 可在基础行为稳定后进行。",
        "id": 432,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 58,
        "length_tokens": 19,
        "text": "案例：不同功能的Agent可共享相同代码框架，仅调整工具和提示。",
        "id": 433,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 59,
        "length_tokens": 9,
        "text": "Summary （构建Agent的核心思想）",
        "id": 434,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 59,
        "length_tokens": 7,
        "text": "3.像Agent一样思考",
        "id": 435,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 59,
        "length_tokens": 7,
        "text": "理解Agent的局限性：",
        "id": 436,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 59,
        "length_tokens": 153,
        "text": "·Agent仅基于有限上下文（10-20kToken）做决策。  \n·需模拟Agent的视角（如仅通过静态截图操作电脑）以发现设计缺陷。  \n改进方法：·直接询问模型（如Claude）以验证指令清晰度或工具使用合理性。  \n·分析轨迹日志，优化上下文提供方式（如分辨率信息、操作建议）。优先评估：任务是否值得使用Agent。  \n简单起步：聚焦环境、工具、提示三大组件。  \n换位思考：通过模拟和日志分析优化Agent设计。  \n核心目标：在提升Agent能力的同时，平衡成本、风险与用户体验",
        "id": 437,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 438,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 60,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 439,
        "type": "text",
        "file_name": "12-Agent智能体系统的设计与应用"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "视觉大模型与多模态理解",
        "id": 0,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "视觉大模型与多模态理解",
        "id": 2,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 2,
        "length_tokens": 14,
        "text": "VLM在行业中的应用视频内容理解MinerU文档解析",
        "id": 3,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "VLM在行业中的应用",
        "id": 4,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "1-中文病历抽取",
        "id": 5,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 6,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 16,
        "text": "这是一份医疗报告，以下是提取的关键信息：",
        "id": 8,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 9,
        "text": "\\*\\*基本信息：\\*\\*",
        "id": 9,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "-姓名：女",
        "id": 10,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "-年龄：47岁",
        "id": 11,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 13,
        "text": "-科别：急诊骨科 (新海区）",
        "id": 12,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 10,
        "text": "-检查设备：SOMATOMemotion16排",
        "id": 13,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 14,
        "text": "-检查日期：2023年6月6日12:36",
        "id": 14,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "\\*\\*临床诊断： \\*\\*",
        "id": 15,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "-软组织疾患",
        "id": 16,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 9,
        "text": "\\*\\*检查名称: \\*\\*",
        "id": 17,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 4,
        "length_tokens": 14,
        "text": "-右膝关节CT平扫 $+$ 重建 ",
        "id": 18,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "1-中文病历抽取",
        "id": 19,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 20,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 21,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 11,
        "text": "\\*\\*影像学表现：\\*\\*",
        "id": 22,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 82,
        "text": "-右胫骨近端后缘骨质断裂，断端骨质稍分离，周围见小骨片游离，髯上囊及关节腔积液，余膝关节扫描范围内骨质密度未见异常，关节囊未见积液，周围软组织影未见明显肿胀。",
        "id": 23,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 12,
        "text": "\\*\\*影像学诊断：\\*\\*",
        "id": 24,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 24,
        "text": "-右胫骨近端后缘骨折，宾上囊及关节腔积液。",
        "id": 25,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 5,
        "length_tokens": 25,
        "text": "这些信息可以帮助健康保险专家评估保单持有人的医疗状况和可能的保险理赔情况，",
        "id": 26,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "2-日文病历抽取 ",
        "id": 27,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 6,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 28,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 29,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 6,
        "length_tokens": 15,
        "text": "这是一份诊断书，以下是提取的详细信息：",
        "id": 30,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 6,
        "length_tokens": 71,
        "text": "1.\\*\\*疾病名称\\*\\*:溃疡性大肠炎  \n2.\\*\\*入院时间\\*\\*：从平成o年0月0日开始住院治疗。  \n3.\\*\\*请假时间\\*\\*：从0月0日到0月0日，因治疗需要请假",
        "id": 31,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 6,
        "length_tokens": 29,
        "text": "请注意，这份文件中有一些空白部分（用\"o\"表示），这些部分需要填写具体日期和姓名等信息。",
        "id": 32,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "3-法文病历抽取 ",
        "id": 33,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 34,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 13,
        "text": "Dated'Hospitalisation:06/06/2010 ",
        "id": 36,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "Motifd'Hospitalisation ",
        "id": 37,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 44,
        "text": "Traumatismc ccrvical suite aunoagrcssion par strangulationsrvenu le O6/O6/2010a l'aeroportMoronisuivi d'unemalaise. ",
        "id": 38,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 57,
        "text": "hospitalisation.   \nHistoire delmaladie：   \nLetraumatisme est survenu vere 1Ih3omn al'aroportde Moroni-Hahaya suiteaune agression par strengulation suivid'une malaise ctd'une douleur cervicalc intense. ",
        "id": 39,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "Al'Admission: ",
        "id": 40,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 97,
        "text": "-Patient conscient:G'asgow 15/15   \nLaTension artericlle(TA）:176/10lmn   \n-Frequence cardiaque：95bat/mn   \n-La temprature:T36，7:SO²:96%   \n-Conjonctive bien colorees.   \nLexamen Physique:   \n-Douleur cervicale intense avee une legere dysphagie -Mouvements de flexion-extension du cou   \nPas de dyspho",
        "id": 41,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 41,
        "text": "ments de flexion-extension du cou   \nPas de dysphonic   \nA   \n-Pas de trouble respiratoire   \n-L'examen neurologique est normal   \n-Ailleursl'examen cst sans particularite ",
        "id": 42,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 19,
        "text": "这是一份法语的医疗报告，以下是提取的关键信息：",
        "id": 43,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 91,
        "text": "\\*\\*基本信息：\\*\\*  \n_ \\*\\*Dossier $N ^ { \\circ * * }$ ：文件编号  \n\\*\\*Nom et prénom\\*\\*:姓名  \n$\\pm * \\mathsf { A g e } ^ { * * }$ ：年龄  \n\\*\\*Sexe\\*\\*:性别  \n- \\*\\*Adresse\\*\\*:地址  \n- \\*\\*Profession\\*\\*:职业",
        "id": 44,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "\\*\\*住院日期:\\*\\* ",
        "id": 45,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 20,
        "text": "- \\*\\*Date d'Hospitalisation\\*\\*: 06/06/2010 ",
        "id": 46,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "\\*\\*住院原因:\\*\\*",
        "id": 47,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 41,
        "text": "-\\*\\*Motif d'Hospitalisation\\*\\*:颈部创伤，由于在2010年6月6日莫罗尼机场发生的勒颈事件导致不适。",
        "id": 48,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "\\*\\*疾病史:\\*\\* ",
        "id": 49,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 7,
        "length_tokens": 47,
        "text": "- \\*\\*Histoirede la maladie\\*\\*:创伤发生在11点30分左右，莫罗尼-哈亚机场发生勒颈事件后出现不适和剧烈颈部疼痛。",
        "id": 50,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 9,
        "text": "3-法文病历抽取 ",
        "id": 51,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 52,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 53,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 13,
        "text": "Dated'Hospitalisation:06/06/2010 ",
        "id": 54,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "Motifd'Hospitalisation ",
        "id": 55,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 44,
        "text": "Traumatismc ccrvical suite aunoagrcssion par strangulationsrvenu le O6/O6/2010a 1'aeroportMoroni suivi d'unemalaise. ",
        "id": 56,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 56,
        "text": "hospitalisation.   \nHistoire delamaladie：   \nLetraumatisme est survenu vere 1Ih3omn al'aroportde Moroni-Hahaya suiteaune agression par strengulation suivi d'une malaise etd'une douleur cervicalc intense. ",
        "id": 57,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "Al'Admission: ",
        "id": 58,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 98,
        "text": "Patient conscient:G'asgow 15/15   \nLa Tension artcriclle(TA）:I76/10lmn   \n-Frequence cardiaque:95bat/mn   \n-Latemperature:T36,7:SO²:96%   \n-Conjonctive bien colorees.   \nLexamen Physique:   \n-Douleur cervicale intense avee une legere dysphagie -Mouvements de flexion-extension du cou   \nPas de dyspho",
        "id": 59,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 41,
        "text": "ments de flexion-extension du cou   \nPas de dysphonie   \n3   \nPasde trouble respiratoire   \n-L'examen neurologique est normal   \n-Ailleursl'examen cst sans particularite ",
        "id": 60,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 21,
        "text": "\\*\\*入院时:\\*\\* - \\*\\*A I'Admission\\*\\*: ",
        "id": 61,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 77,
        "text": "-患者意识清醒：Glasgow15/15  \n-血压（TA）：176/101mmHg  \n-心率：95次/分钟  \n-体温： $3 6 . 7 ^ { \\circ } \\mathsf { C }$ ： 血氧饱和度（Sp02）：96%  \n-结膜颜色正常",
        "id": 62,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 22,
        "text": "\\*\\*体格检查:\\*\\* - \\*\\*L'examen Physique\\*\\*: ",
        "id": 63,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 64,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 55,
        "text": "-强烈的颈部疼痛伴有轻微吞咽困难  \n-颈部屈伸运动  \n-无声音嘶哑  \n-无呼吸困难  \n-神经系统检查正常  \n-其他检查无特殊发现",
        "id": 65,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 8,
        "length_tokens": 16,
        "text": "这些信息可以帮助健康保险专家评估患者的状况和治疗需求",
        "id": 66,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "4-德文病历抽取 ",
        "id": 67,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 68,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 105,
        "text": "Arztliche Bescheinigung   \nPatientin:   \nO.g.Patientin wird seit 10.o9.19 ar Universitatsklinikum Wurzburg   \nwegen einerLeukamie(cALL,bcr-abl positiv) behandeit.   \nDiagnosen: cALL,bcr-abl positiv ED 02/15(Russland) (ZNS negativ,Hyperploidie,bcr-abl p190(t （9.22)) lsoliertesKnochenmarkrezidiv05/19 ",
        "id": 69,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 97,
        "text": " p190(t （9.22)) lsoliertesKnochenmarkrezidiv05/19 Allergische Reaktionauf TK Z.n.steroidassoziierterDiabetesmellitus Z.n.Infektion Unterarmport O8/19 (Russland) Vincaalkaloid-assoziierte Polyneuropathie Fragl.intracerebrale zystische Struktur (ED Russland) HSV-Stomatitis,EBV-Reaktivierungnach allo S",
        "id": 70,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 115,
        "text": "sland) HSV-Stomatitis,EBV-Reaktivierungnach allo SZT12/19   \nTherapie: Chemotherapie nach ProtokollALL-MB seit 03/15(group F) Erhaltungstherapie 10/15-03/17 Schadelbestrahlung12Gy 10/15 Imatinib03/15-06/17und06/19-09/19 Rezidiv-Chemotherapie nach Protokoll ALL-MB-Rez/ALL-REZ BFM2002ab05/19 AllogeneS",
        "id": 71,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 165,
        "text": "tokoll ALL-MB-Rez/ALL-REZ BFM2002ab05/19 AllogeneStammzelltransplantion am 27.11.2019 (PLD-DKM-1309404,10/10,permissiv,PBSC)   \n这是一份医疗证明，以下是提取的关键信息：   \n\\*\\*患者信息：\\*\\*   \n-患者姓名：未显示   \n\\*\\*治疗医院：\\*\\*   \n-Wurzburg大学医院   \n\\*\\*诊断日期：\\*\\*   \n-2019年10月9日   \n\\*\\*诊断结果：\\*\\*   \n-急性淋巴细胞白血病 (cALL,bcr-abI阳性)   \n- 中枢",
        "id": 72,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 165,
        "text": "\\*诊断结果：\\*\\*   \n-急性淋巴细胞白血病 (cALL,bcr-abI阳性)   \n- 中枢神经系统阴性，高倍体，bcr-ablp190 (t(9;22))   \n-骨髓复发孤立病例，2019年5月   \n-对TK过敏反应   \n-糖皮质激素相关糖尿病   \n-2019年8月俄罗斯感染下肢   \n-长春碱类药物相关的多发性神经病变   \n-可疑颅内囊性结构 (俄罗斯ED)   \n-HSV口炎，EBV再激活后异基因骨髓移植，2019年12月 ",
        "id": 73,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 74,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 9,
        "text": "4-德文病历抽取 ",
        "id": 75,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 76,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 102,
        "text": "Arztliche Bescheinigung   \nPatientin:   \nO.g.Patientin wird seit 10.o9.19 am Universitatsklinikum Wurzburg   \nwegen einer Leukamie(cALL,bcr-abl positiv) behandelt.   \nDiagnosen: cALL,bcr-abl positiv ED 02/15(Russland) (ZNS negativ,Hyperploidie,bcr-abl p190(t (9,22)) lsoliertesKnochenmarkrezidiv 05/1",
        "id": 77,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 97,
        "text": "l p190(t (9,22)) lsoliertesKnochenmarkrezidiv 05/19 Allergische Reaktion auf TK Z.n.steroidassoziierter Diabetesmellitus Zn.Infektion Unterarmport 08/19(Russland) Vincaalkaloid-assoziiertePolyneuropathie Fragl.intracerebrale zystische Struktur (ED Russland) HSV-Stomatitis,EBV-Reaktivierungnach allo ",
        "id": 78,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 114,
        "text": "ssland) HSV-Stomatitis,EBV-Reaktivierungnach allo SZT12/19   \nTherapie: Chemotherapie nach ProtokollALL-MB seit 03/15(group F) Erhaltungstherapie10/15-03/17 Schadelbestrahlung 12Gy 10/15 Imatinib03/15-06/17und06/19-09/19 Rezidiv-Chemotherapie nach Protokoll ALL-MB-Rez/ALL-REZ BFM2002ab05/19 Allogene",
        "id": 79,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 58,
        "text": "otokoll ALL-MB-Rez/ALL-REZ BFM2002ab05/19 AllogeneStammzelltransplantionam 27.11.2019 (PLD-DKM-1309404,10/10,permissiv,PBSC) ",
        "id": 80,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "\\*\\*治疗方案：\\*\\* ",
        "id": 81,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 190,
        "text": "-自2015年3月起按照ALL-MB协议进行化疗 (F组)  \n-维持治疗：2015年10月至2017年3月  \n-头部放疗：12Gy，2015年10月  \n- Imatinib：2015年3月至2017年6月和2019年6月至2019年9月  \n-复发化疗：自2019年5月起按照ALL-MB-Rez/ALL-REZBFM2002  \n协议  \n-异基因干细胞移植：2019年11月27日（PLD-DKM-1309404,  \n10/10,允许，PBSC)\\*\\*总治疗时间： \\*\\*  \n-直至2020年6月19日  \n这些信息对于评估患者的健康状况、治疗过程以及可能的保险覆盖范围非常重要。",
        "id": 82,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 83,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 9,
        "text": "5-韩文病历抽取 ",
        "id": 84,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 85,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 86,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 20,
        "text": "这是一份韩国的医疗诊断书，以下是提取的关键信息：",
        "id": 87,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 15,
        "text": "1.\\*\\*患者姓名\\*\\*：已模糊处理",
        "id": 88,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 15,
        "text": "2.\\*\\*患者地址\\*\\*：已模糊处理",
        "id": 89,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "3.\\*\\*疾病名称\\*\\*: ",
        "id": 90,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "-主要疾病：旱",
        "id": 91,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "要：，，， # ",
        "id": 92,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 11,
        "length_tokens": 60,
        "text": "4.\\*\\*发病日期\\*\\*：2020年02月05日  \n5.\\*\\*诊断日期\\*\\*：2020年02月06日  \n6.\\*\\*受伤原因\\*\\*：昙}  (被他人打倒)",
        "id": 93,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 9,
        "text": "5-韩文病历抽取 ",
        "id": 94,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 32,
        "text": "假设你是一位健康保险专家。这里有一份保单持有人提供的医疗文件的图片。请从中提取详细信息。",
        "id": 95,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 96,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 14,
        "text": "7.\\*\\*受伤部位和程度\\*\\*: ",
        "id": 97,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "：，，：：",
        "id": 98,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 29,
        "text": "8.\\*\\*治疗期间\\*\\*：2020年02月06日至2020年02月18日 (共14天)",
        "id": 99,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 28,
        "text": "9.\\*\\*备注\\*\\*：以号 (后续复查时可能会增加诊断名称和诊断次数)",
        "id": 100,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 12,
        "length_tokens": 45,
        "text": "这份医疗诊断书提供了患者的个人信息、疾病名称、受伤原因、受伤部位和程度以及治疗期间等关键信息。这些信息对于健康保险理赔非常重要。",
        "id": 101,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "车辆里程表识别 ",
        "id": 102,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 13,
        "length_tokens": 30,
        "text": "你是一名汽车保险承保专家。这里有一张车辆里程表的图片。请从中提取关键信息。",
        "id": 103,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 104,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "这张车辆里程表图片显示了以下关键信息：",
        "id": 105,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 13,
        "length_tokens": 88,
        "text": "1.\\*\\*总里程\\*\\*:528,915公里  \n2.\\*\\*当前速度\\*\\*：0公里/小时  \n3.\\*\\*当前时间\\*\\*：19:18  \n4.\\*\\*当前温度\\*\\*： $+ 4 5 ^ { \\circ } C$ （204号  \n5.\\*\\*当前挡位\\*\\*：空挡 （N)",
        "id": 106,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "这些信息对于评估车辆的使用情况和保险风险非常重要",
        "id": 107,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "车辆里程表识别 ",
        "id": 108,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 14,
        "length_tokens": 30,
        "text": "你是一名汽车保险承保专家。这里有一张车辆里程表的图片。请从中提取关键信息。",
        "id": 109,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 14,
        "length_tokens": 19,
        "text": "从这张车辆里程表的图片中，可以提取以下关键信息：",
        "id": 110,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 111,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 14,
        "length_tokens": 104,
        "text": "1.\\*\\*当前速度\\*\\*：56.6英里/小时。  \n2.\\*\\*总里程\\*\\*：37756英里。  \n3.\\*\\*当前时间\\*\\*：11:14。  \n4.\\*\\*当前温度\\*\\*： $1 0 . 5 ^ { \\circ } \\mathsf { C } _ { \\circ }$   \n5.\\*\\*当前挡位\\*\\*：D（前进挡）。",
        "id": 112,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 14,
        "length_tokens": 20,
        "text": "这些信息对于汽车保险承保专家来说，可以帮助评估车辆的使用情况和风险。",
        "id": 113,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "车辆承保 ",
        "id": 114,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "你是一名汽车保险承保专家。这里有一组多角度拍摄的车辆照片，请根据这些照片分析关键的承保信息",
        "id": 115,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 116,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 16,
        "text": "根据提供的车辆照片，以下是一些关键的承保信息分析：",
        "id": 117,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "1.\\*\\*车辆型号和品牌\\*\\*: ",
        "id": 118,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 40,
        "text": "-这是一辆奥迪A8L，属于豪华车型。奥迪A8L通常具有较高的市场价值和维修成本，因此在承保时需要考虑这些因素。",
        "id": 119,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 11,
        "text": "2.\\*\\*车辆状况\\*\\*: ",
        "id": 120,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 43,
        "text": "-从照片中可以看出，车辆外观较为整洁，没有明显的碰撞或损坏痕迹这表明车辆的维护状况良好，可能降低了事故风险。",
        "id": 121,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "3.\\*\\*车牌信息\\*\\*:",
        "id": 122,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "-车牌信息被遮挡，无法直接获取车辆的注册信息。车牌信息对于确定车辆的注册地和使用环境非常重要。",
        "id": 123,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 11,
        "text": "4.\\*\\*车辆使用环境\\*\\*：",
        "id": 124,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 15,
        "length_tokens": 41,
        "text": "-车辆停放在城市街道上，周围有其他车辆和建筑物。这表明车辆主要在城市环境中使用，可能面临较高的交通密度和事故风险",
        "id": 125,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "车辆承保 ",
        "id": 126,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 31,
        "text": "你是一名汽车保险承保专家。这里有一组多角度拍摄的车辆照片，请根据这些照片分析关键的承保信息",
        "id": 127,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 128,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 11,
        "text": "5.\\*\\*附加信息\\*\\*: ",
        "id": 129,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 45,
        "text": "-照片中有一份报纸，标题为\"华西都市报”，可能表明车辆所在地区或车主的阅读习惯。这可以作为了解车主生活习惯和风险偏好的参考。",
        "id": 130,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "6.\\*\\*车辆配置\\*\\*: ",
        "id": 131,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 44,
        "text": "-奥迪A8L通常配备有高级安全和驾驶辅助系统，如自适应巡航控制、车道保持辅助等。这些配置可以降低事故风险，但同时也增加了维修成本。",
        "id": 132,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "7.\\*\\*保险需求\\*\\*: ",
        "id": 133,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 50,
        "text": "-鉴于车辆的高价值和豪华配置，建议考虑全险保险，包括碰撞险、盗抢险、第三者责任险等。此外，还可以考虑增加玻璃险、划痕险等附加险种。",
        "id": 134,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 16,
        "length_tokens": 45,
        "text": "综上所述，这辆奥迪A8L的承保需要考虑其高价值、豪华配置和城市使用环境等因素，建议选择全面的保险方案以确保车辆和车主的安全。",
        "id": 135,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "危险驾驶行为识别 ",
        "id": 136,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 17,
        "length_tokens": 29,
        "text": "你是一名汽车保险的风险监控专家。这里有一张车内摄像头的照片，请判断是否有危险行为。",
        "id": 137,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 138,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 17,
        "length_tokens": 55,
        "text": "从这张照片中可以看出，驾驶员正在使用手机，这显然是一个危险行为。使用手机会分散驾驶员的注意力，增加发生交通事故的风险。建议驾驶员在驾驶时避免使用手机，以确保行车安全。",
        "id": 139,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 18,
        "length_tokens": 6,
        "text": "危险驾驶行为识别 ",
        "id": 140,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 18,
        "length_tokens": 29,
        "text": "你是一名汽车保险的风险监控专家。这里有一张车内摄像头的照片，请判断是否有危险行为。",
        "id": 141,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 142,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 18,
        "length_tokens": 17,
        "text": "从这段行车记录仪的视频片段中，可以观察到以下几点：",
        "id": 143,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 18,
        "length_tokens": 211,
        "text": "1.\\*\\*夜间驾驶\\*\\*：视频显示是在夜间拍摄的，夜间驾驶本身就需要更高的注意力和谨慎，因为视线和路况可能不如白天清晰。  \n2.\\*\\*车速和距离\\*\\*：从视频中可以看出，车辆之间的距离较近，尤其是在夜间，这可能会增加追尾的风险。  \n3.\\*\\*道路状况\\*\\*：视频中可以看到道路两侧有建筑物和路灯，但道路本身看起来比较宽敞，没有明显的障碍物。  \n4.\\*\\*其他车辆\\*\\*：视频中可以看到有多辆车辆在行驶，但没有明显的危险驾驶行为，如超速、变道不打转向灯等。  \n5.\\*\\*灯光使用\\*\\*：所有车辆的前灯都已开启，这是夜间驾驶的基本要求，有助于提高能见度和安全性。",
        "id": 144,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 18,
        "length_tokens": 52,
        "text": "总体来看，从这段视频片段中没有明显的危险或鲁莽驾驶行为。然而夜间驾驶本身就需要驾驶员保持高度警惕，确保与前车保持安全距离遵守交通规则，以減少事故风险。",
        "id": 145,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "危险驾驶行为识别 ",
        "id": 146,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 19,
        "length_tokens": 47,
        "text": "你是一名汽车保险的风险监控专家。这里有一段来自行车记录仪的视频片段，请简要分析配备此行车记录仪的车辆是否存在任何危险或鲁莽驾驶行为。",
        "id": 147,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 148,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 19,
        "length_tokens": 35,
        "text": "从这段行车记录仪的视频片段来看，配备此行车记录仪的车辆在夜间行驶。以下是一些观察到的情况：",
        "id": 149,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 19,
        "length_tokens": 126,
        "text": "1.\\*\\*车速\\*\\*：车辆在夜间行驶，车速看起来较快，但没有明显的超速行为。  \n2.\\*\\*交通信号灯\\*\\*：车辆在通过交通信号灯时，信号灯显示为绿色，表明车辆在合法行驶。  \n3.\\*\\*道路状况\\*\\*：道路看起来比较空旷，没有明显的交通拥堵。  \n4.\\*\\*其他车辆\\*\\*：视频中可以看到其他车辆，但没有明显的危险驾驶行为，如突然变道或超车。",
        "id": 150,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 19,
        "length_tokens": 68,
        "text": "总体来看，从这段视频片段中没有明显的危险或鲁莽驾驶行为。然而，夜间驾驶本身就需要额外的小心和谨慎，因为视线和反应时间可能会受到影响。建议驾驶员在夜间驾驶时保持警惕，遵守交通规则，确保安全。",
        "id": 151,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "车辆损失评估 ",
        "id": 152,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 29,
        "text": "您是一名汽车保险理赔处理专家。这里有一张车祸现场的照片，请简要评估损坏情况。",
        "id": 153,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 62,
        "text": "从这张照片来看，黑色轿车的后部受到了明显的撞击，导致后保险杠、尾灯和车身结构严重损坏。红色卡车的后部也有一定的损坏，但看起来不如黑色轿车严重。",
        "id": 155,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "初步评估如下：",
        "id": 156,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 73,
        "text": "1.\\*\\*黑色轿车\\*\\*:-后保险杠和尾灯严重损坏，需要更换。-车身结构受损，可能需要进行车身修复和喷漆。-后部可能有内部部件（如悬挂系统、排气系统等）受损，需要进一步  \n检查。",
        "id": 157,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "2.\\*\\*红色卡车\\*\\*: ",
        "id": 158,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 24,
        "text": "-后部保险杠和车身有轻微损坏，可能需要修复和喷漆。",
        "id": 159,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 21,
        "text": "-内部部件（如悬挂系统、排气系统等）可能需要进一步检查。",
        "id": 160,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 3,
        "text": "建议: ",
        "id": 161,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 20,
        "length_tokens": 74,
        "text": "-对两辆车进行详细的检查，以确定内部部件的损坏情况-根据检查结果，制定详细的维修计划和费用估算。-考虑车辆的安全性，确保所有受损部件都得到妥善修复或更换。请务必联系专业的汽车维修人员进行详细的检查和评估。",
        "id": 162,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "车辆损失评估 ",
        "id": 163,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 21,
        "length_tokens": 29,
        "text": "您是一名汽车保险理赔处理专家。这里有一张车祸现场的照片，请简要评估损坏情况。",
        "id": 164,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 165,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 21,
        "length_tokens": 41,
        "text": "从照片中可以看出，车辆的前部有明显的刮痕和擦伤，主要集中在前保险杠和前翼子板区域。具体评估如下：",
        "id": 166,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 21,
        "length_tokens": 95,
        "text": "1.\\*\\*前保险杠\\*\\*：有明显的刮痕和擦伤，可能需要进行修复或更换。  \n2.\\*\\*前翼子板\\*\\*：同样有刮痕和擦伤，可能需要进行修复。3.\\*\\*前大灯\\*\\*：从照片中看，前大灯似乎没有明显的损坏，但需要进一步检查以确认。",
        "id": 167,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 21,
        "length_tokens": 56,
        "text": "总体来看，车辆的损坏主要集中在车身表面，可能需要进行车身修复和喷漆。具体的维修费用和方案需要进一步的详细检查和评估。建议联系专业的汽车维修店进行详细的检查和报价。",
        "id": 168,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 22,
        "length_tokens": 7,
        "text": "车辆事故要素提取 ",
        "id": 169,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 22,
        "length_tokens": 127,
        "text": "你是一名汽车保险理赔处理专家。这里有一张车祸现场的照片。请以JSON格式提取以下信息：道路状况、天气状况、照明条件、事故估计原因、受损部位（前部、后部、背部）、车辆品牌型号、损害程度（轻微、中等、严重）、损害分类（保险杠凹陷车门凹陷、玻璃破碎、大灯破损、尾灯破损、刮痕、撞击等）、预估费用。如果无法提取，请使用N/A。",
        "id": 170,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 171,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 22,
        "length_tokens": 115,
        "text": "\"\\`json   \n{ “道路状况\"：\"湿滑\"， \"天气状况\":\"阴天\", \"照明条件\":\"自然光\", \"事故估计原因\":\"可能因湿滑路面导致失控\" \"受损部位\":[\"前部\"], \"车辆品牌型号\":\"N/A\", “损害程度\":\"严重\", \"损害分类\":[\"保险杠凹陷\"，\"车门凹陷\",\"大灯破损\",\"刮痕\",\"撞击\"], \"预估费用\":\"N/A\"   \n}   \n三 ",
        "id": 172,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 22,
        "length_tokens": 17,
        "text": "汽车事故发生在下雪的早晨，原因是路面湿滑 ",
        "id": 173,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 23,
        "length_tokens": 7,
        "text": "车辆事故要素提取 ",
        "id": 174,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 23,
        "length_tokens": 128,
        "text": "你是一名汽车保险理赔处理专家。这里有一张车祸现场的照片。请以JSON格式提取以下信息：道路状况、天气状况、照明条件、事故估计原因、受损部位（前部、后部、背部）、车辆品牌型号、损害程度（轻微、中等、严重）、损害分类（保险杠凹陷、车门凹陷、玻璃破碎、大灯破损、尾灯破损、刮痕、撞击等）、预估费用。如果无法提取，请使用N/A。",
        "id": 175,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 176,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 23,
        "length_tokens": 125,
        "text": "\"\\`\\`json   \n{   \n\"道路状况\":\"N/A\",   \n\"天气状况\":\"N/A\",   \n\"照明条件\":\"N/A\",   \n\"事故估计原因\":\"N/A\",   \n\"受损部位\":[\"后部\",\"背部\"],   \n\"车辆品牌型号\":\"奥迪A4\", \"损害程度\":\"严重\", \"损害分类\":[\"保险杠凹陷\",\"车门凹陷\",\"玻璃破碎\",\"大灯破损\",\"尾灯破   \n损\",\"撞击\"],   \n\"预估费用\":\"N/A\"   \n}   \n三 ",
        "id": 177,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "奥迪A6失控，撞到了树上",
        "id": 178,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "车辆一致性校验 ",
        "id": 179,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 43,
        "text": "你是一名汽车保险欺诈检测专家。这里有两张图片，一张是在事故发生后的车辆，另一张是在事故发生前的车辆。请确定它们是否为同一辆车。",
        "id": 180,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "根据提供的两张图片，可以确定它们不是同一辆车。",
        "id": 181,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 182,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 35,
        "text": "1.\\*\\*车型不同\\*\\*:-第一张图片中的车辆是特斯拉Model×。-第二张图片中的车辆是特斯拉ModelY。",
        "id": 183,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": "2.\\*\\*车身颜色不同\\*\\*:",
        "id": 184,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 19,
        "text": "-第一张图片中的车辆是银色-第二张图片中的车辆是白色。",
        "id": 185,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 24,
        "length_tokens": 14,
        "text": "因此，这两张图片中的车辆明显不是同一辆车。",
        "id": 186,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 6,
        "text": "车辆一致性校验 ",
        "id": 187,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 43,
        "text": "你是一名汽车保险欺诈检测专家。这里有两张图片，一张是在事故发生后的车辆，另一张是在事故发生前的车辆。请确定它们是否为同一辆车。",
        "id": 188,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 189,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 25,
        "text": "根据提供的两张图片，可以确定它们不是同一辆车。以下是一些关键的差异点：",
        "id": 190,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 115,
        "text": "1.\\*\\*车型不同\\*\\*：第一张图片中的车辆是宝马×5，而第二张图片中的车辆是宝马×2。  \n2.\\*\\*车身设计\\*\\*：两辆车的车身设计明显不同，X5是一款较大的SUV，而x2是一款紧凑型sUV。  \n3.\\*\\*前脸设计\\*\\*：两辆车的前脸设计也有所不同，X5的前脸更为宽大，而x2的前脸更为紧凑。",
        "id": 191,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 15,
        "text": "因此，可以确定这两张图片中的车辆不是同一辆车。",
        "id": 192,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "回答正确，一辆是×5，另一辆是×2",
        "id": 193,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 26,
        "length_tokens": 7,
        "text": "Qwen-VL微调 ",
        "id": 194,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 26,
        "length_tokens": 65,
        "text": "1 rl \"messages\": [ { \"content\": \"<image>Who are they?\", \"role\": \"user\" }, { \"content\": \"They're Kane and Gretzka from Bayern Munich.\", \"role\": \"assistant\" }, { \"content\": \"What are they doing?<image>\", \"role\": \"user\" }, ",
        "id": 195,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 26,
        "length_tokens": 49,
        "text": "{ \"content\": \"They are celebrating on the soccer field.\", \"role\": \"assistant\" } ], \"images\": [ \"mllm_demo_data/1.jpg\" \"mllm_demo_data/1.jpg\" ] }, ] ",
        "id": 196,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "打卡：车险场景识别",
        "id": 197,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 27,
        "length_tokens": 12,
        "text": "针对汽车保险场景进行图像识别，包括：",
        "id": 198,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 27,
        "length_tokens": 37,
        "text": "车辆里程表识别 车辆承保 危险驾驶行为识别 车辆损失评估 车辆事故要素提取 车辆一致性校验 ",
        "id": 199,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 200,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 28,
        "length_tokens": 13,
        "text": "InternVideo2/2.5（视频理解SOTA）",
        "id": 201,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "视频基础模型",
        "id": 202,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 29,
        "length_tokens": 115,
        "text": "InternVideo2，新型的视频基础模型（ViFM），在视频识别、视频文本任务和对话任务中取得了SOTA。InternVideo2的核心设计是渐进式训练方法，统一了掩蔽视频建模、跨模态对比学习和下一个token预测，将视频编码器的规模扩大到60亿参数。在数据层面，通过语义分割视频并生成视频-音频-语音字幕，优先考虑时空一致性，从而提高了视频和文本之间的对齐。",
        "id": 203,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 204,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 29,
        "length_tokens": 81,
        "text": "InternVideo2的三个训练阶段：(1)通过未掩蔽重建捕获时空结构，(2)与其他模态的语义对齐，(3)通过下一个token预测增强其开放式对话能力。不同的训练阶段将引导该模型通过不同的前置任务捕捉不同层次的结构和语义信息。",
        "id": 205,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "InternVideo2 视频基础模型",
        "id": 206,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 30,
        "length_tokens": 57,
        "text": "InternVideo2在超过60个视频和音频任务上取得了SOTA。模型在各种视频相关的字幕、对话和长视频理解基准测试中表现优异，凸显了其在推理和理解长时间上下文方面的能力。",
        "id": 207,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 30,
        "length_tokens": 97,
        "text": "PreviousSOT Kinetics-400 (FineTuned Classification) VideoPrism MomentsinTime Perception Test CoCa/VideoC (FineTunedClassification) 92.1 InternVideo2 Kinetics-400 51.2 63.4 AudioCaps (AttentiveProbClassification） (T2ARetrieval) 88.8 55.2 Momentsin Time QVHighlight (AttentiveProbClassification) 47.8 5",
        "id": 208,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 30,
        "length_tokens": 114,
        "text": "e QVHighlight (AttentiveProbClassification) 47.8 56.5 (Temporal Grounding) (TemporaActivityocalization) 41.2 55.8 (Long videm QA) Kinetics-400 82.4 49.2 VATEX (Zero-Shot Classification) (Zero-Shot Captioning) 34.6 43.5 (Zero-Shot Clasification) 55.9 63.2 71.5 (Zero-ShotCaptioning) MSRVTT VATEX (Zero",
        "id": 209,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 30,
        "length_tokens": 52,
        "text": "63.2 71.5 (Zero-ShotCaptioning) MSRVTT VATEX (Zero-ShotT2VRetrieval) (Zero-ShotT2VRetrieval) ActivityNet (Zero-ShotT2VRetrieval) ",
        "id": 210,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 30,
        "length_tokens": 96,
        "text": "Kinetics-400是一个大规模的视频数据集，专门用于动作识别和理解的研究。它由Google DeepMind创建。Kinetics-400包含了大量的视频剪辑，每个剪辑大约持续10秒钟，涵盖了400种不同的动作类别，比如日常生活活动（如做饭、跳舞）、体育运动（如踢足球、打篮球）、社交互动 (如握手）等。",
        "id": 211,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "InternVideo2 预训练 ",
        "id": 212,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 31,
        "length_tokens": 17,
        "text": "对于InternVideo2的训练，强调数据中的时空一致性和标签质量",
        "id": 213,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 31,
        "length_tokens": 59,
        "text": "数据集包含4.02亿数据条目，其中包括200万个视频、5000万个视频-文本对（来自WebVid和IntermVid）、5000万个视频音频-语音-文本对（InternVid2）和3亿个图像-文本对。",
        "id": 214,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 31,
        "length_tokens": 69,
        "text": "对于InternVid2，我们将视频语义分割成剪辑，并专注于使用三种模态：音频、视频和语音重新校准剪辑描述。我们首先为这三种模态分别生成字幕。然后，单独的字幕被融合在一起，用于创建一个更全面的描述。",
        "id": 215,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 216,
        "type": "table",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "视频多模态注释框架 VidCap ",
        "id": 217,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 218,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 32,
        "length_tokens": 38,
        "text": "视频多模态注释系统的框架称为VidCap，由四个主要组件组成：视频、音频和语音字幕，以及用于集成这些字幕的LLM",
        "id": 219,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "视频多模态注释示例",
        "id": 220,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 67,
        "text": "Video Cap:A woman is talking to a Video-Audio-Speech Cap:   \nreporter inastore. In the store,music plays in the background as a woman Audio Cap:A woman is talkingand excitedlyand nervously tellsa reporterabout Carolyn music plays in the background. who is going to be their second competitor and has ",
        "id": 221,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 82,
        "text": "ho is going to be their second competitor and has lost ASR: She is gonna be our second 69 pounds and $3 7 \\%$ of her body weight.   \ncompetitor. Takea lap. She has lost 69   \npounds and thirty-one percent of her Video-Audio Cap :   \nbodyweight.HeyI'mexcited but In a store, a woman talks to a reporte",
        "id": 222,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 73,
        "text": "excited but In a store, a woman talks to a reporter while music are nervous but excited Carolyn. heard in the background.   \nVideo Cap:A man in a red shirt is Video-Audio-Speech Cap:   \nstanding in front of a lion. Themaninthe red shirtisattemptingtobarricade Audio Cap:A man is talking while a himse",
        "id": 223,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 76,
        "text": "barricade Audio Cap:A man is talking while a himselfawayfromawild lion inaroomwithmostof radio playsmusic. the line already there while a manistalking and the ASR:SceneconsistedofDenver radio plays music.   \nttifa Video-Audio Cap:   \nthe line is already in the room with him The man in the red shirt ",
        "id": 224,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 69,
        "text": "ady in the room with him The man in the red shirt stands in front of the lion and unfortunately. talkingwhile the radio playsmusic.   \nVideo Cap:A group of people are standing Video-Audio-Speech Cap:   \nin a field under a starry night sky. A group of people are standing in a field under a starry nig",
        "id": 225,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 73,
        "text": " people are standing in a field under a starry night sky and a woman is talking in the background that Audio Cap:A woman is talking. agroup of peopleobserve the moon througha ASR:When people get achance look telescope,amazed by itscraters.   \nthrougha bigtelescopeforthe firsttime   \njueyrejustngteat",
        "id": 226,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 79,
        "text": "a bigtelescopeforthe firsttime   \njueyrejustngteattyoucaee a Video-Audio Cap:   \nthey're like ohmy god you really can't see the Agroupofpeoplearestandinginafieldundera starry craters it'sreally interesting. nightskyand a woman is talking in the background. Video Cap:A small black fish is Video-Audio",
        "id": 227,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 80,
        "text": "round. Video Cap:A small black fish is Video-Audio-Speech Cap:   \nswimming in a pond While abird is chirping in the background,asmall black fish is swimming in a pond and a man is saying 'Come on,dude'.   \nAudio Cap: A bird is chirping while a   \nman is talking.   \nVideo-AudioCap：   \nAsasmall black ",
        "id": 228,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 33,
        "length_tokens": 40,
        "text": " is talking.   \nVideo-AudioCap：   \nAsasmall black fishswims ina pond,abird chirps and ASR: Come on,dude amantalksin the background. ",
        "id": 229,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "模型表现： 动作识别",
        "id": 230,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 34,
        "length_tokens": 6,
        "text": "1.动作识别 ",
        "id": 231,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 34,
        "length_tokens": 151,
        "text": "在动作识别方面，InternVideo2在多个数据集上进行了测试，包括Kinetics（K400、K600和K700）、Moments in Time V1(MiT）、Something-SomethingV2 （SSv2）、UCF、HMDB、Charades、ActivityNet （ANet）和HACS。实验结果显示，InternVideo2在使用16帧的情况下，就能在这些数据集上取得新的最佳表现，超越了以往需要更高分辨率（例如224对比576）或模型集成的SOTA（State-of-the-Art）结果。例如，在MiT数据集上，InternVideo2-6B的表现超过了之前的sOTA，C",
        "id": 232,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 34,
        "length_tokens": 135,
        "text": "-Art）结果。例如，在MiT数据集上，InternVideo2-6B的表现超过了之前的sOTA，CoCa-g，达到了51.2%的准确率，比CoCa-g高出 $2 . 2 \\%$ 。在强调时间动态的Something-Something V2数据集上，InternVideo2-6B也以77.5%的准确率超越了MVD（ $\\cdot$ ）。此外，InternVideo2-6B在未裁剪视频分析上的表现也是顶尖的，例如在ActivityNet上达到了95.9%，在HACS上达到了 $\\cdot$ ",
        "id": 233,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 234,
        "type": "table",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 235,
        "type": "table",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "模型表现： 时间动作识别",
        "id": 236,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 237,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "What happened before the person took the blanket? ",
        "id": 238,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 239,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "Gemini Pro ",
        "id": 240,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 54,
        "text": "Before the person took the blanket, they were sitting on the couch, possibly watching TV or engaging in some other activity. They might have been relaxing or enjoying their time on the couch. The presence of the remote control suggests that they were likely controlling a television or other electron",
        "id": 241,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 33,
        "text": " likely controlling a television or other electronic device. The person then decided to take the blanket, possibly to use it for warmth or comfort while sitting on the couch. ",
        "id": 242,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 243,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 41,
        "text": "It appears that the person has been prompted to get a blanket either due to feeling cold while watching something on the television or as a reaction to what they're watching, seeking comfort or cozying up. X ",
        "id": 244,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 245,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "InternVideo2- Chat ",
        "id": 246,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 48,
        "text": "Before the person took the blanket, he sat in the middle of the sofa watching TV 时间动作识别任务。Gemini Pro和intervideo2-chat都能准确地描述行动，而GPT-4V会产生幻觉。 ",
        "id": 247,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 248,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "模型表现： 混淆动作识别",
        "id": 249,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 250,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "What is the action performed by the person in the video? ",
        "id": 251,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 252,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 253,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "The person in the video is peeling a banana. ",
        "id": 254,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 32,
        "text": "It appears that the person in the video is performing a series of actions to create the illusion of peeling a banana but then revealing it as unpeeled. ",
        "id": 255,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "The person in the video is dropping a banana. ",
        "id": 256,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 37,
        "length_tokens": 57,
        "text": "混淆动作识别。视频中的人拿着香蕉做了一个误导人的动作。GeminiPro给出了一个错误的答案GPT-4V识别出误导行为，但没有给出正确答案。internet video2-chat给出了正确的答案。",
        "id": 257,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "模型表现： 视频对象时间识别",
        "id": 258,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 259,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "What letters did the person show in order? ",
        "id": 260,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 1,
        "text": "点",
        "id": 261,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 262,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 4,
        "text": "Gemini Pro ",
        "id": 263,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 24,
        "text": "The person showed the letters\"I\", \"N\",\"K\",\"J\",\"M\",and \"P\" in order.' ",
        "id": 264,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 265,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "GPT-4V ",
        "id": 266,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "A.K.Y.L.I.N.I. ",
        "id": 267,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 1,
        "text": "家",
        "id": 268,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 13,
        "text": "The person displayed the letters[j km an] in sequence. ",
        "id": 269,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "InternVideo2- Chat ",
        "id": 270,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 38,
        "length_tokens": 67,
        "text": "视频对象时间识别。视频中的人按照时间的顺序取出不同的字母。GeminiPro可以识别4个字母，但顺序完全相反；GPT-4V只能识别3个字母，结果是错误的；internet video2-chat错误最少，顺序正确。",
        "id": 271,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "模型表现： 事件计数任务",
        "id": 272,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 273,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 13,
        "text": "How many times did the person launch objects on the table? ",
        "id": 274,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 275,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 276,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 21,
        "text": "The person launched objects on the table 6 times.(l'm not programmed to assist with that.) ",
        "id": 277,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 55,
        "text": "Based on the sequence provided, it appears that the person launches objects on the table three times. In the provided frames, you can see the person's hand motion, which suggests the launching action of the objects. The three sequences appear to show the progression of three separate launching actio",
        "id": 278,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 9,
        "text": " the progression of three separate launching actions. ",
        "id": 279,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 12,
        "text": "The person launched objects on the table 3.times. ",
        "id": 280,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 39,
        "length_tokens": 39,
        "text": "事件计数任务。GPT-4V和intervideo2-chat都能够正确捕捉动作的时间，不会被冗余帧和其他动作所混淆。",
        "id": 281,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "模型表现： 意外动作识别任务",
        "id": 282,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 283,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 16,
        "text": "What transition does the man make in the magic trick showcased in the video? ",
        "id": 284,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 285,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 286,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 23,
        "text": "The man makes a transition from a 2D drawing of an elephant to a 3D elephant sculpture. ",
        "id": 287,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 73,
        "text": "There is a transitional frame where the paper closely approaches or covers the camera lens. This likely serves as the moment of the trick where the switch or transformation is supposedtooccur．有一帧过渡画面，纸张靠近或覆盖了相机镜头。这很可能是在进行 切换或变换的戏法时刻。 ",
        "id": 288,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 24,
        "text": "In the video, a man makes a transition by simply changing the drawings of an elephant into a plastic elephant doll. ",
        "id": 289,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 40,
        "length_tokens": 67,
        "text": "意外动作识别任务。该模型需要识别视频的神奇部分。Gemini Pro和intervideo2-chat都可以捕捉到视频中的部分过渡，并推断视频的拍摄技巧。GPT-4V识别了这种转变，但未能成功解释这种转变的过程。",
        "id": 290,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "模型表现： 视觉语言导航任务",
        "id": 291,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 292,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 50,
        "text": "This is a navigation video of an agent following instruction: \"Go up the stairs. Take a left at the top of the stairs. Go into the bedroom on the left. Stop in the doorway.\" What is the next action it should take? ",
        "id": 293,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 72,
        "text": "这是一个导航视频，画面中的代理（agent）遵循指令：“上楼梯。在楼梯顶部左转。进入左边的卧室。停在门口。\"接下来它应该采取什么行动？根据给定的指令，“停在门口\"已经是最后一个步骤。因此，接下来的行动应该是",
        "id": 294,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "The agent should stop in the doorway. ",
        "id": 295,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 296,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 35,
        "text": "After reaching the top of the stairs, the agent needs to take a left turn, as depicted in the frames, where the camera orientation shifts to show the left turn. ",
        "id": 297,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 14,
        "text": "The next action is to go into the bedroom on the left. ",
        "id": 298,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 41,
        "length_tokens": 38,
        "text": "视觉语言导航任务。GPT-4V和intervideo2-chat能够理解指令，并根据视频内容做出下一步的决定，而GeminiPro则容易产生幻觉。",
        "id": 299,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 42,
        "length_tokens": 7,
        "text": "模型表现：视频-文本任务",
        "id": 300,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "2.视频-文本任务",
        "id": 301,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 42,
        "length_tokens": 102,
        "text": "InternVideo2在视频检索、视频字幕和多选视频问答（QA）等任务上进行了评估。  \n在视频检索任务中，使用阶段2中的文本编码器，将视频表示与候选文本进行匹配。  \n在多选视频问答任务中，使用阶段3中学习的VideoLLM进行测试。  \n此外，InternVideo2还在音频任务上进行了测试，展示了其在音频和文本编码器上的优势。",
        "id": 302,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "视频-文本任务：",
        "id": 303,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 42,
        "length_tokens": 82,
        "text": "·视频检索：给定一段文本描述，模型需要从一组视频中找到最符合描述的视频。  \n·视频字幕生成：给定一段视频，模型需要生成描述视频内容的文字叙述。  \n·多选视频问答（Multiple Choice Video QA）：给定一段视频和一个问题，模型需要从几个选项中选择正确答案。",
        "id": 304,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "模型表现：视频-文本任务",
        "id": 305,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 306,
        "type": "table",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 44,
        "length_tokens": 7,
        "text": "模型表现： 视频中心对话",
        "id": 307,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 44,
        "length_tokens": 6,
        "text": "3.视频中心对话",
        "id": 308,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 44,
        "length_tokens": 105,
        "text": "InternVideo2在MVBench、VideoChatGPT-Eval和MoVQA等数据集上的表现突出，不仅在平均分数上超过了其他系统，而且在每个子任务上也表现出色，除了在VideoChatGPT-Eval上。  \n这些结果表明，InternVideo2确实嵌入了部分世界模型的知识。  \n这也验证了学习可转移视频表示对当前视频相关的MLLM（多模态大型语言模型）的重要性。",
        "id": 309,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 44,
        "length_tokens": 6,
        "text": "视频中心对话任务：",
        "id": 310,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 44,
        "length_tokens": 115,
        "text": "·视频问答（Video QA）：模型需要根据提供的视频回答问题。  \n·视频聊天（Video Chat）：模型需要参与基于视频内容的多轮对话。例如，用户可能会询问视频中的某些细节，模型需要回答；或者模型可以根据视频内容提出问题，引导对话进行。  \n·多模态对话（Multimodal Dialogue）：在这种情况下，视频作为对话的一部分，模型需要理解视频中的信息，并将其与用户的文本输入结合起来，进行有意义的交流。",
        "id": 311,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "模型表现： InternVideo2.5",
        "id": 312,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 313,
        "type": "table",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 45,
        "length_tokens": 26,
        "text": "标注灰色字体的模型及其对应结果均基于参数量超过70B的大语言模型(LLM)",
        "id": 314,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 46,
        "length_tokens": 10,
        "text": "CASE: 汽车别蹭视频理解",
        "id": 315,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "TODO：对汽车事故视频进行理解",
        "id": 316,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 46,
        "length_tokens": 23,
        "text": "1) 视频讲了什么  \n2) 车的哪里坏了  \n3) 撞到哪里了",
        "id": 317,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 318,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 10,
        "text": "CASE: 汽车别蹭视频理解",
        "id": 319,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 93,
        "text": "# Step1，模型下载，需要下载3个大模型 from modelscope import snapshot_download model_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ snapshot_download('OpenGVLab/InternVideo2- Chat-8B',cache_dir='/root/autodl-tmp/models') model_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ snapshot_download('LLM-Research/Mistral-7BInstruct-",
        "id": 320,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 80,
        "text": "napshot_download('LLM-Research/Mistral-7BInstruct-v0.3',cache_dir='/root/autodl-tmp/models') model_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ snapshot_download('Al-ModelScope/bert-baseuncased',cache_dir $= ^ { \\prime }$ /root/autodl-tmp/models') ",
        "id": 321,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 48,
        "text": "在autodl上部署，需要设置config.json中的Mistral-7B-Instruct-v0.3路径modeling_base.py中的bert-based-uncase路径modeling_qformer.py 中的bert-based-uncase路径",
        "id": 322,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 89,
        "text": "# Step2，模型加载   \nimport os   \n#设置环境变量   \nos.environ['HF_TOKEN'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'hf_XX'   \ntoken $\\mathbf { \\tau } = \\mathbf { \\tau }$ Os.environ['HF_TOKEN']   \nimport torch   \nfrom transformers import AutoTokenizer, AutoModel, AutoConfig   \ntokenizer $\\mathbf { \\tau } = \\mathbf",
        "id": 323,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 89,
        "text": "utoConfig   \ntokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoTokenizer.from_pretrained('/root/autodl  \ntmp/models/OpenGVLab/InternVideo2-Chat-8B',   \ntrust_remote_code $\\ c =$ True,use_fast $\\ c =$ False)   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoModel.from_pretrained( '/root/autodl-tmp",
        "id": 324,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 47,
        "length_tokens": 57,
        "text": "au }$ AutoModel.from_pretrained( '/root/autodl-tmp/models/OpenGVLab/InternVideo2-Chat-8B', torch_dtype $\\ O =$ torch.bfloat16, token $\\ c =$ token, trust_remote_code $\\ c =$ True).cuda() ",
        "id": 325,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 10,
        "text": "CASE: 汽车别蹭视频理解",
        "id": 326,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 66,
        "text": "# 导入必要的库   \nfrom decord import VideoReader, cpu   \nfrom PIL import Image   \nimport numpy as np   \nimport numpy as np   \nimport decord   \nfrom decord import VideoReader, cpu   \nimport torch.nn.functional as F   \nimport torchvision.transforms as T   \nfrom torchvision.transforms import PILToTensor   \nf",
        "id": 327,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 31,
        "text": "rom torchvision.transforms import PILToTensor   \nfrom torchvision import transforms   \nfrom torchvision.transforms.functional import InterpolationMod   \ndecord.bridge.set_bridge(\"torch\") ",
        "id": 328,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 13,
        "text": "#计算基于段数采样的帧索引",
        "id": 329,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 105,
        "text": "def get_index(num_frames, num_segments):seg_size $\\mathbf { \\tau } = \\mathbf { \\tau }$ float(num_frames -1)/num_segments #计算每段的大小start $\\mathbf { \\tau } = \\mathbf { \\tau }$ int(seg_size/2)#从第一个段的中间开始采样：return offsets  \n#加载视频并预处理帧的函数  \ndef load_video(video_path, num_segments $^ { : = 8 }$ ,return_msg",
        "id": 330,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 117,
        "text": "video_path, num_segments $^ { : = 8 }$ ,return_msg $\\ c =$ False,  \nresolution $= 2 2 4$ ）#读取视频文件vr $\\mathbf { \\tau } = \\mathbf { \\tau }$ VideoReader(video_path, $\\mathsf { c t x } { = } \\mathsf { c p u } ( 0 )$ , num_threads ${ = } 1$ ）num_frames $\\mathbf { \\tau } = \\mathbf { \\tau }$ len(vr）#获取视频的总",
        "id": 331,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 48,
        "length_tokens": 26,
        "text": "mathbf { \\tau } = \\mathbf { \\tau }$ len(vr）#获取视频的总帧数?",
        "id": 332,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 10,
        "text": "CASE: 汽车别蹭视频理解",
        "id": 333,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 35,
        "text": "video_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"car.mp4\" num_segments $\\scriptstyle = 1 2 8$ ",
        "id": 334,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "with torch.no_grad(): ",
        "id": 335,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 91,
        "text": "output1,chat_history $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.chat(tokenizer, pixel_values, question,   \ngeneration_config, num_patches_list $\\ c =$ num_patches_list, history $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ None,   \nreturn_history=True)   \nprint(output1)   \n#多轮对话：询问视频中的人数   \nquesti",
        "id": 336,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 96,
        "text": "rue)   \nprint(output1)   \n#多轮对话：询问视频中的人数   \nquestion2 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"视频中有多少人\" output2, chat_history $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.chat(tokenizer, pixel_values, question2,   \ngeneration_config, num_patches_list $\\ c =$ num_patches_list,   \nhistory=chat_histor",
        "id": 337,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 85,
        "text": "t $\\ c =$ num_patches_list,   \nhistory=chat_history, return_history=True)   \nprint(output2)   \n#加载视频并处理   \npixel_values,num_patches_list $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_video(video_path,   \nnum_segments $\\ c =$ num_segments,max_num ${ = } 1$ ，   \nget_frame_by_duration $\\ c =$ False)   \npi",
        "id": 338,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 88,
        "text": "1$ ，   \nget_frame_by_duration $\\ c =$ False)   \npixel_values $\\mathbf { \\tau } = \\mathbf { \\tau }$ pixel_values.to(torch.bfloat16).to(model.device)   \nvideo_prefix $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"\".join([f\"Frame{i+1}: <image>\\n\" for i in   \nrange(len(num_patches_list))l) ",
        "id": 339,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 340,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 176,
        "text": "#单轮对话：视频详细描述question1 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"描述视频中的细节\"question $\\mathbf { \\tau } = \\mathbf { \\tau }$ video_prefix $+$ question1视频展示了一辆白色SUV的侧面，车身有明显的刮擦痕迹和凹陷。轮胎附近的保险杠有脱落，门把手处也有凹陷。视频中的人物在检查车辆损伤，并讨论是否需要保险理赔。环境看起来像是一个停车区域，地面是水泥地，有停车位的标线。光线为自然光，天气似乎阴沉。视频风格为纪实风格，直接展示事故现场和人物反应。除了受损的sUV外",
        "id": 341,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 68,
        "text": "标线。光线为自然光，天气似乎阴沉。视频风格为纪实风格，直接展示事故现场和人物反应。除了受损的sUV外，没有其他显著物体。SUV为白色，保险杠为黑色，轮胎为黑色橡胶。",
        "id": 342,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 343,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "视频中有两个人。",
        "id": 344,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 10,
        "text": "CASE: 汽车别蹭视频理解",
        "id": 345,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 6,
        "text": "with torch.no_grad(): ",
        "id": 346,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 102,
        "text": "#单轮对话：询问车辆损伤部位 (中文)   \nquestion1 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"车的哪个部位损伤了？\"   \nquestion $\\mathbf { \\tau } = \\mathbf { \\tau }$ video_prefix $+$ question1   \noutput1,chat_history $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.chat(tokenizer, pixel_values,   \nquestion, generation_config, num_p",
        "id": 347,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 37,
        "text": "ixel_values,   \nquestion, generation_config, num_patches_list $\\ c =$ num_patches_list   \nhistory $\\ c =$ None,return_history=True)   \nprint(output1) ",
        "id": 348,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 29,
        "text": "车的门和轮胎都损伤了，门凹陷了，轮胎的漆面被刮掉了。",
        "id": 349,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 96,
        "text": "#多轮对话：询问车辆碰撞位置 (中文)   \nquestion2 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"车撞到哪里了？\"   \noutput2, chat_history $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.chat(tokenizer, pixel_values, question2,   \ngeneration_config, num_patches_list $\\ c =$ num_patches_list,   \nhistory=chat_history, return_history=",
        "id": 350,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 19,
        "text": "hes_list,   \nhistory=chat_history, return_history=True)   \nprint(output2) ",
        "id": 351,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 50,
        "length_tokens": 6,
        "text": "车撞到了墙角。",
        "id": 352,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 51,
        "length_tokens": 5,
        "text": "打卡：视频理解",
        "id": 353,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 51,
        "length_tokens": 22,
        "text": "找一段自己的视频，让InternVideo2-Chat-8B 进行理解，并进行提问：",
        "id": 354,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 51,
        "length_tokens": 28,
        "text": "描述视频中的细节  \n视频中有多少人  \n车的哪个部位损伤了？  \n车撞到哪里了？",
        "id": 355,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 356,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 52,
        "length_tokens": 3,
        "text": "MinerU使用",
        "id": 357,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 53,
        "length_tokens": 3,
        "text": "MinerU ",
        "id": 358,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 53,
        "length_tokens": 50,
        "text": "MinerU专注于高效解析和提取复杂的PDF文档、网页和电子书，并将其转换为易于分析的Markdown或JSON 格式。由上海人工智能实验室OpenDataLab 团队开发。",
        "id": 359,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 53,
        "length_tokens": 4,
        "text": "主要功能包括：",
        "id": 360,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 53,
        "length_tokens": 156,
        "text": "· PDF转Markdown  \n支持多模态PDF（含图片、表格、公式等）的结构化转换。  \n自动去除页眉、页脚、脚注等干扰信息，保留标题、段落、列表等结构。  \n公式识别并转换为LaTeX格式，表格转换为 HTML或Markdown。  \n·网页内容提取：从网页中剔除广告等干扰信息，精准提取正文、评论、视频文字等内容。·电子书转换：支持epub、mobi、docx、pptx、chm、azw 等格式批量转 Markdown。·多语言OCR：自动检测扫描版 PDF和乱码，支持84 种语言的OCR 识别",
        "id": 361,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 2,
        "text": "核心技术",
        "id": 362,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 24,
        "text": "·布局检测：基于LayoutLMv3 微调，识别文本、表格、图片等区域。",
        "id": 363,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 22,
        "text": "·公式识别：使用YOLOv8检测公式，UniMERNet模型转换 LaTeX。",
        "id": 364,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 17,
        "text": "OCR 增强: 采用PaddleOcR提高文本识别准确率",
        "id": 365,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 3,
        "text": "应用场景",
        "id": 366,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 18,
        "text": "·大模型训练： 为书生?浦语等模型提供高质量语料",
        "id": 367,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 16,
        "text": "·学术研究： 提取论文、教材中的关键信息。",
        "id": 368,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 16,
        "text": "·法律与金融： 解析合同、研报等结构化数据。",
        "id": 369,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 54,
        "length_tokens": 13,
        "text": "MinerU支持 CPU/GPU，兼容 Windows/Linux/Mac",
        "id": 370,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 3,
        "text": "MinerU使用",
        "id": 371,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 3,
        "text": "MinerU使用",
        "id": 372,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 13,
        "text": "·在线使用https://mineru.net/OpenSourceTools/Extractor",
        "id": 373,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "·客户端 https://mineru.net/client ",
        "id": 374,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "API https://mineru.net/apiManage ",
        "id": 375,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 5,
        "text": "·本地化部署",
        "id": 376,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 8,
        "text": "免费全能的文档解析神器",
        "id": 377,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 18,
        "text": "精准解析、高效提取，为你带来更加流畅、准确的解析体验",
        "id": 378,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 379,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 7,
        "text": "MinerU使用 （在线使用）",
        "id": 380,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 8,
        "text": "【德邦证券】AI Agent-",
        "id": 381,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 3,
        "text": "原文件 Markdown",
        "id": 382,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 1,
        "text": "出",
        "id": 383,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 4,
        "text": "核心逻辑 ",
        "id": 384,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 188,
        "text": "AIAgent：大模型开启推理时刻 算力成本降低推动产业化进程。AIAgent是一种能够感知环境、进行决策和执行动作的智能实体，具备通过独立思考、调用工具去逐步完成给定目标的能力，可拆解为大模型+ 记忆+工具使用四个组成部分。我们认为，AIAgent的产业发展离不开AI大模型的进步和推理成本的下降，当前已初步具备发展条件。 通过思维链开启推理Scalling Law时刻。根据The Information，传统的大模型ScalingLaw已经撞墙，OpenAI发布了全 1开创模型scal 型性能不再仅仅受限于预训练阶段，现在可以通过增加推理计算资源来提升模型表现。2）国内外算 署成本有望下降，",
        "id": 385,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 93,
        "text": "不再仅仅受限于预训练阶段，现在可以通过增加推理计算资源来提升模型表现。2）国内外算 署成本有望下降，有利于Agent产业化推广。从AI算力租赁成本来看，租赁价格今年较去年缩水70%，根据PANew H100的租赁价格高达每小时8美元，但现在市场上算力供应过剩，价格降到了每小时2美元以下。",
        "id": 386,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 184,
        "text": "》产业进程：国内外科技厂商共振，美国涌现多款垂类AIAgent取得显著进展。大模型能力增长遇瓶颈，国内外科技大厂转向AIAgent。国外来看，OpenAIGoogle、Anthropic正在将注意力从模型转移至一系列AI Agent工具上，Anthropic推出Computeruse，变革人类与PC交互方式，OpenAI、Google也将Agent应用排上日程；国内来看，智谱抢跑发布AutoGLM，百度、腾讯、钉钉等互联网大厂纷纷跟进。我们认为，随着企业数字化进程不断发展，部分企业已积累了大量的数字文档、资料等，具备行业know-how的企业更有能力推出Agent应用，美国垂直领域龙头不断落地",
        "id": 387,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 172,
        "text": "数字文档、资料等，具备行业know-how的企业更有能力推出Agent应用，美国垂直领域龙头不断落地AI Agent。1）AI+营销：AppLovin，AXON赋能广告实现精准投放；2）AI+数据分析：Palantir，AI加速数据智能整合、分析和决策；3）AI+CRM：Salesforce，Agent起到提高员工效率和员工人数的作用；4）AI+办公：微软连出10款AIAgent，涵盖销售、运营、服务三类，内部Coplot和Agent重塑各个部门的业务流程，扩大员工工作效能；5）AI+教育：Duolingo，AI助力教育行业应材施教，有望加速提高用户付费率。",
        "id": 388,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 184,
        "text": "》商业成效：Agent用户粘性增强，商业模式完善实现初步兑现。AIAgent可以实现员工与数字生产力的协作，直接带来企业价值。根据甲子光年，截至2030年AI在全球各行业可能创造的价值将近3.8万亿美元。从用户访问量来看，AI应用访问量阶段性向好，用户使用习惯或已养成。根据10月AI产品榜单，全球前20AI产品Web访问量基本都在增长，其中微软的copilot增速最快，达到87.57%。我们认为，在行业领域具备know-how，深入了解客户需求后开发出的垂类Agent，如果长期来看能够帮助企业提升的产能大于投入的成本，就有望形成付费，从而实现Agent价值兑现。近期海外AI应用业绩大爆发，初步",
        "id": 389,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 90,
        "text": "升的产能大于投入的成本，就有望形成付费，从而实现Agent价值兑现。近期海外AI应用业绩大爆发，初步验证垂类AIAgent的商业价值，资本市场表现亮眼。Applovin、Palantir、Innodata 2024年初至11月26日股价涨幅分别为750.36%、296.50%、418.23%。",
        "id": 390,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 218,
        "text": "》投资建议：我们认为，随着底层大模型沿着推理端不断迭代，AIAgent迎来良好的产业发展基础，美股AI Agent已在B端例如广告营销、数据分析、办公应用、教育等多个领域取得显著进展，成为业绩增长的驱动力。未来，随着用户对AI应用关注度和使用粘性提高，在垂类场景具备行业knoW-how的厂商有望率先受益。建议关注：1）toB Agent：泛微网络、致远互联、金蝶国际、彩讯股份、鼎捷软件、汉得信息、用友网络、科大讯飞、金证股份、华策影视、中国软件国际；2）toCAgent：金山办公、万兴科技、福昕软件、彩讯股份；3）AI多模态：万兴科技、虹软科技、当虹科技、中科创达、大华股份、海康威视、漫步者、",
        "id": 391,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 57,
        "text": "软件、彩讯股份；3）AI多模态：万兴科技、虹软科技、当虹科技、中科创达、大华股份、海康威视、漫步者、黄石网络、汉仪股份、美图公司、云从科技等。",
        "id": 392,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 42,
        "text": "》风险提示：技术迭代不及预期、国内AIAgent商业化进展不及预期、算力供应不及预期、行业竟争加剧风险等。",
        "id": 393,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 394,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 185,
        "text": "AlAgent:大模型开启推理时刻,算力成本降低推动产业化进程。AIAgent是一种能够感知环境、进行决策和执行动作的智能实体，具备通过独立思考、调用工具去逐步完成给定目标的能力，可拆解为大模型＋规划＋记忆+ 工具使用四个组成部分。我们认为，AIAgent的产业发展离不开AI大模型的进步和推理成本的下降,当前已初步具备发展条件。1)o1掀起推理的划时代革命,通过思维链开启推理ScallingLaw时刻。根据The Information,传统的大模型ScalingLaw已经撞墙,OpenAl发布了全新的多模态Self-playRL模型o1,o1开创模型scaling的新维度,模型性能不再仅仅受",
        "id": 395,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 145,
        "text": "了全新的多模态Self-playRL模型o1,o1开创模型scaling的新维度,模型性能不再仅仅受限于预训练阶段，现在可以通过增加推理计算资源来提升模型表现。2)国内外算力供需错配现象改善,算力部署成本有望下降,有利于Agent产业化推广。从AI算力租赁成本来看，租赁价格今年较去年缩水 $7 0 \\%$ 。根据PANews,去年由于AI算力供应紧张，H100的租赁价格高达每小时8美元，但现在市场上算力供应过剩，价格降到了每小时2美元以下。",
        "id": 396,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 184,
        "text": "产业进程:国内外科技厂商共振，美国涌现多款垂类AIAgent取得显著进展。大模型能力增长遇瓶颈,国内外科技大厂转向AlAgent。国外来看,OpenAl、Google、Anthropic正在将注意力从模型转移至一系列AlAgent工具上,Anthropic推出Computeruse,变革人类与PC交互方式,OpenAl、Google也将Agent应用排上日程;国内来看,智谱抢跑发布AutoGLM,百度、腾讯、钉钉等互联网大厂纷纷跟进。我们认为,随着企业数字化进程不断发展,部分企业已积累了大量的数字文档、资料等,具备行业know-how的企业更有能力推出Agent应用,美国垂直领域龙头不断落地A",
        "id": 397,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 164,
        "text": "字文档、资料等,具备行业know-how的企业更有能力推出Agent应用,美国垂直领域龙头不断落地AlAgent。1)Al $| + \\rrangle$ 营销:AppLovin,AXON赋能广告实现精准投放;2) $\\mathsf { A l + }$ 数据分析:Palantir,AI加速数据智能整合、分析和决策;3)Al $^ +$ CRM:Salesforce,Agent起到提高员工效率和员工人数的作用;4) $\\mathsf { A l + }$ 办公:微软连出10款Al Agent,涵盖销售、运营、服务三类.内部Copilot和Aaent重塑各个部门的业务流程",
        "id": 398,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 56,
        "length_tokens": 12,
        "text": "上传PDF，在右侧得到Markdown (需排队)",
        "id": 399,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 6,
        "text": "MinerU使用 (客户端)",
        "id": 400,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 5,
        "text": "三国演义.pdf",
        "id": 401,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 95,
        "text": "正文 第一回 宴桃园豪杰三结义 斩黄巾英雄首立功滚滚长江东逝水，浪花淘尽英雄。是非成败转头空。青山依旧在，几度夕阳红。白发渔樵江渚上，惯看秋月春风。一壶浊酒喜相逢。古今多少事，都付笑谈中。",
        "id": 402,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 403,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 178,
        "text": "话说天下大势，分久必合，合久必分。周末七国分争，并入于秦。及秦灭之后，楚、汉分争，又并入于汉。汉朝自高祖斩白蛇而起义，一统天下，后来光武中兴，传至献帝，遂分为三国。推其致乱之由，殆始于桓、灵二帝。桓帝禁铟善类，崇信宦官。及桓帝崩，灵帝即位，大将军窦武、太傅陈蕃共相辅佐。时有宦官曹节等弄权，窦武、陈蕃谋诛之，机事不密，反为所害，中涓自此愈横。",
        "id": 404,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 315,
        "text": "建宁二年四月望日，帝御温德殿。方升座，殿角狂风骤起。只见一条大青蛇，从梁上飞将下来，蟠于椅上。帝惊倒，左右急救入宫，百官俱奔避。须臾，蛇不见了。忽然大雷大雨，加以冰雹，落到半夜方止，坏却房屋无数。建宁四年二月，洛阳地震；又海水泛溢，沿海居民，尽被大浪卷入海中。光和元年，雌鸡化雄。六月朔，黑气十余丈，飞入温德殿中。秋七月，有虹现于玉堂；五原山岸，尽皆崩裂。种种不祥，非止一端。帝下诏问群臣以灾异之由，议郎蔡邕上疏，以为蜺堕鸡化，乃妇寺干政之所致，言颇切直。帝览奏叹息，因起更衣。曹节在后窃视，悉宣告左右；遂以他事陷邕于罪，放归田里。后张让、赵忠、封谓、段珪、曹节、侯览、蹇硕、程旷、夏恽、郭胜十人朋比",
        "id": 405,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 97,
        "text": "右；遂以他事陷邕于罪，放归田里。后张让、赵忠、封谓、段珪、曹节、侯览、蹇硕、程旷、夏恽、郭胜十人朋比为奸，号为\"十常侍\"。帝尊信张让，呼为\"阿父”。朝政日非，以致天下人心思乱，盗贼蜂起。",
        "id": 406,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 285,
        "text": "时巨鹿郡有兄弟三人，一名张角，一名张宝，一名张梁。那张角本是个不第秀才，因入山采药，遇一老人，碧眼童颜，手执藜杖，唤角至一洞中，以天书三卷授之，曰：“此名《太平要术》，汝得之，当代天宣化，普救世人；若萌异心，必获恶报。“角拜问姓名。老人曰：“吾乃南华老仙也。“言讫，化阵清风而去。角得此书，晓夜攻习，能呼风唤雨，号为\"太平道人”。中平元年正月内，疫气流行，张角散施符水，为人治病，自称\"大贤良师\"。角有徒弟五百余人，云游四方，皆能书符念咒。次后徒众日多，角乃立三十六方，大方万余人，小方六七千，各立渠帅，称为将军；讹言：“苍天已死，黄天当立；岁在甲子，天下大吉。“令人各以白土书\"甲子\"二字于家中大门",
        "id": 407,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 296,
        "text": "帅，称为将军；讹言：“苍天已死，黄天当立；岁在甲子，天下大吉。“令人各以白土书\"甲子\"二字于家中大门上。青、幽、徐、冀、荆、扬、兖、豫八州之人，家家侍奉大贤良师张角名字。角遣其党马元义，暗资金帛，结交中涓封请，以为内应。角与二弟商议曰：“至难得者，民心也。今民心已顺，若不乘势取天下，诚为可惜。“遂一面私造黄旗，约期举事；一面使弟子唐周，驰书报封谓。唐周乃径赴省中告变。帝召大将军何进调兵擒马元义，斩之；次收封谓等一干人下狱。张角闻知事露，星夜举兵，自称\"天公将军”，张宝称\"地公将军”，张梁称\"人公将军\"。申言于众曰：“今汉运将终，大圣人出。汝等皆宜顺天从正，以乐太平。“四方百姓，裹黄巾从张角反者",
        "id": 408,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 124,
        "text": "将军\"。申言于众曰：“今汉运将终，大圣人出。汝等皆宜顺天从正，以乐太平。“四方百姓，裹黄巾从张角反者四五十万。贼势浩大，官军望风而靡。何进奏帝火速降诏， $\\spadesuit$ 各处备御，讨贼立功。一面遣中郎将卢植、皇甫嵩、朱儁，各引精兵、分三路讨之。",
        "id": 409,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 80,
        "text": "榜文行到涿县，引出涿县中一个英雄。那人不甚好读书；性宽和，寡言语，喜怒不形于色;素有大志，专好结交天下豪杰；生得身长七尺五寸，两耳垂肩，双手过膝，目能自顾其耳，",
        "id": 410,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 9,
        "text": "三国演义作者：罗贯中",
        "id": 411,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 22,
        "text": "正文 第一回 宴桃园豪杰三结义 斩黄巾英雄首立功",
        "id": 412,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 73,
        "text": "滚滚长江东逝水，浪花淘尽英雄。是非成败转头空。青山依旧在，几度夕阳红。白发渔樵江渚上，惯看秋月春风。一壶浊酒喜相逢。古今多少事，都付笑谈中。",
        "id": 413,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 7,
        "text": "调寄《临江仙》",
        "id": 414,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 179,
        "text": "话说天下大势，分久必合，合久必分。周末七国分争，并入于秦。及秦灭之后 楚、汉分争，又并入于汉。汉朝自高祖斩白蛇而起义，一统天下，后来光武中 兴,传至献帝，遂分为三国。推其致乱之由，殆始于桓、灵二帝。桓帝禁锢善 类,崇信宦官。及桓帝崩，灵帝即位，大将军窦武、太傅陈蕃共相辅佐。时有 宦官曹节等弄权，窦武、陈蕃谋诛之，机事不密，反为所害，中涓自此愈横。 ",
        "id": 415,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 316,
        "text": "建宁二年四月望日，帝御温德殿。方升座，殿角狂风骤起。只见一条大青蛇从梁上飞将下来，蟠于椅上。帝惊倒,左右急救入宫，百官俱奔避。须臾，蛇不见了。忽然大雷大雨，加以冰雹，落到半夜方止，坏却房屋无数。建宁四年二月，洛阳地震;又海水泛溢,沿海居民,尽被大浪卷入海中。光和元年，雌鸡化雄。六月朔,黑气十余丈，飞入温德殿中。秋七月，有虹现于玉堂;五原山岸，尽皆崩裂。种种不祥，非止一端。帝下诏问群臣以灾异之由，议郎蔡邕上疏，以为蜺堕鸡化，乃妇寺干政之所致，言颇切直。帝览奏叹息，因起更衣。曹节在后窃视，悉宣告左右;遂以他事陷邕于罪，放归田里。后张让、赵忠、封谓、段珪、曹节、侯览、蹇硕、程旷、夏恽、郭胜十人朋比为",
        "id": 416,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 97,
        "text": ";遂以他事陷邕于罪，放归田里。后张让、赵忠、封谓、段珪、曹节、侯览、蹇硕、程旷、夏恽、郭胜十人朋比为奸,号为\"十常侍\"。帝尊信张让，呼为\"阿父\"。朝政日非，以致天下人心思乱，盗贼蜂起。",
        "id": 417,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 57,
        "length_tokens": 13,
        "text": "上传PDF，在右侧得到Markdown（和网页版体验一样）",
        "id": 418,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 6,
        "text": "MinerU使用 (API)",
        "id": 419,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 28,
        "text": "Step1，申请APIToken (很快审核通过，约10分钟)Step2，通过API，提交PDF，获取task_id",
        "id": 420,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 62,
        "text": "{'code':0,'msg:'ok','trace_id':'cb77a8e67abe5ea20244f7f4373ed206','data':{'task_id': '68ce471e-49e4-43ac9219-caa31f7cc50e'l} ",
        "id": 421,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 116,
        "text": "Step3，通过task_id，获取任务状态及内容 {'code': O,'msg': 'ok','trace_id': '39790a27efb7eb5cf3609b464da21cd2','data': {'task_id': '9bf482eb-556e-4324-b513-199adc08768b', 'state': 'done', 'err_msg':\",'full_zip_url': 'https://cdn mineru.openxlab.org.cn/pdf/42cb8c3c-74ab-4cbc-8a38- ",
        "id": 422,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 4,
        "text": "保存APIToken",
        "id": 423,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 2,
        "text": "× ",
        "id": 424,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 42,
        "text": "为了保证您的数据安全，点击确认后您不再可见此APIToken，请妥善保管此APIToken。如果不小心丢失，需要重新生成新的APIToken",
        "id": 425,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 58,
        "length_tokens": 171,
        "text": "eyJ0eXBIjoiSldUliwiYWxnljoiSFM1MTlifQ.eyJqdGkiOilxODkwNDM1MCIsInJvbCl 6IIJPTEVfUkVHSVNURVliLCJpc3MiOiJPcGVuWExhYiIsImlhdCI6MTc0NTkwMjc2N SwiY2xpZW50SWQiOiJsa3pkeDU3bnZ5MjJqa3BxOXgydylsInBob25IIjoiMTU4M L1MzgzOL7iLCJv0101 I   \nM 2N).wv 1c jw. sF3 .rL te) 2av N pc7- LPlaipDfi ",
        "id": 426,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 6,
        "text": "MinerU使用 (API)",
        "id": 427,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 40,
        "text": "https://cdn-mineru.openxlab.org.cn/pdf/42cb8c3c-74ab-4cbc-8a38-20d00ef3d2f8.zip ",
        "id": 428,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 13,
        "text": "将文件下载并解压，可以看到MinerU解析后的结果",
        "id": 429,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 136,
        "text": "images 2025/4/29 13:09 文件夹42cb8c3c-74ab-4cbc-8a38-20d00ef3d2f8... 2025/4/29 13:09 JSON 29 KB42cb8c3c-74ab-4cbc-8a38-20d00ef3d2f8... 2025/4/29 13:09 PDF 文件 5,985 KBfull.md 2025/4/29 13:09 Markdown 21 KBlayout.json 2025/4/29 13:09 JSON 699 KB",
        "id": 430,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 431,
        "type": "image",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 7,
        "text": "#·多种思考模式",
        "id": 432,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 11,
        "text": "Qwen3模型支持两种思考模式：",
        "id": 433,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 78,
        "text": "411.思考模式：在这种模式下，模型会逐步推理，经过深思熟虑后给出最终答案。这种方法非常适合需要深入思考的复杂问题。2.非思考模式：在此模式中，模型提供快速、近乎即时的响应，适用于那些对速度要求高于深度的简单问题。",
        "id": 434,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 141,
        "text": "43这种灵活性使用户能够根据具体任务控制模型进行\"思考\"的程度。例如，复杂的问题可以通过扩展推理步骤来解决，而简单的问题则可以直接快速作答，无需延迟。至关重要的是，这两种模式的结合大大增强了模型实现稳定且高效的\"思考预算\"控制能力。如上文所述，Qwen3展现出可扩展且平滑的性能提升，这与分配的计算推理预算直接相关。这样的设计让用户能够更轻松地为不同任务配置特定的预算，在成本效益和推理质量之间实现更优的平衡。",
        "id": 435,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 49,
        "text": "45 ![](images/ 322eff800b1ff0f47539bfa3b9c77c6d5cfa086a7fe4cfd44c3bd816ac5230d5.jpg) ",
        "id": 436,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 59,
        "length_tokens": 5,
        "text": "47 #·多语言",
        "id": 437,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 9,
        "text": "MinerU使用 （私有化部署）",
        "id": 438,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 38,
        "text": "Step1，安装magic-pdf pip install -U \"magic-pdf[full]' Step2，下载依赖的models python download_models.py 使用modelscope快速下载各种models ",
        "id": 439,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 131,
        "text": "Downloading [models/0CR/paddleocr_torch/ch_ptocr_mobile_v2.0_cls_infer.pth]: 100%|| 575k/575k [0:01<00:00，418kB Downloading [models/OCR/paddleocr_torch/ch_PP-0CRv3_det_infer.pth]: _100%| l 2.42M/2.42M [00:02<00:00，963kB/s] Downloading [models/MFR/unimernet_hf_small_2503/config.json]: 100%| 1 4.97k/4",
        "id": 440,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 151,
        "text": "mernet_hf_small_2503/config.json]: 100%| 1 4.97k/4.97k [00:01<00:00，3.41kB/s] Downloading [models/0CR/paddleocr_torch/arabic_PP-0CRv3_rec_infer.pth]: 100%|I 8.57M/8.57M [00:05<00:00, 1.62MB/s Downloading [models/0CR/paddleocr_torch/chinese_cht_PP-0CRv3_rec_infer.pth]:_100%|I 10.6M/10.6M [00:11<00:00",
        "id": 441,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 150,
        "text": "v3_rec_infer.pth]:_100%|I 10.6M/10.6M [00:11<00:00，939 Downloading [models/OCR/paddleocr_torch/ch_PP-0CRv4_det_infer.pth]: 100%| 13.8M/13.8M [00:13<00:00,1.07MB/s] Downloading[models/0CR/paddleocr_torch/cyri1lic_PP-0CRv3_rec_infer.pth]:100%|I_8.57M/8.57M[00:1<00:00，70kB/ Downloading [models/0CR/padd",
        "id": 442,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 139,
        "text": ".57M[00:1<00:00，70kB/ Downloading [models/0CR/paddleocr_torch/devanagari_Pp-0CRv3_rec_infer.pth]: 100%|| 8.57M/8.57M [00:15<00:00，589k Downloading [models/OCR/paddleocr_torch/en_PP-oCRv3_det_infer.pth]: 100%| 2.42M/2.42M [00:05<00:00，489kB/s] Downloading [models/MFR/unimernet_hf_small_2503/generatio",
        "id": 443,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 132,
        "text": "ding [models/MFR/unimernet_hf_small_2503/generation_config.json]: 100%l 191/191 [00:01<00:00,110B/s] Downloading [models/OCR/paddleocr_torch/ch_PP-0CRv4_rec_infer.pth]: 100%| 25.7M/25.7M [00:21<00:00，1.27MB/s] Downloading [models/OCR/paddleocr_torch/japan_PP-OCRv3_rec_infer.pth]: 100%] 9.62M/9.62M [",
        "id": 444,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 148,
        "text": "japan_PP-OCRv3_rec_infer.pth]: 100%] 9.62M/9.62M [00:10<00:00，994kB/s] Downloading [models/OCR/paddleocr_torch/ka_PP-oCRv3_rec_infer.pth]: 100%l 8.56M/8.56M [00:10<00:00，856kB/s] Downloading [models/OCR/paddleocr_torch/en_PP-OCRv4_rec_infer.pth]: 100%1l 22.7M/22.7M [00:16<00:00，1.45MB/s] Downloading",
        "id": 445,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 149,
        "text": "%1l 22.7M/22.7M [00:16<00:00，1.45MB/s] Downloading [models/OCR/paddleocr_torch/korean_PP-0CRv3_rec_infer.pth]: 100%|■l 9.44M/9.44M [00:10<00:00,932kB/s] Downloading [models/MFR/unimernet_hf_small_2503/README.md]: 100%l 1.62k/1.62k [00:01<00:00，1.02kB/s] Downloading[models/0CR/paddleocr_torch/Mu1tili",
        "id": 446,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 128,
        "text": "/s] Downloading[models/0CR/paddleocr_torch/Mu1tilingual_-0CRv3_det_infer.pth]:100%ll2.42M/2.42M[0:03<00:00，64 Downloading [models/MFR/unimernet_hf_small_2503/special_tokens_map.json]: 100%l | 552/552 [00:01<00:00,287B/s] Downloading [models/0CR/paddleocr_torch/latin_PP-0CRv3_rec_infer.pth]: 100%ll 8",
        "id": 447,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 141,
        "text": "eocr_torch/latin_PP-0CRv3_rec_infer.pth]: 100%ll 8.57M/8.57M [00:09<00:00, 955kB/s] Downloading [models/Layout/Y0L0/doclayout_yolo_docstructbench_imgsz1280_2501.pt]: 100%ll 37.9M/37.9M [00:42<00:00 Downloading[models/MFR/unimernet_hf_smal_2503/tokenizer_config.json]:10%|I 4.42k/4.42k [00:0<00:00，4.6",
        "id": 448,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 137,
        "text": "zer_config.json]:10%|I 4.42k/4.42k [00:0<00:00，4.61kB/s Downloading [models/Layout/YoLO/doclayout_yolo_ft.pt]: 100%l 38.8M/38.8M [00:37<00:00，1.10MB/s] Downloading [models/MFR/unimernet_hf_small_2503/tokenizer.json]: 100% 3.42M/3.42M [00:10<00:00，326kB/s] Downloading [models/OCR/paddleocr_torch/ta_P",
        "id": 449,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 60,
        "length_tokens": 109,
        "text": "kB/s] Downloading [models/OCR/paddleocr_torch/ta_PP-OCRv3_rec_infer.pth]: 100%] 8.56M/8.56M [00:15<00:00，596kB/s] Downloading [models/OCR/paddleocr_torch/te_PP-oCRv3_rec_infer.pth]: 100%l 8.56M/8.56M [00:14<00:00,601kB/s] ",
        "id": 450,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 9,
        "text": "MinerU使用 （私有化部署）",
        "id": 451,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 7,
        "text": "Step3，推理pdf ",
        "id": 452,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 13,
        "text": "magic-pdf -p 三国演义.pdf -o ./output",
        "id": 453,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 89,
        "text": "Creating new Ultralytics Settings v0.0.6 file   \nView Ultralytics Settings with 'yolo settings' or at 'C:\\Users\\cheny\\AppData\\Roaming\\Ultralytics\\settings.json' Update Setings with'yolo settings key=value'，i.e.'yolo setings runs_dir=path/to/dir'.For helpsee https:/docs.ult ralytics.com/quickstart/#u",
        "id": 454,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 104,
        "text": "helpsee https:/docs.ult ralytics.com/quickstart/#ultralytics-settings.   \n2025-04-29 12:52:33.250 INFO magic_pdf.data.dataset:__init__:157 - lang: None   \n2025-04-29 12:52:37.562 INFO i magic_pdf.libs.pdf_check:detect_invalid_chars:67 - cid_count: 0， text_len: 15666， c id_chars_radio: 0.0   \n2025-04",
        "id": 455,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 105,
        "text": " text_len: 15666， c id_chars_radio: 0.0   \n2025-04-29 12:52:49.131 | INF0 l magic_pdf.model.pdf_extract_kit:__init__:68 - DocAnalysis init， this may take some times,layout_model:doclayoutyoloapplforula:rueappyocr:Trueapltable:ruetable_model:rapidtable lang: None   \n2025-04-29 12:52:49.134 INFO magic",
        "id": 456,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 117,
        "text": "e lang: None   \n2025-04-29 12:52:49.134 INFO magic_pdf.model.pdf_extract_kit:__init__:82 - using device: cpu   \n2025-04-29 12:52:49.135 INFO magic_pdf.model.pdf_extract_kit:__init__:86 - using models_dir: D:\\推荐系统\\数据分 析训练营\\L20-多模态内容理解\\CASE-MinerU使用\\modelscope_models/models   \n2025-04-29 12:53:20.706 ",
        "id": 457,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 89,
        "text": "delscope_models/models   \n2025-04-29 12:53:20.706 WARNING magic_pdf.model.sub_modules.ocr.paddleocr2pytorch.pytorch_paddle:__init__:59 - The current device in use is CPU. To ensure the speed of parsing， the language is automatically switched to ch_lite. 2025-04-29 12:53:22.451 INFO magic_pdf.model.p",
        "id": 458,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 111,
        "text": "te. 2025-04-29 12:53:22.451 INFO magic_pdf.model.pdf_extract_kit:__init__:164 - DocAnalysis init done!   \n2025-04-29 12:53:22.452 INFO l magic_pdf.model.doc_analyze_by_custom_model:custom_model_init:116 - model init cost : 33.325724363327026   \nLayout Predict: 100%ll 200/200 [13:52<00:00， 4.16s/it] ",
        "id": 459,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 61,
        "length_tokens": 58,
        "text": "t Predict: 100%ll 200/200 [13:52<00:00， 4.16s/it] MFD Predict: 36%ll l 71/200 [12:20<22:40,10.54s/it]] ",
        "id": 460,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 461,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 7,
        "text": "·强大的文档解析能力",
        "id": 462,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 19,
        "text": "多格式支持：支持PDF、PPT、DOCX、EPUB、MOBI",
        "id": 463,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 25,
        "text": "复杂布局处理：精准识别单栏、多栏、跨页排版，并按照人类阅读顺序输出文本",
        "id": 464,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 37,
        "text": "取：提取文本、图片、表格、公式、页眉、页脚、脚注等元素，并智能去除无关内容（如广告、页码）。",
        "id": 465,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 6,
        "text": "智能转换与结构化输出",
        "id": 466,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 32,
        "text": "Markdown/JSON输出：支持将PDF转换为机器可读的Markdown或JSON格式，保留标题、段落、列表等原始结构。",
        "id": 467,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 31,
        "text": "公式与表格处理：自动识别数学公式并转换为LaTeX格式，表格可转换为HTML或LaTeX格式。",
        "id": 468,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 31,
        "text": "OCR多语言支持：内置OCR功能，支持84种语言（包括繁简中文），可自动检测扫描版PDF并启用OCR。",
        "id": 469,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 5,
        "text": "·高性能与优化",
        "id": 470,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 35,
        "text": "硬件加速：支持CPU、GPU（CUDA）、NPU（华为Ascend）加速，优化显存使用（最低8GB显存需求）。",
        "id": 471,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 36,
        "text": "模型升级：集成先进模型（如LayoutLMv3、YOLOv8、UniMERNet），提升布局检测、公式识别和表格解析速度。",
        "id": 472,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 62,
        "length_tokens": 24,
        "text": "批量处理：支持多文件批量上传和自动化处理，适合大规模文档解析任务。",
        "id": 473,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 6,
        "text": "打卡：pdf转Markdown",
        "id": 474,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 35,
        "text": "你是否有资料需要进行Markdown格式转换，方便后续AI大模型进行RAG问答，选择一份pdf，让MinerU进行格式转化吧！",
        "id": 475,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 8,
        "text": "可以选择以下任意方式进行：",
        "id": 476,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 194,
        "text": "在线使用  \n客户端  \nAPI  \n私有化部署  \n【德邦证券】Al Agent 回原文件 Markdown 山三 1  \n核心逻辑 证券 AAgent大模型开理时刻算力低推动产业化进程。A立gen夫策和行动作的 调用工具去逐步完成给定目标的能力，可拆解为大模型+规划+记忆+工定目标的能力，可拆解为大模型+规划+记忆+工具使用四个烟读部分，我们认为，ALAg的产业发展离不月AI大模型的进步和维理成本的下降，血前已 创模型 ，模型性能不再仅仅受 预训断防投，现在 具使用四个组成部分。我们认为，AlAgent的产业发展离不开AI大模型的进用力去年缩水70%，接票 去年由于A算力供应意张，H100",
        "id": 477,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 196,
        "text": "lAgent的产业发展离不开AI大模型的进用力去年缩水70%，接票 去年由于A算力供应意张，H100的用预价格高送每小时8美元，但现在市场上算力洪应过响，价格择到了每小时2美元以下。 步和推理成本的下降，当前已初步具备发展条件。1)o1掀起推理的划时代革得显著进屏，大楼型能力增长遇电隙，国内外科技大厂转向ALAgert，国外来看，OpenAL国内来香 AutoGLM,百度 、钉叮等互联网大厂份纷理进，我们认为，随着 经程不断温量，都分企业已 命，通过思维链开启推理ScallingLaw时刻。根据TheInformation,传统的大积累了大量的数字文 AXONE 资料等，具备行业know-ho",
        "id": 478,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 180,
        "text": "TheInformation,传统的大积累了大量的数字文 AXONE 资料等，具备行业know-hom的 ]AL+数图分析：Palantir，A速政资合 业更有能力推出Agen应用，美国直领或龙头不断管地ALAgenL，1）Al+营销：AppLovin ：3)AI+CRM:Salesforce, 起到望美员工效率和员工 模型ScalingLaw已经撞墙，OpenAl发布了全新的多模态Self-playRL模型nt重整各个部门的业务流程，扩大员工工作效规；5）耗+数育： 行业应材施款 o1,o1开创模型scaling的新维度，模型性能不再仅仅受限于预训练阶段，现在带来企业价值，楼据甲子光年，至2",
        "id": 479,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 201,
        "text": "创模型scaling的新维度，模型性能不再仅仅受限于预训练阶段，现在带来企业价值，楼据甲子光年，至2030年 □，至早 可以通过增加推理计算资源来提升模型表现。2)国内外算力供需错配现象在行业锁划 ow-how，深入了解客户置求 夕，如果长期 程助企业提升的产能大于投入的成率，抗有望形或付费，从而实现 价值免现，近期两外A应用业适大理发，担步验证重类AAgenf的商业价值，资本市场表现亮期，Applovin，Palantr，Innodata 2024年转至11月26日股价潮碳分别为750.36%，296.50%，418.23%， 改善，算力部署成本有望下降，有利于Agent产业化推广。从AI算",
        "id": 480,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 214,
        "text": "，296.50%，418.23%， 改善，算力部署成本有望下降，有利于Agent产业化推广。从AI算力租赁成本1 ) toB Ag 大模型日着推理筑不要选代，AIA 网络、致选互取 用，告产，，究 汉得信息、用友网、科大氏飞 华影视、中国欧件国 来看，租赁价格今年较去年缩水 $7 0 \\%$ 。根据PANews，去年由于AI算力供应置石网络、汉仅股份、美图公司、丢从科技等。 紧张，H100的租赁价格高达每小时8美元，但现在市场上算力供应过剩，价格标：技术选代不及预网、国内AIAgen南业化进属不及预期、算力供应不及预属、行业育争如刷风脸等。 降到了每小时2美元以下。证目录 产业进程：国内外科技",
        "id": 481,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 191,
        "text": "及预期、算力供应不及预属、行业育争如刷风脸等。 降到了每小时2美元以下。证目录 产业进程：国内外科技厂商共振，美国涌现多款垂类AIAgent取得显著进展。CONTENTS 大模型能力增长遇瓶颈,国内外科技大厂转向AIAgent。国外来看,OpenAl、Google、Anthropic正在将注意力从模型转移至一系列Al01 算力t底异业 Agent工具上,Anthropic推出Computeruse,变革人类与PC交互方式,OpenAl、Google也将Agent应用排上日程;国内来看，智谱抢跑发布02 产业程：国内外科技厂商共振， AutoGLM,百度、腾讯、钉钉等互联网大厂纷纷跟进。我们认为",
        "id": 482,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 163,
        "text": "布02 产业程：国内外科技厂商共振， AutoGLM,百度、腾讯、钉钉等互联网大厂纷纷跟进。我们认为，随着企业数字化进程不断发展,部分企业已积累了大量的数字文档、资料等，具备行业03 商业式g用性增疆 know-how的企业更有能力推出Agent应用,美国垂直领域龙头不断落地Al04 投资建设和 At $\\mathsf { A l + }$ 数据分起到提高员工效率和员工人数的作用;4)AI+办公：微软连出10款AI Agent,涵盖销售、运营、服务三类.内部Copilot和Aaent重塑各个部门的业务流程.",
        "id": 483,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 63,
        "length_tokens": 0,
        "text": "",
        "id": 484,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 64,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 485,
        "type": "text",
        "file_name": "13-视觉大模型与多模态理解"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "Fine-tuning技术与大模型优化",
        "id": 0,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "Fine-tuning技术与大模型优化",
        "id": 2,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 2,
        "length_tokens": 82,
        "text": "·如何模型微调（以ChatGLM为例）   \n·李飞飞50美金复刻R1模型   \ns1: Simple test-time scaling Unsloth：LLM高效微调 CASE: qwen2.5-7B微调 (alpaca-cleaned) CASE：训练垂类模型（中文医疗模型） CASE：训练自己的R1模型 ",
        "id": 3,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 3,
        "length_tokens": 12,
        "text": "模型微调 (以ChatGLM为例) ",
        "id": 4,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "ChatGLM-6B定制",
        "id": 5,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "P-Tuning: ",
        "id": 6,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 66,
        "text": "·用自己的数据集对ChatGLM模型进行微调·P-TuningV2已将需要微调的参数减少到原来的 $0 . 1 \\% - 3 \\%$ 大大加快了训练速度，同时最低GPU显存要求为7G(建议16-24G)",
        "id": 7,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 31,
        "text": "TIPS：AdvertiseGen数据集，训练3000steps，大约需要训练2小时，需要保证你的GPU有足够多的计算单元",
        "id": 9,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 45,
        "text": "您已订阅\"Colab Pro\"。了解详情。可用：21.01个计算单元使用率：大约每小时13.16个您有2个有效会话。管理会话",
        "id": 10,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "余量不足警告！",
        "id": 11,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 4,
        "length_tokens": 54,
        "text": "根据您当前的使用量数据，预付费资源可能最长还能使用1.6小时。如需购买更多计算单元，请点击此处。我们可能无法保留您当前的运行时，或许会为您分配新的运行时。",
        "id": 12,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 12,
        "text": "ChatGLM-6B定制 (训练) ",
        "id": 13,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 12,
        "text": "如果是你单卡，运行的时候会报错：",
        "id": 14,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "Default process group has not been initialized, please make sure to call init_process_group. ",
        "id": 15,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 16,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 21,
        "text": "RuntimeError: Default process group has not been initialized, please make sure to call init_process_group. ",
        "id": 17,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 20,
        "text": "TIPS：单卡GPU，需要修改main.py，设置 training_args.local_rank = -1 ",
        "id": 18,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 19,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 12,
        "text": "ChatGLM-6B定制 (训练) ",
        "id": 20,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 13,
        "text": "#使用P-Tuningv2进行训练!bash train.sh",
        "id": 21,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 135,
        "text": "{'loss': 4.4697，'learning_rate' : 0.01626666666666667，'epoch' : 0.08} {loss': 4.4755，'learning_rate': 0.016200000000000003，'epoch' :0.08} {loss':4.5359，'learning_rate' : 0.016133333333333333，'epoch' :0.08} {'loss':4.5341，'learning_rate':0.016066666666666667，'epoch' :0.08} {'loss':4.5033，'learning_ra",
        "id": 22,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 135,
        "text": "6666667，'epoch' :0.08} {'loss':4.5033，'learning_rate':0.016,'epoch' :0.08} {'loss' : 4.4446, ‘learning_rate':0.015933333333333334，'epoch'：0.09} {'loss' : 4.4129, 'learning_rate':0.015866666666666668, 'epoch':0.09} {loss' : 4.4903, 'learning_rate':0.0158，'epoch':0.09} {'loss' : 4.5469, 'learning_rate",
        "id": 23,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 131,
        "text": "158，'epoch':0.09} {'loss' : 4.5469, 'learning_rate':0.015733333333333332, 'epoch':0.09} {'loss' : 4.4247, 'learning_rate':0.015666666666666666, 'epoch':0.09} {'loss' : 4.5165, 'learning_rate':0.015600000000000001, 'epoch':0.09} {loss' : 4.5162，'learning_rate’: 0.015533333333333333, epoch':0.09} {los",
        "id": 24,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 135,
        "text": "ing_rate’: 0.015533333333333333, epoch':0.09} {loss':4.3992，'learning_rate':0.015466666666666667，'epoch' :0.09} {'loss':4.4758，'learning_rate':0.0154，'epoch':0.1} {loss' : 4.4585，'1earning_rate' :0.015333333333333334，'epoch' :0.1} {loss':4.5184，'learning_rate':0.015266666666666666，'epoch':0.1} {'los",
        "id": 25,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 71,
        "text": "ning_rate':0.015266666666666666，'epoch':0.1} {'loss':4.4634，'learning_rate':0.0152，'epoch':0.1} 24% 720/3000 [39:26<2:05:19, 3.30s/it] ",
        "id": 26,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "train.json训练集数据 ",
        "id": 27,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 126,
        "text": "{\"content\":\"类型#裙\\*图案#卡通\\*裙长#连衣裙\",\"summary\":“传奇而又经典的卡通形象，米老鼠似乎已经成为了孩童风格的一种标志，大小不一的头像以及奇趣的表情设计。满版的点缀风格让整个连衣裙洋溢着独特的天真气质，加之面料小口袋的点缀，小小的造型呈现出灵巧而又可爱的格调，让宝贝俏皮萌动。\"}",
        "id": 28,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 6,
        "length_tokens": 168,
        "text": "{\"content\":\"类型#裤\\*版型#宽松\\*材质#牛仔布\\*风格#街头\\* 风格#休闲\\*裤长#五分裤\\*裤腰型#松紧腰\",\"summary\":\"这 款休闲五分裤，采用亲肤软牛仔，洗水磨白形成深浅对比， 更加个性。大弹力松紧腰，舒适贴合，一点都不紧勒。裤 子门襟时尚的设计，为细节加分。立体双贴袋，腰间系带 的点缀更吸睛。精致的裁剪，或是干练整洁的走线和宽松 版型，是对街头的描写。\"} ",
        "id": 29,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "ChatGLM-6B定制 (训练) ",
        "id": 30,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 7,
        "length_tokens": 13,
        "text": "PRE_SEQ_LEN=128   \nLR=2e-2 ",
        "id": 31,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 7,
        "length_tokens": 88,
        "text": "CUDA_VISIBLE_DEVICES=O python3 main.py\\--do_train \\ 训练模式--train_file AdvertiseGen/train.json\\ 训练集--validation_file AdvertiseGen/dev.json \\ 验证集--prompt_column content \\ Prompt字段--response_column summary\\ Response字段--overwrite_cache \\ 覆盖缓存文件--model_name_or_path THUDM/chatglm-6b 预训练模型--output_dir outpu",
        "id": 32,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 7,
        "length_tokens": 42,
        "text": "e_or_path THUDM/chatglm-6b 预训练模型--output_dir output/adgen-chatglm-6b-pt- 模型输出目录  \n\\$PRE_SEQ_LEN-\\$LR\\",
        "id": 33,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 7,
        "length_tokens": 100,
        "text": "--overwrite_output_dir\\ 覆盖输出目录--max_source_length 64\\ 输入最大长度--max_target_length 64\\ 输出最大长度--per_device_train_batch_size1\\ 训练batch_size--per_device_eval_batch_size 1\\ 验证batch_size--gradient_accumulation_steps 16\\ 梯度累计步数--predict_with_generate\\ 使用生成模式预测--max_steps 3000\\ 最大训练步数--logging_steps 10 \\ 每隔10",
        "id": 34,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 7,
        "length_tokens": 73,
        "text": "测--max_steps 3000\\ 最大训练步数--logging_steps 10 \\ 每隔10步记录日志--save_steps 1000\\ 每隔1000步保存模型--learning_rate \\$LR\\ 学习率--pre_seq_len \\$PRE_SEQ_LEN\\ 预处理序列长度--quantization_bit 4 量化位数",
        "id": 35,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 13,
        "text": "ChatGLM-6B定制 (推理) ",
        "id": 36,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "Thinking: 如何加载本地模型？",
        "id": 37,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 26,
        "text": "将train.sh 中的THUDM/chatglm-6b改为本地的模型路径(参考train2.sh)",
        "id": 38,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 31,
        "text": "Thinking: 如何使用训练好的ChatGLM模型进行  \n推理  \n使用evaluate.sh，这里需要修改  \nmodel_name_or_path 和 ptuning_checkpoint",
        "id": 39,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 39,
        "text": "TIPS：在P-tuningv2训练时模型只保存PrefixEncoder参数，所以在推理时需要同时加载原ChatGLM-6B模型以及PrefixEncoder的权重",
        "id": 40,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 33,
        "text": "PRE_SEQ_LEN=128   \nCHECKP0INT=adgen-chatglm-6b-pt-128-2e-2   \nSTEP=3000 ",
        "id": 41,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 76,
        "text": "CUDA_VISIBLE_DEVICES=0 python3 main.py \\ --do_predict : -validation_file AdvertiseGen/dev.json - -test_file AdvertiseGen/dev.json \\ -overwrite_cache \\ - -prompt_column content \\ --response_column summary - -model_name_or_path THUDM/chatglm-6b V - -ptuning_checkpoint ./output/\\$CHECKPOINT/checkpoint-",
        "id": 42,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 8,
        "length_tokens": 78,
        "text": "uning_checkpoint ./output/\\$CHECKPOINT/checkpoint-\\$STEP - -output_dir ./output/\\$CHECKPOINT V --overwrite_output_dir \\ - -max_source_length 64 \\ - -max_target_length 64 \\ --per_device_eval_batch_size 1 - -predict_with_generate \\ - -ρre_seq_Len \\$PRE_SEQ_LEN - -quantization_bit 4 ",
        "id": 43,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 13,
        "text": "ChatGLM-6B定制 (推理) ",
        "id": 44,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 20,
        "text": "Thinking: 如果我们训练了1000Step， 如何使用这时的模型进行推理？",
        "id": 45,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 91,
        "text": "[INFO|modeling_utils.py:3185] 2023-05-21 06:57:55,121 $\\gg$ All model checkpoint weights were used when ini [WARNING|modeling_utils.py:3187] 2023-05-2106:57:55,121 >>Some weightsof ChatGLMForConditionalGenerat You should probably TRAIN this model ona down-stream task to be able to use it for predict",
        "id": 46,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 60,
        "text": " down-stream task to be able to use it for predictions and infe: [INFO|modeling_utils.py:2821] 2023-05-21 06:57:55,396 $\\gg$ Generation config file not found, using a gener: Quantized to 4 bit ",
        "id": 47,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 48,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 115,
        "text": "input_ids[3,3,3,3,3,3,3,3,3,3,3，3,3,3,3，3,3,3，3,3，3,3，3，3,3，3,3,3,3,3，5，（inputs 类型#上衣\\*材质#牛仔布\\*颜色#白色\\*风格#简约\\*图案#刺绣\\*衣样式#外套\\*衣款式#破洞",
        "id": 49,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 121,
        "text": "label_ids[5，71689，66561，67061，77257，70984，6，72194，65173，64290，64622，81549，63823，65173，642labels 简约而不简单的牛仔外套，白色的衣身十分百搭。衣身多处有做旧破洞设计，打破单调乏味，增加一丝造型看点。！05/21/2023 07:00:09 - INFO -__main__ - \\*\\*\\* Predict \\*\\*\\*",
        "id": 50,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 73,
        "text": "[INFO|configuration_utils.py:577] 2023-05-21 07:00:09,009 >> Generate config GenerationConfig{ \"_from_model_config\":true, \"bos_token_id\":130004, \"eos_token_id\":130005, \"pad_token_id\":3, \"transformers_version\":\"4.29.2\" ",
        "id": 51,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 82,
        "text": "打开evaluate.sh，确保   \nmodel_name_or_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ THUDM/chatglm-6b   \nptuning_checkpoint   \n= ./output/\\$CHECKPOINT/checkpoint-\\$STEP   \n这时调整上面的 ${ \\mathsf { S T E P } } = 1 0 0 0$   \n!bash evaluate.sh ",
        "id": 52,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 9,
        "length_tokens": 25,
        "text": "在dev.json中定义了1700个数据这里可以筛选10条，保存为dev2.json，进行预测",
        "id": 53,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 13,
        "text": "ChatGLM-6B定制 (推理) ",
        "id": 54,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 13,
        "text": "1000step的时候 对前10条dev进行的预测结果",
        "id": 55,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 115,
        "text": "\\*\\*\\*\\*\\* predict metrics \\*\\*\\*\\*\\*   \npredict_bleu-4 二 10.0084   \npredict_rouge $^ { - 1 }$ $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 34.2697   \npredict_rouge-2 二 8.5939   \npredict_rouge-l 二 25.3421   \npredict_runtime 二 0:00:27.51   \npredict_samples $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 10   ",
        "id": 56,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 64,
        "text": "es $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 10   \npredict_samples_per_second $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 0.363   \npredict_steps_per_second $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 0.363 ",
        "id": 57,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 99,
        "text": "Prompt:类型#上衣\\*材质#牛仔布\\*颜色#白色\\*风格#简约\\*图案#刺绣\\*衣样式#外套\\*衣款式#破洞预训练模型：这件上衣的材质是牛仔布,颜色是白色,风格是简约，图案是刺绣，衣样式是外套，衣款式是破洞。",
        "id": 58,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 59,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 10,
        "length_tokens": 61,
        "text": "1000STEP：这一款牛仔外套，白色调的牛仔外套，简约大方，白色刺绣图案,精致美观,打破单调,凸显个性。破洞设计时尚时髦，占显个性。",
        "id": 60,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "P-Tuning V2: ",
        "id": 61,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 11,
        "length_tokens": 130,
        "text": "P-Tuning v2: Prompt Tuning Can Be Comparable to Finetuning Universally Across Scales and Tasks, 2022 https://arxiv.org/pdf/2110.07602.pdf   \n·解决了PromptTuning在小模型上效果不佳的问题   \n·将PromptTuning扩展到更复杂的NLU任务，比如MRC 答案抽取、NER实体抽取等序列标注任务。 P-TuningV2只需要0.1%-3%的可训练参数   \n$\\Rightarrow$ 减少了训练时间、内存成本和每个任务的存储成本 ",
        "id": 62,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 63,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 12,
        "length_tokens": 14,
        "text": "Lora (Low-Rank Adaptation of Large Language Models) ",
        "id": 64,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 12,
        "length_tokens": 33,
        "text": "·在原始预训练模型旁边增加一个旁路，通过低秩分解（先降维再升维）来模拟参数的更新量",
        "id": 65,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 12,
        "length_tokens": 67,
        "text": "·将原模型与降维矩阵A，升维矩阵B分开   \n训练阶段，只训练B和A   \n推理阶段，将BA加到原参数，即 $h = W x + B A x = ( W + B A ) x$   \n不引入额外的推理延迟 ",
        "id": 66,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 12,
        "length_tokens": 27,
        "text": "·初始化，A采用高斯分布初始化，B初始化为全0，这样训练开始时旁路为0矩阵",
        "id": 67,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 12,
        "length_tokens": 105,
        "text": "·多任务切换，当前任务 $\\mathsf { W O } + \\mathsf { B } \\mathsf { 1 A } \\mathsf { 1 }$ ，将lora部分减掉换成B2A2，即可实现任务切换  \n·秩的选取：对于一般的任务， $\\mathsf { r a n k } { = } 1 , 2 , 4 , 8$ 即可，如果任务较大，可以选择更大的rank",
        "id": 68,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 69,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "Lora原理",
        "id": 70,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "Lora (Low-Rank Adaptation of Large Language Models) ",
        "id": 71,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 30,
        "text": "·大模型的低秩适配器，即固定大模型，增加低秩分解的矩阵来适配下游任务",
        "id": 72,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "Lora的优点: ",
        "id": 73,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 41,
        "text": "1）一个中心模型服务多个下游任务，节省参数存储量  \n2）推理阶段不引入额外计算量  \n3）训练任务比较稳定，效果比较好",
        "id": 74,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "Thinking: 如果不使用Lora进行训练会怎样？",
        "id": 75,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 32,
        "text": "如果训练集很小，比如20-30samples，会把大模型带跑。因为微调大模型会针对小样本进行过度拟合",
        "id": 76,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 77,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "PEFT库",
        "id": 78,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 5,
        "text": "Peft库: ",
        "id": 79,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 12,
        "text": "https://github.com/huggingface/peft ",
        "id": 80,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "PEFT ",
        "id": 81,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 83,
        "text": "1）LoRA:大模型的低秩适配器   \n2） Prefix Tuning: Optimizing Continuous Prompts for   \nGeneration   \n3) P-Tuning:GPT Understands, Too   \n4） Prompt Tuning: The Power of Scale for Parameter  \nEfficient Prompt Tuning   \n模 scale PLMs is often prohibitively costly.In this regard, PEFT methods only fine-tur small num",
        "id": 82,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 59,
        "text": " this regard, PEFT methods only fine-tur small number of (extra)   \ntune的模型，目前支持4种策略： model parameters, thereby greatly decreasing the computational and storage costs. Recent State-of-the-Art PEFT techniques achieve performance comparable to that of fullfine-tuning. ",
        "id": 83,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 84,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 16,
        "text": "State-of-the-art Parameter-Efficient Fine-Tuning (PEFT) methods ",
        "id": 85,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 9,
        "text": "Seamlessly integrated with Inference. ",
        "id": 86,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 13,
        "text": "Accelerate for large scale models leveraging DeepSpeed and Big Model ",
        "id": 87,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "Supported methods: ",
        "id": 88,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 20,
        "text": "1. LoRA: LORA: LOW-RANK ADAPTATION OF LARGE LANGUAGE MODELS ",
        "id": 89,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 76,
        "text": "2. Prefix Tuning: Prefix-Tuning: Optimizing Continuous Prompts for Generation, P-Tuning v2: Prompt Tuning   \nCan Be Comparable to Fine-tuning Universally Across Scales and Tasks   \n3. P-Tuning: GPT Understands, Too   \n4. Prompt Tuning: The Power of Scale for Parameter-Efficient Prompt Tuning   \n5. A",
        "id": 90,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 14,
        "length_tokens": 26,
        "text": "cale for Parameter-Efficient Prompt Tuning   \n5. AdaLoRA: Adaptive Budget Allocation for Parameter-Efficient Fine-Tuning ",
        "id": 91,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "打卡：基于ChatGLM的模型微调",
        "id": 92,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 15,
        "length_tokens": 27,
        "text": "部署私有化大模型，并通过自定义的广告语数据集进行训练，用它来完成你的广告语生成任务吧",
        "id": 93,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "TIPS：AdvertiseGen数据集，训练3000steps，大约需要训练2小时，需要保证你的GPU有足够多的计算单元",
        "id": 94,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "TIPS：单卡GPU，需要修改main.py，设置training_args.local_rank $= - 1$ ",
        "id": 95,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 15,
        "length_tokens": 39,
        "text": "TIPS：在P-tuningv2训练时模型只保存PrefixEncoder参数，所以在推理时需要同时加载原ChatGLM-6B模型以及PrefixEncoder 的权重",
        "id": 96,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 16,
        "length_tokens": 18,
        "text": "李飞飞50美金复刻R1模型s1: Simple test-time scaling",
        "id": 97,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "s1: Simple test-time scaling ",
        "id": 98,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 17,
        "length_tokens": 20,
        "text": "s1: Simple test-time scaling https://arxiv.org/pdf/2501.19393 ",
        "id": 99,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 17,
        "length_tokens": 104,
        "text": "·李飞飞等研究人员用不到50美元的云计算费用，成功训练出了一个名为s1的推理模型  \n·该模型在数学和编码能力中的表现，与OpenAi的O1和DeepSeek-R1等尖端推理模型不相上下。  \n·s1模型的训练只用了1000个样本数据，具体过程是：使用Gemini对这1000个样本完善推理过程，然后对Qwen模型进行监督微调。",
        "id": 100,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 101,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "s1: Simple test-time scaling ",
        "id": 102,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 6,
        "text": "S1模型方法论：",
        "id": 103,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 10,
        "text": "·数据集构建（s1K）：",
        "id": 104,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 33,
        "text": "从三个标准一一难度、 多样性和质量一一出发，挑选了1000个问题及其对应的推理路径。",
        "id": 105,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 50,
        "text": "数据集包括来自不同领域，如数学竞赛、物理竞赛，并且新增了两个原创的数据集：s1-prob和s1-teasers，分别涵盖了概率问题和定量交易面试中的难题。",
        "id": 106,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 10,
        "text": "·预算强制 (Budget Forcing） :",
        "id": 107,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 46,
        "text": "一种控制测试时计算的技术，通过强制终止或延长模型的思考过程（通过添加\"Wait\"字符串），使模型有机会重新检查答案，从而可能纠正错误的推理步骤。",
        "id": 108,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 18,
        "length_tokens": 71,
        "text": "Mathematical Competition PhD-Level Problem Solving Math Science Questions (MATH500) (AIME24) (GPQA Diamond) 95 60 60 e 40 50 20 40 0 512 2048 512 2048 8192 1024 4096 Average thinking time (tokens) ",
        "id": 109,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "s1: Simple test-time scaling ",
        "id": 110,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "预算强制 (Budget Forcing） :",
        "id": 111,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "1、设定思考时间限制：",
        "id": 112,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 47,
        "text": "当模型开始处理一个问题时，首先为其设定了一个最大思考时间（以token数量衡量）。如果模型在这个时间内完成了思考并准备给出答案，则按照正常流程进行。",
        "id": 113,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "2、强制结束思考过程：",
        "id": 114,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 58,
        "text": "如果模型生成的思考token超过了预设的最大值，系统会强行终止模型的思考过程。这通常是通过添加一个特殊的end-of-thinking tokendelimiter实现的，促使模型停止进一步的推理，并转向生成最终答案。",
        "id": 115,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "3、鼓励更深入的探索：",
        "id": 116,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 69,
        "text": "如果希望模型花更多的时间来考虑一个问题，可以抑制end-of-thinking token delimiter的生成，并在当前的推理路径后面追加\"Wait\"字符串 $\\Rightarrow$ 为了让模型有机会重新评估其先前的推理步骤，可能会纠正一些快速但不准确的回答。",
        "id": 117,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 19,
        "length_tokens": 58,
        "text": "例如，\"raspberry\"这个单词中有三个'r'，但最初的快速阅读导致模型错误地计数为两个。通过使用\"Wait\"，模型被引导去重新读取问题和单词，最终正确地计数了三个'r'。",
        "id": 118,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "s1: Simple test-time scaling ",
        "id": 119,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 26,
        "text": "Thinking：如何知道每个任务需要多少时间，如何控制这个预算限制的方向（多一些，少一些）？",
        "id": 120,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "基于训练数据的分析：",
        "id": 121,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 47,
        "text": "通过分析训练集中的问题，可以估计出不同复杂度的问题所需的平均思考时间。例如，在实验中，将推理路径按照长度（以token数量计）分组，并据此对模型进行提示。",
        "id": 122,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 9,
        "text": "基于实验评估的时间调整！",
        "id": 123,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 48,
        "text": "在初步设定的时间预算基础上运行模型，并记录其在各种问题上的表现。这包括准确性和生成的答案长度等指标。  \n基于此决定增加思考时间，还是减少思考时间。",
        "id": 124,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "使用分类条件控制：",
        "id": 125,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 20,
        "length_tokens": 62,
        "text": "论文提到了一种叫做\"class-conditional control\"的方法，它允许用户通过APl参数设置不同的\"reasoning_effort\"级别(低、中、高）。虽然这种方法不能精确控制计算量，但可以根据期望的响应速度和细节水平调整思考时间。",
        "id": 126,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "s1: Simple test-time scaling ",
        "id": 127,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "Thinking：S1整个的训练过程是怎样的？ ",
        "id": 128,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 21,
        "length_tokens": 67,
        "text": "1、数据准备：首先，从大约59,000个问题中精心挑选并构建了一个包含1,000个高质量样本的数据集（s1k）。这些样本包含了问题、由Gemini 2.0FlashThinkingAPI生成的推理路径以及对应的答案。",
        "id": 129,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 21,
        "length_tokens": 70,
        "text": "2、模型选择与微调：选择了Qwen2.5-32B-Instruct作为基础模型，并在其上进行了监督微调SFT。这里是将s1K数据集中的问题及其对应的推理路径和答案输入到Qwen2.5-32B-Instruct模型中进行训练。",
        "id": 130,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 21,
        "length_tokens": 94,
        "text": "3、预算强制技术的应用：在测试阶段，为了控制模型的计算资源使用，采用了“预算强制当模型生成的思考token超过设定限制时，通过添加结束思考的标记强制终止思考过程。如果希望模型花费更多时间思考，则通过追加\"Wait\"字符串鼓励模型进一步探索。整个训练是在16个H100 GPU上进行的，耗时约26分钟。",
        "id": 131,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "s1: Simple test-time scaling ",
        "id": 132,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 22,
        "length_tokens": 31,
        "text": "-一共有2个r <lim_end|> The word \"raspberry\" contains 2 letter \"r\". <lim_end|> ",
        "id": 133,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 22,
        "length_tokens": 110,
        "text": "<|im_start|>system   \nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant. <lim_end|>   \n<|im_start|>user   \nHow many r in raspberry   \n<lim_end|>   \n<lim_start|>assistant   \n<lim_start|>think   \n让我一步步分析:   \n1.先写出单词：raspberry   \n2.数一下字母r的出现次数：   \n-第一个r在开头   \n-第二个r在中间 ",
        "id": 134,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 22,
        "length_tokens": 41,
        "text": "思考过程控制：MAX_TOKENS_THINKING=32000 #控制思考token的上限NUM_IGNORE $\\mathbf { \\Psi } = 1$ #控制思考的次数",
        "id": 135,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 22,
        "length_tokens": 41,
        "text": "通过prompt template引导模型输出思考过程，通过sft.py进行训练，损失函数loss的计算包括：思考过程(<|im_start|>think后的内容)和最终答案",
        "id": 136,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "Unsloth：LLM高效微调 ",
        "id": 137,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": "Unsloth：LLM高效微调 ",
        "id": 138,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 24,
        "length_tokens": 17,
        "text": "Unsloth https://github.com/unslothai/unsloth ",
        "id": 139,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 24,
        "length_tokens": 204,
        "text": "·一个高效的开源工具，专注于加速大语言模型（LLMs）的微调和训练过程。  \n·高效微调：支持Llama、Mistral、Qwen等主流模型，微调速度比传统方法快2-5倍，内存使用减少 $5 0 - 8 0 \\%$ ·低显存需求：仅需7GB显存即可训练1.5B参数的模型，15GB显存可支持高达15B参数的模型。  \n·集成GRPO算法（群体相对策略优化）：增强模型推理能力，比如在无人工提示下解决逻辑问题·广泛的模型兼容性：支持多种模型格式（如GGUF、OIlama、vLLM）和量化方法（如QLoRA、LoRA）。·开源与免费：提供免费的colab Notebook，用户只需添加数据集并运行代码",
        "id": 140,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 24,
        "length_tokens": 90,
        "text": "RA、LoRA）。·开源与免费：提供免费的colab Notebook，用户只需添加数据集并运行代码即可获得微调模型。  \n·支持多种量化方法：可将模型从原始的浮动精度（FP32）转换为低精度（如BF16、QLoRA和Q4等），以减少内存占用并加速模型推理和训练过程。",
        "id": 141,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "Unsloth：LLM高效微调 ",
        "id": 142,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 25,
        "length_tokens": 50,
        "text": "https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3.1_(8B)- GRPO.ipynb#scrollTo $\\ c =$ P1zyu9Ug2XEt ",
        "id": 143,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 144,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 26,
        "length_tokens": 19,
        "text": "CASE: qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 145,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 146,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "yahma/alpaca-cleaned数据集",
        "id": 147,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 117,
        "text": "·Stanford发布的原始Alpaca数据集的清理版本，主要用于LLM的指令微调（InstructTuning）。  \n·原始数据集：AIpaca-52k，最初用于微调LLaMA模型以生成Alpaca-7B模型，包含约52K条指令数据。  \n·清理版本：yahma/alpaca-cleaned 是对原Alpaca数据集的优化版本，修复了数据中的瑕疵 (如噪声、格式问题)",
        "id": 148,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "2.数据格式 (JSON格式)",
        "id": 149,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 37,
        "text": "instruction：用户输入的指令（必填）。input：可选的上下文或补充输入（选填）。output：模型应生成的回答 (必填)",
        "id": 150,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 72,
        "text": "\"instruction\":\"计算这些物品的总费用。\", \"input\":\"汽车-\\$3000，衣服- $\\$ 100$ ，书- $\\$ 20$ 。\",   \n\"output\":\"汽车、衣服和书的总费用为 $\\$ 3000+5100+520=$   \n\\$3120。\"   \n} ",
        "id": 151,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 27,
        "length_tokens": 27,
        "text": "Alpaca数据集是一个用于语言模型指令微调 (InstructionTuning）的数据集，由Stanford研究团队开发",
        "id": 152,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 28,
        "length_tokens": 6,
        "text": "TRL SFTTrainer 工具",
        "id": 153,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "TRLSFTTrainer工具",
        "id": 154,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 28,
        "length_tokens": 42,
        "text": "·HugingFace的TRL(Transformer Reinforcement Learning)库中的SFTTrainer(Supervised Fine-tuning Trainer)是专门设计用于简化Transformer模型监督微调过程的工具。",
        "id": 155,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 28,
        "length_tokens": 17,
        "text": "·SFTTrainer提供了一系列专门为监督微调设计的功能：",
        "id": 156,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 28,
        "length_tokens": 154,
        "text": "内存高效训练：支持参数高效微调技术(PEFT)，如 LoRA (Low-Rank Adaptation)，可以显著减少内存使用量。  \n数据集处理简化：自动处理常见的数据格式，简化了从原始文本到模型输入的转换过程。它内置了对文本补全任务的支持，这是许多语言模型微调场景中的常见需求。  \n训练优化：提供了针对语言模型训练的特定优化，如打包(packing)技术，可以将多个短序列合并成一个长序列，提高训练效率。灵活配置：保留了原始Trainer的所有功能，同时添加了针对监督微调的特定参数和选项",
        "id": 157,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 158,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 122,
        "text": "from unsloth import FastLanguageModel  \n#设置模型参数  \nmax_seq_length $= 2 0 4 8$ #设置最大序列长度，支持RoPE缩放  \ndtype $\\mathbf { \\tau } = \\mathbf { \\tau }$ None #数据类型，None表示自动检测。TeslaT4 使用 Float16,  \nAmpere $^ +$ 使用 Bfloat16  \nload_in_4bit $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ True #使用4bit量化来减少内存使用  \n#加载预训练模型",
        "id": 159,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 113,
        "text": "athbf { \\sigma }$ True #使用4bit量化来减少内存使用  \n#加载预训练模型和分词器  \nmodel, tokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ FastLanguageModel.from_pretrained(  \nmodel_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"/root/autodl-tmp/models/Qwen/Qwen2__5-7B-lnstruct\",  \n#使用Qwen2.5-7B模型max_seq_length $\\mathbf { \\tau }",
        "id": 160,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 114,
        "text": "  \n#使用Qwen2.5-7B模型max_seq_length $\\mathbf { \\tau } = \\mathbf { \\tau }$ max_seq_length,dtype $\\mathbf { \\tau } = \\mathbf { \\tau }$ dtype,load_in_4bit $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_in_4bit,  \n）  \n#添加LoRA适配器，只需要更新1-10%的参数  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ FastLanguageModel.get_",
        "id": 161,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 119,
        "text": " \\tau } = \\mathbf { \\tau }$ FastLanguageModel.get_peft_model(model,$r = 1 6$ ，# LoRA秩，建议使用8、16、32、64、128target_modules $\\mathbf { \\tau } = \\mathbf { \\tau }$ [\"q_proj\",\"k_proj\",\"v_proj\",\"o_proj\",\"gate_proj\",\"up_proj\",\"down_proj\",]，#需要应用LoRA的模块lora_alpha $= 1 6$ ，# LoRA缩放因子lora_dropout $\\begin{array} ",
        "id": 162,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 133,
        "text": "ha $= 1 6$ ，# LoRA缩放因子lora_dropout $\\begin{array} { r } { { \\bf \\Omega } = 0 . } \\end{array}$ ，#LoRAdropout率，0为优化设置bias $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"none\"，#偏置项设置，none为优化设置use_gradient_checkpointing $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"unsloth\"，#使用unsloth的梯度检查点，可减  \n少 $30 \\%$ 显存使用random_s",
        "id": 163,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 97,
        "text": "loth\"，#使用unsloth的梯度检查点，可减  \n少 $30 \\%$ 显存使用random_state $= 3 4 0 7$ ，#随机种子use_rslora $\\mathbf { \\tau } = \\mathbf { \\tau }$ False，# 是否使用rank stabilized LoRAloftq_config $\\mathbf { \\tau } = \\mathbf { \\tau }$ None，# LoftQ配置  \n）",
        "id": 164,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 165,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 29,
        "length_tokens": 25,
        "text": "通过FastLanguageModel.from_pretrained()加载基础模型，然后通过FastLanguageModel.get_peft_model()添加 LoRA层",
        "id": 166,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 167,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "#定义Alpaca格式的提示模板",
        "id": 168,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 46,
        "text": "alpaca_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"\" Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request. ",
        "id": 169,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "### Instruction: ",
        "id": 170,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 2,
        "text": "0 ",
        "id": 171,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "### Input: ",
        "id": 172,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 2,
        "text": "0 ",
        "id": 173,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "### Response: 0\" 111 ",
        "id": 174,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 26,
        "text": "#获取结束标记 EOS_TOKEN $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer.eos_token ",
        "id": 175,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "#定义数据格式化函数",
        "id": 176,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 79,
        "text": "def formatting_prompts_func(examples): instructions $\\mathbf { \\tau } = \\mathbf { \\tau }$ examples[\"instruction\"] inputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ examples[\"input\"] outputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ examples[\"output\"] texts = [] for instruction, input, output in zip(instructi",
        "id": 177,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 30,
        "length_tokens": 70,
        "text": "[] for instruction, input, output in zip(instructions, inputs, outputs): #必须添加EOS_TOKEN，否则生成会无限继续 text $\\mathbf { \\tau } = \\mathbf { \\tau }$ alpaca_prompt.format(instruction,input, output) $^ +$ EOS_TOKEN texts.append(text) return {\"text\" : texts, } ",
        "id": 178,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 179,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 91,
        "text": "#加载Alpaca数据集   \nfrom datasets import load_dataset   \ndataset $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_dataset(\"/root/autodl-tmp/datasets/yahma/alpaca   \ncleaned\",split $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"train\")   \ndataset $\\mathbf { \\tau } = \\mathbf { \\tau }$ dataset.map(formatting_prompts_fun",
        "id": 180,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 65,
        "text": "athbf { \\tau }$ dataset.map(formatting_prompts_func, batched $\\mathbf { \\tau } = \\mathbf { \\tau }$ True,) #设置训练参数和训练器   \nfrom trl import SFTTrainer   \nfrom transformers import TrainingArguments from unsloth import is_bfloat16_supported ",
        "id": 181,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 182,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "#定义训练参数",
        "id": 183,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 85,
        "text": "training_args $\\mathbf { \\tau } = \\mathbf { \\tau }$ TrainingArguments(per_device_train_batch_size $= 2$ ，#每个设备的训练批次大小gradient_accumulation_steps $= 4$ ，#梯度累积步数warmup_steps $= 5$ ，#预热步数max_steps $= 6 0$ ，#最大训练步数",
        "id": 184,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 117,
        "text": "learning_rate $= 2 e { - 4 }$ ，#学习率fp16 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ not is_bfloat16_supported()，#是否使用FP16$\\mathsf { b f 1 6 } =$ is_bfloat16_supported()，# 是否使用BF16logging_steps $\\mathbf { \\Psi } = 1$ ，#日志记录步数optim $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"adamw_8bit\"，#优化器weight_decay $\\ma",
        "id": 185,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 125,
        "text": "athbf { \\tau }$ \"adamw_8bit\"，#优化器weight_decay $\\mathbf { \\tau } = 0 . 0 1$ ，#权重衰减Ir_scheduler_type $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"linear\"，#学习率调度器类型$\\mathsf { s e e d } = 3 4 0 7$ ，#随机种子output_dir $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"outputs\"，#输出目录report_to $\\mathbf { \\sigma } = \\ma",
        "id": 186,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 31,
        "length_tokens": 29,
        "text": "\"outputs\"，#输出目录report_to $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"none\"，#报告方式）",
        "id": 187,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 32,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 188,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 32,
        "length_tokens": 93,
        "text": "#创建SFTTrainer实例  \ntrainer $\\mathbf { \\tau } = \\mathbf { \\tau }$ SFTTrainer(model $=$ model,tokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer,train_dataset $\\mathbf { \\tau } = \\mathbf { \\tau }$ dataset,dataset_text_field $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"text\",max_seq_length $\\mathbf { \\",
        "id": 189,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 32,
        "length_tokens": 106,
        "text": "athbf { \\tau }$ \"text\",max_seq_length $\\mathbf { \\tau } = \\mathbf { \\tau }$ max_seq_length,dataset_num_proc $= 2$ ，packing $\\mathbf { \\tau } = \\mathbf { \\tau }$ False，#对于短序列可以设置为True，训练速度提升5倍args $\\mathbf { \\tau } = \\mathbf { \\tau }$ training_args,  \n#开始训练  \ntrainer_stats $\\mathbf { \\tau } = \\mathbf",
        "id": 190,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 32,
        "length_tokens": 24,
        "text": "\n#开始训练  \ntrainer_stats $\\mathbf { \\tau } = \\mathbf { \\tau }$ trainer.train()",
        "id": 191,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 192,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 193,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 5,
        "text": "#模型推理部分",
        "id": 194,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 112,
        "text": "FastLanguageModel.for_inference(model)#启用原生2倍速推理  \ninputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer(  \nIalpaca_prompt.format(\"Continue the fibonnaci sequence.\"，#指令\"1,1,2,3,5,8\"，#输入\"\"，#输出留空用于生成）  \n], return_tensors $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"pt\").to(\"cuda\")  \n#生成输出  \noutputs $\\mathb",
        "id": 195,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 98,
        "text": "\\tau }$ \"pt\").to(\"cuda\")  \n#生成输出  \noutputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.generate(\\*\\*inputs,max_new_tokens $\\mathbf { \\tau } = \\mathbf { \\tau }$ 64,use_cache $\\mathbf { \\tau } = \\mathbf { \\tau }$ True)  \ntokenizer.batch_decode(outputs)  \n\\*\\*inputs:经过tokenizer处理后的输入数据  \nmax new tokens",
        "id": 196,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 113,
        "text": "  \n\\*\\*inputs:经过tokenizer处理后的输入数据  \nmax new tokens = 64,  \n控制模型最多可以生成的新token数量  \n这里设置为64，最多会生成64个新的token  \n如果生成过程中遇到终止符（如EOStoken），会  \n提前停止  \nuse cache $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ True:  \n启用KVcache（键值缓存）机制  \n可以显著提升生成速度，因为不需要重复计算之前  \n的token的注意力权重",
        "id": 197,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 198,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 199,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 33,
        "length_tokens": 34,
        "text": "[Belowisnrctiotatibssdituttatproesftotetitesposetaproatelyletete eqestciiis#spebn seqcee ",
        "id": 200,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 34,
        "length_tokens": 19,
        "text": "CASE: Qwen2.5-7B微调 (alpaca-cleaned) ",
        "id": 201,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 34,
        "length_tokens": 24,
        "text": "#微调模型保存 model.save_pretrained(\"lora_model\") tokenizer.save_pretrained(\"lora_model\") ",
        "id": 202,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 34,
        "length_tokens": 54,
        "text": "('lora_model/tokenizer_config.json',   \n'lora_model/special_tokens_map.json',   \n'lora_model/vocab.json',   \n'lora_model/merges.txt',   \n'lora_model/added_tokens.json',   \n'lora_model/tokenizer.json') ",
        "id": 203,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 204,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 205,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 35,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型（中文医疗模型）",
        "id": 206,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "CASE: 训练垂类模型 （中文医疗模型",
        "id": 207,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 36,
        "length_tokens": 38,
        "text": "Chinesemedicaldialoguedata中文医疗对话数据集https://github.com/Toyhom/Chinese-medical-dialogue-data在Data_数据中有6个文件夹：",
        "id": 208,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 209,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 210,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 36,
        "length_tokens": 79,
        "text": "<Andriatria_男科>94596个问答对<IM_内科>220606个问答对<OAGD_妇产科>183751个问答对<Oncology_肿瘤科>75553个问答对<Pediatric_儿科>101602个问答对<Surgical_外科>115991个问答对",
        "id": 211,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 212,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型 （中文医疗模型）",
        "id": 213,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 37,
        "length_tokens": 33,
        "text": "TODO：训练中文医疗垂直模型使用Data_数据中的6个科室的数据参考 Qwen2_5_(7B)_Alpaca.py",
        "id": 214,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 37,
        "length_tokens": 46,
        "text": "@Data_数据这里面有6个数据集，我想按照@Qwen2_5_(7B)_Alpaca.py改成写医疗领域的垂直模型的训练，帮我编写新的Python",
        "id": 215,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 216,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 37,
        "length_tokens": 19,
        "text": "Thinking: 运行后报错， 主要是因为数据中文编码的问题如何解决？",
        "id": 217,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 38,
        "length_tokens": 12,
        "text": "CASE: 训练垂类模型 （中文医疗模型",
        "id": 218,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 38,
        "length_tokens": 107,
        "text": "UnicodeDecodeError Traceback (most recent call last)这个错误是因为CSV文件的编码格式不是UTF-8，而是其他编码（可能是GBK或GB231  \nCell In[5], line 52是中文Windows系统常用的编码)。让我修改代码以正确处理中文编码:49return {\"text\": texts}medical_finetune.py No changes made 门51#加载医疗数据集 def load_medical_data(data_dir):  \n--> 52 dataset $\\mathbf { \\tau } = \\math",
        "id": 219,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 38,
        "length_tokens": 101,
        "text": "a_dir):  \n--> 52 dataset $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_medical_data(\"Data_数据\") data \"\"\"加载医疗对话数据\"\"\" $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ []53 dataset $\\mathbf { \\tau } = \\mathbf { \\tau }$ dataset.map(formatting_prompts_func, batched $\\ c =$ True) #遍历所有科室目.1istdir(data_dir):dept_path",
        "id": 220,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 38,
        "length_tokens": 102,
        "text": "$\\ c =$ True) #遍历所有科室目.1istdir(data_dir):dept_path $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ os.path.join(data_dir, dept)if not os.path.isdir(dept_path):  \nCell In[5], line 27,in load_medical_data(data_dir) continue25 #读取csv文件 #读取csv $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ fforfins.istdirdeptath)i",
        "id": 221,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 38,
        "length_tokens": 112,
        "text": "a } = \\mathbf { \\sigma }$ fforfins.istdirdeptath)iff.dswith26 csv_file $\\mathbf { \\tau } = \\mathbf { \\tau }$ [f for f in os.listdir(dept_path) if f.endswith('.csv')][0] try:# 首先尝试UTF-8编码  \n--> 27 df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv(os.path.join(dept_path, csv_file))29 #处理数据将错误贴给Curs",
        "id": 222,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 38,
        "length_tokens": 67,
        "text": "s.path.join(dept_path, csv_file))29 #处理数据将错误贴给Cursor，找到原因是因为csv文件不是utf-8修正后进行运行，可能还会遇到问题，还需要进行调壺  \n$\\scriptstyle = = { \\frac { } { } }$ 运行报错",
        "id": 223,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型 （中文医疗模型）",
        "id": 224,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 28,
        "text": "@Data_数据这里面有很多csv，帮我编写一个新的python，读取里面的.csv，注意里面是中文的编码",
        "id": 225,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 226,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 39,
        "text": "我来帮你编写一个专门用于读取和处理医疗对话数据的Python脚本。这个脚本会处理所有科室的CSV文件，并正确处理中文编码：",
        "id": 227,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 228,
        "type": "image",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 31,
        "text": "有时候在原有的文件上进行修改，不如另起一个文件，针对性的进行编码，比如这里专门写Python读取.csv的内容",
        "id": 229,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 7,
        "text": "开始处理医疗对话数据...",
        "id": 230,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 5,
        "text": "处理内科数据...",
        "id": 231,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 12,
        "text": "正在处理文件：内科5000-33000.csv",
        "id": 232,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 24,
        "text": "文件内科5000-33000.csv 的列名:['department','title','ask','answer']处理数据:",
        "id": 233,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "$100 \\%$ ",
        "id": 234,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 22,
        "text": "220606/220606 [00:04<00:00,45523.05it/s] ",
        "id": 235,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 5,
        "text": "处理外科数据..",
        "id": 236,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 11,
        "text": "正在处理文件:外科5-14000.csv",
        "id": 237,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 39,
        "length_tokens": 21,
        "text": "文件外科5-14000.csv的列名:['department','title','ask','answer'] ",
        "id": 238,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型 （中文医疗模型）",
        "id": 239,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 41,
        "text": "@process_medical_data.py已经成功读取到了文件夹下面的.csv内容，@medical_finetune.py但是这里没有读取成功帮我参照 $@$ process_medical_data.py进行调整",
        "id": 240,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 25,
        "text": "我来帮你修改 medical_finetune.py 中的数据加载部分，参照 process_medical_data.py的实现:",
        "id": 241,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 107,
        "text": "medical_finetune.py $+ 8 1 - 2 5 \\ √$ 口  \ndef read_csv_with_encoding(file_path):\"\"\"尝试使用不同的编码读取cSV文件\"\"\"encodings $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['gbk'，'gb2312'，'gb18030'，'utf-8']for encoding in encodings:try:return pd.read_csv(file_path，encoding $\\mathbf { \\sigma } =$ encoding)except Unico",
        "id": 242,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 51,
        "text": "oding $\\mathbf { \\sigma } =$ encoding)except UnicodeDecodeError:continueraise ValueError(f\"无法使用任何编码读取文件：{file_path}\")  \ndef load_medical_data(data_dir):\"n书 1迁数据……□",
        "id": 243,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 19,
        "text": "我已经修改了 medical_finetune.py 中的数据加载部分，主要改进包括：",
        "id": 244,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "1.添加了 read_csv_with_encoding 函数:",
        "id": 245,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 29,
        "text": "支持多种中文编码（GBK、GB2312、GB18030、UTF-8)自动尝试不同编码直到成功读取",
        "id": 246,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 158,
        "text": "处理内科数据.  \n正在处理文件：内科5000-33000.csv  \n文件 内科5000-33000.csv 的列名：［'department'，'title'，'ask'，'answer']处理外科数据.  \n正在处理文件：外科5-14000.csv  \n文件 外科5-14000.csv 的列名：['department'，'title'，'ask'，'answer']处理儿科数据.  \n正在处理文件：儿科5-14000.csv  \n文件儿科5-14000.csv 的列名：［'department'，'title'，'ask'，'answer']处理肿瘤科数据.  \n正在处理文件：肿瘤科5",
        "id": 247,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 161,
        "text": "ent'，'title'，'ask'，'answer']处理肿瘤科数据.  \n正在处理文件：肿瘤科5-10000.csv  \n文件 肿瘤科5-10000.csv 的列名：['department'，'title'，'ask'，'answer']处理妇产科数据.  \n正在处理文件：妇产科6-28000.csv  \n文件 妇产科6-28000.csv 的列名：['department'，'title'，'ask'，'answer']处理男科数据..  \n正在处理文件：男科5-13000.csv  \n文件 男科5-13000.csv 的列名：［'department'，'title'，'ask'，'",
        "id": 248,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 28,
        "text": "文件 男科5-13000.csv 的列名：［'department'，'title'，'ask'，'answer']",
        "id": 249,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 250,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 251,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 252,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 253,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 254,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "成功处理 664001 条数据",
        "id": 255,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型 （中文医疗模型）",
        "id": 256,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 257,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 14,
        "text": "问题：我最近总是感觉头晕，应该怎么办？",
        "id": 258,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 2,
        "text": "回答:",
        "id": 259,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 19,
        "text": "你是一个专业的医疗助手。请根据患者的问题提供专业、准确的回答。",
        "id": 260,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "###问题:",
        "id": 261,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 12,
        "text": "我最近总是感觉头晕，应该怎么办？",
        "id": 262,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 4,
        "text": "###回答: ",
        "id": 263,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 77,
        "text": "你好！建议你检查一下血脂和血压看看是否偏高，如果偏高的话可以吃降脂平胶囊调理，平时注意饮食清淡为主，不吃油腻的食物，多吃蔬菜水果等，少吃甜食，多喝水，不要熬夜，不要生气。<lim_end|>",
        "id": 264,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 265,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型 （中文医疗模型）",
        "id": 266,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "#定义训练参数",
        "id": 267,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 116,
        "text": "training_args $\\mathbf { \\tau } = \\mathbf { \\tau }$ TrainingArguments(per_device_train_batch_size $= 2$ ，#每个设备的训练批次大小gradient_accumulation_steps $= 4$ ，#梯度累积步数warmup_steps $= 5$ ，#预热步数max_steps $\\widehat { \\mathbf { \\xi } } = \\widehat { \\mathbf { \\xi } } \\cdot \\widehat { \\mathbf { \\xi } } \\cdot$ ，#不",
        "id": 268,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 42,
        "text": " } } \\cdot \\widehat { \\mathbf { \\xi } } \\cdot$ ，#不使用max_stepsnum_train_epochs $= 3$ ，#训练3个epoch  \n）",
        "id": 269,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 23,
        "text": "当max_steps $= - 1$ 时，训练器会使用num_train_epochs来控制训练轮数",
        "id": 270,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "现在的训练设置：",
        "id": 271,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 94,
        "text": "每个batch处理2个样本，累积4次梯度后更新一次模型，  \n实际batch_s ${ \\mathsf { i } } _ { } \\mathsf { z e } = 2 \\times 4 = 8$   \n会完整遍历数据集3次，总训练步数 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (数据集大小/实际  \nbatch_size) $\\times$ epochs",
        "id": 272,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 42,
        "length_tokens": 14,
        "text": "模型训练中，需要设置正确的max_steps，或者num_train_epochs",
        "id": 273,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 13,
        "text": "CASE: 训练垂类模型 （中文医疗模型）",
        "id": 274,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 8,
        "text": "#加载保存的模型进行推理",
        "id": 275,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 10,
        "text": "自动从adapter_config.json 读取基础模型路径",
        "id": 276,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "if True: ",
        "id": 277,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 278,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 87,
        "text": "from unsloth import FastLanguageModel   \nmodel, tokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ FastLanguageModel.from_pretrained( model_name $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"lora_model_medical\"，#保存的模型 max_seq_length $\\mathbf { \\tau } = \\mathbf { \\tau }$ max_seq_length, dtype $\\mathbf { \\t",
        "id": 279,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 73,
        "text": "thbf { \\tau }$ max_seq_length, dtype $\\mathbf { \\tau } = \\mathbf { \\tau }$ dtype, load_in_4bit $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_in_4bit,   \n）   \nFastLanguageModel.for_inference(model)#启用原生2倍速推 ",
        "id": 280,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "按文件名过滤",
        "id": 281,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 282,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 11,
        "text": "/./unsloth_cases/lora_model/ ",
        "id": 283,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 36,
        "text": "root: alpha_pattern:{} auto_mapping:null base_model_name_or_path:\"/root/autodl-tmp/models/Qwen/Qwen2__5-7B-Instruct\" ",
        "id": 284,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 62,
        "text": "bias:\"none\"   \ncorda_config:null   \neva_config:null   \nexclude_modules:null   \nfan_in_fan_out:false   \ninference_mode:true   \ninit_lora_weights:true   \nlayer_replication:null   \nlayers_pattern:null   \nlayers_to_transform:null   \nloftq_config:{}   \nlora_alpha:16 ",
        "id": 285,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 43,
        "length_tokens": 36,
        "text": "question $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"我最近总是感觉头晕，应该怎么办？\" generate_medical_response(question) ",
        "id": 286,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 44,
        "length_tokens": 8,
        "text": "CASE: 训练自己的R1模型",
        "id": 287,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "CASE: 训练自己的R1模型",
        "id": 288,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 5,
        "text": "1.安装和初始化",
        "id": 289,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 52,
        "text": "#安装必要的库   \n!pip install unsloth vllm   \n# 导入FastLanguageModel和PatchFastRL   \nfrom unsloth import FastLanguageModel, PatchFastRL   \nPatchFastRL(\"GRPO\", FastLanguageModel) ",
        "id": 290,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 25,
        "text": "FastLanguageModel，是unsloth库提供的一个优化过的LLM加载器和处理器，主要功能：",
        "id": 291,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 5,
        "text": "2.模型加载 ",
        "id": 292,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 98,
        "text": "model, tokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ FastLanguageModel.from_pretrained(model_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"meta-llama/meta-Llama-3.1-8B-Instruct\",max_seq_length $\\mathbf { \\tau } = \\mathbf { \\tau }$ max_seq_length,load_in_4bit $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tru",
        "id": 293,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 96,
        "text": "_in_4bit $\\mathbf { \\tau } = \\mathbf { \\tau }$ True,#使用4bit量化加载fast_inference $\\mathbf { \\tau } = \\mathbf { \\tau }$ True,#启用vLLM快速推理max_lora_rank $\\mathbf { \\tau } = \\mathbf { \\tau }$ lora_rank,gpu_memory_utilization $= 0 . 6$ ，#控制GPU内存使用  \n）",
        "id": 294,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 16,
        "text": "PatchFastRL，是一个用于强化学习(RL)的补丁函数：",
        "id": 295,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 75,
        "text": "提供了更快的模型加载和推理速度  \n·支持4bit量化加载模型  \n集成了vLLM进行快速推理  \n·支持LoRA(Low-Rank Adaptation)微调  \n·为语言模型添加强化学习相关的功能  \n特别支持GRPO (Guided Reward Policy Optimization)算法  \n·优化模型训练过程",
        "id": 296,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 297,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "CASE: 训练自己的R1模型",
        "id": 298,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 46,
        "length_tokens": 22,
        "text": "3.数据准备使用GSM8K数据集进行训练定义了特定的系统提示格式：",
        "id": 299,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 46,
        "length_tokens": 35,
        "text": "SYSTEM_PROMPT=!   \nRespond in the following format:   \n<reasoning>   \n</reasoning>   \n<answer>   \n·   \n</answer>   \n1-= ",
        "id": 300,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 46,
        "length_tokens": 5,
        "text": "4.奖励函数设计",
        "id": 301,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 46,
        "length_tokens": 11,
        "text": "定义了多个奖励函数来评估模型输出：",
        "id": 302,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 46,
        "length_tokens": 49,
        "text": "correctness reward func:检查答案正确性int_reward_func:检查输出是否为整数strict_format_reward_func:严格检查输出格式soft_format_reward_func:宽松检查输出格式xmlcount_reward_func:检查xML标签的正确使用",
        "id": 303,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "GSM8K数据集",
        "id": 304,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 59,
        "text": "GSM8K（Grade School Math 8K）是一个高质量的小学数学应用题数据集，主要用于评估和训练人工智能模型在数学推理和多步问题解决方面的能力 https://huggingface.co/datasets/openai/gsm8k",
        "id": 305,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 104,
        "text": "question answer   \nstring · lengths string ·lengths   \n42 985 50 1.23k   \nNatalia sold clips to 48 of her friends in April，and then she Natalia sold $4 8 / 2 = < < 4 8 / 2 = 2 4 > > 2 4$ clips in May. Natalia sold sold half as many clips in May. How many clips did Natalia sell.. $4 8 + 2 4 \\ = \\ < <",
        "id": 306,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 123,
        "text": "many clips did Natalia sell.. $4 8 + 2 4 \\ = \\ < < 4 8 + 2 4 = 7 2 > > 7 2$ clips altogether in April and May. 非排排排 72 Weng earns $\\$ 12$ an hour for babysitting. Yesterday，she just did Weng earns $1 2 / 6 \\Theta = \\left. \\ S < < 1 2 / 6 \\Theta = \\Theta . 2 > > \\Theta . 2 \\right.$ per minute. Workin",
        "id": 307,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 105,
        "text": "eta . 2 > > \\Theta . 2 \\right.$ per minute. Working 50 50 minutes of babysitting. How much did she earn? minutes，she earned $\\Theta . 2 \\ \\times \\ 5 \\Theta \\ = \\ \\oint < < \\Theta \\ : . 2 \\star 5 \\Theta = 1 \\Theta > > 1 \\Theta$ 非排排 10 Betty is saving money for a new wallet which costs $\\$ 100$ .Betty",
        "id": 308,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 114,
        "text": "money for a new wallet which costs $\\$ 100$ .Betty In the beginning， Betty has only 1 $0 0 \\vert 2 = 5 < < 1 0 0 / 2 = 5 0 > > 5 0$ ： has only half of the money she needs. Her parents decided to gis.. Betty's grandparents gave her $1 5 ~ \\star ~ 2 ~ = ~ \\$ < < 15 \\star 2 = 30 > > 30$ .This... Julie ",
        "id": 309,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 113,
        "text": "= ~ \\$ < < 15 \\star 2 = 30 > > 30$ .This... Julie is reading a 120-page book. Yesterday， she was able to read Maila read $1 2 \\times 2 = < < 1 2 \\star 2 = 2 4 > > 2 4$ pages today.So she was able to 12 pages and today， she read twice as many pages as yesterday. I... read a total of $1 2 ~ + ~ 2 4 ~ ",
        "id": 310,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 109,
        "text": " yesterday. I... read a total of $1 2 ~ + ~ 2 4 ~ = ~ < < 1 2 + 2 4 = 3 6 > > 3 6$ pages since yesterday.. James writes a 3-page letter to 2 different friends twice a week. He writes each friend $3 \\times 2 = < < 3 \\times 2 = 6 > > 6$ pages a week So he writes How many pages does he write a year? （2",
        "id": 311,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 123,
        "text": " he writes How many pages does he write a year? （20 $6 { \\star } 2 { = } < < 6 { \\star } 2 { = } 1 2 { > } { > } 1 2$ pages every week That means he writes $1 2 \\star 5 2 =$ ： Mark has a garden with flowers. He planted plants of three There are $8 0 / 1 0 0 \\ \\star \\ 1 0 \\ = \\ < < 8 0 / 1 0 0 \\star ",
        "id": 312,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 47,
        "length_tokens": 86,
        "text": "/ 1 0 0 \\ \\star \\ 1 0 \\ = \\ < < 8 0 / 1 0 0 \\star 1 0 = 8 > > 8$ more purple flowers than different colors in it. Ten of them are yellow, and there are 80.. yellow flowers. So in Mark's garden， there are $1 0 + 8 =$ ",
        "id": 313,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 48,
        "length_tokens": 8,
        "text": "CASE: 训练自己的R1模型",
        "id": 314,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "5.训练配置 ",
        "id": 315,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 48,
        "length_tokens": 94,
        "text": "training_args $\\mathbf { \\tau } = \\mathbf { \\tau }$ GRPOConfig(use_vllm $\\mathbf { \\tau } = \\mathbf { \\tau }$ True,learning_rate $= 5 6 . - 6 .$ max_steps $\\mathbf { \\tau } = \\mathbf { \\tau }$ 250,save_steps $\\mathbf { \\tau } = \\mathbf { \\tau }$ 250,#其他训练参数...",
        "id": 316,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "6.模型训练 ",
        "id": 317,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 48,
        "length_tokens": 84,
        "text": "trainer $\\mathbf { \\tau } = \\mathbf { \\tau }$ GRPOTrainer( model $\\mathbf { \\tau } = \\mathbf { \\tau }$ model, processing_class $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer, reward_funcs $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 【 xmlcount_reward_func, soft_format_reward_func strict_format_reward_",
        "id": 318,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 48,
        "length_tokens": 62,
        "text": "unc, soft_format_reward_func strict_format_reward_func int_reward_func, correctness_reward_func, ], args $\\mathbf { \\tau } = \\mathbf { \\tau }$ training_args, train_dataset $\\mathbf { \\tau } = \\mathbf { \\tau }$ dataset,   \n）   \ntrainer.train() ",
        "id": 319,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "CASE: 训练自己的R1模型",
        "id": 320,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 14,
        "text": "7.模型保存和导出提供了多种保存格式：",
        "id": 321,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 29,
        "text": "16位浮点数格式  \n4位量化格式  \nLoRA适配器格式  \nGGUF格式 （用于Illama.cpp）",
        "id": 322,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "8.推理示例",
        "id": 323,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 88,
        "text": "text $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer.apply_chat_template([ {\"role\" : \"system\",\"content\" : SYSTEM_PROMPT}, {\"role\" : \"user\", \"content\" : \"Calculate pi.\"}, ], tokenize $\\mathbf { \\tau } = \\mathbf { \\tau }$ False,add_generation_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ True) ",
        "id": 324,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 29,
        "text": "用于训练进行结构化推理的大模型，通过特定的格式(reasoning和answer标签）来输出推理过程和最终答案。",
        "id": 325,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 49,
        "length_tokens": 30,
        "text": "使用了GRPO训练方法采用了LoRA进行高效微调支持多种量化和保存格式包含了详细的奖励函数设计",
        "id": 326,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 5,
        "text": "GRPO 学习 ",
        "id": 327,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 9,
        "text": "GRPO (Group Relative Policy Optimization) ",
        "id": 328,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 90,
        "text": "组相对策略优化，是一种用于训练LLM的强化学习算法是DeepSeek-R1模型的核心技术之一GRPO的核心在于通过组内样本的相对奖励来优化策略模型，而不是依赖传统的价值函数模型（如PPO中的批评家模型）。它通过采样一组输出，利用这些输出的奖励值来计算相对优势，从而简化了训练过程。",
        "id": 329,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "工作原理:",
        "id": 330,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 32,
        "text": "采样与奖励计算：对于每个输入问题，GRPO从当前策略中采样一组输出，并计算每个输出的奖励值。",
        "id": 331,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 34,
        "text": "·相对优势估计：通过将每个输出的奖励值与组内平均奖励值进行比较，计算出每个输出的相对优势。",
        "id": 332,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 48,
        "text": "·策略更新：根据相对优势，GRPO更新策略模型，优先选择相对优势更高的输出。同时，它通过KL散度约束来控制策略更新的幅度，确保策略分布的稳定性",
        "id": 333,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 50,
        "length_tokens": 50,
        "text": "在DeepSeek-R1中，GRPO被用于优化模型在数学推理、代码生成等复杂任务中的表现。通过生成多个候选解并比较其表现，GRPO能够显著提升模型的推理能力和性能",
        "id": 334,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 51,
        "length_tokens": 5,
        "text": "GRPO 学习 ",
        "id": 335,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 336,
        "type": "table",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 51,
        "length_tokens": 5,
        "text": "GRPO学习优势：",
        "id": 337,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 51,
        "length_tokens": 77,
        "text": "·计算效率高：避免了价值网络的训练和维护，显著降低了内存占用和计算开销。·稳定性强：通过组内相对奖励减少策略更新的方差，确保训练过程更加稳定。·适用性强：特别适合大规模语言模型的微调，尤其在推理任务中表现出色",
        "id": 338,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "GRPO 如何引导形成推理能力",
        "id": 339,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 52,
        "length_tokens": 63,
        "text": "Thinking：GRPO可以帮助产生<reasoning>么？因为R1模型是推理模型，所以会有<reasoning></reasoning>这种，因为数据集GSM8K只有question,answer两列，不包含<reasoning>，那<reasoning>训练的数据是哪里来的？",
        "id": 340,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 52,
        "length_tokens": 29,
        "text": "GRPO是一种引导式奖励策略优化方法，它通过多个奖励函数引导模型生成特定格式的内容奖励函数设计：",
        "id": 341,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 52,
        "length_tokens": 78,
        "text": "reward_funcs $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ［xmlcount_reward_func, #检查XML标签的正确使用soft_format_reward_func, #检查是否包含<reasoning>和<answer>标签strict_format_reward_func， #严格检查格式int_reward_func, #检查答案是否为数字correctness_reward_func, #检查最终答案是否正确",
        "id": 342,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 9,
        "text": "GRPO 如何引导形成推理能力",
        "id": 343,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 30,
        "text": "关于<reasoning>的训练，GSM8k确实只有问题和答案，但GRPO不需要显式的reasoning训练数据",
        "id": 344,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 12,
        "text": "它通过奖励函数来引导模型生成reasoning:",
        "id": 345,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 97,
        "text": "def soft_format_reward_func(completions, \\*\\*kwargs) $- >$ list[float]: \"\"\"检查输出是否包含正确的格式\"\"\" pattern $\\mathbf { \\tau } = \\mathbf { \\tau }$ r\"<reasoning>.\\*?</reasoning>\\s\\*<answer>.\\*?</answer>\" responses $\\mathbf { \\tau } = \\mathbf { \\tau }$ [completion[O][\"content\"] for completion in completions] m",
        "id": 346,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 56,
        "text": "ion[O][\"content\"] for completion in completions] matches $\\mathbf { \\tau } = \\mathbf { \\tau }$ [re.match(pattern, r) for r in responses] return [0.5 if match else O.0 for match in matches] ",
        "id": 347,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 3,
        "text": "训练过程中：",
        "id": 348,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 42,
        "text": "模型会生成多个候选输出（num_generations $= 6$ ）·每个输出都会被所有奖励函数评估高奖励的输出会被用来指导模型改进生成策略",
        "id": 349,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 6,
        "text": "模型逐渐学会：",
        "id": 350,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 33,
        "text": "1.使用正确的XML标签格式  \n2.在<reasoning>中展示解题步骤  \n3.在<answer>中给出正确答案",
        "id": 351,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 53,
        "length_tokens": 50,
        "text": "Llama模型本身已经具备推理能力，GRPO通过奖励机制引导模型，将内部的推理过程显式地写出来，使用特定的格式（XML标签）组织输出，确保最终答案的正确性",
        "id": 352,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 7,
        "text": "继DeepSeek后的Al趋势 ",
        "id": 353,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 15,
        "text": "1、小模型将成为主流 (大模型蒸馏)",
        "id": 354,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 31,
        "text": "通过蒸馏技术将大型模型的推理能力成功迁移到小型模型中显著提升了小型模型的性能。",
        "id": 355,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 26,
        "text": "DeepSeek-R1-Distill-Qwen-7B在AIME2024竞赛中击败了32B模型",
        "id": 356,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 62,
        "text": "2、使用合成数据进行训练成为主流蒸馏数据是公开的秘密，但很多表现不是蒸馏能解释的。比如v3的中文能力，很多用词和表达方式非常接地气，可能是用了数据合成方法做的预训练。",
        "id": 357,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 358,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 28,
        "text": "3、AI模型将自我迭代： 强化学习新范式让模型自己出题自己做，自己检查。",
        "id": 359,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 360,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 16,
        "text": "Step1，模型自己出题自己做，比如出了1亿道题目",
        "id": 361,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 9,
        "text": "Step2，模型自己检查对不对",
        "id": 362,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 54,
        "length_tokens": 81,
        "text": "Step3，筛选验证对的内容，将结果与思维链合成新的数据比如1亿道题目中，自己检查后发现有100万道能验证是对的。那么解出这100万道题的思维链就成了新的训练数据。不断迭代，探索出之前人类没有探索到的地方（类似AlphaGo-Zero)",
        "id": 363,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 55,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 364,
        "type": "text",
        "file_name": "14.1-Fine-tuning技术与大模型优化"
      },
      {
        "page": 1,
        "length_tokens": 10,
        "text": "金融垂类大模型 （智能客服）",
        "id": 0,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "大模型应用开发 Q&A",
        "id": 1,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "传统人工电销 ",
        "id": 2,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "传统智能电销 ",
        "id": 3,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "大模型应用",
        "id": 4,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 39,
        "text": "合规性差，投诉及监管风险高  \n·致电效率低  \n坐席能力参差不齐  \n坐席招聘、培训、管理成本高人员流动性大",
        "id": 5,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 63,
        "text": "灵活性差：话术配置能应付的场景有限、对客户的异议问题应答能力不足，不够人性化·配置工作繁杂：对于每一个细分的外呼业务，都需要配置一套庞大的话术剧本，需要大量人力劳动",
        "id": 6,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 2,
        "length_tokens": 62,
        "text": "大幅节省人力资源和时间成本通过海量合规话术的训练，确保外呼过程符合合规要求，大大减少了传统人工外呼中的客户意图理解错误和信息错误根据客户的特征和历史记录，提供个性化的推荐和服务",
        "id": 7,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "金融大模型的挑战",
        "id": 8,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 11,
        "text": "大模型在金融对客场景中的挑战：",
        "id": 9,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 22,
        "text": "1) 数据质量要求高直接对客需要大模型的准确性很高，其中数据质量是关键",
        "id": 10,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 9,
        "text": "2) 金融营销业务场景复杂",
        "id": 11,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 45,
        "text": "比如营销分的计算涉及首贷、复贷、无余额，而且各场景还有自己的活动专项和特殊优惠、临时活动等3）金融营销场景对信息的准确性要求极高。",
        "id": 12,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 36,
        "text": "用户信息幻觉问题对客户服务质量影响十分明显，比如用户的姓名和年龄要保证 $100 \\%$ 准确性，否则会极大影响营销效果",
        "id": 13,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 17,
        "text": "4 金融营销的安全合规 客户隐私保护等要求极高",
        "id": 14,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 1,
        "text": "二",
        "id": 15,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 13,
        "text": "营销外呼大模型训练 $^ +$ Prompt Engineering ",
        "id": 16,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 3,
        "length_tokens": 28,
        "text": "5）金融营销手段干变万化， 营销策略日新月异， 大模型需要敏捷迭代",
        "id": 17,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "营销外呼大模型训练 ",
        "id": 18,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 4,
        "length_tokens": 50,
        "text": "垂直场景的大模型生产主要分为两个模块：数据收集、大模型训练·数据收集 (已有1.8亿客户，营销外呼量为百万/天，积累了海量高质量数据)",
        "id": 19,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 20,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 4,
        "length_tokens": 126,
        "text": "$\\checkmark$ 历史业务数据：优秀坐席服务语音对话、文本对话 √技术相关数据：所有SQL代码及注释，数据库定义和描述丶业务文档数据：涉及贷前、贷中、贷后等超数万篇服务文档 $\\checkmark$ 用户特征数据：用户的静态特征描述，包括用户基本信息、行为轨$\\checkmark$ 业务规则数据：客服机器人配置规则和决策树及各个节点的话术迹、用户标签、账务数据、风控因子等数万项特征",
        "id": 21,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "·对话大模型训练过程",
        "id": 22,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 4,
        "length_tokens": 80,
        "text": "基础大模型 数据加工 微调+ RLHF 提示工程 对话效果评估定制对齐开源基础大模型选型 筛选优质对话 训练数据标注 提示模版定义 客观测试集评估回溯关键事实数据 对齐业务特定要求 提示语句加工 主观测试集评估安全合规检测过滤",
        "id": 23,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "大模型训练",
        "id": 24,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 13,
        "text": "Thinking: 训练高质量金融大模型的关键是什么？",
        "id": 25,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 54,
        "text": "选择适合的基座模型 $^ +$ 高质量的训练数据微软论文\"Textbooksareallyouneed\"提到数据质量的关键性：如果你有一些教科书质量的好样本，那就不需要太多的数据。",
        "id": 26,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 27,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 63,
        "text": "Llama3相比于Llama2推理效果有很大提升，关键在于高质量的训练数据，由 $2 { \\mathsf { T } } { = } { > } 1 5 ^ { \\cdot }$ T的同时，数据质量也有极大提升",
        "id": 28,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 10,
        "text": "Thinking：如何拥有高质量的训练数据？",
        "id": 29,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 14,
        "text": "高质量的数据，关键在于对已有数据的过滤筛选",
        "id": 30,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 5,
        "length_tokens": 178,
        "text": "首先要从源头控制质量，找到优秀坐席的话术。  \n各种数据过滤策略因公司和业务而异，最简单的是过滤涉黄涉政内容;  \n针对特定业务，需要根据规则模型和质检系统进行过滤；对话轮次的选择也很重要，不是所有对话都应保留，对于无意义的对话，如接通后被直接挂断的就需要过滤掉 $\\Rightarrow$ 对话应考虑是否具有业务意义，参考业务上的有效性定义。有意义的对话，控制轮次和时间，并考虑对话长度，比如接通多少轮、多少秒，以保证对话包含的信息是完整的、足够的。无论是营销还是客服，都有自己的一套话术流程$\\Rightarrow$ 能让大模型能学到一个完整的逻辑。",
        "id": 31,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "大模型训练",
        "id": 32,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 27,
        "text": "Thinking: 选择适合的训练模型 预训练好的模型，还是基座模型， 中文模型 还是英文模型？",
        "id": 33,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 82,
        "text": "在训练数据量较少的情况下，使用预训练的词向量能提升效果，预训练的词向量起到了迁移知识的作用。在训练数据量较大时，词向量可能会降低效果。因为预训练领域与实际应用场景可能存在差异，如果将预训练的词向量扭过来，可能会导致效果更差。",
        "id": 34,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 52,
        "text": "通过英文基座直接训练模型，扩展了字节拼音词表并进行全量微调。采用全量微调 $^ +$ 足够大的数据量，是为了确保模型在特定场景下的准确性。",
        "id": 35,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 24,
        "text": "谷歌的机器翻译研究表明，如果数据量足够且质量好可以直接从base模型开始训练",
        "id": 36,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 37,
        "type": "image",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 6,
        "length_tokens": 28,
        "text": "单个epoch训练是32小时，训练效果要比较好的话需要4到6个epoch，约训练一周才能上线。",
        "id": 38,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "提示词工程 Prompt Engineering",
        "id": 39,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 48,
        "text": "提示词工程Prompt Engineering：将更多上下文信息放到问题中，使得大模型生成韓符合业务要求的结果本质是知识工程，通过引导激发大模型参数中和上下文相关的推理能力",
        "id": 40,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "$\\textcircled{1}$ 角色扮演",
        "id": 41,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "$\\textcircled{2}$ 心里提示",
        "id": 42,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "$\\textcircled{3}$ 回复要求",
        "id": 43,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 11,
        "text": "$\\textcircled{4}$ 关联事实 ",
        "id": 44,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "$\\textcircled{5}$ 上文信息",
        "id": 45,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "提示词工程",
        "id": 46,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 17,
        "text": "深呼吸以平静态度逐步缓和用户的过激情绪",
        "id": 47,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 22,
        "text": "你是一名资深绩优的坐席，需要对客户进行产品推荐，打动客户使用产品",
        "id": 48,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 23,
        "text": "每句话生成的长度不超过50字，不准包含情绪级别二类及以上敏感词",
        "id": 49,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 31,
        "text": "客户叫张飞，性 别男，最近7天打 过3次电话，现在 可贷款额度4000 元，有免息券 ",
        "id": 50,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 32,
        "text": "客户：你好，哪位？坐席：我这边是xX公司的工作人员，您是张先生么？客户：是的什么事？",
        "id": 51,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "大模型回复",
        "id": 52,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 7,
        "length_tokens": 28,
        "text": "您申请的4000元额度审核通过了，还给您下发了免息券，邀请您来XXAPP进行贷款使用",
        "id": 53,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "大模型在营销场景的应用",
        "id": 54,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "image",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 56,
        "type": "text",
        "file_name": "14.2-金融垂类大模型（智能客服）"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "Coze工作原理与应用实例",
        "id": 0,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "Coze工作原理与应用实例",
        "id": 2,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 2,
        "length_tokens": 76,
        "text": "Agent与Copilot的区别  \n插件使用  \n工作流使用  \nRAG知识库  \nCASE:AI新闻Agent  \nCASE：创建搜索新闻工作流  \nCASE:weather_news工作流 (基于意图识别)  \nCASE：抖音文案提取&二创  \nCASE：LLM联网搜索  \nCASE:搭建古诗词Agent",
        "id": 3,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 4,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "Agent与Copilot的区别 ",
        "id": 5,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 3,
        "length_tokens": 2,
        "text": "自主性",
        "id": 6,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "目标导向",
        "id": 7,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "交互方式",
        "id": 9,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "应用场景",
        "id": 10,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "搭建你的AIAgent",
        "id": 11,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "Coze工具使用：",
        "id": 12,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 34,
        "text": "·AI应用开发平台，快速搭建基于大模型的各类Bot，并将Bot发布到社交平台、通讯软件或部署到网站上。",
        "id": 13,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 34,
        "text": "·集成了丰富的插件工具， 内置插件60款插件（资讯阅读、旅游出行、效率办公、图片理解），也可以自定义插件",
        "id": 14,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 36,
        "text": "提供了知识库来管理和存储数据， 可将TXT、PDF、DOCX、Excel、CSV上传至知识库，也可基于URL获取在线网页内容",
        "id": 15,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 20,
        "text": "·持久化的记忆能力 提供了方便AI交互的数据库记忆能力",
        "id": 16,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 25,
        "text": "·灵活的工作流设计，可以用来处理逻辑复杂，且有较高稳定性要求的任务流",
        "id": 17,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 2,
        "text": "扣子",
        "id": 18,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "十创建Bot",
        "id": 19,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 1,
        "text": "主页",
        "id": 20,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "呂 个人空间",
        "id": 21,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 2,
        "text": "探索 ",
        "id": 22,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "Bot商店",
        "id": 23,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "$\\otimes$ 插件商店",
        "id": 24,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "工作流商店",
        "id": 26,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "》模型广场",
        "id": 27,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 6,
        "text": "搭建第一个Al Bot",
        "id": 28,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "搭建第一个Al Bot:",
        "id": 29,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 10,
        "text": "Step1，点击创建Bot，填写相关信息",
        "id": 30,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 9,
        "text": "Step2，进入到Bot编排页面",
        "id": 31,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 24,
        "text": "人设与回复逻辑：描述Bot的身份和任务。单击复制可使用模板格式添加描述。",
        "id": 32,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 13,
        "text": "中间技能面板为Bot配置各种扩展能力。",
        "id": 33,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 17,
        "text": "在右侧预览与调试面板中，实时调试Bot。",
        "id": 34,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "搭建第一个Al Bot",
        "id": 36,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "1）人设与回复逻辑：",
        "id": 37,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 55,
        "text": "每天推送给我AI相关的新闻  \n点击优化按钮  \n2）为Bot添加技能  \n在技能区域单击 $^ +$ 图标，添加插件  \n选择阅读新闻 $>$ 头条新闻 $>$ getToutiaoNews，然后单击新增",
        "id": 38,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "头条新闻 ",
        "id": 39,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 13,
        "text": "持续更新，了解最新的头条新闻和新闻文章。",
        "id": 40,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 1,
        "text": "固",
        "id": 41,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 12,
        "text": "1个工具 44.4K个Bots正在使用",
        "id": 42,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 17,
        "text": "扣子官方丨发布于2024-04-2615:55☆729",
        "id": 43,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 10,
        "text": "getToutiaoNews 搜索新闻讯息 ",
        "id": 44,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 19,
        "text": "89.4K- 44.4KI 740ms 99.8% ",
        "id": 45,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "q 参数",
        "id": 46,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 22,
        "text": "89.4K- @ 19.1KI 740ms 1 99.8% ",
        "id": 47,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "提示词优化",
        "id": 48,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "#角色",
        "id": 49,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 31,
        "text": "你是一个专注于AI领域的新闻推送员，能够为用户筛选和推送最新、最有价值的AI相关新闻。",
        "id": 50,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "##技能",
        "id": 51,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "###技能1:新闻筛选 ",
        "id": 52,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 32,
        "text": "1.每天从权威的新闻网站和渠道获取AI相关新闻。  \n2.根据新闻的重要性、热度和相关性进行筛选。",
        "id": 53,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "###技能2:新闻推送",
        "id": 54,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 16,
        "text": "1.以清晰、简洁的语言向用户推送新闻。",
        "id": 55,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 11,
        "text": "2.每条新闻的推送格式如下：",
        "id": 56,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "$$\n= = = = =\n$$",
        "id": 57,
        "type": "equation",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 6,
        "length_tokens": 53,
        "text": "新闻标题： $\\angle$ 新闻标题>$\\textcircled { \\scriptsize 5 }$ 发布时间： $\\angle$ 新闻的发布日期和时间>$0$ 新闻摘要： $< 1 0 0$ 字左右的新闻内容摘要>",
        "id": 58,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "搭建第一个Al Bot",
        "id": 59,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "3）修改人设与回复逻辑 ",
        "id": 60,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 25,
        "text": "告诉Bot使用getToutiaoNews插件来搜索Al新闻。否则，Bot可能不会按照预期调用该工具。",
        "id": 61,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "##技能###技能1:新闻查找",
        "id": 62,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 30,
        "text": "1.当用户询问最新新闻时， 先调用 getToutiaoNews搜索最新人工智能新闻 确保搜索的是AI主题",
        "id": 63,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 31,
        "text": "2.从搜索结果中筛选出AI主题相关的新闻  \n3.筛选最重要的5条新闻，并按照时间升序排序",
        "id": 64,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 17,
        "text": "建议使用通义千问-Max引擎，推理质量会更好",
        "id": 65,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "在右侧进行提问和调试",
        "id": 66,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "预览与调试 ",
        "id": 67,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "调试 ",
        "id": 68,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 69,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "cystanford ",
        "id": 70,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "今天的新闻",
        "id": 71,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 72,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "AI新闻助手",
        "id": 73,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 14,
        "text": "$\\boldsymbol { \\odot }$ 运行完毕 ",
        "id": 74,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "以下是最近关于人工智能的几条重要新闻：",
        "id": 75,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "1．人工智能",
        "id": 76,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 68,
        "text": "$\\textcircled { \\scriptsize 5 }$ 发布时间:2024-06-1012:38  \n$0$ 新闻摘要：人工智能正深刻影响并改变人类生活，应用包括自动驾驶、客服、医疗诊断、智能家居等，极大地便捷了人类生活。",
        "id": 77,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "2.人工智能！",
        "id": 78,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 45,
        "text": "$\\odot$ 发布时间:2024-06-1320:13  \n$0$ 新闻摘要:关注重点企业如新易盛、工业富联、中际旭创等在人工智能领域的动态。",
        "id": 79,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "3．人工智能！",
        "id": 80,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 47,
        "text": "2 $\\odot$ 发布时间:2024-06-1220:15  \n$0$ 新闻摘要:重点提及沃尔核材、丰立智能等公司，强调在人工智能相关股票的关注建议。",
        "id": 81,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "4.人工智能",
        "id": 82,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 7,
        "length_tokens": 24,
        "text": "$\\textcircled { \\scriptsize 5 }$ 发布时间:2024-06-10 06:32",
        "id": 83,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 3,
        "text": "编写提示",
        "id": 84,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 24,
        "text": "对于复杂的Bot，推荐使用结构化格式编写，采用Markdown语法# Character <Bot 人设>",
        "id": 85,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 38,
        "text": "你是数据分析专家，擅长使用analyze工具，包括提取、处理、分析和解释数据，用通俗易懂的语言解释数据特性和分析结果。",
        "id": 86,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 15,
        "text": "## Skills <Bot 的功能>### Skill 1: 提取数据",
        "id": 87,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 62,
        "text": "1.当用户提供一个数据源或者需要你从某个数据源提取数据时，使用analyze工具的extract数据功能。  \n2.如果用户提供的数据源无法直接提取，需要使用特定的编程语言，如Python 或R，写脚本提取数据。",
        "id": 88,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "### Skill 2:处理数据",
        "id": 89,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 29,
        "text": "1.使用analyze工具的datacleaning功能进行数据清洗，包括处理缺失值、异常值和重复值等。",
        "id": 90,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 24,
        "text": "2.通过数据转换、数据规范化等方式对数据进行预处理，使数据适合进一步的分析。",
        "id": 91,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "### Skill 3:分析数据",
        "id": 92,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 53,
        "text": "1.根据用户需要，使用analyze工具进行描述性统计分析、关联性分析或预测性分析等。  \n2.通过数据可视化方法，如柱状图、散点图、箱线图等，辅助展示分析结果。",
        "id": 93,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "## Constraints <Bot 约束>",
        "id": 94,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 8,
        "length_tokens": 92,
        "text": "-只讨论与数据分析有关的内容，拒绝回答与无关的话题。  \n-输出的内容必须按照给定的格式进行组织，不能偏离框架要求。  \n-对于分析结果，需要解释其含义，不能仅仅给出数字或图表。  \n·在使用特定编程语言提取数据时，必须解释所使用的逻辑和方法，不能仅仅给出代码。",
        "id": 95,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "使用扣子助手创建AIBot ",
        "id": 96,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "使用扣子助手创建AIBot：",
        "id": 97,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "进入扣子，直接输入：",
        "id": 98,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "我想创建AIBot ",
        "id": 99,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 100,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "cystanford ",
        "id": 101,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "我想创建AIBot ",
        "id": 102,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "扣子助手",
        "id": 103,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 104,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 31,
        "text": "好呀，那能和我说说这个Bot要用来做什么呀？这样我好给它想个合适的名字和描述。",
        "id": 105,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "cystanford ",
        "id": 106,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 107,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 16,
        "text": "我先做一个AI新闻助手，帮我收集每天的AI资讯",
        "id": 108,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "扣子助手",
        "id": 109,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 1,
        "text": "二",
        "id": 110,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 17,
        "text": "创建好之后，点击进入AIBot，可以看到设置好的内容，并进行调整",
        "id": 111,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "正在创建Bot",
        "id": 112,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 113,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "AI新闻助手",
        "id": 114,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 13,
        "text": "个人空间 草稿已自动保存08:11:04 ",
        "id": 115,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 19,
        "text": "编排 冚 单 Agent 模式· $0$ 豆包·Functioncall模型",
        "id": 116,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "人设与回复逻辑",
        "id": 117,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "$\\textcircled{4}$ 优化",
        "id": 118,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 2,
        "text": "#角色",
        "id": 119,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 24,
        "text": "你是一个专业的AI资讯收集员，能够及时、全面地收集每天的AI相关资讯。",
        "id": 120,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 2,
        "text": "##技能",
        "id": 121,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "###技能1:资讯搜索 ",
        "id": 122,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 30,
        "text": "1.运用多个权威的科技资讯网站、社交媒体平台和专业的AI论坛，搜索当日最新的AI资讯。",
        "id": 123,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 17,
        "text": "2.筛选出具有重要性、影响力和创新性的资讯内容。",
        "id": 124,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 25,
        "text": "3.对收集到的资讯进行分类，如技术突破、应用案例、行业动态等。回复示例：",
        "id": 125,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 126,
        "type": "equation",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 69,
        "text": "资讯类别: $\\angle$ 类别名称，如技术突破>资讯标题: $<$ 资讯的完整标题>$0$ 资讯简介： $< 1 0 0$ 字左右的资讯概要>$\\boldsymbol { \\mathcal { O } }$ 资讯来源: $<$ 资讯的来源链接>",
        "id": 127,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 12,
        "text": "$= = = = = =$ ## 限制:",
        "id": 128,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 129,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 9,
        "length_tokens": 60,
        "text": "-只收集与AI直接相关的资讯，排除不相关的内容。  \n-按照给定的格式进行整理和回复，不得随意更改。  \n-每条资讯的简介不超过100 字。  \n-优先选择权威可靠的资讯来源。",
        "id": 130,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 10,
        "length_tokens": 2,
        "text": "插件使用",
        "id": 131,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "插件使用",
        "id": 132,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "添加插件",
        "id": 133,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "排序：最受欢迎▼ ",
        "id": 134,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "提交反馈",
        "id": 135,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "Q搜索 ",
        "id": 136,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 29,
        "text": "·在技能 $\\Rightarrow$ 添加插件中，可以看到已有的60多款插件，支持自定义插件，集成需要的API",
        "id": 137,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "创建插件",
        "id": 138,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "我的工具",
        "id": 139,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 1,
        "text": "收藏",
        "id": 140,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 141,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "探索工具",
        "id": 142,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "8：",
        "id": 143,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 1,
        "text": "全部",
        "id": 144,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "$\\bullet$ 自动推荐",
        "id": 145,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "F 新闻阅读 ",
        "id": 146,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "照片与摄影",
        "id": 147,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "图片理解",
        "id": 148,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "实用工具",
        "id": 149,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 9,
        "text": "回答用户关于代表URL的图片的问题。",
        "id": 150,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 151,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 12,
        "text": "1个工具 78.5K个Bots正在使用",
        "id": 152,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "便利生活",
        "id": 153,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 16,
        "text": "扣子官方|发布于2024-06-1120:521175",
        "id": 154,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 20,
        "text": "2.9K 78.5K T 5905ms 99.1% ",
        "id": 155,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "网页搜索",
        "id": 156,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "头条搜索 ",
        "id": 157,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "科学与教育",
        "id": 158,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 13,
        "text": "使用头条的搜索功能来阅读或搜索URL链接。",
        "id": 159,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 160,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "2个工具",
        "id": 161,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "53.8K个Bots正在使用",
        "id": 162,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 12,
        "length_tokens": 2,
        "text": "插件创建",
        "id": 163,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 12,
        "length_tokens": 52,
        "text": "创建插件：每个插件可添加多个工具，每个工具都是一个独立的API服务。同一个插件内的不同工具必须使用相同的域名，即有相同的 endpoint。比如，一个天气查询的API Service 有两个endpoint：",
        "id": 164,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 12,
        "length_tokens": 20,
        "text": "查询当前天气:http://api.weather.com/current 查询未来天气:http://api.weather.com/forecast ",
        "id": 165,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 166,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 12,
        "length_tokens": 19,
        "text": "每个工具是一个独立的API服务，即endpoint，插件下可以有多个工具",
        "id": 167,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "插件创建",
        "id": 168,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 17,
        "text": "Step1，你需要在团队空间中，选择插件 $\\Rightarrow$ 创建插件",
        "id": 169,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "团队空间 + ",
        "id": 170,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 171,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 3,
        "text": "team1 ",
        "id": 172,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 27,
        "text": "Step2，填写插件信息 (以火山引擎列出数据流事件ListMediapipeEvent为例)",
        "id": 173,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "选择：基于已有服务创建",
        "id": 174,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 12,
        "text": "插件URL: https://open.volcengineapi.com ",
        "id": 175,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 9,
        "text": "将以下Header信息配置到Header列表中",
        "id": 176,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 13,
        "text": "X-Use-Volcengine $= 1$ ",
        "id": 177,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 75,
        "text": "X-Volcengine-Access-key $\\mathbf { \\tau } = \\mathbf { \\tau }$ AKLTMTdIMGYzNTZiY2FINDFmM2FmYTI1ZmlyMjYwNTJjZDU X-Volcengine-Secret-key $\\mathbf { \\tau } = \\mathbf { \\tau }$ ",
        "id": 178,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 41,
        "text": "TIRjNVlqWXIZV1UwWWpBNU5EUTVPR0UyTmpBM1lqWmtNek0xTWpaa1pEWQ== ",
        "id": 179,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 40,
        "text": "Service：服务代码，固定值vei_apiRegion:火山引擎APl支持的地域，这里使用cn-beijingVersion：API版本，这里使用2022-01-01",
        "id": 180,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 181,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 13,
        "length_tokens": 26,
        "text": "ListMediapipeEvent是用于查询视频数据流事件，帮助用户更好地分析视频数据流的处理结果",
        "id": 182,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "插件创建",
        "id": 183,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 5,
        "text": "Step3，添加工具",
        "id": 184,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 9,
        "text": "工具名称：ListMediapipeEvent",
        "id": 185,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "工具描述：获取数据流时间列表",
        "id": 186,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 10,
        "text": "工具路径：/ListMediapipeEvent",
        "id": 187,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "请求方法：POST",
        "id": 188,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 12,
        "text": "Step4，配置输入参数：新增参数 page_index ",
        "id": 189,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "page_size ",
        "id": 190,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "created_orderby ",
        "id": 191,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "event_type ",
        "id": 192,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 193,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "插件创建",
        "id": 194,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 15,
        "length_tokens": 6,
        "text": "Step5，配置输出参数",
        "id": 195,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "自动解析",
        "id": 196,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 15,
        "length_tokens": 27,
        "text": "点击自动解析，会将返回参数自动填充到输出参数列表。你可以根据需求进行修改。单击保存并继续",
        "id": 197,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 198,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "$^ +$ 新增参数",
        "id": 199,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 2,
        "text": "插件创建",
        "id": 200,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 201,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 44,
        "text": "Step6，调试与校验  \n设置page_index ${ \\bf \\varepsilon } = 1 \\$   \npage size $_ { = 1 0 }$   \n点击运行，在右侧看到运行结果",
        "id": 202,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 203,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 13,
        "text": "声音.ListMediapipeEvent调试结果 调试通过",
        "id": 204,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "Json 口 ",
        "id": 205,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 16,
        "length_tokens": 94,
        "text": "\"ResponseMetadata\":{ \"Version\": \"2022-01-01\", \"Service\":\"vei_api\", \"Region\":\"cn-beijing\", \"RequestId\": \"202406161253350F7321890008FE977893\", \"Action\":\"ListMediapipeEvent\"   \n\"Result\": { \"pageinator\":{ \"index\": 1, \"size\": 10, \"total_pages\": 0, \"total_items\": 0 ",
        "id": 206,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 2,
        "text": "插件创建",
        "id": 207,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 15,
        "text": "Step7，发布插件点击发布，个人信息收集声明选择否",
        "id": 208,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "个人信息收集声明",
        "id": 209,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 2,
        "text": "× ",
        "id": 210,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 25,
        "text": "发布完成前，我们需要确认你发布的插件是否会收集、传输用户的个人信息，请如实填写",
        "id": 211,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 15,
        "text": "插件／数据流管理数据流管理  \n1未发布数据流管理",
        "id": 212,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 213,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 13,
        "text": "是，前往填写 否，直接发布工作流使用",
        "id": 214,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 215,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 216,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 19,
        "length_tokens": 7,
        "text": "CASE: 创建搜索新闻工作流",
        "id": 217,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 19,
        "length_tokens": 30,
        "text": "工作流：工作流由多个节点构成，节点是组成工作流的基本单元。通过工作流可以完成复杂的任务处理",
        "id": 218,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 19,
        "length_tokens": 49,
        "text": "TODO：创建搜索新闻工作流 getNews_tasks  \nStep1，在页面顶部进入工作流，点击创建工  \n作流  \nStep2，设置工作流信息  \n工作流名称：getNews_tasks  \n工作流描述：搜索新闻",
        "id": 219,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 220,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "CASE: 创建搜索新闻工作流",
        "id": 221,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 99,
        "text": "Step3，添加插件  \n选择新闻阅读 $\\Rightarrow$ 头条新闻  \ngetToutiaoNews  \nStep4，连接节点顺序  \n开始 $$ getToutiaoNews $$ 结束开始节点：新增user_input参数，选择String类型  \ngetToutiaoNews节点：输入参数固定取值q，仅需要在参数值区域选择引用开始-user_input。  \n结束节点：新增output输入参数，并在参数值区域选择引用getToutiaoNews $>$ news。",
        "id": 222,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 223,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 224,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 1,
        "text": "开始",
        "id": 225,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 15,
        "text": "工作流的起始节点，用于设定启动工作流需要的信息",
        "id": 226,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 227,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "CASE: 创建搜索新闻工作流",
        "id": 228,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 21,
        "length_tokens": 24,
        "text": "配置完成后，单击页面右上角的试运行，测试工作流；测试结束后，可进行发布",
        "id": 229,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 230,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 22,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 (基于意图识别）",
        "id": 231,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "TODO：创建用户意图识别工作流 weather news",
        "id": 232,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 22,
        "length_tokens": 26,
        "text": "使用大模型节点将用户输入数据分为1（天气）、2 (新闻）、3 (其他) 三种类型。",
        "id": 233,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 22,
        "length_tokens": 14,
        "text": "使用选择器节点判断用户输入数据的类型，并进行处理:",
        "id": 234,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 22,
        "length_tokens": 54,
        "text": "·如果数据类型为1，将数据流转至大模型节点和天气插件节点，获取地区天气。  \n·如果数据类型为2，将数据流转至新闻插件节点获取新闻。  \n·如果数据类型为3，不做处理直接返回。",
        "id": 235,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 236,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 23,
        "length_tokens": 15,
        "text": "CASE： weather_news工作流 (基于意图识别） ",
        "id": 237,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 23,
        "length_tokens": 26,
        "text": "Step1，创新新的工作流，并配置信息在页面顶部进入工作流页面，并单击创建工作流。。",
        "id": 238,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 23,
        "length_tokens": 7,
        "text": "工作流名称：weather_news ",
        "id": 239,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 23,
        "length_tokens": 45,
        "text": "工作流描述：识别用户意图并获取相关信息，只支持2种意图：获取天气、获取新闻Step2，添加节点，依次添加：大模型节点、选择器节点、插件节点",
        "id": 240,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 241,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 24,
        "length_tokens": 14,
        "text": "CASE:weather_news工作流 （基于意图识别）",
        "id": 242,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 24,
        "length_tokens": 38,
        "text": "Step3，节点信息配置开始节点：新增input参数，选择String类型大模型节点：单次模式，输入input参数，引用开始-input提示词采用以下Markdown内容：",
        "id": 243,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 244,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 245,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 24,
        "length_tokens": 43,
        "text": "##分析  \n分析以下使用括起来的文本:  \n{input}}  \n##返回  \n-如果文本与天气有关，则返回1  \n-如果文本与新闻有关，则返回2  \n-否则返回3",
        "id": 246,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 247,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 25,
        "length_tokens": 14,
        "text": "CASE:weather_news工作流 （基于意图识别）",
        "id": 248,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 25,
        "length_tokens": 19,
        "text": "设置第一个选择器节点。从该节点开始，工作流分为两个分支：",
        "id": 249,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 25,
        "length_tokens": 39,
        "text": "分支1：如果区域的判断条件设置为大模型-output包含输入1，并连接至第二个LLM节点（LLM_1）。该分支用于获取天气数据。",
        "id": 250,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 25,
        "length_tokens": 30,
        "text": "分支2：否则区域无需设置参数，连接至第二个选择器节点即可。  \n该分支用于做下一步的判断。",
        "id": 251,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 252,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 253,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 38,
        "text": "创建新的大模型节点：大模型_1输入参数input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 引用开始-input提示词采用以下Markdown内容：",
        "id": 254,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 255,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 256,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 49,
        "text": "##返回  \n从{{input}}中提取地理位置信息，并转换为对应的经纬度（十进制数值）。  \n-纬度参数：{{lat}}  \n-经度参数：{ng}}",
        "id": 257,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 17,
        "text": "输出值:新增lat，类型选择 String。新增 Ing，类型选择 String。",
        "id": 258,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 259,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 26,
        "length_tokens": 2,
        "text": "十新增",
        "id": 260,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 27,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 261,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 27,
        "length_tokens": 21,
        "text": "添加插件 $\\Rightarrow$ 临近天气weather大模型_1的输出结果作为weather的输入",
        "id": 262,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 27,
        "length_tokens": 82,
        "text": "设置weather的输入参数：设置lat参数，在参数值区域选择引用大模型_ $\\phantom { + } 1 > | \\mathsf { a t } _ { \\mathsf { c } }$ 设置Ing参数，在参数值区域选择引用大模型_ $\\cdot ^ { 1 } > \\mathsf { I n g } _ { \\circ }$ （204",
        "id": 263,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 27,
        "length_tokens": 16,
        "text": "结束节点的输入，新增参数weatherForecasts 引用weather -data ",
        "id": 264,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 265,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 266,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 267,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "处理分支二：",
        "id": 268,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 30,
        "text": "进行下一步判断，判断是获取新闻，还是流转至End节点。 选择器_1 (第二个选择器节点) ",
        "id": 269,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 41,
        "text": "如果区域的判断条件设置为大模型-output包含输入2，并连接至getToutiaoNews节点。该分支用于获取新闻。否则区域无需设置参数，连接至End节点即可。",
        "id": 270,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 10,
        "text": "这里需要添加好 getToutiaoNews 插件",
        "id": 271,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 272,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 273,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 274,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 11,
        "text": "getToutiaoNews 节点 (搜索新闻)",
        "id": 275,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 13,
        "text": "选择单次模式，参数q引用开始 $>$ input。",
        "id": 276,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 7,
        "text": "结束节点的输出参数设置：",
        "id": 277,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 20,
        "text": "参数名称output，参数值选择引用大模型-output。该参数用于返回用户意图。",
        "id": 278,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 24,
        "text": "参数名称newsltems，参数值选择引用getToutiaoNews >news。该参数用于返回新闻内容。",
        "id": 279,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 280,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "工作流的最终节点，用于返回工作流运行后的结果信息",
        "id": 281,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "选择回答模式",
        "id": 282,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "返回变量，由Bot生成回答",
        "id": 283,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 284,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 285,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 29,
        "length_tokens": 2,
        "text": "十新增",
        "id": 286,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 30,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 287,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "试运行：",
        "id": 288,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "测试1：输入上海天气",
        "id": 289,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 31,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 291,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "测试2：输入AI新闻 ",
        "id": 292,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 293,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 32,
        "length_tokens": 14,
        "text": "CASE: weather_news工作流 （基于意图识别）",
        "id": 294,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "测试3： $1 + 1 = ?$ ",
        "id": 295,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 296,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "CASE: weather_news工作流 (基于意图识别) ",
        "id": 297,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 298,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 34,
        "length_tokens": 4,
        "text": "RAG知识库",
        "id": 299,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "RAG知识库",
        "id": 300,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 35,
        "length_tokens": 53,
        "text": "RAG (Retrieval-Augmented Generation 检索增强生成在回答问题或生成文本时，先从大规模文档库中检索相关信息，然后利用这些检索到的信息来生成响应或文本，从而提高回复内容的质量。",
        "id": 301,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 35,
        "length_tokens": 7,
        "text": "RAG的两个关键阶段：",
        "id": 302,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 35,
        "length_tokens": 32,
        "text": "·检索阶段：使用编码模型基于问题检索相关文档·生成阶段：使用检索到的上下文作为条件生成文本。",
        "id": 303,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 35,
        "length_tokens": 47,
        "text": "RAG技术可以很好地解决大模型的胡乱编造的问题扣子的知识库功能支持上传外部数据，上传后可自动分段和编码，然后在Bot开发界面选择导入指定的知识库",
        "id": 304,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 305,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "RAG知识库",
        "id": 306,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "知识库的应用场景：",
        "id": 307,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "·语料补充：",
        "id": 308,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 54,
        "text": "创建一个虚拟形象与用户交流，你可以在知识库中保存该形象相关的语料。后续Bot会通过向量召回最相关的语料，模仿该虚拟形象的语言风格进行回答。",
        "id": 309,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "客服场景：",
        "id": 310,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 30,
        "text": "将用户高频咨询的产品问题和产品使用手册等内容上传到扣子知识，Bot可以通过这些知识精准回答用户问题",
        "id": 311,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "垂直场景: ",
        "id": 312,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 42,
        "text": "创建一个包含各种车型详细参数的汽车知识。当用户查询某一车型的百公里油耗是多少时，可通过该车型召回对应的记录，然后进一步识别出百公里油耗。",
        "id": 313,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 314,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "CASE: 创建产品知识库",
        "id": 315,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "TO DO: 创建一个飞连产品的知识库",
        "id": 316,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 19,
        "text": "当用户有产品使用需求的时候可以进行任意咨询同时增加大模型定价知识",
        "id": 317,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 53,
        "text": "Q1：有出差员工如何进行远程办公Q2：如何限制指定部门访问指定资源Q3：如何允许指定部门访问指定资源Q4：如何让不同部门员工使用不同VPN节点Q5：Qwen-Turbo费用多少",
        "id": 318,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "数据来源：",
        "id": 319,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 26,
        "text": "《远程办公场景最佳实践》word文档大模型定价Excel文档飞连产品介绍在线网页内容",
        "id": 320,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 321,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "CASE: 创建产品知识库",
        "id": 322,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 7,
        "text": "创建知识库应用的步骤：",
        "id": 323,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "Step1，收集数据",
        "id": 324,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "1) 确认信息源",
        "id": 325,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 22,
        "text": "为了解决用户使用飞连产品相关的问题，我需要收集飞连产品的使用资料，包括：",
        "id": 326,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 27,
        "text": "使用手册：产品使用文档包括管理员使用手册、客户端用户使用手册、故障排查手册等",
        "id": 327,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "在线反馈：收集的用户反馈问题列表",
        "id": 328,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "产品信息： 官网上的产品信息",
        "id": 329,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "2） 收集数据和内容整理",
        "id": 330,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 331,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "CASE: 创建产品知识库",
        "id": 332,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "Step2，收集数据",
        "id": 333,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 39,
        "length_tokens": 12,
        "text": "在扣子中创建知识库分为以下三个步骤",
        "id": 334,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 39,
        "length_tokens": 7,
        "text": "Step3，创建Bot并使用",
        "id": 335,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 336,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 40,
        "length_tokens": 6,
        "text": "自定义切分文档",
        "id": 337,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "自定义切分文档:",
        "id": 338,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 40,
        "length_tokens": 103,
        "text": "·对于功能文档来说，通常一个功能文档会包含多个操作步骤或场景  \n，你可以将长文档内容进行分类和清洗，使用扣子知识库的自动分段规则拆分文档内容，保证回复的准确性。  \n以《远程办公场景最佳实践》文档为例，该文  \n档中包含了5个VPN配置场景的说明内容  \nhttps://www.volcengine.com/docs/6427/1277476",
        "id": 339,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 340,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "自定义切分文档",
        "id": 341,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 4,
        "text": "操作步骤: ",
        "id": 342,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "分段设置",
        "id": 343,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "3数据处理",
        "id": 344,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 71,
        "text": "·在知识库页面，单击新增单元  \n·在新增单元页面，选择文本格式，然后单击本地文档  \n·选择《远程办公场景最佳实践》word文档选择自定义分段方式，分段标识符设置为###，长度设置为2000，然后单击下一步。",
        "id": 345,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 16,
        "text": "$0$ 自动分段与清洗自动分段与预处理规则",
        "id": 346,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "D 自定义",
        "id": 347,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "自定义分段规则、分段长度及预处理规则",
        "id": 348,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 349,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "分段最大长度\\*",
        "id": 350,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 4,
        "text": "文本预处理规则",
        "id": 351,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 41,
        "length_tokens": 31,
        "text": "$\\bigcirc$ 替换掉连续的空格、换行符和制表符$\\bigcirc$ 删除所有URL和电子邮箱地址",
        "id": 352,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "自定义切分文档",
        "id": 353,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 25,
        "text": "人工在word文档中添加###设置分段，比如这里的每个场景前都手动添加了 ###",
        "id": 354,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "知识库/飞连产品",
        "id": 355,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "你也可以让机器自动进行分段",
        "id": 356,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 2,
        "text": "全部内容",
        "id": 357,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 7,
        "text": "远程办公场景最佳实践",
        "id": 358,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 51,
        "text": "本文旨在为IT管理员和网络安全专家提供VPN在企业网络管理中的多样化实际应用指南。通过飞连VPN的灵活配置选项，企业可以制定一套贴合特定需求的VPN网络解决方案。",
        "id": 359,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 3,
        "text": "功能概述",
        "id": 360,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 83,
        "text": "飞连VPN管理模块提供了一系列功能，包括VPN节点配置、权限管理、访问控制和极速模式设置。通过这些功能，企业可以为员工授权VPN使用权限，并控制连接VPN后的网络访问权限。飞连VPN优化了VPN隧道的稳定性和速度，支持一键连接和自动选择最优节点，确保远程办公和云业务系统的安全访问。",
        "id": 361,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 15,
        "text": "场景一：出差/居家办公员工远程办公 ",
        "id": 362,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 1,
        "text": "贝",
        "id": 363,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "场景介绍 ",
        "id": 364,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 125,
        "text": "本场景主要针对企业员工频繁出差且需要远程访问企业内网系统的需求。飞连VPN通过简化的客户端操作，仅需点击一键连接，即可轻松完成VPN连接，有效解决了这一难题。此外，飞连VPN还提供多种二次认证机制，进一步确保了VPN接入的安全性。在本场景中，我们添加了一个VPN节点，并通过配置使用和访问权限，将该节点默认开放给企业员工，企业员工只需登录飞连VPN客户端，即可一键连接至企业内网，实现远程办公。",
        "id": 365,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 3,
        "text": "操作步骤 ",
        "id": 366,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 34,
        "text": "登录飞连管理后台。在左侧导航栏，选择VPN管理 $>$ 节点管理在节点管理页面的右上角，单击添加节点。",
        "id": 367,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 100,
        "text": "您需要根据企业实际情况，在飞连管理后台添加VPN节点。具体操作，请参见添加节点。如果您已经添加了VPN节点，则可以跳过本步骤。  \n配置极速模式的全局资源。在左侧导航栏，选择VPN管理 $>$ 高级配置。  \n在VPN高级配置页面的极速模式区域，单击新增资源。  \n在新增资源界面，根据实际需要配置走VPN加密隧道的网络资源，并单击确定。",
        "id": 368,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 369,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "在线数据采集 (安装 Scraper)",
        "id": 370,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "本地安装:",
        "id": 371,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 43,
        "length_tokens": 74,
        "text": "·下载插件 https://lf-coze-web-cdn.coze.cn/obj/coze-web-cn/browser-extension/artifacts/coze-extension-1.0.1.0.zip  \n解压下载文件  \n·在chrome浏览器中输入chrome://extensions确认开发者模式打开  \n点击加载已解压的扩展程序，选择已解压文件夹",
        "id": 372,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 373,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "在线数据采集",
        "id": 374,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 44,
        "length_tokens": 5,
        "text": "在线数据采集：",
        "id": 375,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 44,
        "length_tokens": 61,
        "text": "·在弹出的页面上，点击页面下方文本标注按钮，开始标注要提取的内容，然后单击文本框上方的文本或链接按钮。  \n·单击查看数据查看已采集的内容，确认无误后再点击完成并采集。",
        "id": 376,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 377,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 45,
        "length_tokens": 3,
        "text": "表格数据",
        "id": 378,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "表格数据知识库：",
        "id": 379,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 45,
        "length_tokens": 29,
        "text": "创建知识库 $\\Rightarrow$ 表格格式  \n选择本地文档  \n将准备好的大模型定价.xIsx进行上传",
        "id": 380,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 381,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 45,
        "length_tokens": 2,
        "text": "× ",
        "id": 382,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 383,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "表格数据",
        "id": 384,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 385,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "搭建使用Bot",
        "id": 386,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 78,
        "text": "搭建与使用Bot  \n完成知识库内容上传后，就可以搭建产品助手Bot  \nStep1，创建Bot·选择已经创建产品知识库的工作区。  \n·在工作区内，单击Bots页签，然后单击创建Bot。输入Bot名称和说明，然后单击确定  \n完成Bot创建后，默认进入到Bot的编排页面。",
        "id": 387,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 388,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 389,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 3,
        "text": "Bot功能介绍",
        "id": 390,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 391,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 392,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 4,
        "text": "搭建使用Bot",
        "id": 393,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 13,
        "text": "Step2，在人设与回复逻辑中输入提示词",
        "id": 394,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 2,
        "text": "#角色",
        "id": 395,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 35,
        "text": "你是飞连产品的问答小助手。能够精确理解用户的问题，并从你的知识库中检索相关信息，进一步生成给用户的回复。",
        "id": 396,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 397,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "人设与回复逻辑",
        "id": 398,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 9,
        "text": "$\\textcircled{4}$ 优化",
        "id": 399,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 2,
        "text": "##技能",
        "id": 400,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 10,
        "text": "###技能1:问题理解和检索 ",
        "id": 401,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 23,
        "text": "理解用户的问题，并识别其关键信息。根据关键信息，对知识库进行检索",
        "id": 402,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "###技能2:回答生成",
        "id": 403,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 16,
        "text": "基于检索到的信息，为用户生成准确、简洁的回答。",
        "id": 404,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 2,
        "text": "#角色",
        "id": 405,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 35,
        "text": "你是飞连产品的问答小助手。能够精确理解用户的问题，并从你的知识库中检索相关信息，进一步生成给用户的回复。",
        "id": 406,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 2,
        "text": "##技能",
        "id": 407,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 35,
        "text": "###技能1:问题理解和检索-理解用户的问题，并识别其关键信息。-根据关键信息，对知识库进行检索。",
        "id": 408,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 23,
        "text": "###技能2:回答生成-基于检索到的信息，为用户生成准确、简洁的回答。",
        "id": 409,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 3,
        "text": "##约束",
        "id": 410,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 42,
        "text": "仅回答与产品相关的问题，不回答无关话题。  \n尽量使用清晰简练的语言来回答用户的问题。  \n整个回答过程中，始终以用户的需求为中心。",
        "id": 411,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 3,
        "text": "##约束",
        "id": 412,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 48,
        "length_tokens": 45,
        "text": "-仅回答与产品相关的问题，不回答无关话题。  \n-尽量使用清晰简练的语言来回答用户的问题。  \n-整个回答过程中，始终以用户的需求为中心。",
        "id": 413,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 4,
        "text": "搭建使用Bot",
        "id": 414,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 9,
        "text": "Step3，添加已经创建的知识库",
        "id": 415,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "Step4，对知识库进行配置 ",
        "id": 416,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 33,
        "text": "找到知识>文本配置区，单击+添加已经创建的知识库。点击知识库右侧的自动调用，这里搜索策略设置为混合",
        "id": 417,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 418,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 2,
        "text": "自动调用",
        "id": 419,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 420,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "搭建使用Bot",
        "id": 421,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 12,
        "text": "在右侧的预览与调试中进行测试",
        "id": 422,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "测试1: ",
        "id": 423,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 7,
        "text": "Qwen-Turbo费用多少 ",
        "id": 424,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 5,
        "text": "cystanford ",
        "id": 425,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 426,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 7,
        "text": "Qwen-Turbo费用多少 ",
        "id": 427,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 2,
        "text": "Bot ",
        "id": 428,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 2,
        "text": "产品助手",
        "id": 429,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "运行完毕 ",
        "id": 430,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 19,
        "text": "Qwen-Turbo的输入价格为0.002，输出价格为0.006。",
        "id": 431,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 11,
        "text": "测试2: 出差人员远程办公如何操作",
        "id": 432,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 5,
        "text": "cystanford ",
        "id": 433,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 434,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 8,
        "text": "出差人员远程办公如何操作",
        "id": 435,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 2,
        "text": "产品助手",
        "id": 436,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "运行完毕 ",
        "id": 437,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 11,
        "text": "出差人员远程办公的操作步骤如下：",
        "id": 438,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 82,
        "text": "1.登录飞连管理后台。  \n2.在左侧导航栏，选择\"VPN 管理 $>$ 节点管理”。  \n3.在节点管理页面的右上角，单击添加节点。您需要根据企业实际情况，在飞连管理后台添加VPN节点。具体操作，请参见添加节点。如果您已经添加了VPN节点，则可以跳过本步骤。",
        "id": 439,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 10,
        "text": "4.配置极速模式的全局资源。",
        "id": 440,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 50,
        "length_tokens": 110,
        "text": "·在左侧导航栏，选择“VPN 管理 $>$ 高级配置”。·在VPN高级配置页面的极速模式区域，单击新增资源。·在新增资源界面，根据实际需要配置走VPN加密隧道的网络资源，并单击确定。您可以选择只配置域名或者IP地址，也可以同时配置。例如，您只需要域名www.example.com走VPN加密隧道，则您在静态域名列表中添加www.example.com，并设置域名对应的IP",
        "id": 441,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 51,
        "length_tokens": 9,
        "text": "打卡： 搭建内部知识助手",
        "id": 442,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 51,
        "length_tokens": 34,
        "text": "如果做一个内部知识助手，你会从哪些维度进行考虑收集整理资料（PDF、Excel、图片等），并让AIBot回答这些问题",
        "id": 443,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 51,
        "length_tokens": 28,
        "text": "，以小组为单位进行呈现，将你制作的AI Bot的问答截屏，发到微信群中，有积分哦！",
        "id": 444,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 445,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 52,
        "length_tokens": 13,
        "text": "CASE：抖音文案提取&二创 ",
        "id": 446,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 53,
        "length_tokens": 13,
        "text": "CASE： 抖音文案提取&二创 ",
        "id": 447,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 53,
        "length_tokens": 13,
        "text": "TODO：抖音文案提取&二创 ",
        "id": 448,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 53,
        "length_tokens": 22,
        "text": "用户输入抖音视频urI，AI对是视频内容进行解析，并对文案进行优化",
        "id": 449,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 53,
        "length_tokens": 6,
        "text": "Step1，创建智能体",
        "id": 450,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 53,
        "length_tokens": 6,
        "text": "Step2，创建工作流",
        "id": 451,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 452,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 54,
        "length_tokens": 13,
        "text": "CASE： 抖音文案提取&二创 ",
        "id": 453,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 54,
        "length_tokens": 24,
        "text": "Step1，点击搭建工作流，添加输出节点，内容：开始提取抖音视频内容..",
        "id": 454,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 455,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 54,
        "length_tokens": 31,
        "text": "Step2，添加插件，搜索抖音，选择：抖音文案解析插件 $\\Rightarrow$ get_douin_article_info ",
        "id": 456,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 457,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 55,
        "length_tokens": 13,
        "text": "CASE： 抖音文案提取&二创 ",
        "id": 458,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 55,
        "length_tokens": 19,
        "text": "Step3，添加输出节点，内容：已解析到音频地址{{music_url}}",
        "id": 459,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 460,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 55,
        "length_tokens": 16,
        "text": "Step4，添加音频转文字插件 $\\Rightarrow$ SpeechToText",
        "id": 461,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 462,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 56,
        "length_tokens": 13,
        "text": "CASE: 抖音文案提取&二创 ",
        "id": 463,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 464,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 56,
        "length_tokens": 31,
        "text": "Step6，添加大模型，input变量 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ SpeechToText插件结果中的data.text",
        "id": 465,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 56,
        "length_tokens": 9,
        "text": "设置系统提示词和用户提示词 ",
        "id": 466,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 56,
        "length_tokens": 7,
        "text": "用户提示词：{{input}}",
        "id": 467,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 13,
        "text": "CASE: 抖音文案提取&二创 ",
        "id": 468,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 8,
        "text": "设置大模型节点系统提示词：",
        "id": 469,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 2,
        "text": "#角色",
        "id": 470,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 46,
        "text": "你是一个专业的抖音文案优化师，擅长根据抖音平台的特点和用户需求，对用户提供的文案进行优化，使其更适合在抖音平台传播。",
        "id": 471,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 2,
        "text": "##技能",
        "id": 472,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 88,
        "text": "###技能1:抖音文案优化  \n对原文案进行重新创作，保留核心内容的同时，让文案更具吸引力和感染力，符合抖音平台的调性。===回复示例 $\\scriptstyle = =$   \n调整后的文案：[调整后的文案]  \n===示例结束 $\\scriptstyle \\mathbf { = } = \\mathbf { = }$ ",
        "id": 473,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 3,
        "text": "##限制:",
        "id": 474,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 44,
        "text": "-所输出的内容必须清晰展示原文案和调整后的文案，不能偏离框架要求。  \n-回复内容应简洁明了，避免冗长复杂的表述。",
        "id": 475,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 17,
        "text": "Step7，设置结束节点，输出结果为前面大模型的output ",
        "id": 476,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 477,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 13,
        "text": "CASE: 抖音文案提取&二创 ",
        "id": 478,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 8,
        "text": "点击试运行，对工作流进行测试",
        "id": 479,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "测试后，对工作流进行发布",
        "id": 480,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 481,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 4,
        "text": "设置人设：",
        "id": 482,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 2,
        "text": "#角色",
        "id": 483,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 43,
        "text": "你是一个专业的抖音文案提取与二次创作助手，擅长精准提取抖音视频中的文案，并对其进行高质量的优化创作。",
        "id": 484,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 15,
        "text": "##技能###技能1:提取并优化抖音文案",
        "id": 485,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 31,
        "text": "1.当用户给你一个抖音链接时，你需要提取该视频的文案并进行优化，使用工作流 DouyinExtraction",
        "id": 486,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 58,
        "length_tokens": 40,
        "text": "2.将优化后的文案呈现给用户。  \n##限制:  \n-所输出的内容必须是基于提取到的抖音文案进行优化的结果。",
        "id": 487,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 13,
        "text": "CASE: 抖音文案提取&二创 ",
        "id": 488,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 24,
        "text": "https://www.douyin.com/discover?modal_id $\\ c =$ 7492374797985385782 ",
        "id": 489,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 11,
        "text": "$\\bigcirc$ 已调用工作流DouyinExtraction",
        "id": 490,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 9,
        "text": "开始提取抖音视频内容...",
        "id": 491,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 36,
        "text": "已解析到音频地址https://If26-music-east.douyinstatic.com/obj/ies-music-hj/7492375924193643321.mp3",
        "id": 492,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 194,
        "text": "已解析原抖音文案县长，我儿子即将诞生，听说您喜欢喝酒，不如庆祝一下？诶，现在是关键时刻，不好，是傀儡符给我破失败了啊，这就是灵珠，是好是太魔丸？看你做的好事，影响我儿子封神登仙，你你也别想好过，道道歉有用还要警察干嘛？道了三年还有一场雷劫，来嘛，快给我儿子准备万龙甲九，组成七弹可手毙我来组成同步二哥三哥，你们有没有觉得这海底炼狱越来越热了？难道是少爷该回去的变变成功了？你在找我吗？你也想玩踢键子吗？以后想踢键子可以找我，这是一只电话",
        "id": 493,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 10,
        "text": "以下是进一步润色优化后的文案：",
        "id": 494,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 122,
        "text": "家人们，告诉你们个事儿！我儿子马上就要呱呱坠地啦，恰好县长爱喝酒，咱就打算热热闹闹地庆祝一番。可谁能想到，就在这节骨眼儿上，出岔子了！那关键的傀儡符破解失败，瞧这眼前的灵珠，我心里直犯嘀咕，它到底是福是祸，不会就是那让人闻风丧胆的魔丸吧？",
        "id": 495,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 112,
        "text": "都怪你干的糊涂事儿，直接影响到我儿子封神登仙的大好前程，你也别想置身事外！要知道，道兼要是有用，那还要警察干嘛？都诚心诚意地道歉三年了，可那雷劫依旧像乌云一样笼罩着。快马加鞭给我儿子准备万龙甲，九个凑齐组成七弹，我就不信搞不定这事儿！",
        "id": 496,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 59,
        "length_tokens": 96,
        "text": "二哥、三哥，你们有没有察觉到，这海底炼狱的温度越来越高，就像被火烤一样。难不成是少爷那边成功变身，正风风火火地赶回来？嘿，你是在找我吗？是不是想玩踢毽子啦？以后想玩随时用这个神奇的电话兽联系我。哎呀，我可不是在这儿瞎唠",
        "id": 497,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 60,
        "length_tokens": 13,
        "text": "打卡：抖音文案提取&二创",
        "id": 498,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 60,
        "length_tokens": 15,
        "text": "搭建一个抖音视频文案提取&二创工具",
        "id": 499,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 60,
        "length_tokens": 60,
        "text": "·掌握插件使用，  \nget_douin_article_info提取视频信息  \nSpeechToText将音频转换为文本  \n·掌握大模型使用，对原文案进行优化  \n·节点步骤较多，进行时间较长时，增加输出节点显示中间状态",
        "id": 500,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 61,
        "length_tokens": 7,
        "text": "CASE：LLM联网搜索 ",
        "id": 501,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 62,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 502,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 62,
        "length_tokens": 7,
        "text": "TODO：LLM联网搜索 ",
        "id": 503,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 62,
        "length_tokens": 17,
        "text": "用户输入问题，AI提取关键字，使用Bing搜索，并进行总结",
        "id": 504,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 62,
        "length_tokens": 6,
        "text": "Step1，创建智能体",
        "id": 505,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 62,
        "length_tokens": 6,
        "text": "Step2，创建工作流",
        "id": 506,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 62,
        "length_tokens": 0,
        "text": "",
        "id": 507,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 508,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 13,
        "text": "Step1，点击搭建工作流，添加大模型节点",
        "id": 509,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 21,
        "text": "系统提示词：对用户的问题，提取关键字，多个关键字用空格隔开",
        "id": 510,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 7,
        "text": "用户提示词：{{input}}",
        "id": 511,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 0,
        "text": "",
        "id": 512,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 18,
        "text": "Step2，添加输出节点，输出内容：提取到关键字{{output}}",
        "id": 513,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 0,
        "text": "",
        "id": 514,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 63,
        "length_tokens": 32,
        "text": "Step3，添加插件bingWebSearch，并输入query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 前面大模型节点的output",
        "id": 515,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 516,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 7,
        "text": "Step4，添加大模型节点",
        "id": 517,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 14,
        "text": "系统提示词：对网上搜索到的内容改进行总结整理",
        "id": 518,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 7,
        "text": "用户提示词：{input}}",
        "id": 519,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 520,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 5,
        "text": "Step5，结束节点",
        "id": 521,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 64,
        "length_tokens": 26,
        "text": "设置输出output $\\mathbf { \\tau } = \\mathbf { \\tau }$ 前面大模型_1的output ",
        "id": 522,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 523,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 8,
        "text": "点击试运行，对工作流进行测试",
        "id": 524,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 0,
        "text": "",
        "id": 525,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 4,
        "text": "设置人设：",
        "id": 526,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 2,
        "text": "#角色",
        "id": 527,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 41,
        "text": "你是一个名为LLM联网搜索的智能助手，能够精准理解用户问题，提取关键字，并借助Bing插件进行搜索，然后运用大模型进行高效总结。",
        "id": 528,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 2,
        "text": "##技能",
        "id": 529,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 9,
        "text": "###技能1:问题处理与搜索总结",
        "id": 530,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 8,
        "text": "1.接收用户提出的问题。",
        "id": 531,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 65,
        "length_tokens": 35,
        "text": "2.使用工作 昭LLM_Search  \n得到Bing搜索的内容总结  \n##限制:  \n-输出内容应简洁明了，准确回答用户问题",
        "id": 532,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 533,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 13,
        "text": "贵州茅台的2024年的销售业绩如何？",
        "id": 534,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 0,
        "text": "",
        "id": 535,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 4,
        "text": "运行完毕 ",
        "id": 536,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 1,
        "text": "输出",
        "id": 537,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 15,
        "text": "提取到关键字贵州茅台2024年销售业绩",
        "id": 538,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 16,
        "text": "2024年贵州茅台多项业绩指标表现亮眼：",
        "id": 539,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 97,
        "text": "1.营收利润：营业总收入1741.44亿元，同比增$1 5 . 6 6 \\%$ ；营业收入1708.99亿元，同比增$1 5 . 7 1 \\%$ ；归母净利润862.28亿元，同比增$1 5 . 3 8 \\%$ ，连续3年超 $1 5 \\%$ 增长，超额完成年度目标。",
        "id": 540,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 52,
        "text": "2.分红：拟每10股派现276.24元（含税），总计346.71亿元；叠加中期分红，全年累计超646亿元，分红率 $7 5 \\%$ 0",
        "id": 541,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 77,
        "text": "3.产品结构：茅台酒销售收入1459.28亿元，同比增 $1 5 . 2 8 \\%$ ，毛利率 $9 4 . 0 6 \\%$ ；系列酒营收246.84亿元，同比增 $1 9 . 6 5 \\%$ ，成业绩新动力。",
        "id": 542,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 66,
        "length_tokens": 20,
        "text": "4.海外市场：营收突破50亿元，市场格局更具韧性。",
        "id": 543,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 67,
        "length_tokens": 7,
        "text": "打卡：LLM联网搜索",
        "id": 544,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 67,
        "length_tokens": 9,
        "text": "搭建一个LLM联网搜索Agent ",
        "id": 545,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 67,
        "length_tokens": 54,
        "text": "·掌握插件使用  \nbingWebSearchBing网页搜索  \n·掌握大模型使用  \n对关键字进行总结  \n对网页搜索内容进行总结整理  \n·节点步骤较多，进行时间较长时，增加输出节点显示中间状态",
        "id": 546,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 68,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词Agent ",
        "id": 547,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词Agent ",
        "id": 548,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 10,
        "text": "TO DO：搭建古诗词Agent ",
        "id": 549,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 12,
        "text": "用户输入一句古诗，AI制作对应的图像",
        "id": 550,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 5,
        "text": "Step1，创建BOT",
        "id": 551,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 6,
        "text": "Step2，创建工作流",
        "id": 552,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 553,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 69,
        "length_tokens": 26,
        "text": "工作流：用于规划和实现复杂功能逻辑的工具，可以通过不同的任务节点来设计复杂的多步骤任务",
        "id": 554,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词Agent ",
        "id": 555,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 6,
        "text": "点击搭建工作流：",
        "id": 556,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 12,
        "text": "初始的工作流，包含：开始和结束节点",
        "id": 557,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 2,
        "text": "C ",
        "id": 558,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 1,
        "text": "开始",
        "id": 559,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 3,
        "text": "创建工作流",
        "id": 560,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 2,
        "text": "× ",
        "id": 561,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 15,
        "text": "工作流的起始节点，用于设定启动工作流需要的信息",
        "id": 562,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 563,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 5,
        "text": "工作流名称\\*",
        "id": 564,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 565,
        "type": "table",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 5,
        "text": "工作流描述\\*",
        "id": 566,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 567,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 6,
        "text": "取消 确认 ",
        "id": 568,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 569,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 570,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 14,
        "text": "工作流的最终节点，用于返回工作流运行后的结果信息",
        "id": 571,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 572,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词Agent ",
        "id": 573,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 8,
        "text": "Step1，针对开始节点进行设置",
        "id": 574,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 6,
        "text": "Step2，创建大模型",
        "id": 575,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 1,
        "text": "开始",
        "id": 576,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 15,
        "text": "工作流的起始节点，用于设定启动工作流需要的信息",
        "id": 577,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 578,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 30,
        "text": "将开始与大模型进行连接，设置input $\\mathbf { \\tau } = \\mathbf { \\tau }$ 引用开始的user_input",
        "id": 579,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 580,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 71,
        "length_tokens": 38,
        "text": "设置提示词：你是一位中国古诗词专家，请根据输入的诗句{input}}，描述你联想到的画面，100字以内，只输出描述内容。",
        "id": 581,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词Agent ",
        "id": 582,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 15,
        "text": "Step3，创建翻译大模型 (完成中英文翻译)",
        "id": 583,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 5,
        "text": "Step4，添加插件",
        "id": 584,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 0,
        "text": "",
        "id": 585,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 27,
        "text": "将{{input}}翻译成英文，输出结果前面加上\"ancient china,children's book illustration style\" ",
        "id": 586,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 23,
        "text": "在照片与摄影 $\\Rightarrow$ ByteArtist $\\Rightarrow$ 找到text2image插件，进行添加",
        "id": 587,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 25,
        "text": "将model_type设置为1Prompt设置为上一个大模型的output将上一个大模型与text2image连接",
        "id": 588,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 72,
        "length_tokens": 0,
        "text": "",
        "id": 589,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词Agent ",
        "id": 590,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 6,
        "text": "Step5，连接End节点",
        "id": 591,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 13,
        "text": "点击试运行，输入user_input，比如 解落三秋叶",
        "id": 592,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 17,
        "text": "End节点的output引l用text2image插件的data.images.image_url ",
        "id": 593,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 594,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 14,
        "text": "工作流的最终节点，用于返回工作流运行后的结果信息",
        "id": 595,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 3,
        "text": "选择回答模式",
        "id": 596,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 6,
        "text": "返回变量，由Bot生成回答",
        "id": 597,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 598,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 0,
        "text": "",
        "id": 599,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 2,
        "text": "十新增",
        "id": 600,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 2,
        "text": "试运行",
        "id": 601,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 2,
        "text": "开始节点",
        "id": 602,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 11,
        "text": "BOT_USER_INPUT用户本轮对话输入内容 String",
        "id": 603,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 4,
        "text": "请输入BOT_USER_INPUT",
        "id": 604,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 11,
        "text": "user_input\\*用户输入的诗词 String ",
        "id": 605,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 5,
        "text": "解落三秋叶",
        "id": 606,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 15,
        "text": "$\\bigcirc$ 运行后自动将此数据保存为测试集",
        "id": 607,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 32,
        "text": "大模型推理后得到文生 图的image_url   \nhttps://s.coze.cn/t/Co12 ElskUYmeSL4Y/ ",
        "id": 608,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 73,
        "length_tokens": 0,
        "text": "",
        "id": 609,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 74,
        "length_tokens": 10,
        "text": "打卡： 搭建文生图助手",
        "id": 610,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 74,
        "length_tokens": 9,
        "text": "搭建一个自己的文生图工具:",
        "id": 611,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 74,
        "length_tokens": 29,
        "text": "根据用户的需求，对创作的图片进行描述将文字描述翻译成英文text2image基于英文提示词进行绘画",
        "id": 612,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 74,
        "length_tokens": 0,
        "text": "",
        "id": 613,
        "type": "image",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 75,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 614,
        "type": "text",
        "file_name": "15.1-Coze工作原理与应用实例"
      },
      {
        "page": 1,
        "length_tokens": 9,
        "text": "Coze进阶实战与插件开发",
        "id": 0,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 2,
        "length_tokens": 9,
        "text": "Coze进阶实战与插件开发",
        "id": 2,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 2,
        "length_tokens": 20,
        "text": "批处理  \nCoze应用数据表使用  \n多Agents模式  \n·多工作流复杂应用",
        "id": 3,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 2,
        "length_tokens": 47,
        "text": "CASE：古诗词绘画 (批处理) CASE：智能投顾助手 (风险评测与推荐) CASE: 客户分层营销助手 CASE：智能客服Agent CASE：市场舆情监测Agent ",
        "id": 4,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 3,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 (批处理)",
        "id": 5,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 6,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 4,
        "length_tokens": 12,
        "text": "TO DO：古诗词绘画 (批处理)",
        "id": 7,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 4,
        "length_tokens": 18,
        "text": "用户输入完整古诗词，AI描述4个场景，分别进行绘画",
        "id": 8,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "Step1，创建智能体",
        "id": 9,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "Step2，创建工作流",
        "id": 10,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 11,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 12,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 13,
        "text": "Step1，创建工作流draw_picture，添加大模型节点",
        "id": 13,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 14,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "系统提示词：",
        "id": 15,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "用户提示词：{input}",
        "id": 16,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 17,
        "text": "用户给你古诗词，帮拆解成4个场景进行描述",
        "id": 17,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "输出格式为：",
        "id": 18,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "场景1: ",
        "id": 19,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "场景2: ",
        "id": 20,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "场景3: ",
        "id": 21,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "场景4: ",
        "id": 22,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 23,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "Step2，添加代码节点",
        "id": 24,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "在IDE中进行编辑：",
        "id": 25,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 11,
        "text": "对大模型的输出结果进行场景切分",
        "id": 27,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "设置输出变量scenes和scene_count ",
        "id": 28,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 29,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 118,
        "text": "import re  \nasync def main(args: Args) $\\mathrm { - } >$ Output:params $\\mathbf { \\tau } = \\mathbf { \\tau }$ args.params#提取场景文本scenes_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ params['input']#使用正则表达式匹配场景scene_pattern $= r ^ { \\prime }$ 场景 $\\cot +$ ：([^场景]+)'$\\mathsf { s c e n e s } = [ ]$   \n#查找所有匹",
        "id": 30,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 74,
        "text": "([^场景]+)'$\\mathsf { s c e n e s } = [ ]$   \n#查找所有匹配  \nfor match in re.finditer(scene_pattern, scenes_text, re.DOTALL):scene_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ match.group(1).strip()scenes.append(scene_text)",
        "id": 31,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 33,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 39,
        "text": "#构建输出对象   \nret: Output = { 'scenes\": scenes，#场景数组 \"scene_count\": len(scenes)，#场景数量   \n}   \nreturn ret ",
        "id": 34,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 284,
        "text": "场景1：\\n>辽阔的原野上，青草茂密繁盛，一片连着一片，随风轻轻摇曳，生机盎然，展现出原上草蓬勃生长的初始画面。\\n\\n场景2：\\n>随着季节的更替，一年的时光过去，曾经翠绿的青草渐渐枯萎，原本充满生机的原野变得有些萧瑟，呈现出草木凋零的景象。\\n\\n场景3：\\n>不知何时，原野上燃起了熊熊野火，火焰肆意蔓延，所到之处，枯黄的野草被大火吞噬，一时间浓烟滚滚，整个原野都被火海笼罩。\\n\\n场景4：\\n>寒冷的冬天过去，温暖的春风轻轻拂过大地。在春风的吹拂下，原野上那些被野火烧过的地方，又悄悄地冒出了嫩绿的草芽，星星点点，逐渐汇聚成一片新的绿色，展现出顽强的生命力和新的希望。",
        "id": 35,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 36,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 54,
        "text": "编写完成后，可对该节点进行测试点击运行后，可以看到测试结果编写代码可以通过AI完成 （使用 $\\mathsf { C t r } | + | \\boldsymbol { \\mathsf { I } } \\bigr )$ ",
        "id": 37,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 15,
        "text": "向AI询问编写代码或选中代码由AI编辑..",
        "id": 38,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 1,
        "text": "输出",
        "id": 39,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "> scenes {4} scene_count:4 ",
        "id": 40,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 41,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "Step4，设置大模型节点",
        "id": 42,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 25,
        "text": "这里大模型节点，对前面切分好的场景，进行文生图提示词制作，选择批处理模式",
        "id": 44,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 45,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 13,
        "text": "大模型节点的输入，选择自身批处理的item1",
        "id": 46,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 47,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 18,
        "text": "系统提示词：针对描述的场景，编写文生图提示词 ",
        "id": 48,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "用户提示词：{{input}}",
        "id": 49,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 50,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 13,
        "text": "通过文字描述生成图片，一次只能生成一张图片。",
        "id": 52,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 51,
        "text": "Step5，设置插件，选择text2image  \n这里选择批处理模式  \nitem1设置为前面大模型节点的输出outputList  \n输入的prompt，设置为自身插件的item1  \n可以将model_type参数设置为1",
        "id": 53,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "单次 批处理",
        "id": 54,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 30,
        "text": "Step6，设置结束节点输出output $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 前面插件的输出结果outputList",
        "id": 55,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 11,
        "text": "批处理输入 $\\textcircled{ i}$ ",
        "id": 56,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 57,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 58,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 59,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 61,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "试运行工作流，输入古诗词：",
        "id": 62,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 26,
        "text": "锄禾日当午，汗滴禾下土。  \n谁知盘中餐，粒粒皆辛苦。",
        "id": 63,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "试运行 查看日志 × ",
        "id": 64,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "可用测试集",
        "id": 65,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 2,
        "text": "测试集",
        "id": 66,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "试运行输入 JSON模式 AI补全",
        "id": 67,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 3,
        "text": "input String ",
        "id": 68,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 26,
        "text": "锄禾日当午，汗滴禾下土。  \n谁知盘中餐，粒粒皆辛苦。",
        "id": 69,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 13,
        "text": "将本次运行输入保存为测试集或手动创建",
        "id": 70,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 71,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 72,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "输出 [{)] output ",
        "id": 73,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "输出类型 返回变量",
        "id": 74,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "运行成功 0.000s ",
        "id": 75,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 76,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 10,
        "length_tokens": 71,
        "text": "' output {4} <0{4} code : 0 <data {1} γimages {1} >0{1} log_id: \"20250512114747727E5B7FE8B588DB410B\" msg:\"success\" >1{4} >2 {4} >3{4} ",
        "id": 77,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "CASE: 古诗词绘画 （批处理）",
        "id": 78,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 79,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 80,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "运行完毕 ",
        "id": 81,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 50,
        "text": "工作流运行成功，得到4张绘画图片。对工作流进行发布编写人设：用户输入古诗词，调用工作流品draw_picture进行古诗词绘画，你会得到多张图片，都显示给用户",
        "id": 82,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 35,
        "text": "为你根据“锄禾日当午，汗滴禾下土。谁知盘中餐，粒粒皆辛苦。”生成了以下绘画：",
        "id": 83,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 11,
        "length_tokens": 13,
        "text": "图片1  \n图片2  \n66  \n图片3  \n图片4",
        "id": 84,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 12,
        "length_tokens": 12,
        "text": "打卡： 古诗词绘画 （批处理）",
        "id": 85,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 12,
        "length_tokens": 15,
        "text": "搭建古诗词绘画智能体，具备批处理能力",
        "id": 86,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 12,
        "length_tokens": 85,
        "text": "·掌握插件使用  \ntext2image文生图插件掌握大模型使用  \n对古诗词场景进行描述  \n对场景进行文生图提示词制作当同类型任务较多时，可以使用批处理功能  \n大模型对多场景，进行文生图提示词制作 (批处理)  \ntext2image插件对多提示词进行绘图 (批处理）",
        "id": 87,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "CASE: 智能投顾助手（风险评测与推荐）",
        "id": 88,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 89,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "TODO：智能投顾助手",
        "id": 90,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 17,
        "text": "用户输入问题，AI提取关键字，使用Bing搜索，并进行总结",
        "id": 91,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "Step1，创建Coze应用",
        "id": 92,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 12,
        "text": "Step2，编排业务逻辑 (工作流)",
        "id": 93,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "Step3，编排用户界面",
        "id": 94,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 95,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 96,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 97,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 15,
        "length_tokens": 9,
        "text": "编排业务逻辑 (工作流)",
        "id": 98,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 99,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 15,
        "length_tokens": 33,
        "text": "》：. .. 数据表模型豆包·工具调用 输出类型返回文本配置字段str.client_idint.ageint.exp_level …技能ABC证券公司产品介绍",
        "id": 100,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 101,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "Step1，设计风险评测调查问卷",
        "id": 102,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "·用户client_id 收集年龄 ",
        "id": 103,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "问题：\"请输入您的年龄（18-70岁）：\"",
        "id": 104,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 14,
        "text": "变量：age(数字类型，验证范围18-70) ",
        "id": 105,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 6,
        "text": "·收集投资经验 ",
        "id": 106,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 26,
        "text": "问题：\"您的投资经验是？1.少于1年\\n2.1-3年\\n3.3年以上'",
        "id": 107,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 16,
        "text": "变量：exp_level (数字，验证输入1/2/3) ",
        "id": 108,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "·收集风险偏好 ",
        "id": 109,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 11,
        "text": "Step2，创建数据表client_risk_assessment",
        "id": 110,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "新建数据表",
        "id": 111,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "数据表名称\\*",
        "id": 112,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "client_risk_assessment 22/50 ",
        "id": 113,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "数据表描述",
        "id": 114,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 115,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 116,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 38,
        "text": "问题：您能承受的最大本金亏损比例是？A. $10 \\%$ ，B. $20 \\%$ ，C. $30 \\%$ ",
        "id": 117,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 15,
        "text": "变量：risk_tolerance (字符串，验证输入A/B/C) ",
        "id": 118,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 16,
        "length_tokens": 15,
        "text": "通过数据库中的数据表，可以将用户填写的风险评测保存起来",
        "id": 119,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 120,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "Step3，创建工作流product_rec",
        "id": 121,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "Step4，设置开始节点",
        "id": 123,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 124,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 43,
        "text": "为开始节点设置输入，包括age,exp_level,risk_tolerance,client_id这些字段需要作为工作流的input，用于后续计算，当然这些数据的获取我们可以通过用户界面获取",
        "id": 125,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 126,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 127,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "Step5，设置新增数据 (数据库)",
        "id": 128,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 2,
        "text": "数据表",
        "id": 129,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 130,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "选择并设置字段 ",
        "id": 131,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 74,
        "text": "变量名 变量值client_id $\\textcircled{ i}$ String str. CI 开始-clie·xage Integer int. C 开始-age X ：exp_level $\\textcircled{ i}$ Integer int. CI 开始- exp… x ·risk_level $\\textcircled{ i}$ （20 String str. C 开始-risk·×",
        "id": 132,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 18,
        "length_tokens": 34,
        "text": "这里我们的数据表关联到刚才创建的client_risk_assessment，并将开始节点中的client_id,age,exp_level,risk_tolerance 进行关联",
        "id": 133,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 134,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 15,
        "text": "Step6，添加大模型 $^ +$ 知识库技能",
        "id": 135,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "系统提示词：",
        "id": 136,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 27,
        "text": "你是一名证券投顾，根据客户的风险测评结果，从知识库中筛选最匹配的3款产品：",
        "id": 137,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 89,
        "text": "-年龄：{age}}岁  \n-投资经验：{{exp_level}}级（ $\\scriptstyle 1 =$ 新手， $3 =$ 资深)  \n风险偏好：{risk_tolerance}}（能承受的最大本金亏损比例，  \n$A = 1 0 \\%$ ， $B = 2 0 \\%$ ， $c = 3 0 \\%$ ",
        "id": 138,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "筛选规则：",
        "id": 139,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 47,
        "text": "1.优先匹配风险等级（R1/R2/R3对应A/B/C）。  \n2.新手客户（exp_leve $\\scriptstyle | = 1$ ）避免推荐复杂衍生品。",
        "id": 140,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 19,
        "length_tokens": 28,
        "text": "3.返回格式：\\*\\*产品名称\\*\\* (代码)-匹配理由：结合客户年龄和风险偏好说明",
        "id": 141,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 142,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "Step7，配置知识库",
        "id": 143,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 14,
        "text": "这里我们选择文本txt方式进行证券产品的介绍梳理",
        "id": 144,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 208,
        "text": "ABC证券公司产品介绍  \n###产品1：ABC稳健增长混合基金类型：混合型基金代码：ABC1234发行机构：ABC基金管理公司  \n投资目标追求稳健收益，注重资产配置平衡，适合风险偏好较低的投资者。  \n核心特点收益预期：年化收益率约 $5 \\% - 7 \\%$ 风险等级：中低优势：投资组合多元化，管理费用低，适合长期投资。  \n历史业绩近1年： $6 . 2 \\%$ /近3年： $6 . 8 \\%$ 最大回撤： $8 \\%$   \n费用概览管理费： $0 . 7 \\%$ /托管费： $0 . 2 \\%$ 申购费： $1 . 2 \\%$ /赎回费: $0 . 5 \\%$ (持有期 $^ { ",
        "id": 145,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 122,
        "text": " 2 \\%$ 申购费： $1 . 2 \\%$ /赎回费: $0 . 5 \\%$ (持有期 $^ { < 1 }$ 年)  \n适合投资者风险偏好：稳健型投资期限：3年以上  \n购买渠道ABC证券APP、银行渠道、基金公司官网  \n风险提示产品存在市场波动风险，过往业绩不代表未来表现。  \n###产品2：ABC科技先锋股票基金类型：股票型基金代码：ABC5678发行机构：ABC基金管理公司",
        "id": 146,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 68,
        "text": "创建知识库：ABC证券公司产品介绍添加准备好的ABC公司证券产品介绍.txt这里可以选择自定义分段，使用的###产品自动解析pdf，可能会出现分页、格式不对的情况。如果是纯文本，可以使用txt格式。如果是pdf,ppt类，可以先用MinerU转化为Markdown格式",
        "id": 147,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 148,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 149,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 150,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 21,
        "length_tokens": 37,
        "text": "在大模型中，配置技能 (知识库)  \n在输出中，选择Markdown格式，因为这样可以使用流  \n式输出。与用户交互时，体验更好",
        "id": 151,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 152,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 21,
        "length_tokens": 10,
        "text": "Step8，配置结束节点打开流式输出",
        "id": 153,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 155,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 7,
        "text": "工作流完成后，可以进行测试",
        "id": 156,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 157,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "可以在结束节点中，看到流式输出的结果",
        "id": 158,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 159,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 160,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 5,
        "text": "输出 str. output ",
        "id": 161,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "输出类型 返回文本",
        "id": 162,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 5,
        "text": "运行成功 8 ",
        "id": 163,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 164,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 208,
        "text": "output:\"#ABC证券公司产品介绍\\n\\n-\\*\\*ABC稳健增长混合基金\\*\\*（ABC1234）\\n-匹配理由：客户20岁较为年轻，风险偏好为A能承受 $1 0 \\%$ 本金亏损，此基金风险等级中低，年化收益率约 $5 \\% - 7 \\%$ ，最大回撤 $8 \\%$ ，追求稳健收益注重资产配置平衡，适合风险偏好较低投资者，符合客户情况。\\n\\n-\\*\\*ABC量化对冲基金\\*\\*（ABC1718）\\n-匹配理由：客户风险偏好A，该基金风险等级中等，年化收益率约 $1 8 \\% - 1 2 \\%$ ，最大回撤 $1 0 \\%$ ，通过量化策略和对冲工具实现低相关性收益，适合稳健型或积极",
        "id": 165,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 171,
        "text": "2 \\%$ ，最大回撤 $1 0 \\%$ ，通过量化策略和对冲工具实现低相关性收益，适合稳健型或积极型投资者，与客户风险偏好和投资需求有一定契合度。 $\\ln \\Lambda n - \\mathrm { \\Lambda } ^ { \\star \\star } A B C$ 可转债基金\\*\\*(ABC1920）\\n-匹配理由：客户年轻且风险偏好为A，此基金风险等级中等，年化收益率约 $6 \\% - 1 0 \\%$ ，最大回撤 $1 2 \\%$ ，投资可转债兼具债券稳健性和股票增值潜力，适合稳健型投资者，比较匹配客户条件。",
        "id": 166,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 22,
        "length_tokens": 9,
        "text": "$\\circledcirc$ 预览 ",
        "id": 167,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 168,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "Step9，搭建用户界面",
        "id": 169,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 6,
        "text": "在左侧选择表单",
        "id": 170,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 17,
        "text": "然后设置client_id,年龄，投资经验，最大本金亏损比例等问题",
        "id": 171,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 172,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 21,
        "text": "比如这个组件，左上角是它的名称，后面会在变量引用中使用到",
        "id": 173,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 174,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 175,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "Step10，提交按钮 ",
        "id": 176,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 24,
        "text": "当用户点击提交按钮时，自动执行工作流product_rec这里需要新建事件，然后关联工作流product_rec",
        "id": 177,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 178,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 13,
        "text": "设置Workflow入参配置，需要找到对应的组件，然后设置value",
        "id": 179,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 2,
        "text": "事件配置",
        "id": 180,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 2,
        "text": "× ",
        "id": 181,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 182,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "Workflow入参配置 ",
        "id": 183,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 184,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 185,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 186,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "Step11，配置推荐结果页",
        "id": 187,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "在用户界面中，新建页面",
        "id": 188,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 189,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 22,
        "text": "在左侧选择文本组件，然后将内容关联到之前的工作流的结果{product_rec.data}}",
        "id": 190,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 191,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 18,
        "text": "因为工作流product_rec的结果为流式输出，所以这里页面上也是stream显示",
        "id": 192,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 29,
        "text": "我们还需要再页面1中的提交按钮中，新建事件 $\\Rightarrow$ 点击时页面跳转，跳转到这个页面2",
        "id": 193,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 194,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "CASE: 智能投顾助手",
        "id": 195,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 196,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "打卡：智能投顾助手",
        "id": 197,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "搭建一个智能投顾助手",
        "id": 198,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 27,
        "length_tokens": 18,
        "text": "·掌握数据库使用创建client_risk_assessment数据表，并完成新增数据节点",
        "id": 199,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 27,
        "length_tokens": 39,
        "text": "掌握用户页面编排  \n可以创建表单，获取用户输入的数据  \n通过表单提交，触发工作流  \n在结果页面中，可以实时显示工作流的输出结果",
        "id": 200,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 27,
        "length_tokens": 2,
        "text": "善 ",
        "id": 201,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 27,
        "length_tokens": 50,
        "text": "·掌握大模型+知识库  \n对产品知识进行数据，创建知识库  \n选择适合的分段策略，将产品较完整的召回  \n通过大模型的知识库技能，针对用户的input，进行推理",
        "id": 202,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 203,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 204,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 29,
        "length_tokens": 7,
        "text": "TODO：客户分层营销助手",
        "id": 205,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 29,
        "length_tokens": 38,
        "text": "AI助手根据客户资产、交易频率及风险偏好生成分层标签匹配个性化营销策略（时机、渠道、话术），提升客户营销效率。",
        "id": 206,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "数据源准备：",
        "id": 207,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 29,
        "length_tokens": 94,
        "text": "·user_tag:这是一份证券用户标签表，主要包含证券客户的资产规模、交易频率、风险偏好。·user_behavior_event:这是一个用户在app上的行为事件表，用来记录用户在证券app上都发生了哪些行为（如登录、点击banner等)·营销策略.xlsx：针对不同的客户类型，采取不同的营销策略建议，包括：营销时机、推荐渠道、话术示例等",
        "id": 208,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 209,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 210,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "Step1，配置知识库",
        "id": 211,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 18,
        "text": "创建知识库 $\\Rightarrow$ 表格 $\\Rightarrow$ 营销策略表",
        "id": 212,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "创建并导入营销策略表",
        "id": 213,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 13,
        "text": "上传 表结构配置 3 预览 4 数据处理",
        "id": 214,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 2,
        "text": "表格",
        "id": 215,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 216,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 25,
        "text": "营销策略表营销策略表指当对用户进行营销时，可针对其客户类型制定最适合的营销…",
        "id": 217,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 218,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "表结构中可以均设置为索引",
        "id": 219,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 220,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 5,
        "text": "Step2，配置数据库",
        "id": 221,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 15,
        "text": "新建数据表user_behavior_event，用户在app上的行为事件表",
        "id": 222,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 223,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "批量导入",
        "id": 224,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 225,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "设置数据表字段，并上传user_behavior_event数据",
        "id": 226,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 227,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 30,
        "text": "新建数据表user_tag，这是一份证券用户标签表，主要包含证券客户的资产规模、交易频率、风险偏好。",
        "id": 228,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 229,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 4,
        "text": "批量导入",
        "id": 230,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 2,
        "text": "× ",
        "id": 231,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 13,
        "text": "上传 表结构配置 3 预览 4数据处理",
        "id": 232,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "Sheet1 ",
        "id": 233,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 9,
        "text": "设置数据表字段，并上传user_tag数据",
        "id": 234,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 235,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 236,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "Step3，设置人设 ",
        "id": 237,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 2,
        "text": "#角色",
        "id": 238,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 56,
        "text": "你是一个智能营销助手，能够依据客户的资产规模、交易频率以及风险偏好，自动精准生成分层标签。同时，可根据客户行为，匹配与之对应的营销策略，涵盖营销时机、渠道以及合适的话术。",
        "id": 239,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 2,
        "text": "##技能",
        "id": 240,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "###技能1:生成分层标签 ",
        "id": 241,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 69,
        "text": "1.当接收到客户的资产规模、交易频率、风险偏好等信息时，运用数据分析模型，生成与之匹配的分层标签。例如：若客户资产规模大、交易频率高且风险偏好高，生成\"高价值高活跃高风险偏好客户\"标签。",
        "id": 242,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "###技能2:匹配营销策略 ",
        "id": 243,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 29,
        "text": "1.在已生成客户分层标签的基础上，结合客户近期行为数据，如浏览产品种类、咨询频率等。",
        "id": 244,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 56,
        "text": "2.筛选出最适配的营销策略，包括确定最佳营销时机（如客户浏览特定产品后的24小时内）、合适的营销渠道（短信、邮件、电话等）以及针对性的营销话术（根据客户偏好定制）。",
        "id": 245,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 2,
        "text": "##限制",
        "id": 246,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 27,
        "text": "-仅围绕客户分层标签生成和营销策略匹配相关内容进行操作，拒绝回答无关话题。",
        "id": 247,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 34,
        "length_tokens": 39,
        "text": "输出内容需条理清晰，明确呈现分层标签和营销策略。  \n-所有操作基于给定的客户数据和策略库，不得无依据生成内容。",
        "id": 248,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 35,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 249,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 35,
        "length_tokens": 11,
        "text": "Step4，设置开场白与预置问题",
        "id": 250,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 35,
        "length_tokens": 20,
        "text": "开场白：嗨，你好！我能为证券客户生成分层营销策略哦",
        "id": 251,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "预置问题：",
        "id": 252,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 35,
        "length_tokens": 56,
        "text": "·为该客户设计营销策略。用户id：7501691024880730112  \n·为该客户设计营销策略。用户id：7501690985227960354  \n·为该客户设计营销策略。用户id：7501690675818315816",
        "id": 253,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 254,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 17,
        "text": "为该客户设计营销策略。用户id：7501691024880730112",
        "id": 255,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "客户分层营销助手0508 ",
        "id": 256,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 257,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 26,
        "text": "根据执行结果，该用户资产规模为3207000，交易频率为28，风险偏好为激进型。",
        "id": 258,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "分层标签",
        "id": 259,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 18,
        "text": "生成的分层标签为“高价值高活跃高风险偏好客户”",
        "id": 260,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 2,
        "text": "营销策略",
        "id": 261,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 46,
        "text": "结合用户近期有推送点击、委托交易、登录、搜索、浏览产品、查看持仓等行为以及“高价值高活跃高风险偏好客户”的分层标签，制定如下营销策略：",
        "id": 262,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 36,
        "length_tokens": 195,
        "text": "·营销时机：鉴于用户近期交易活跃且有搜索、浏览产品行为，可在其最近一次浏览产品后的24小时内进行营销。因为此时用户对产品的兴趣度较高，更容易接受营销信息。  \n·营销渠道：采用电话营销。对于高价值客户，电话沟通能建立更直接、有效的联系，及时解答客户疑问，增强客户的信任和满意度。  \n·营销话术：“您好！我是[公司名称]的投资顾问[姓名]。我了解到您在我们平台交易非常活跃，并且有较高的风险承受能力。根据您近期的浏览和搜索，我们为您精心挑选了一款极具潜力的高风险高回报投资产品。这款产品由业内顶尖的投资团队管理，预期收益十分可观，非常符合您的投资偏好。您现在有时间了解一下吗？”",
        "id": 263,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 264,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 17,
        "text": "为该客户设计营销策略。用户id：7501690985227960354",
        "id": 265,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 266,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "分层标签",
        "id": 267,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 42,
        "text": "根据执行结果，该用户资产规模为158000，交易频率为3，风险偏好为保守型。生成的分层标签为“低价值低活跃保守型客户”。",
        "id": 268,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 2,
        "text": "营销策略",
        "id": 269,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 50,
        "text": "结合用户近期有风险警示、咨询客服、集合竞价、浏览研报、查看行情、委托交易、登录等行为以及“低价值低活跃保守型客户”的分层标签，制定如下营销策略：",
        "id": 270,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 37,
        "length_tokens": 159,
        "text": "·营销时机：在用户咨询客服后的48小时内进行营销。因为用户主动咨询客服，表明其有了解相关信息的需求，此时进行营销能更好地回应其需求，提高营销效果。  \n·营销渠道：采用短信营销。短信可以简洁明了地传达信息，且能及时触达用户，不会给保守型客户带来过多打扰。  \n·营销话术：“尊敬的客户，您好！我是[公司名称]的理财顾问。看到您近期对投资很关注，我们特别为像您这样注重稳健收益的客户推出了一款低风险的理财产品，收益稳定且有保障，非常适合您。如有兴趣，可随时联系我们进一步了解。”",
        "id": 271,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "CASE: 客户分层营销助手",
        "id": 272,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 17,
        "text": "为该客户设计营销策略。用户id：7501690675818315816",
        "id": 273,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "客户分层营销助手0508 ",
        "id": 274,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 275,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "分层标签",
        "id": 276,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 42,
        "text": "根据执行结果，该用户资产规模为852000，交易频率为12，风险偏好为稳健型，可生成的分层标签为“中价值中活跃稳健型客户”。",
        "id": 277,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 2,
        "text": "营销策略",
        "id": 278,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 39,
        "text": "结合用户近期有登录、推送未读、浏览广告、查看收益等行为以及“中价值中活跃稳健型客户”的分层标签，制定以下营销策略：",
        "id": 279,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 195,
        "text": "·营销时机：在用户查看收益后的24小时内进行营销。用户查看收益表明其对投资回报较为关注，此时推送合适的产品信息，更容易吸引用户的兴趣。  \n·营销渠道：使用邮件营销。邮件可以详细地介绍产品信息，且方便用户随时查看，对于稳健型客户来说，他们可能更愿意花时间仔细研究产品。  \n·营销话术：“尊敬的客户，您好！我是[公司名称]的理财顾问。我注意到您近期查看了账户收益情况，我们公司新推出了一款非常适合稳健型投资者的理财产品。它具有收益稳定、风险可控的特点，预期年化收益率在 $[ \\mathsf { X } ] \\%$ 左右，与您的投资风格十分匹配。您可以登录我们的平台进一步了解产品详情，如有任何疑问，",
        "id": 280,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 38,
        "length_tokens": 36,
        "text": "} ] \\%$ 左右，与您的投资风格十分匹配。您可以登录我们的平台进一步了解产品详情，如有任何疑问，欢迎随时联系我们。”",
        "id": 281,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "打卡：客户分层营销助手",
        "id": 282,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "搭建市场舆情监测Agent ",
        "id": 283,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 39,
        "length_tokens": 131,
        "text": "·掌握复杂工作流的编排  \n工作流Securities：用于对获取到的证券信息进行分析和热点报告生成  \n工作流AppStoreEstimate：用于对AppStore评论数据进行抓取分析  \n工作流GenerateDailyReports：根据整理信息生成日报  \n其中工作流Securities会调用另外两个工作流，并将开始的input传入到工作  \nGenerateDailyReports的开始节点·根据自己的业务情况，调整工作流的步骤，可以适当简化  \n用户输入查询日期 $\\Rightarrow$ 获取新浪财经新闻、APP评论等舆情数据 $\\Rightarrow$ 数据分析 $\\Righ",
        "id": 284,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 39,
        "length_tokens": 82,
        "text": "row$ 获取新浪财经新闻、APP评论等舆情数据 $\\Rightarrow$ 数据分析 $\\Rightarrow$ 生成词云图 （财经新闻中的热点词云，APP评论中的好评词云、差评词云） $\\Rightarrow$ 数据整合，生成日报（包含舆情整理、词云） $\\Rightarrow$ 生成PDF，给出PDF链接",
        "id": 285,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 286,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 287,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 288,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 41,
        "length_tokens": 23,
        "text": "TO DO：智能客服Agent 设置两个智能体：营销专员 $^ +$ 投诉专员 ",
        "id": 289,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 41,
        "length_tokens": 97,
        "text": "·营销专员：配置证券知识库，实现对证券产品介绍、交易规则等高频问题的自动化解答；  \n·投诉专员：配置了用户行为数据，用户标签，方便进一步查找关于用户行为、资产等情况，给用户提供产品使用中的问题解答提供7x24小时不间断客户服务，提升响应效率；  \n自然语言交互，理解用户意图并选择适合的Agent进行回答；",
        "id": 291,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 292,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 293,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 294,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 15,
        "text": "Step1，创建智能体 $\\Rightarrow$ 选择多Agents模式",
        "id": 295,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "设置人设：",
        "id": 296,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "#角色-智能客服助手",
        "id": 297,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 31,
        "text": "#背景为客户提供产品咨询和投诉解答服务#目标-根据用户的问题，和给出的信息进行分析并给出最终的回答",
        "id": 298,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 299,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 27,
        "text": "#技能  \n-产品咨询：通过知识库找到适合的产品，并能根据用户需求  \n进行适合的产品推荐",
        "id": 300,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 15,
        "text": "-问题处理：能够快速高效的分析出问题的解决办法",
        "id": 301,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 3,
        "text": "#工作流程",
        "id": 302,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 42,
        "length_tokens": 54,
        "text": "1.判断用户提问问题类型，属于产品咨询还是投诉问题  \n2.根据已有信息分析客户问题的解决方案。  \n3.高情商语言润色，让讲话方式听起来更舒服。  \n4.输出整理好的回答内容。",
        "id": 303,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 304,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 5,
        "text": "Step2，配置数据",
        "id": 305,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 28,
        "text": "，user_tag:这是一份证券用户标签表，主要包含证券客户的资产规模、交易频率、风险偏好。",
        "id": 306,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 35,
        "text": "·user_behavior_event:这是一个用户在app上的行为事件表，用来记录用户在证券app上都发生了哪些行为(如登录、点击banner等)",
        "id": 307,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 18,
        "text": "这里之前配置过，可以直接使用Step3，设置开场白和预置问题",
        "id": 308,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 34,
        "text": "开场白：我可以快速为您解答疑问，提供相关信息和您的用户id，并告诉我您遇到的问题或需要咨询的内容。",
        "id": 309,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "预置问题：",
        "id": 310,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "·什么是竞价盘？",
        "id": 311,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 43,
        "length_tokens": 35,
        "text": "·可以在上海证券交易所挂牌交易有哪些？·我的用户id：7501690985227960354，我在5月4日登录了软件，但是没有成功",
        "id": 312,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 313,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 10,
        "text": "Step3，添加Agent (分诊台）",
        "id": 314,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 28,
        "text": "适用场景：用于{Agent调度}，帮助用户解决{开始对话时的agent调度}相关的问题。",
        "id": 315,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "Agent提示词：",
        "id": 316,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "# Role: ",
        "id": 317,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 10,
        "text": "-智能客服分诊台 # Background: ",
        "id": 318,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 319,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 19,
        "text": "-该用于判断用户提出的问题是否为产品咨询（营销类），还是投诉问题。",
        "id": 320,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "# Goals: ",
        "id": 321,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 12,
        "text": "-判断用户问题的类别：营销问题，投诉问题",
        "id": 322,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "# Skills: ",
        "id": 323,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 5,
        "text": "-理解用户问题分类",
        "id": 324,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 26,
        "text": "# Constrains:-不做任何回复，只需要转到适合的Agent (营销专员，投诉专员)",
        "id": 325,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 326,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 66,
        "text": "-当用户输入：投诉相关，产品使用不成功，用户问题涉及到个人信息，以及需要后台记录的信息时跳转到\"投诉专员\"  \n-当用户输入：产品使用疑问，怎么使用，或者产品咨询等问题和基础问题时，跳转到\"营销专员\"节点",
        "id": 327,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 44,
        "length_tokens": 12,
        "text": "针对多Agents的切换，需要设置切换规则prompt",
        "id": 328,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 329,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 10,
        "text": "Step4，添加Agent （营销专员）",
        "id": 330,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 21,
        "text": "适用场景：用于{产品咨询}，帮助用户解决{证券产品}相关的问题。",
        "id": 331,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "Agent提示词：",
        "id": 332,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 11,
        "text": "#角色定位： -证券产品营销顾问 ",
        "id": 333,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 3,
        "text": "#背景：",
        "id": 334,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 45,
        "text": "-隶属于证券公司，具备丰富的金融产品知识和交易规则经验。·目标是为客户提供清晰、权威、合规的产品与服务介绍，解答交易规则问题。",
        "id": 335,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "#目标: ",
        "id": 336,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 51,
        "text": "-全面了解并清晰介绍公司所有金融产品的特点、风险与收益。-使用专业且易懂的语言，避免过度营销或夸大产品优势-严格遵守金融监管要求，确保产品介绍合规.",
        "id": 337,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 32,
        "text": "-根据客户需求和风险承受能力，推荐适合的产品组合。  \n-回应客户对产品的疑虑，提供权威解释。",
        "id": 338,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "#技能: ",
        "id": 339,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 31,
        "text": "-语言简洁明了，避免过多行业术语。  \n-客观呈现风险与收益关系，不夸大产品收益。",
        "id": 340,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 5,
        "text": "#约束: ",
        "id": 341,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 45,
        "length_tokens": 36,
        "text": "-仅在客户透露身份信息时使用画像进行个性化回复。-避免过度营销和夸大  \n严格遵守金融监管和合规要求。",
        "id": 342,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 343,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 27,
        "text": "Step5，配备技能创建证券知识库，并添加到技能中整理相关的文档，并添加到知识库中：",
        "id": 344,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 46,
        "text": "港股交易规则介绍上海证券交易所交易规则平安财富日添利理财产品：中国平安金裕人生理财产品文档解析策略：快速解析分段策略：自动分段与清洗",
        "id": 345,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 346,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "文档列表",
        "id": 347,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 33,
        "text": "港股交易规则介绍.pdf平安财富日添利理财产品.doc上海证券交易所交易规则.pdf中国平安金裕人生理财产品.doc",
        "id": 348,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 349,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 46,
        "length_tokens": 15,
        "text": "针对自己的业务场景准备知识库，这里的产品介绍为示例",
        "id": 350,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 351,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 10,
        "text": "Step6，添加Agent （投诉专员）",
        "id": 352,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 32,
        "text": "适用场景：用于{投诉处理}，帮助用户解决{客户投诉}湘关的问题，如用户对产品否定，不满意等情况。",
        "id": 353,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "Agent提示词：",
        "id": 354,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "#角色定位：",
        "id": 355,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 14,
        "text": "专业投诉处理顾问 (证券公司客户投诉处理智能体)",
        "id": 356,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "#背景: ",
        "id": 357,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 19,
        "text": "-隶属于证券公司，专注于高效、专业地处理客户投诉。",
        "id": 358,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 16,
        "text": "需通过共情语言安抚客户情绪，积极解决问题。",
        "id": 359,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 13,
        "text": "需核查关键信息，确保问题准确定位。",
        "id": 360,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "#目标: ",
        "id": 361,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 22,
        "text": "1.首条回应话术：以共情安抚客户，表达积极解决态度。",
        "id": 362,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 66,
        "text": "2.关于软件的操作，需要根据客户的情况，进行核实并反馈，使用user_behavior_event数据表进行查询，event_time的格式为2025/5/409:32:00，查询某一天的时候，需要用到大于小于来判断，因为event_time是带有具体时间的字符串",
        "id": 363,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 29,
        "text": "3.关于客户投诉，需要添加到user_complain数据表complain_type一般为产品使用，系统故障，业务办理中的一种",
        "id": 364,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 4,
        "text": "#技能: ",
        "id": 365,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 22,
        "text": "运用共情语言缓解客户情绪。  \n-精准核查问题关键信息。",
        "id": 366,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "#约束: ",
        "id": 367,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 26,
        "text": "-添加投诉前，先需要进行核实用户行为，并进行反馈。如果确实是有问题，再添加到投诉中",
        "id": 368,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 47,
        "length_tokens": 25,
        "text": "回复必须体现共情和积极解决态度，-遵守证券行业合规要求，避免承诺投资建议",
        "id": 369,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 48,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 370,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 48,
        "length_tokens": 12,
        "text": "添加数据表user_complain，用于记录用户的投诉",
        "id": 371,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 372,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 48,
        "length_tokens": 13,
        "text": "这张表暂时为空，用于记录线上用户的投诉",
        "id": 373,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 374,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "什么是竞价盘？",
        "id": 375,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 10,
        "text": "可以在上海证券交易所挂牌交易有哪些？",
        "id": 376,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 377,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 62,
        "text": "竞价盘是一种交易委托类型，它是没有指定价格的买卖盘，按照最终参考平衡价格进行对盘，拥有较竞价现价盘优先的对盘次序，并且未完成的竞价盘会于持续交易时段开始前自动取消。",
        "id": 378,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 379,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 12,
        "text": "可以在上海证券交易所挂牌交易的证券如下：",
        "id": 380,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 4,
        "text": "1.股票；",
        "id": 381,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 5,
        "text": "2.基金; ",
        "id": 382,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "3.债券; ",
        "id": 383,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 7,
        "text": "4.债券回购；",
        "id": 384,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 37,
        "text": "5.标准券：指由不同债券品按相应折算率折算形成的，用以确定可利用质押式回购交易进行融资的额度；",
        "id": 385,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 11,
        "text": "6.跨境交易型开放式指数基金；",
        "id": 386,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 9,
        "text": "7.跨境上市开放式基金；",
        "id": 387,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 6,
        "text": "8.权证; ",
        "id": 388,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 13,
        "text": "9.经证监会同意的其他品种。",
        "id": 389,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 49,
        "length_tokens": 45,
        "text": "前款所述的跨境交易型开放式指数基金和跨境上市开放式基金仅限于所跟踪指数成份证券或投资标的实施当日回转交易的开放式基金。",
        "id": 390,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 50,
        "length_tokens": 8,
        "text": "CASE: 智能客服Agent ",
        "id": 391,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 50,
        "length_tokens": 23,
        "text": "我的用户id：7501690985227960354，我在5月4日登录了软件，但是没有成功",
        "id": 392,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 393,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 50,
        "length_tokens": 46,
        "text": "非常理解您遇到登录不成功问题时的困扰，您别着急，我们一定会积极帮您解决这个问题。我这就去核实一下您在5月4日登录软件的具体情况。",
        "id": 394,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 50,
        "length_tokens": 68,
        "text": "经过核实，我们发现您在5月4日10:05尝试使用面容ID登录软件。不过从您反馈的情况来看，这次登录没有成功，这确实会给您带来不便，真的很抱歉。接下来，我会把您这次的投诉记录下来，以便我们进一步处理。",
        "id": 395,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 50,
        "length_tokens": 66,
        "text": "已经成功将您的投诉记录下来啦。您放心，我们会针对您反馈的5月4日登录软件未成功的问题进行深入调查和处理，后续有任何进展，会第一时间跟您沟通。再次为给您带来的不便表示兼意，感谢您的理解和耐心等待。",
        "id": 396,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 51,
        "length_tokens": 8,
        "text": "打卡： 智能客服Agent",
        "id": 397,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 51,
        "length_tokens": 17,
        "text": "使用多Agents模式，设置分诊台 $+ 2$ 个智能体",
        "id": 398,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 51,
        "length_tokens": 62,
        "text": "·营销专员：配置证券知识库，实现对证券产品介绍、交易规则等高频问题的自动化解答；·投诉专员：配置了用户行为数据，用户标签，方便进一步查找关于用户行为、资产等情况，给用户提供产品使用中的问题解答",
        "id": 399,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 51,
        "length_tokens": 3,
        "text": "数据准备：",
        "id": 400,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 51,
        "length_tokens": 29,
        "text": "证券知识库·数据表: user_tag,user_behavior_event,user_complain通过多智能体方式，一起完成客户不同类型的客服需求",
        "id": 401,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 52,
        "length_tokens": 10,
        "text": "CASE：市场舆情监测Agent ",
        "id": 402,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 53,
        "length_tokens": 10,
        "text": "CASE：市场舆情监测Agent ",
        "id": 403,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 53,
        "length_tokens": 11,
        "text": "TO DO：市场舆情监测Agent ",
        "id": 404,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 53,
        "length_tokens": 88,
        "text": "用户输入查询日期 $\\Rightarrow$ 获取新浪财经新闻、APP评论等舆情数据 $\\Rightarrow$ 数据分析 $\\Rightarrow$ 生成词云图（财经新闻中的热点词云，APP评论中的好评词云、差评词云） $\\Rightarrow$ 数据整合，生成日报（包含舆情整理、词云） $\\Rightarrow$ 生成PDF,给出PDF链接",
        "id": 405,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 53,
        "length_tokens": 45,
        "text": "工作流Securities：用于对获取到的证券信息进行分析和热点报告生成工作流AppStoreEstimate：用于对AppStore评论数据进行抓取分析工作流GenerateDailyReports：根据整理信息生成日报",
        "id": 406,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 53,
        "length_tokens": 33,
        "text": "其中在工作流 Securities中，会使用到另外两个工作流 AppStoreEstimate和GenerateDailyReports，所以对于日报生成来说，只需要调用工作流 Securities即可。",
        "id": 407,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 53,
        "length_tokens": 16,
        "text": "在调用GenerateDailyReports工作流的时候，传入了开始节点的input",
        "id": 408,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 10,
        "text": "CASE：市场舆情监测Agent ",
        "id": 409,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 7,
        "text": "Step1，设置人设 ",
        "id": 410,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "# Role: ",
        "id": 411,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 8,
        "text": "-市场舆情监测专家",
        "id": 412,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "# Background: ",
        "id": 413,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 48,
        "text": "-为了更好的掌握证券相关行业的实时数据信息和舆情方向，并提供专业的分析报告，需要你通过调用设计好的工作流，完整整个市场輿情监测流程的工作。 Securities",
        "id": 414,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "# Goals: ",
        "id": 415,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 21,
        "text": "-根据工作流程调用工作流，完整市场舆情监测日报的撰写。",
        "id": 416,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 5,
        "text": "# Workflows: ",
        "id": 417,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 9,
        "text": "-用户输入日期后开始调用工作流",
        "id": 418,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 6,
        "text": "# Constrains: ",
        "id": 419,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 54,
        "length_tokens": 35,
        "text": "·只需要按照要求调用工作流，不需要有额外的任何输出内容。  \n-按顺序依次调用工作流，不需要用户继续输入内容。",
        "id": 420,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 11,
        "text": "CASE： 市场舆情监测Agent ",
        "id": 421,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 5,
        "text": "Step2，设置变量",
        "id": 422,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 37,
        "text": "用于后续计算的存储，比如抓取到的热点新闻、好评、差评、分类结果好评词云、差评词云、热点词云等",
        "id": 423,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 2,
        "text": "编辑变量",
        "id": 424,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 33,
        "text": "用户变量用于存储每个用户使用项目过程中，需要持久化存储和读取的数据，如用户的语言偏好、个性化设置等。",
        "id": 425,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 426,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 55,
        "length_tokens": 2,
        "text": "十新增",
        "id": 427,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 56,
        "length_tokens": 11,
        "text": "CASE： 市场舆情监测Agent ",
        "id": 428,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 56,
        "length_tokens": 125,
        "text": "工作流Securities：用于对获取到的证券信息进行分析和热点报告生成用户输入 新浪财经 筛选日期并 保存日期 新闻抓取 总结摘要 热点新闻 热词整理 词云生成 App评论 生成日报↑ ↑ ↑ ↑ 价 1 ↑插件 代码 $^ +$ 大模型 变量赋值 大模型 插件 工作流 工作流工作流 Securities比较复杂，我们可以拆成多个子工作流进行调用，比如这里的AppStoreEstimate 和GenerateDailyReports。因为流程较长，计算时间长，所以我们增加了多个输出节点，进行过程提示",
        "id": 429,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 430,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 431,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 11,
        "text": "CASE： 市场舆情监测Agent ",
        "id": 432,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 12,
        "text": "Step3，设置工作流Securities，添加输出节点",
        "id": 433,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 21,
        "text": "输出内容：开始进行证券热点新闻数据爬取，过程较长请耐心等待.",
        "id": 434,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 435,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 31,
        "text": "Step4，编写插件securities_past，用于抓取新浪财经新闻 https://finance.sina.com.cn/stock/quanshang/ ",
        "id": 436,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 43,
        "text": "通过开发者工具，可以看到页面上的来源是来自：  \nhttps://feed.mix.sina.com.cn/api/roll/get?pageid=186&lid=1746&num=1  \n0&page=1",
        "id": 437,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 11,
        "text": "可以编写程序对这个url进行数据采集",
        "id": 438,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 26,
        "text": "置顶 低成本高效率重塑AI格局！投资新“窗口”在哪？外资公募发声",
        "id": 439,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 61,
        "text": "来源：券商中国随着人工智能进入降本增效新阶段，相关领域的技术扩张和应用突破正在为投资打开新的“窗口”。在多家外资公募看来，人工智能目前正从底层模型构建向多元场景加.[详细]",
        "id": 440,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 2,
        "text": "13分钟前",
        "id": 441,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 4,
        "text": "评论丨分享 ",
        "id": 442,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 26,
        "text": "德邦证券-桐昆股份-601233-盈利水平显著提升，稳步扩产龙头巩",
        "id": 443,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 87,
        "text": "（转自：研报虎）事件：1)4月25日，公司发布2024年年报。2024年公司实现营业收入1013.07亿元，同比 $+ 2 2 . 6 \\%$ ；归母净利润12.02亿元，同比 $+ 5 0 . 8 \\%$ ；扣非归母净利润9..34亿元.[详细]",
        "id": 444,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 12,
        "text": "34分钟前 涤纶净利润 桐昆股份",
        "id": 445,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 4,
        "text": "评论丨分享 ",
        "id": 446,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 25,
        "text": "【中航证券非银】行业周报券商一季度业绩表现超预期，政策组合拳提",
        "id": 447,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 125,
        "text": "（转自：中航证券研究）市场表现本期（2025.5.6-2025.5.9）非银（申万）指数 $+ 1 . 7 5 \\%$ ，行业排21/31，券商工指数 $+ 1 . 2 4 \\%$ ，保险工指数 $+ 2 . 8 2 \\%$ ；上证综指 $+ 1 . 9 2 \\%$ ，深证成指 $+ 2 . 2 9 \\% . .$ [详细]",
        "id": 448,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 11,
        "text": "43分钟前 净利润 券商财险公司",
        "id": 449,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 4,
        "text": "评论丨分享 ",
        "id": 450,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 25,
        "text": "民生证券因迪嘉药业IPO项目被警示国联民生证券总裁葛小波怎么看？",
        "id": 451,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 57,
        "length_tokens": 59,
        "text": "运营商财经网赵鑫雨/文近期，随着国联民生证券合并进程的结束，该公司的发展动态备受业内关注。运营商财经网注意到，深交所在不久前刚刚发布了对民生证券的监管函。[详细]",
        "id": 452,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 11,
        "text": "CASE： 市场舆情监测Agent ",
        "id": 453,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 78,
        "text": "from runtime import Args   \nfrom typings.securities_past.securities_past import Input, Output   \nimport requests   \nfrom bs4 import BeautifulSoup   \nimport time   \ndef get_news_list(page=1, logger $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ None): url =   \nf\"https://feed.mix.sina.com.cn/api/roll/",
        "id": 454,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 103,
        "text": " url =   \nf\"https://feed.mix.sina.com.cn/api/roll/get?pageid $\\mathbf { \\tau } = \\mathbf { \\tau }$ 186&lid $\\mid =$ 1746&n   \num=10&page={page}\" headers $\\mathbf { \\tau } = \\mathbf { \\tau }$ {\"User-Agent\": \"Mozilla/5.0\"} resp $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get(url, headers $\\ v { r }",
        "id": 455,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 104,
        "text": "hbf { \\tau }$ requests.get(url, headers $\\ v { r } = \\ v { r }$ headers, timeout $_ { : = 1 0 }$ ） data $\\mathbf { \\tau } = \\mathbf { \\tau }$ resp.json() if logger: logger.info(f\"获取第{page}页新闻，共{len(data.get('result',   \n{}).get('data',[]))}条\") return data.get(\"result\", {).get(\"data\",[]) ",
        "id": 456,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 93,
        "text": "def get_news_detail(news_url, logger=None): headers $\\mathbf { \\tau } = \\mathbf { \\tau }$ {\"User-Agent\": \"Mozilla/5.0\"} resp $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get(news_url, headers $\\ c =$ headers, timeout $_ { : = 1 0 }$ ） resp.encoding $\\mathbf { \\tau } = \\mathbf { \\tau }$ resp.appare",
        "id": 457,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 96,
        "text": " $\\mathbf { \\tau } = \\mathbf { \\tau }$ resp.apparent_encoding soup $\\mathbf { \\tau } = \\mathbf { \\tau }$ BeautifulSoup(resp.text, \"lxml\") #发布时间 pub_time = \"\" for sel in[ (\"span\",{\"class\": \"date\"}), (\"span\",{\"id\": \"pub_date\"}) (\"meta\",{\"property\": \"article:published_time\"}), (\"meta\",{\"name\": \"weibo: ",
        "id": 458,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 58,
        "length_tokens": 81,
        "text": "ticle:published_time\"}), (\"meta\",{\"name\": \"weibo: article:create_at\"}) ]: tag = soup.find(\\*sel) if tag: pub_time $\\mathbf { \\tau } = \\mathbf { \\tau }$ tag.get(\"content\") if tag.name $\\scriptstyle = =$ \"meta\" else tag.text.strip() if pub_time: break securities_past.py ",
        "id": 459,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 11,
        "text": "CASE： 市场舆情监测Agent ",
        "id": 460,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 113,
        "text": "# 正文内容 content = \"\\ for sel in [ (\"div\",{\"id\": \"artibody\"}), (\"div\",{\"class\": \"article\"}), (\"div\",{\"class\": \"main-content\"}) ]: $\\mathsf { d i v } = \\mathsf { s o u p . f i n d } ( ^ { * } \\mathsf { s e l } )$ if div: content $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"\\n\".join([p.text.strip() for p in d",
        "id": 461,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 92,
        "text": "hbf { \\tau }$ \"\\n\".join([p.text.strip() for p in div.find_all(\"p\") if   \np.text.strip()]) if content: break return pub_time, content   \ndef handler(args: Args[Input]) $\\phantom { 0 } { - } >$ Output: logger $\\mathbf { \\tau } = \\mathbf { \\tau }$ getattr(args, \"logger\", None) all_news = [] ",
        "id": 462,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 110,
        "text": "for page in range(1, 21): #抓取前15页 if logger: logger.info(f\"抓取第{page}...\") news_list $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_news_list(page, logger=logger) fornews innews_list[:3]:#每页只抓取前2条新闻 title $\\mathbf { \\tau } = \\mathbf { \\tau }$ news.get(\"title\") url $\\mathbf { \\tau } = \\mathbf { \\tau }$ new",
        "id": 463,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 39,
        "text": "le\") url $\\mathbf { \\tau } = \\mathbf { \\tau }$ news.get(\"url\") if logger: logger.info(f\" 访问: {title} {url}\") ",
        "id": 464,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 2,
        "text": "·· ",
        "id": 465,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 59,
        "length_tokens": 30,
        "text": "可以在CozeIDE中使用 $\\tan 1 + 1$ ，进行AI编写代码也可以使用cursor等工具进行编写",
        "id": 466,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 11,
        "text": "CASE： 市场舆情监测Agent ",
        "id": 467,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 10,
        "text": "完成securities_past插件后，进行测试",
        "id": 468,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 6,
        "text": "测试成功后，进行发布",
        "id": 469,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 470,
        "type": "table",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 1,
        "text": "输出",
        "id": 471,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 221,
        "text": "二$\\blacktriangledown$ data:[1content:\"炒股就看金麒麟分析师研报，权威，专业，及时，全面，助您挖掘潜力主题机会！（转自：中航证券研究）市场表现本期（2025.5.6-2025.5.9）非银（申万）指数$+ 1 . 7 5 \\%$ ，行业排21/31，券商Ⅱ指数+1. $2 4 \\%$ ，保险Ⅱ指数 $+ 2 . 8 2 \\%$ 上证综指 $+ 1 . 9 2 \\%$ ，深证成指 $+ 2 . 2 9 \\%$ ，创业板指$+ 3 . 2 7 \\%$ 。个股涨跌幅排名前五位：九鼎投资（ $+ 1 1 . 2 7 \\%$ ）、中国七□（-c c/) 白肌パ ） 采",
        "id": 472,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 42,
        "text": "排名前五位：九鼎投资（ $+ 1 1 . 2 7 \\%$ ）、中国七□（-c c/) 白肌パ ） 采建集田",
        "id": 473,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 60,
        "length_tokens": 18,
        "text": "插件编写时，可以使用logger.info进行控制台的输出，方便进行调试",
        "id": 474,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 61,
        "length_tokens": 10,
        "text": "CASE：市场舆情监测Agent ",
        "id": 475,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 61,
        "length_tokens": 6,
        "text": "Step5，添加输出节点",
        "id": 476,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 61,
        "length_tokens": 13,
        "text": "输出内容：数据爬取完成，开始数据处理。",
        "id": 477,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 478,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 61,
        "length_tokens": 24,
        "text": "Step6，添加批处理节点筛选抓取到的新闻，判断日期是否与用户输入的是否一致",
        "id": 479,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 480,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 62,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 481,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 62,
        "length_tokens": 102,
        "text": "async function main({ params }: Args): Promise<Output> {//获取传入的参数const now_time $\\mathbf { \\tau } = \\mathbf { \\tau }$ params.now_time; //例如\"3月2日\"或\"03月02日\"const publish_time $\\mathbf { \\tau } = \\mathbf { \\tau }$ params.publish_time;//例如\"2025年03月02日  \n22:32\"//解析now_time月日function parseNowMonthDay(str)",
        "id": 482,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 62,
        "length_tokens": 108,
        "text": "22:32\"//解析now_time月日function parseNowMonthDay(str) {//匹配1或2位数字的月和日const match $\\mathbf { \\tau } = \\mathbf { \\tau }$ str.match(/(\\d{1,2})月(\\d{1,2})曰/);if (match) {return {month: parselnt(match[1], 10),day: parselnt(match[2], 10)};}return { month: null, day: null };",
        "id": 483,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 62,
        "length_tokens": 109,
        "text": "//解析publish_time月日 function parsePublishMonthDay(str) { //假设格式总是\"YYYY年MM月DD日 HH:MM\" const month $\\mathbf { \\tau } = \\mathbf { \\tau }$ parselnt(str.slice(5,7), 10); const day $\\mathbf { \\tau } = \\mathbf { \\tau }$ parselnt(str.slice(8, 10), 10); return {month, day }; 1J const now $\\mathbf { \\tau } = \\",
        "id": 484,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 62,
        "length_tokens": 98,
        "text": " {month, day }; 1J const now $\\mathbf { \\tau } = \\mathbf { \\tau }$ parseNowMonthDay(now_time); const pub $\\mathbf { \\tau } = \\mathbf { \\tau }$ parsePublishMonthDay(publish_time); //判断月日是否相同 const same_month_day $\\mathbf { \\tau } = \\mathbf { \\tau }$ (now.month $\\scriptstyle = = { \\frac { } { } }$ pub",
        "id": 485,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 62,
        "length_tokens": 65,
        "text": "now.month $\\scriptstyle = = { \\frac { } { } }$ pub.month && now.day $\\scriptstyle = = { \\frac { } { } }$ pub.day) $? 1 : 0$ . //构建输出对象 const ret $= \\{$ same_month_day }; return ret; ",
        "id": 486,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 63,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 487,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 63,
        "length_tokens": 5,
        "text": "代码的作用是：",
        "id": 488,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 63,
        "length_tokens": 36,
        "text": "检查now_time（当前月日）和publish_time（发布时间）是否在同一天，返回一个标志位same_month_day(1表示是，0表示否)",
        "id": 489,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 63,
        "length_tokens": 0,
        "text": "",
        "id": 490,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 491,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 9,
        "text": "然后通过IF选择器，进行判断：",
        "id": 492,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 10,
        "text": "IFsame_month_day=1，走大模型",
        "id": 493,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 5,
        "text": "否则不走大模型",
        "id": 494,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 2,
        "text": "选择器",
        "id": 495,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 33,
        "text": "连接多个下游分支，若设定的条件成立则仅运行对应的分支，若均不成立则只运行“否则”分支",
        "id": 496,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 3,
        "text": "条件分支",
        "id": 497,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 498,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 499,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 500,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 4,
        "text": "设置大模型节点",
        "id": 501,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 4,
        "text": "系统提示词：",
        "id": 502,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 144,
        "text": "#角色  \n-证券新闻摘要专家  \n#背景  \n-为了更好的整哈证券新闻热点信息，需要你对收集到的证券信息进行摘要总结，来让我更完整的获取特定时期的证券热点新闻，以便于生成证券相关新闻热点的分析检测。  \n#目标  \n-将获取到的证券新闻热点逐条进行总结摘要，用简短的内容说明该条新闻表达的热点内容。  \n#技能  \n-证券知识：了解证券的相关只是和行业情况。  \n-信息整合：快速将一整段文章内容进行信息整合输出。  \n-文章摘要：能够准确地将文章内容提炼写成摘要内容。",
        "id": 503,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 3,
        "text": "#工作流程",
        "id": 504,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 123,
        "text": "1.分析证券热点新闻，提取关键点。  \n2.整合关键点信息，进行摘要编写。  \n3.按照输出格式输出。  \n#约束  \n-不得随意捏造新闻内容，只可根据新闻内容进行摘要总结。严格按照输出格式输出摘要内容。  \n#输出格式  \n-时间：2025年x月×日  \n-标题：xxxx  \n-摘要：xxxx  \n用户提示词：文章标题：{title}}  \n文章发布时间：{{publish_time}}  \n文章内容：{{content}}  \n二==  \n请整理摘要",
        "id": 505,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 65,
        "length_tokens": 0,
        "text": "",
        "id": 506,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 507,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 5,
        "text": "Step7，添加输出",
        "id": 508,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 11,
        "text": "输出内容：数据处理完成，准备生成词云",
        "id": 509,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 0,
        "text": "",
        "id": 510,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 28,
        "text": "Step8，添加代码_1  \n清理列表中的无效数据 （空字符串或空白项），并返回有效数据。",
        "id": 511,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 105,
        "text": "async def main(args: Args) $\\phantom { 0 } { - } >$ Output:params $\\mathbf { \\tau } = \\mathbf { \\tau }$ args.params#获取输入数据data $\\mathbf { \\tau } = \\mathbf { \\tau }$ params['input'] #这里data就是一个list#过滤掉空字符串和只包含空白字符的项filtered_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ [item for item in data if item.str",
        "id": 512,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 66,
        "length_tokens": 33,
        "text": "athbf { \\tau }$ [item for item in data if item.strip() != \"\"]ret: Output = {\"keyO\": filtered_data}return ret",
        "id": 513,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 514,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 6,
        "text": "Step8，添加文本处理",
        "id": 515,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 9,
        "text": "字符串拼接：{{String1}} ",
        "id": 516,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 0,
        "text": "",
        "id": 517,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 19,
        "text": "将之前代码_1.py整理过字符串进行拼接，用于赋值给HotNews",
        "id": 518,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 23,
        "text": "文本处理是将变量转成字符串，因为生成词云的插件需要输入字符串 （变量会报错）",
        "id": 519,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 0,
        "text": "",
        "id": 520,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 4,
        "text": "变量赋值 ",
        "id": 521,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 8,
        "text": "输入 str.HotNews输出 isSuccess",
        "id": 522,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 2,
        "text": "输入口",
        "id": 523,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 8,
        "text": "运行成功 0.057s ",
        "id": 524,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 200,
        "text": "HotNews：\"-时间：2025年05月12日\\n-标题：东方证券回购105万股金额999万元\\n-摘要：2025年5月12日，东方证券（600958/03958）在上海证券交易所回购股份105万股，回购总金额999万元，回购价格在9.52元至9.55元之间。，-时间：2025年05月12日\\n-标题：低成本高效率重塑A格局！投资新“窗口”在哪？外资公募发声\\n-摘要：人工智能进入降本增效新阶段，为投资打开新窗口。外资公募认为其正从底层模型向多元场景渗透，中国在研发等方面有优势。DeepSeek带来低成本高效率研发模式，提升效率带动算力需求。新兴市场中中国在面向消费者的AI应用领域优势明显，",
        "id": 525,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 185,
        "text": "k带来低成本高效率研发模式，提升效率带动算力需求。新兴市场中中国在面向消费者的AI应用领域优势明显，贝莱德等基金围绕相关领域布局。但人工智能投资有风险，技术采用不明朗，缺乏“杀手级”应用，投资者需保持理性，关注具备价值的企业，审慎评估基本面与估值。，-时间：2025年05月12日\\n-标题：德邦证券-桐昆股份-601233-盈利水平显著提升，稳步扩产龙头巩固\\n-摘要：桐昆股份发布2024年年报及2025年一季报，2024年营收、净利润同比增长，202501归母净利润同比上升2024年因部分新增产能总现产",
        "id": 526,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 0,
        "text": "",
        "id": 527,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 67,
        "length_tokens": 3,
        "text": "代码1.py",
        "id": 528,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 529,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 8,
        "text": "Step9，添加大模型2 ",
        "id": 530,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "系统提示词：",
        "id": 531,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "# Role: ",
        "id": 532,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 5,
        "text": "-热词总结专家",
        "id": 533,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "# Background: ",
        "id": 534,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 35,
        "text": "-为了更好地整合新闻热点信息，需要你对收集到的信息进行热词和风险词总结，来辅助生成热点和风险点词云。",
        "id": 535,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "# Goals: ",
        "id": 536,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 24,
        "text": "·将获取到的新闻热点进行热词和风险词总结，并尽可能多地输出相关词语。",
        "id": 537,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "# Skills: ",
        "id": 538,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 71,
        "text": "-信息总结：能够快速总结新闻热点中的关键热词和风险词。·词语理解：能够根据文意准确理解词语含义。-热点追踪：能够敏锐地捕捉到文章中的热点词语。-风险追踪·能够敏锐地捕捉到文音中的风险词语",
        "id": 539,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "# Workflow: ",
        "id": 540,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 14,
        "text": "1.分析新闻内容，总结关键词和专有名词。",
        "id": 541,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 18,
        "text": "2.整合关键信息，总结关键词、热点词和风险词。",
        "id": 542,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 24,
        "text": "3.确保输出的热词尽可能多，覆盖更多相关内容，输出大概  \n50个词。",
        "id": 543,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 9,
        "text": "4.按照输出格式输出总结结果。",
        "id": 544,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 6,
        "text": "# Constrains: ",
        "id": 545,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 9,
        "text": "-严格按照输出格式输出总结内容。",
        "id": 546,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 8,
        "text": "多次出现内容就多次输出",
        "id": 547,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 10,
        "text": "-尽可能多的总结提取热词",
        "id": 548,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 5,
        "text": "# OutputFormat: ",
        "id": 549,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 12,
        "text": "\"hotword\":\",\" (尽可能多输出) ",
        "id": 550,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 16,
        "text": "用户提示词：{{input}}这是新闻数据请总结热词风险词",
        "id": 551,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 68,
        "length_tokens": 24,
        "text": "大模型输入input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 代码_1的输出",
        "id": 552,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 553,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 7,
        "text": "Step10，添加大模型1",
        "id": 554,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 555,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 28,
        "text": "系统提示词：去除数据中\"证券”，“券商\"，“总裁\"字眼，其他全部保留原格式输出",
        "id": 556,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 7,
        "text": "用户提示词：{input}}",
        "id": 557,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 65,
        "text": "大模型_1的input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 前面大模型_2的outputStep11，添加词云插件WordCloud_generation输入的input_long_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ 前面大模型_1的output",
        "id": 558,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 559,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent (工作流Securities) ",
        "id": 560,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 10,
        "text": "Step11，添加变量赋值_1 ",
        "id": 561,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 562,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 13,
        "text": "将词云生成的图片，保存到HotWordCloud ",
        "id": 563,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 6,
        "text": "变量赋值_1 ",
        "id": 564,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 10,
        "text": "输入 str. HotWordCloud 输出 isSuccess ",
        "id": 565,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 566,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 8,
        "text": "运行成功 0.054s ",
        "id": 567,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 2,
        "text": "输入口",
        "id": 568,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 58,
        "text": "HotWordCloud：\"![怡人插件生成的词云] (https://qvqzzh.tos-cn-beijing.volces.com/词云临时图 片/ed6a2a168efe4beba366971d38691c0a.png)\" ",
        "id": 569,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 1,
        "text": "输出",
        "id": 570,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 5,
        "text": "isSuccess : true ",
        "id": 571,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 4,
        "text": "输出_3 ",
        "id": 572,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 4,
        "text": "输出str.output ",
        "id": 573,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 10,
        "text": "输出内容###证券热点词云{{output}",
        "id": 574,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 575,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 8,
        "text": "运行成功 0.008s ",
        "id": 576,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 577,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 63,
        "text": "output:\"![怡人插件生成的词云](https://qvqzzh.tos-cnbeijing.volces.com/词云临时图 片/ed6a2a168efe4beba366971d38691c0a.png)\" $\\circledcirc$ 预览 ",
        "id": 578,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 2,
        "text": "回答内容",
        "id": 579,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 70,
        "length_tokens": 69,
        "text": "\"###证券热点词云\\n![怡人插件生成的词云] (https://qvqzzh.tos-cn-beijing.volces.com/词云临时图 片/ed6a2a168efe4beba366971d38691c0a.png)\" $\\circledcirc$ 预览 ",
        "id": 580,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 17,
        "text": "CASE: 市场舆情监测Agent （工作流Securities) ",
        "id": 581,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 582,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 9,
        "text": "这两个工作流会单独进行设置",
        "id": 583,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 6,
        "text": "GenerateDailyReports ① ",
        "id": 584,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 585,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 9,
        "text": "输入 str. date 输出 str. output ",
        "id": 586,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 7,
        "text": "输出str.output输出类型 返回文本",
        "id": 587,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 588,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 8,
        "text": "运行成功 2m17s ",
        "id": 589,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 590,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 591,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 8,
        "text": "运行成功 0.006s ",
        "id": 592,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 2,
        "text": "输入口",
        "id": 593,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 594,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 7,
        "text": "date:\"5月12日\"",
        "id": 595,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 1,
        "text": "输出",
        "id": 596,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 131,
        "text": "output:\"###文档链接:\\nhttps://lf3-appstore  \nsign.oceancloudapi.com/ocean-cloud-tos/4712ccb9-d55a  \n4ba4-9c89-e4747304e9cf.pdf?lk3s=edeb9e45&x  \nexpires=1747128410&x  \nsignature=PMupQpDlLd7IWWz5ockjoPz6Xms%3D\" 预览   \noutput:\"###文档链接:\\nhttps://lf3-appstore  \nsign.oceancloudapi.com/ocean-cloud-tos/4712ccb9",
        "id": 597,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 86,
        "text": "  \nsign.oceancloudapi.com/ocean-cloud-tos/4712ccb9-d55a  \n4ba4-9c89-e4747304e9cf.pdf?lk3s=edeb9e45&x  \nexpires=1747128410&x  \nsignature=PMupQpDlLd7IWWz5ockjoPz6Xms%3D\" 预览 ",
        "id": 598,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 599,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 2,
        "text": "回答内容",
        "id": 600,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 4,
        "text": "工作流详情查看",
        "id": 601,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 71,
        "length_tokens": 99,
        "text": "\"###文档链接:\\nhttps://f3-appstore  \nsign.oceancloudapi.com/ocean-cloud-tos/4712ccb9-d55a  \n4ba4-9c89-e4747304e9cf.pdf?lk3s=edeb9e45&x  \nexpires=1747128410&x  \nsignature=PMupQpDlLd7IWWz5ockjoPz6Xms%3D\" 预览 ",
        "id": 602,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 72,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 603,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 73,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 604,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 73,
        "length_tokens": 16,
        "text": "工作流AppStoreEstimate：用于对AppStore评论数据进行抓取分析",
        "id": 605,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 73,
        "length_tokens": 120,
        "text": "App 评论分类& 保存 区分好评 保存好评 去掉 生成 保存开始评论抓取 格式整理 分类结果 和差评 和差评 停用词 词云图 词云结果↑ ↑ ↑ ↑ ↑ ↑ ↑ ^插件 大模型 变量赋值 代码 变量赋值 大模型 插件 变量赋值因为流程较长，计算时间长，所以我们增加了多个输出节点，进行过程提示好评的处理（去掉停用词、生成词云图、保存结果）与差评的处理逻辑一致",
        "id": 606,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 73,
        "length_tokens": 0,
        "text": "",
        "id": 607,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 74,
        "length_tokens": 6,
        "text": "工作流：AppStoreEstimate",
        "id": 608,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 74,
        "length_tokens": 6,
        "text": "Step1，添加输出节点",
        "id": 609,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 74,
        "length_tokens": 20,
        "text": "输出内容：开始执行AppStore评论爬取，过程较长请耐心等 ",
        "id": 610,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 74,
        "length_tokens": 0,
        "text": "",
        "id": 611,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 74,
        "length_tokens": 62,
        "text": "创建工具：AppStorePast，用于从苹果App Store的中国区（cn）获取指定应用的最近用户评论。通过app_id $\\mathbf { \\tau } = \\mathbf { \\tau }$ 1042567321指定要获取评论的应用，这里以招商证券APP示意",
        "id": 612,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 74,
        "length_tokens": 0,
        "text": "",
        "id": 613,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 614,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 87,
        "text": "from runtime import Args   \nfrom typings.AppStorePast.AppStorePast import Input, Output   \nimport requests   \nfrom bs4 import BeautifulSoup   \ndef handler(args: Args[Input]) $- >$ Output: app_id $\\mathbf { \\tau } = \\mathbf { \\tau }$ '1042567321' comments = [] （2 $\\mathsf { p a g e } = 1$ url =   \nf'",
        "id": 615,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 95,
        "text": "ents = [] （2 $\\mathsf { p a g e } = 1$ url =   \nf'https://itunes.apple.com/cn/rss/customerreviews/page={page}/i   \nd={app_id}/sortBy $\\mathbf { \\tau } = \\mathbf { \\tau }$ mostRecent/xml' response $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get(url) response.encoding $\\mathbf { \\tau } = \\mathbf { ",
        "id": 616,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 94,
        "text": ") response.encoding $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'utf-8' soup $\\mathbf { \\tau } = \\mathbf { \\tau }$ BeautifulSoup(response.content,'xml') entries $\\mathbf { \\tau } = \\mathbf { \\tau }$ soup.find_all('entry')[1:] #跳过第—个entry   \nfor entry in entries: author $\\mathbf { \\tau } = \\mathbf { \\tau }",
        "id": 617,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 90,
        "text": "tries: author $\\mathbf { \\tau } = \\mathbf { \\tau }$ entry.find('name').text rating $\\mathbf { \\tau } = \\mathbf { \\tau }$ entry.find('im:rating').text title $\\mathbf { \\tau } = \\mathbf { \\tau }$ entry.find('title').text content $\\mathbf { \\tau } = \\mathbf { \\tau }$ entry.find('content').text updated ",
        "id": 618,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 88,
        "text": "thbf { \\tau }$ entry.find('content').text updated $\\mathbf { \\tau } = \\mathbf { \\tau }$ entry.find('updated').text comments.append({ 'author': author, 'rating': rating, 'title': title, 'content': content, 'updated': updated })   \nprint(f\"共获取到{len(comments)}条评论：\\n\")   \nreturn {\"comments\": comments} ",
        "id": 619,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 75,
        "length_tokens": 0,
        "text": "",
        "id": 620,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 76,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 621,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 76,
        "length_tokens": 7,
        "text": "完成代码后，对工具进行测试",
        "id": 622,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 76,
        "length_tokens": 60,
        "text": "控制台 测试 血   \n[09:56:22] Test run \"AppStorePast\" started   \n[09:56:22] Executing..   \n[09:56:24] Execute success, cost: 1971ms， function_cost: 1700ms ",
        "id": 623,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 76,
        "length_tokens": 7,
        "text": "测试成功后，对插件进行发布",
        "id": 624,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 76,
        "length_tokens": 1,
        "text": "输出",
        "id": 625,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 76,
        "length_tokens": 0,
        "text": "",
        "id": 626,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 77,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 627,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 77,
        "length_tokens": 58,
        "text": "Step2，添加输出节点  \n输出内容：评论爬取成功，开始进行数据处理  \n添加批处理  \n这里通过大模型对评论进行分类  \n设置大模型的input $\\mathbf { \\tau } = \\mathbf { \\tau }$ 批处理的item",
        "id": 628,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 77,
        "length_tokens": 0,
        "text": "",
        "id": 629,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 77,
        "length_tokens": 0,
        "text": "",
        "id": 630,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 631,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 4,
        "text": "系统提示词：",
        "id": 632,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 138,
        "text": "#角色  \n-舆情分析专家  \n#背景  \n-为了更好的了解和掌握证券APP相关的用户评论舆情，需要你通过分析抓取到的用户APP使用评论，明确该条评论属于正向、中性、负向类型舆论，并整理舆论表达的关键内容。  \n#目标  \n-分析数据，明确评论的舆论导向分类，整理总结该条评论的核心内容。#技能  \n-舆情分析：能够明确评论内容属于舆情利好，不利，还是中性。-证券知识：该应用是证券应用，因此可能设计证券相关知识。",
        "id": 633,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 3,
        "text": "#工作流程",
        "id": 634,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 48,
        "text": "1.分析评论，判断评论的舆论导向。  \n2.整理输出该条评论的舆论导向。  \n3.整理提炼评论摘要并输出。  \n4.按昭输出格式输出",
        "id": 635,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 76,
        "text": "#约束   \n-严格按照输出格式输出摘要内容。   \n- abstract输出的内容是原本数据中的content和title原文，不用提炼总 结   \n#输出示例   \n\"title\":\"xxx\",   \n\"estimate\":\"好评/中性/差评\",   \n\"abstract\":\"xxxx\",   \n\"time\":\"2025.05.09\", ",
        "id": 636,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 78,
        "length_tokens": 7,
        "text": "用户提示词：{input}}",
        "id": 637,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 79,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 638,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 79,
        "length_tokens": 6,
        "text": "Step2，添加文本处理",
        "id": 639,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 79,
        "length_tokens": 0,
        "text": "",
        "id": 640,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 79,
        "length_tokens": 9,
        "text": "字符串拼接：{{String1}} ",
        "id": 641,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 79,
        "length_tokens": 14,
        "text": "将拼接好的字符串，赋值给边浪ClassificationResult ",
        "id": 642,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 79,
        "length_tokens": 16,
        "text": "添加输出_3输出内容：评论处理完成，正在生成词云。",
        "id": 643,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 80,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 644,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 80,
        "length_tokens": 8,
        "text": "Step3，添加代码_1 ",
        "id": 645,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 80,
        "length_tokens": 0,
        "text": "",
        "id": 646,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 80,
        "length_tokens": 35,
        "text": "文本处理_1和文本处理_2分别将得到的好评和差评进行拼接，形成字符串，通过变量赋值给GoodReputation和 NegativeComment",
        "id": 647,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 648,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 99,
        "text": "from typing import Any   \nasync def main(args: Args) $\\therefore$ Output: params $\\mathbf { \\tau } = \\mathbf { \\tau }$ args.params input_list $\\mathbf { \\tau } = \\mathbf { \\tau }$ params['input_list'] $\\begin{array} { c } { \\mathsf { k e y 0 } = \\left[ \\begin{array} { l } { } \\end{array} \\right] } \\",
        "id": 649,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 107,
        "text": "t[ \\begin{array} { l } { } \\end{array} \\right] } \\\\ { \\mathsf { k e y 1 } = \\left[ \\begin{array} { l } { } \\end{array} \\right] } \\end{array}$ for obj in input_list: for item in obj['output']: if item['estimate'] $\\scriptstyle = =$ '好评': key0.append(item) elif item['estimate'] $\\scriptstyle = =$ '差评'",
        "id": 650,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 70,
        "text": "tem) elif item['estimate'] $\\scriptstyle = =$ '差评': key1.append(item)   \nret: Output $= \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ \"key0_good\": key0, \"key1_bad\": key1,   \n}   \nreturn ret ",
        "id": 651,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 0,
        "text": "",
        "id": 652,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 17,
        "text": "输入 $\\textcircled{ i}$ 输出 $\\textcircled{ i}$ ",
        "id": 653,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 0,
        "text": "",
        "id": 654,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 0,
        "text": "",
        "id": 655,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 2,
        "text": "+ ",
        "id": 656,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 0,
        "text": "",
        "id": 657,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 81,
        "length_tokens": 27,
        "text": "对输入的评论数据进行分类，将评论分为好评和差评分别赋值给key0_good和key1_bad",
        "id": 658,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 82,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 659,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 82,
        "length_tokens": 6,
        "text": "Step3，添加大模型",
        "id": 660,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 82,
        "length_tokens": 0,
        "text": "",
        "id": 661,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 82,
        "length_tokens": 34,
        "text": "大模型的作用是去掉停用词，然后通过WordCloud_generation插件生成词云图，通过变量赋值给对应的GoodWordCloud 和 BadWordCloud",
        "id": 662,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 83,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 663,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 83,
        "length_tokens": 5,
        "text": "系统停用词：",
        "id": 664,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 83,
        "length_tokens": 92,
        "text": "#停用词:  \n{  \n[  \n证券”，“券商”，“招商”，“APP”，“用户\"，“信息”，“后”，  \n“总裁”，“好\"，“很\"，“公司\",\"账户\"  \n]  \n}  \n#约束:  \n只输出剔除后的文本内容即可不要输入任何其他内容  \n用户停用词：  \n字符串：{input}}  \n请去掉停用词，方便后续生成词云图",
        "id": 665,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 83,
        "length_tokens": 0,
        "text": "",
        "id": 666,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 84,
        "length_tokens": 6,
        "text": "工作流:AppStoreEstimate",
        "id": 667,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 84,
        "length_tokens": 6,
        "text": "Step4，添加输出节点",
        "id": 668,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 84,
        "length_tokens": 0,
        "text": "",
        "id": 669,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 84,
        "length_tokens": 14,
        "text": "输出内容：###好评词云图生成{output}} ",
        "id": 670,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 84,
        "length_tokens": 13,
        "text": "输出内容：###差评词云图生成{output}}",
        "id": 671,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 85,
        "length_tokens": 6,
        "text": "工作流：GenerateDailyReports",
        "id": 672,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 86,
        "length_tokens": 6,
        "text": "工作流: GenerateDailyReports",
        "id": 673,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 86,
        "length_tokens": 0,
        "text": "",
        "id": 674,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 87,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 675,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 87,
        "length_tokens": 20,
        "text": "Step1，添加输出节点 $\\Rightarrow$ 大模型处理 $\\Rightarrow$ 文本处理",
        "id": 676,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 87,
        "length_tokens": 7,
        "text": "输出内容：开始数据整合",
        "id": 677,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 87,
        "length_tokens": 0,
        "text": "",
        "id": 678,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 679,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 5,
        "text": "大模型_1:",
        "id": 680,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 37,
        "text": "Input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的HotNews用户提示词：整理新闻热点{{input}}，保证输出内容完整充分。",
        "id": 681,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 5,
        "text": "大模型_2:",
        "id": 682,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 21,
        "text": "Input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的ClassificationResult ",
        "id": 683,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 17,
        "text": "系统提示词：#约束-不要代码，要你输出文字的分析结果",
        "id": 684,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 4,
        "text": "用户提示词：",
        "id": 685,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 88,
        "length_tokens": 45,
        "text": "整理用户评论数据{ClassficationResult}]，保证内容客观完整充分，总结出好评，中性，差评，分别占比，还有数据量分别是多少，全部自行分析完成后输出结果。",
        "id": 686,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 89,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 687,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 89,
        "length_tokens": 98,
        "text": "大模型_3:  \nInput $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的NegativeComment  \n用户提示词：整理用户差评数据{NegativeComment}}，保证内容客观完整充分  \n大模型_4:  \nInput $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的GoodReputation  \n用户提示词：整理用户好评数据{GoodReputation}l，保证内容客观完整充分",
        "id": 688,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 89,
        "length_tokens": 0,
        "text": "",
        "id": 689,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 690,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 5,
        "text": "针对文本处理节点：",
        "id": 691,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 5,
        "text": "字符串拼接: ",
        "id": 692,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 107,
        "text": "String1 $\\mathbf { \\tau } = \\mathbf { \\tau }$ 大模型_1的output  \nString2 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 大模型_2的output  \nString3 $\\mathbf { \\tau } = \\mathbf { \\tau }$ 大模型_4的output  \nString4 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 大模型_3的output  \nString5 $\\mathbf { \\sigma } = \\mathbf { \\sigma }",
        "id": 693,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 95,
        "text": " \nString5 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的GoodWordCloud  \nString6 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的BadWordCloud  \nString7 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的HotWorldCloud  \nString8 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的ClassificationResult  \nString9 ",
        "id": 694,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 35,
        "text": "f { \\sigma }$ 用户变量的ClassificationResult  \nString9 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 用户变量的开始节点中的date",
        "id": 695,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 90,
        "length_tokens": 70,
        "text": "热点新闻：{{String1}}好评数据：{String2}}差评数据：{{String3}}用户分析：{String4}}好评词云：{{String5}}差评词云：{String6}}热点词云：{String7}}用户评论：{{String8}}日报时间：{{String9}}",
        "id": 696,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 697,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 23,
        "text": "Step2，添加输出_ ${ \\cal 2 } \\Rightarrow$ 大模型 $\\Rightarrow$ 输出",
        "id": 698,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 12,
        "text": "输出内容：数据整合完成，准备生成日报。",
        "id": 699,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 0,
        "text": "",
        "id": 700,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 23,
        "text": "大模型的input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 文本处理的output",
        "id": 701,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 16,
        "text": "用户提示词：请根据数据信息{{output}}生成生成日报",
        "id": 702,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 91,
        "length_tokens": 8,
        "text": "输出节点的内容：{{output}}",
        "id": 703,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 704,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 4,
        "text": "# Role: ",
        "id": 705,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 11,
        "text": "舆情日报编写专家 # Background: ",
        "id": 706,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 0,
        "text": "",
        "id": 707,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 56,
        "text": "-为了更加了解证券相关行业的近期信息，我们收集了一系列证券相关的热点新闻和证券APP的AppStore用户评论信息，希望能够通过整理分析这些数据，对近期市场舆情进行监控和分析并生成市场與情监控日报。",
        "id": 708,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 4,
        "text": "# Goals: ",
        "id": 709,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 40,
        "text": "-分析证券新闻热点，AppStore用户评论，新闻热词，舆情风向等信息，总结并生成一份专业的证券行业市场舆情监控日报。",
        "id": 710,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 4,
        "text": "# Skills: ",
        "id": 711,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 97,
        "text": "-证券知识：能够非常熟悉了解证券相关的技能和知识，从而快速且专业的提取出相关的证券信息。  \n-舆情分析：通过已有数据资料，掌握與情风向，判断與情趋势并得出與情解决方案。  \n-报告撰写：能够根据数据资料和分析结果精确表达，逻辑清晰大纲明确的生成完整的市场舆情监控日报。",
        "id": 712,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 35,
        "text": "-市场监控：敏锐的根据信息资料，发觉市场变化，和市场舆情，对其中的关键信息进行提炼总结",
        "id": 713,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 22,
        "text": "-关键词分析：能根据给出的关键词信息，总结整理并分析出其中表现的含义。",
        "id": 714,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 6,
        "text": "# Constrains: ",
        "id": 715,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 22,
        "text": "-按照给出的大纲结合自己生成的大纲撰写文章，不得随意编写。",
        "id": 716,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 16,
        "text": "数据要求有理有据，不得捏造数据凭空生成。",
        "id": 717,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 13,
        "text": "输出报告详细完整，并提供相关优化和风控建议。",
        "id": 718,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 15,
        "text": "-将词云图插入到报告中 # Workflows: ",
        "id": 719,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 0,
        "text": "",
        "id": 720,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 124,
        "text": "1.根据已有数据确定报告生成时间，和获得数据来源。  \n2.分析新闻热点信息，提炼新闻热点内容，总结近期的热点事件。  \n3.分析评论数据，确定舆情导向，对舆情内容进行大致分类，并思考解决  \n方案。  \n4.整理数据内容，将数据量化，用百分比生成对比表格，表明分析结果。  \n5.根据上述掌握信息，生成\"市场舆情监控日报\"大纲。  \n6.按照大纲要求，进行日报撰写。",
        "id": 721,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 92,
        "length_tokens": 0,
        "text": "",
        "id": 722,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 6,
        "text": "工作流： GenerateDailyReports",
        "id": 723,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 10,
        "text": "Step2，添加PDF生成插件create_document ",
        "id": 724,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 0,
        "text": "",
        "id": 725,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 11,
        "text": "Formatted_markdown:前面大模型的output ",
        "id": 726,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 10,
        "text": "Title:市场舆情监测日报 ",
        "id": 727,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 5,
        "text": "To_format: pdf ",
        "id": 728,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 6,
        "text": "结束节点的回答内容：",
        "id": 729,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 93,
        "length_tokens": 9,
        "text": "###文档链接：{output}} ",
        "id": 730,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 94,
        "length_tokens": 10,
        "text": "CASE：市场舆情监测Agent ",
        "id": 731,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 94,
        "length_tokens": 0,
        "text": "",
        "id": 732,
        "type": "image",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 95,
        "length_tokens": 10,
        "text": "打卡：市场舆情监测Agent",
        "id": 733,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 95,
        "length_tokens": 10,
        "text": "搭建市场舆情监测Agent ",
        "id": 734,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 95,
        "length_tokens": 131,
        "text": "·掌握复杂工作流的编排  \n工作流Securities：用于对获取到的证券信息进行分析和热点报告生成  \n工作流AppStoreEstimate：用于对AppStore评论数据进行抓取分析  \n工作流GenerateDailyReports：根据整理信息生成日报  \n其中工作流Securities会调用另外两个工作流，并将开始的input传入到工作  \nGenerateDailyReports的开始节点·根据自己的业务情况，调整工作流的步骤，可以适当简化  \n用户输入查询日期 $\\Rightarrow$ 获取新浪财经新闻、APP评论等舆情数据 $\\Rightarrow$ 数据分析 $\\Righ",
        "id": 735,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 95,
        "length_tokens": 82,
        "text": "row$ 获取新浪财经新闻、APP评论等舆情数据 $\\Rightarrow$ 数据分析 $\\Rightarrow$ 生成词云图 （财经新闻中的热点词云，APP评论中的好评词云、差评词云） $\\Rightarrow$ 数据整合，生成日报（包含舆情整理、词云） $\\Rightarrow$ 生成PDF，给出PDF链接",
        "id": 736,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 95,
        "length_tokens": 0,
        "text": "",
        "id": 737,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 96,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 738,
        "type": "text",
        "file_name": "16.1-Coze进阶实战与插件开发"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "Dify部署与应用",
        "id": 0,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "Dify部署与应用",
        "id": 2,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 2,
        "length_tokens": 69,
        "text": "Dify开发平台Dify部署与使用  \nDify应用实战  \nCASE：LLM联网搜索  \nCASE: 搭建古诗词WorkFlow  \nCASE: 智能客服ChatFlow  \nCASE：智能文档分析助手(MinerU+Dify)  \n·如何应用Agent APl (Coze,Dify)",
        "id": 3,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "Dify开发平台",
        "id": 4,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 3,
        "length_tokens": 50,
        "text": "Dify是一个开源的LLM 应用开发平台。提供从Agent 构建到AIworkflow 编排、RAG 检索、模型管理等能力，轻松构建和运营生成式AI原生应用。",
        "id": 5,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 3,
        "length_tokens": 8,
        "text": "Dify提供五种应用类型：",
        "id": 6,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 3,
        "length_tokens": 136,
        "text": "·聊天助手：基于LLM构建对话式交互的助手。  \n·文本生成应用：面向文本生成类任务的助手，例如撰写故事、文本分类、翻译等。  \n·Agent：能够分解任务、推理思考、调用工具的对话式智能助手。  \n·对话流（Chatflow）：适用于设计复杂流程的多轮对话场景，支持记忆功能并能进行动态应用编排。  \n·工作流（Workflow）：适用于自动化、批处理等单轮生成类任务的场景的应用编排方式，单向生成结果。",
        "id": 7,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "Dify部署",
        "id": 8,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 24,
        "text": "Dify 的本地化部署主要有两种方式：DockerCompose部署（推荐）和源代码部署。",
        "id": 9,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 10,
        "text": "Thinking: 如何使用DockerCompose 进行部署？",
        "id": 10,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 34,
        "text": "Docker Compose 部署是通过 Docker 容器来运行 Dify的各个组件，隔离了环境依赖，部署和管理都相对简单。",
        "id": 11,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "前提条件:",
        "id": 12,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 35,
        "text": "·安装 Docker 和 Docker Compose:https://www.docker.com 选择适合操作系统的 Docker Desktop·安装Git:用于克隆 Dify的代码仓库。",
        "id": 13,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 4,
        "length_tokens": 99,
        "text": "Docker:是一个开源的应用容器引擎，可以将应用及其所有依赖打包到一个可移植的容器中$\\Rightarrow$ 保证了应用在任何环境中都能以相同的方式运行，简化了部署和管理。Docker Compose:是一个用于定义和运行多容器 Docker应用程序的工具。通过YAML文件配置应用服务，然后使用一条命令就能创建并启动所有服务。",
        "id": 14,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "Dify部署",
        "id": 15,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 11,
        "text": "Step1, 克隆Dify代码仓库 ",
        "id": 16,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 19,
        "text": "打开你的终端(Terminal)或命令行工具，执行以下命令：",
        "id": 17,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 13,
        "text": "git clone https://github.com/langgenius/dify.git ",
        "id": 18,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 20,
        "text": "Step2，进入Docker 目录并配置 cd dify/docker cp .env.example .env ",
        "id": 19,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 20,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 21,
        "text": "这一步会复制一个环境变量配置文件的模板。你需要根据自己的需求修改.env文件。",
        "id": 21,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "关键配置项包括：",
        "id": 22,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 5,
        "length_tokens": 76,
        "text": "·APP_URL:你的Dify访问地址，本地部署通常是http://localhost 或http://你的iP地址。  \n·数据库相关配置 (如果使用外部数据库)。默认情况下，它会使用Docker内置的数据库。  \n· 模型供应商的 API Keys (例如 OpenAl,Anthropic,Qwen 等)。这里需要配置你的API密钥。",
        "id": 23,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "Dify部署",
        "id": 24,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "Step3，启动 Dify 服务",
        "id": 25,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 16,
        "text": "在 dify/docker 目录下，执行以下命令来启动 Dify",
        "id": 26,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "docker compose up -d ",
        "id": 27,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "参数-d表示在后台运行。",
        "id": 28,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "Step4, 访问 Dify ",
        "id": 29,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 26,
        "text": "启动成功后，等待几分钟让所有服务完全启动。然后你就可以在浏览器中访问Dify了。",
        "id": 30,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 17,
        "text": "管理员初始化页面:首次访问http://你的IP地址/install来设置管理员账户。",
        "id": 31,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 6,
        "length_tokens": 21,
        "text": "Dify主页面:初始化完成后，访问http://你的IP地址即可开始使用 Dify。",
        "id": 32,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "Dify部署",
        "id": 33,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "Thinking: 如何更新 Dify?",
        "id": 34,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 7,
        "length_tokens": 16,
        "text": "在dify/docker目录下，拉取最新的代码和Docker镜像",
        "id": 35,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "git pull docker compose pull ",
        "id": 36,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "Thinking: 如何重新启动服务？",
        "id": 37,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "docker compose up -d ",
        "id": 38,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "如何使用Dify",
        "id": 39,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "Thinking: 如何使用Dify",
        "id": 40,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 15,
        "text": "使用公司的，或者自己本地部署的Dify，或者云服务",
        "id": 41,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "嗨，近来可好",
        "id": 42,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 14,
        "text": "如果您还没有初始化账户，请前往初始化页面设置管理员账户",
        "id": 44,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 15,
        "text": "http://119.45.39.201:8088/signin ",
        "id": 45,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 46,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "https://cloud.dify.ai/apps ",
        "id": 47,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 8,
        "length_tokens": 26,
        "text": "Cloud.dify.ai是由Dify提供的云服务，开箱即用，支持灵活的套餐和价格。",
        "id": 48,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "Chatflow与Workflow ",
        "id": 49,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 9,
        "length_tokens": 147,
        "text": "在 Dify平台中，Chatflow和Workflow 是两种核心的应用编排工具，它们分别服务于不同类型的AI应用场景。  \n·Chatflow(对话流)：专为构建交互式、多轮对话的AI应用而设计。它更侧重于模拟人类对话的模式，能够记忆上下文，并根据用户的输入进行多步骤的逻辑处理和回复。  \n·Workflow(工作流)：主要面向自动化、批处理或单次任务执行的场景。它适合处理那些不需要实时对话交互，但可能涉及复杂数据处理、分析、内容生成或与其他系统集成的任务。",
        "id": 50,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "Chatflow与Workflow ",
        "id": 51,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "Chatflow (对话流) ",
        "id": 52,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 25,
        "text": "，对话式交互：支持多轮对话，能够理解上下文，并根据之前的交流内容进行回应。",
        "id": 53,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 28,
        "text": "记忆能力(Memory)：内置对话历史记录功能，使得AI应用能够“记住”用户之前的发言。",
        "id": 54,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 25,
        "text": "动态响应：强调在对话过程中逐步构建和输出响应，可以使用户获得更自然的交流体验。",
        "id": 55,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 27,
        "text": "，专属节点：拥有如\"Answer\"(回复)节点，用于在流程的中间步骤流式输出文本内容。",
        "id": 56,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 37,
        "text": "·用户交互功能：通常包含开场白、下一步问题建议、文件上传（用于对话中）、引用归属等增强用户对话体验的功能。",
        "id": 57,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 10,
        "length_tokens": 30,
        "text": "适用场景：智能客服、语义搜索、AI助教、需要引导用户完成特定任务的对话机器人等。",
        "id": 58,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "CASE: 智能客服机器人",
        "id": 59,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "Chatflow (对话流) ",
        "id": 60,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 26,
        "text": "·对话式交互：支持多轮对话，能够理解上下文，并根据之前的交流内容进行回应。",
        "id": 61,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 28,
        "text": "记忆能力(Memory)：内置对话历史记录功能，使得AI应用能够“记住”用户之前的发言。",
        "id": 62,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 25,
        "text": "动态响应：强调在对话过程中逐步构建和输出响应，可以使用户获得更自然的交流体验。",
        "id": 63,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 27,
        "text": "，专属节点：拥有如\"Answer\"(回复)节点，用于在流程的中间步骤流式输出文本内容。",
        "id": 64,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 37,
        "text": "·用户交互功能：通常包含开场白、下一步问题建议、文件上传（用于对话中）、引用归属等增强用户对话体验的功能。",
        "id": 65,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 11,
        "length_tokens": 30,
        "text": "适用场景：智能客服、语义搜索、AI助教、需要引导用户完成特定任务的对话机器人等。",
        "id": 66,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "CASE：LLM联网搜索 ",
        "id": 67,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 68,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "TODO：LLM联网搜索 ",
        "id": 69,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 13,
        "length_tokens": 23,
        "text": "用户输入问题，AI提取关键字，使用Bing搜索，并进行总结Step1，创建工作流",
        "id": 70,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 71,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 9,
        "text": "获取TavilySearch APl Key ",
        "id": 72,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "1.申请Tavily Search APl Key ",
        "id": 73,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "https://tavily.com/ ",
        "id": 74,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "API Keys ",
        "id": 75,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 22,
        "text": "The keyis used to authenticate yourrequests to the ResearchAPI.To learn more,see the documentation page. ",
        "id": 76,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 77,
        "type": "table",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "2.在Dify中安装Tavily工具",
        "id": 78,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 5,
        "text": "Tavily { ",
        "id": 79,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 80,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 31,
        "text": "一个强大的原生AI搜索引擎和网页内容提取工具，提供高度相关的搜索结果和网页原始内容提取。",
        "id": 81,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "langgenius /tavily ",
        "id": 82,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "来自MARKETPLACE 7 ",
        "id": 83,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 9,
        "text": "3.对TavilySearch进行授权",
        "id": 84,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 14,
        "length_tokens": 43,
        "text": "TavilySearchAPI是一款强大的搜索工具，支持文本和图像搜索，具备多语言、高级筛选等功能。它专为开发者设计，可快速集成到应用中",
        "id": 85,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 86,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 6,
        "text": "梳理工作流：",
        "id": 87,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "·开始节点：input输入你要联网搜索的主题",
        "id": 88,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "LLM节点: ",
        "id": 89,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 21,
        "text": "系统提示词：对用户的问题，提取关键字，多个关键字用空格隔开",
        "id": 90,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "用户提示词： @开始/{x} input",
        "id": 91,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 92,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "CASE: LLM联网搜索 ",
        "id": 93,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "TavilySearch节点: ",
        "id": 94,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "查询 String Required ",
        "id": 95,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 13,
        "text": "查询变量：设置为前一个节点LLM输出的text",
        "id": 96,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "LLM/{x} text ",
        "id": 97,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "LLM 2节点: ",
        "id": 98,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 14,
        "text": "系统提示词：对网上搜索到的内容改进行总结整理",
        "id": 99,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "用户提示词：",
        "id": 100,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 11,
        "text": "{} Tavily Se... / {x} text ",
        "id": 101,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "·结束节点",
        "id": 102,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 16,
        "length_tokens": 21,
        "text": "输出变量output设置为LLM2节点的输出text output LLM 2/ text String ",
        "id": 103,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "CASE： LLM联网搜索 ",
        "id": 104,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "黄金价格和哪些因素有关",
        "id": 105,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 11,
        "text": "总结：黄金价格的影响因素及其未来走势",
        "id": 106,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 11,
        "text": "一、黄金价格的分析框架与影响因素",
        "id": 107,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "1.历史指标失效",
        "id": 108,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 74,
        "text": "·历史上有效的前瞻性和同步指标在当前周期中失效或出现背离，研究者重新审视和优化了分析框架。  \n·数据选取的时间段从1980年至2023年因数据长度充足且黄金市场化运作始于布雷顿森林体系崩溃后。",
        "id": 109,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 10,
        "text": "2.实际利率对金价的影响",
        "id": 110,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 58,
        "text": "·历史上实际利率在金价上涨周期中扮演重要角色，尤其是在降息周期和恶性通胀周期中。  \n·自2022年以来，实际利率对金价的指导意义逐渐减弱，相关性有所降低。",
        "id": 111,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 10,
        "text": "3.地缘政治与宏观环境变化",
        "id": 112,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 64,
        "text": "·逆全球化进程和俄乌地缘争议事件促使投资者重新配置资产，推动金价脱离传统经济周期，独立走强。·央行购金量激增，从每年400-600吨跃升至1000吨以上，成为主要需求来源。",
        "id": 113,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 10,
        "text": "4.通胀与货币因素 ",
        "id": 114,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 55,
        "text": "·通胀预期是金价上涨的重要催化剂，尤其是当通胀数据韧性较强时。  \n·美元与其他货币汇率变化、消费经济实力、货币政策等对金价有直接影响。",
        "id": 115,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "5.央行资产配置 ",
        "id": 116,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 67,
        "text": "·央行在资产配置时更注重汇率稳定性，黄金的低波动率和高流动性使其成为稳健配置的选择。  \n·央行持续购金对金价形成托底效应，特别是在流动性宽松或通胀快速扩张时。",
        "id": 117,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 9,
        "text": "二、黄金价格的历史与未来趋势",
        "id": 118,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "1.历史复盘与趋势判断",
        "id": 119,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 51,
        "text": "·从1949年到2024年的金价走势显示，黄金价格与美元走势呈负相关，与通胀高度正相关。  \n·2000年后全球央行停止随意出售黄金，金价逐步提升。",
        "id": 120,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "2.未来趋势预测 ",
        "id": 121,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 28,
        "text": "·预计金价未来可能突破2000美元/蛊司，甚至达到2500-3000美元/盎司。",
        "id": 122,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 46,
        "text": "·金价将在未来两年呈现震荡上行的趋势，回调幅度有限。  \n·底部支撑位预计在2500-2600美元，上线可能达到3000美元以上。",
        "id": 123,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "3.驱动因素",
        "id": 124,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 89,
        "text": "·经济不确定性：全球经济下行压力、贸易摩擦和地缘政治冲突可能推高避险需求。·美联储政策：美联储的加息或降息周期对美元强弱有直接影响，进而影响黄金价格。·央行购金：央行购金行为对金价形成支撑，尤其是在经济下行或通胀加剧时。",
        "id": 125,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "三、黄金价格的主要影响因素",
        "id": 126,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "1.供需关系",
        "id": 127,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 45,
        "text": "·黄金供给相对稳定，需求端受通胀、地缘政治、货币宽松政策等因素影响。·科技和电子行业对黄金的需求增长也是重要边际影响因素。",
        "id": 128,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "2.美元与货币汇率",
        "id": 129,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 17,
        "length_tokens": 23,
        "text": "·美元走强时，黄金价格通常承压；美元疲软时，黄金价格往往上涨。",
        "id": 130,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "打卡：LLM联网搜索",
        "id": 131,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "搭建一个LLM联网搜索工作流",
        "id": 132,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 18,
        "length_tokens": 30,
        "text": "掌握插件使用  \nTavilySearch网页搜索掌握大模型使用  \n对关键字进行总结  \n对网页搜索内容进行总结整理",
        "id": 133,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 19,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词工作流",
        "id": 134,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词工作流",
        "id": 135,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 10,
        "text": "TO DO：搭建古诗词Agent ",
        "id": 136,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "用户输入一句古诗，AI制作对应的图像",
        "id": 137,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "Step1，创建BOT",
        "id": 138,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "Step2，创建工作流",
        "id": 139,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 140,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 20,
        "length_tokens": 26,
        "text": "工作流：用于规划和实现复杂功能逻辑的工具，可以通过不同的任务节点来设计复杂的多步骤任务",
        "id": 141,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "Dify中的绘图工具",
        "id": 142,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 21,
        "length_tokens": 23,
        "text": "Dify本身并不直接提供绘图工具，但可以通过外部工具来实现绘图功能。",
        "id": 143,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "AI绘图工具",
        "id": 144,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 21,
        "length_tokens": 76,
        "text": "·Stable Diffusion：一个开源的Al绘图模型，可以通过Dify调用生成高质量的图像。·Flux：由Black Forest Labs开发的Al绘图模型，支持通过Dify调用生成图像。·DALL-E：Dify提供的第一方工具之一，可以通过自然语言输入生成高质量图片。自定义绘图工具",
        "id": 145,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 21,
        "length_tokens": 24,
        "text": "SiliconFlow：通过 SiliconCloud提供的API，可以在Dify中调用Flux或 Stable Difusion绘图模型",
        "id": 146,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 21,
        "length_tokens": 79,
        "text": "SiliconFlow是由硅基流动提供的基于开源模型的高性价比GenAI服务，这样就可以在Dify中调用Flux和StableDifusion等绘图模型  \n·申请 SiliconCloud APl Key  \n·在Dify 中配置 APl Key：在 Dify 的工具页中点击\"SiliconCloud $>$ 去授权\"",
        "id": 147,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词工作流",
        "id": 148,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "工作流步骤:",
        "id": 149,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "Step1.开始节点：input输入一句古诗词",
        "id": 150,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "Step2.LLM: 选择qwen-turbo ",
        "id": 151,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 18,
        "text": "·系统提示词：用户给你古诗词，请描绘一幅画面",
        "id": 152,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 5,
        "text": "·用户提示词：",
        "id": 153,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 5,
        "text": "开始/{x} input",
        "id": 154,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 13,
        "text": "Step3.LLM2: 选择qwen-turbo ",
        "id": 155,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 21,
        "text": "·系统提示词：将描述的内容翻译成英文，前面加上acientchina",
        "id": 156,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "·用户提示词： LLM/{x} text",
        "id": 157,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 158,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词工作流",
        "id": 159,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 26,
        "text": "Step4.使用flux工具 （基于SiliconFlow）提示词设置为前一节点LLM2的输出text",
        "id": 160,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "提示词 String Required ",
        "id": 161,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "LLM 2/{x} text ",
        "id": 162,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 14,
        "text": "建议用英文的生成图片提示词以获得更好的生成效果",
        "id": 163,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 17,
        "text": "Step5.结束节点 输出变量与前序节点FLUX的输出关联 ",
        "id": 164,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 2,
        "text": "输出变量",
        "id": 165,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 166,
        "type": "table",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词工作流",
        "id": 167,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "离离原上草",
        "id": 168,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 1,
        "text": "包",
        "id": 169,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 1,
        "text": "开始",
        "id": 170,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "68.220 ms ",
        "id": 171,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "LLM 2 ",
        "id": 172,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "232 tokens · 3.253 s ",
        "id": 173,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 3,
        "text": "FLUX ",
        "id": 174,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "10.891 s ",
        "id": 175,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 2,
        "text": "+ ",
        "id": 176,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 15,
        "text": "LLM 128 tokens $\\cdot$ 3.453 s ",
        "id": 177,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 2,
        "text": "数据处理",
        "id": 178,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 55,
        "text": "1 {  \n2 \"model_mode\":\"chat\",  \n3 \"prompts\":[  \n4 {  \n5 \"role\":\"system\"  \n6 \"text\"：\"用户给你古诗词，请描绘一  \n幅画面\",  \n7 \"files\":[]  \n8 Y",
        "id": 179,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 1,
        "text": "输出",
        "id": 180,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 3,
        "text": "K7 ",
        "id": 181,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "1   \n2 ",
        "id": 182,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 139,
        "text": "\"text\"：\"我看到一片辽阔的草原，绿草如茵，一望无际。微风吹过，青草随风摇曳，连绵起伏，仿佛绿色的波浪在原野上翻滚。尽管季节更替，严寒酷暑，这片草地依旧生机勃勃，展现出顽强的生命力。远山如黛，近处有几株大树点缀其中，牛羊在其间悠闲地吃草，一幅宁静而充满生命力的草原风光图跃然眼前，\"",
        "id": 183,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 3,
        "text": "1 K ",
        "id": 184,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 2,
        "text": "数据处理",
        "id": 185,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 58,
        "text": "1 {  \n2 \"model_mode\":\"chat\",  \n3 \"prompts\":[  \n4 {  \n5 \"role\":\"system\"  \n6 \"text\"：\"将描述的内容翻译成英文，  \n前面加上 acient china\",  \n7 \"files\":[]  \n8 }",
        "id": 186,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 1,
        "text": "输出",
        "id": 187,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 57,
        "text": "1 {   \n2 \"text\": \"acient china I see a vast grassland，with lush green grass stretching endlessly. A gentle breeze blows，and the green grass sways back and forth in rolling waves across the field.Despite seasonal changes and extreme weather this grassland remains ",
        "id": 188,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 1,
        "text": "输入",
        "id": 189,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 57,
        "text": "1< {   \n2 \"prompt\": \"acient china I see a vast grassland，with lush green grass stretching endlessly. A gentle breeze blows，and the green grass sways back and forth in rolling waves across the field. Despite seasonal changes and extreme weather this grassland ",
        "id": 190,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 1,
        "text": "输出",
        "id": 191,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 24,
        "length_tokens": 69,
        "text": "1 {   \n2 \"text\": ⅡI   \n3 \"files\":[   \n4 {   \n5 \"dify_model_identity\": '__dify__file__\"   \n6 \"id\": null,   \n7 \"tenant_id\": \"90df0h3d-e3h0-4rfd-9150-044p98 ",
        "id": 192,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 25,
        "length_tokens": 10,
        "text": "CASE: 搭建古诗词工作流",
        "id": 193,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "离离原上草",
        "id": 194,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "举头望明月",
        "id": 195,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 196,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 197,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "打卡：搭建古诗词助手",
        "id": 198,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 26,
        "length_tokens": 13,
        "text": "搭建一个自己的文生图工具，设置工作流：",
        "id": 199,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 26,
        "length_tokens": 10,
        "text": "图片描述节点翻译节点text2image节点",
        "id": 200,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 201,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 202,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 203,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 204,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "TODO：智能客服ChatFlow ",
        "id": 205,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 28,
        "length_tokens": 22,
        "text": "设置3个分类：营销专员 $^ +$ 投诉专员 $^ +$ 其他",
        "id": 206,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 28,
        "length_tokens": 62,
        "text": "·营销专员：配置证券知识库，实现对证券产品介绍、交易规则等高频问题的自动化解答；·投诉专员：配置了用户行为数据，用户标签，方便进一步查找关于用户行为、资产等情况，给用户提供产品使用中的问题解答",
        "id": 207,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 208,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 209,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "Step1，添加节点 $\\Rightarrow$ 问题分类器",
        "id": 210,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "选择模型：qwen-turbo-latest(Qwen3) ",
        "id": 211,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "分类1：营销咨询，证券知识",
        "id": 212,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 10,
        "text": "分类2：投诉处理，产品使用不成功",
        "id": 213,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "分类3：其他问题",
        "id": 214,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 52,
        "text": "Step2，添加知识检索 (针对分类1，设置下游节点)配置证券知识库 (该知识库需要先进行创建，再添加)查询变量 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 开始中的query",
        "id": 215,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "B × ",
        "id": 216,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 1,
        "text": "日",
        "id": 217,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "知识检索 ",
        "id": 218,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 219,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "获取证券相关知识 ",
        "id": 220,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "查询变量\\*",
        "id": 221,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 7,
        "text": "@开始／sys.query String ",
        "id": 222,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "知识库 \\*",
        "id": 223,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "召回设置+ ",
        "id": 224,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 225,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "证券知识库",
        "id": 226,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 29,
        "length_tokens": 7,
        "text": "高质量·向量检索",
        "id": 227,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 228,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "创建知识库：证券知识库",
        "id": 229,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "上传文本文件",
        "id": 230,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 231,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "选择对应的文件进行上传，可以是txt,pdf,或excel等格式",
        "id": 232,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "分段设置",
        "id": 233,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 234,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 2,
        "text": "通用",
        "id": 235,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 18,
        "text": "通用文本分块模式，检索和召回的块是相同的",
        "id": 236,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 237,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "文本预处理规则",
        "id": 238,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 2,
        "text": "√ ",
        "id": 239,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "替换掉连续的空格、换行符和制表符 ",
        "id": 240,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "删除所有URL和电子邮件地址",
        "id": 241,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "预览块 重置 ",
        "id": 242,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "父子分段",
        "id": 243,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 18,
        "text": "使用父子模式时，子块用于检索，父块用作上下文",
        "id": 244,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "索引方式",
        "id": 245,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 2,
        "text": "高质量",
        "id": 246,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 247,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 1,
        "text": "经济",
        "id": 248,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 27,
        "text": "调用嵌入模型处理文档以实现更精确的检索，可以帮助LLM生成高质量的答案。",
        "id": 249,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 29,
        "text": "每个数据块使用10个关键词进行检索，不会消耗任何tokens，但会以降低检索准确性为代价。",
        "id": 250,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 19,
        "text": "！ 使用高质量模式进行嵌入后，无法切换回经济模式。",
        "id": 251,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 44,
        "text": "·分段标识：对于结构不佳的文本，上传前预设强分隔符（而非仅依赖回车），能大幅提升初始分段的语义完整性。",
        "id": 252,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 68,
        "text": "·长度与重叠的设置：最大长度需匹配模型处理窗口，有时小而精的分段（尤其问答型）优于大段落；重叠虽保留上下文但增加成本，常见平衡点是 $1 0 - 2 0 \\%$ 。",
        "id": 253,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 30,
        "length_tokens": 38,
        "text": "·索引模式的思考：“高质量\"模式理解复杂语义更优，适合专业内容，但模式切换成本高 (需整个知识库重索引)",
        "id": 254,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 255,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 2,
        "text": "Embedding模型",
        "id": 256,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 257,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "text-embedding-v1 ",
        "id": 258,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "检索设置 ",
        "id": 259,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 21,
        "text": "了解更多关于检索方法，您可以随时在知识库设置中更改此设置。",
        "id": 260,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 261,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "向量检索",
        "id": 262,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 21,
        "text": "通过生成查询嵌入并查询与其向量表示最相似的文本分段",
        "id": 263,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "Rerank模型",
        "id": 264,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 1,
        "text": "女",
        "id": 265,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "gte-rerank ",
        "id": 266,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 267,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 2,
        "text": "E ",
        "id": 268,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "全文检索",
        "id": 269,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 27,
        "text": "索引文档中的所有词汇，从而允许用户查询任意词汇，并返回包含这些词汇的文本片段",
        "id": 270,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 271,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "混合检索",
        "id": 272,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 2,
        "text": "推荐 ",
        "id": 273,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 42,
        "text": "同时执行全文检索和向量检索，并应用重排序步骤，从两类查询结果中选择匹配用户问题的最佳结果，用户可以选择设置权重或配置重新排序模型。",
        "id": 274,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 54,
        "text": "·Embedding模型选择：选定并索引后，若想更换 Embedding模型，整个知识库需重新向量化，成本高。模型质量直接决定后续向量检索和混合检索的语义理解上限。",
        "id": 275,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 64,
        "text": "· Rerank 是\"精炼器\"而非万能药：启用 Rerank 模型（如gte-rerank）能显著提升相关性排序，但也增加检索延迟和计算成本。并非所有场景都追求极致精度，需权衡。",
        "id": 276,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 32,
        "text": "·Score 阀值的设定：Score的选择因所选Embedding模型而异不存在通用\"最佳值\"，需针对性调优。",
        "id": 277,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 46,
        "text": "·全文检索的作用：它能精准命中向量检索可能遗漏的特定术语、代码片段或专有名词，是语义模糊匹配的有力补充。",
        "id": 278,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 31,
        "length_tokens": 56,
        "text": "·混合检索的\"融合艺术”：优势在于结合向量与全文，但效果好坏很大程度取决于结果的\"融合与重排序\"策略。Dify支持权重调整，为用户提供了个性化调优手段。",
        "id": 279,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 280,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 15,
        "text": "Step3，添加LLM (知识检索下游节点) ",
        "id": 281,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "模型： qwen-turbo-latest(Qwen3)",
        "id": 282,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 5,
        "text": "Sytem提示词：",
        "id": 283,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 21,
        "text": "使用以下上下文作为你所学习的知识，放在<context></context>XML标签内。",
        "id": 284,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "<context> ",
        "id": 285,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 6,
        "text": "{#context#}} ",
        "id": 286,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "</context> ",
        "id": 287,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 5,
        "text": "当回答用户时：",
        "id": 288,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "添加直接回复 (LLM节点下游节点）",
        "id": 289,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 42,
        "text": "如果你不知道，就说你不知道。如果你不确定时不知道，寻求澄清。  \n避免提及你从上下文中获取的信息。  \n并根据用户问题的语言进行回答。",
        "id": 291,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 292,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 32,
        "length_tokens": 21,
        "text": "针对于营销问题，直接从证券知识库中进行检索，让LLM进行推理回答",
        "id": 293,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 294,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 7,
        "text": "Step4，添加LLM节点",
        "id": 295,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 23,
        "text": "针对投诉处理，进行关键信息提取，方便后续从用户数据中提取相关信息",
        "id": 296,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 4,
        "text": "System提示词：",
        "id": 297,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 4,
        "text": "User提示词：",
        "id": 298,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 24,
        "text": "你是一个智能信息提取助手你的任务是从用户提供的文本中准确地提取以下信息：",
        "id": 299,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "@ 开始/{x} sys.query",
        "id": 300,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 78,
        "text": "1.user_id:用户的唯一标识符。  \n2.event_time:事件发生的时间，改成日期格式  \n3.event_type:事件类型，包括：查看持仓、浏览产品、搜索、登录、委托交易、推送点击、查看行情、集合竞价、咨询客服、风险警示、查看收益、浏览广告、推送未读。",
        "id": 301,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 51,
        "text": "请严格按照以下格式输出你提取到的信息，即user_id: {user_id},event_time: {event_time}, event_type: {event_type}如果某个信息在用户文本中没有找到，请将对应的值设为null",
        "id": 302,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 303,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 304,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "Step5，添加知识检索节点",
        "id": 305,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 34,
        "length_tokens": 51,
        "text": "针对提取的用户信息（user_id,event_type,  \nevent_time）等，从数据表中进行检索  \n这里需要创建用户知识 （知识库），并添加  \n上传相关的Excel:  \nuser_behavior_event.xlsx  \nuser_tag.xlsx",
        "id": 306,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 307,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 34,
        "length_tokens": 28,
        "text": "因为数据为Excel，建议采用混合检索，即语义 $^ +$ 关键词同时适当增加TopK的范围",
        "id": 308,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 309,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 22,
        "text": "Step6，设置LLM  \n基于前面检索出来的用户数据，进行回答  \n模型",
        "id": 310,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 13,
        "text": "qwen-turbo-latest(Qwen3) CHAT) ",
        "id": 311,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "上下文 $\\textcircled{3}$ ",
        "id": 312,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "四知识检索／result Array[Object]",
        "id": 313,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "USER $\\textcircled{3}$ ",
        "id": 314,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 14,
        "text": "15{x} 门 k1@ 开始/{x} sys.query",
        "id": 315,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 316,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 33,
        "text": "将检索出来的用户数据，放到Prompt中进行推理，因为检索出来的数据可能不仅是该用户的，所以通过LLM进行筛选",
        "id": 317,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "System提示词：",
        "id": 318,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "#角色定位：",
        "id": 319,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "-专业投诉处理顾问",
        "id": 320,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "#背景：",
        "id": 321,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 16,
        "text": "需通过共情语言安抚客户情绪，积极解决问题。",
        "id": 322,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 13,
        "text": "需核查关键信息，确保问题准确定位。",
        "id": 323,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "#目标: ",
        "id": 324,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 35,
        "length_tokens": 116,
        "text": "1.回应话术：以共情安抚客户，表达积极解决态度。  \n2.反馈你从数据库中查询到的情况（你需要筛选使用与该用户user_id匹配的信息，并告诉用户相关的情况，说明具体的event_detail。与该user_id无关信息不要回答)  \n3.针对用户的问题给出建议  \n4.回答文字简洁，通常不超过200字  \n#以下是从用户数据库中检索出的信息，需要筛选对应的user_id数据{#context#}}",
        "id": 325,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 326,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "Step7，设置直接回复",
        "id": 327,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "将LLM推理的结果，回复给用户 ",
        "id": 328,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 2,
        "text": "0 ",
        "id": 329,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 2,
        "text": "直接回复",
        "id": 330,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "B .0. × ",
        "id": 331,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "添加描述..",
        "id": 332,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "回复LLM/{x} text",
        "id": 333,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "24 {x} □ ",
        "id": 334,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "对于分类3，即其他问题",
        "id": 335,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 11,
        "text": "回复：抱歉，这些问题我无法回答。",
        "id": 336,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 337,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 338,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 339,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "什么是竞价盘？",
        "id": 340,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "可以在上海证券交易所挂牌交易有哪些？",
        "id": 341,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 342,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 70,
        "text": "竞价盘是指在证券竞价交易中，投资者提交的没有指定价格的买卖申报。这种申报会按照最终参考平衡价格进行撮合，并且在对盘时优先于竞价现价盘。未完成的竞价盘会在持续交易时段开始前自动取消。",
        "id": 343,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 1,
        "text": "引用",
        "id": 344,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 23,
        "text": "港股交易规则介绍.pdf +1根据相关规定，可以在上海证券交易所挂牌交易的证券包括：",
        "id": 345,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 346,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 60,
        "text": "(一) 股票；  \n（二） 基金;  \n（三) 债券;  \n（四） 债券回购;  \n(五) 权证;  \n(六) 存托凭证;  \n(七) 经证监会批准的其他交易品种。",
        "id": 347,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 1,
        "text": "引用",
        "id": 348,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 37,
        "length_tokens": 7,
        "text": "上海证券交易所交易规则.pdf",
        "id": 349,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "CASE: 智能客服ChatFlow ",
        "id": 350,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 23,
        "text": "我的用户id:7501690985227960354，我在5月4日登录了软件但是没有成功",
        "id": 351,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 72,
        "text": "您好，关于您的用户ID：  \n7501690985227960354，我们查到您在5月4日10:05:00尝试通过\"面容ID登录\"，但系统未记录成功登录事件。建议检查设备面容ID是否正常，或尝试使用其他登录方式。如仍无法解决，请联系客服进一步协助。",
        "id": 352,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 1,
        "text": "引用",
        "id": 353,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "user_behavior_event.xlsx user_behavior_event.xlsx ",
        "id": 354,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 355,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "#7 ",
        "id": 356,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 45,
        "text": "event time\":\"2025-05-04 10:05:0o\";\"event_type\":\"登录\";\"event_detail\":\"面容 ID登录\";\"user_id\":\"7501690985227960354\" ",
        "id": 357,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 12,
        "text": "107 3 d593c92 0.7 ",
        "id": 358,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "#14 ",
        "id": 359,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 73,
        "text": "event time\":\"2025-05-04   \n18:30:0o\";\"event_type\":\"登录\";\"event_detail\":\"密码   \n登录（上次登录7天   \n前）\";\"user_id\":\"7501690675818315816\"   \n114 $\\textcircled { < }$ 25 Ae8066df 0.63 ",
        "id": 360,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "#19 ",
        "id": 361,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 38,
        "length_tokens": 72,
        "text": "event time\":\"2025-05-04   \n09:30:0o\";\"event_type\":\"登录\";\"event_detail\":\"通过   \n手机验证码登   \n录\";\"user id\":\"7501691024880730112\"   \n110 （204号 $\\textcircled { < }$ 16 067c9da 0.62 ",
        "id": 362,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 39,
        "length_tokens": 9,
        "text": "打卡： 智能客服ChatFlow",
        "id": 363,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "使用chatFlow模式，设置意图识别",
        "id": 364,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 39,
        "length_tokens": 87,
        "text": "·营销咨询、证券知识：配置证券知识库，实现对证券产品介绍、交易规则等高频问题的自动化解答;  \n·投诉处理、产品使用不成功：配置了用户行为数据，用户标签，方便进一步查找关于用户行为、资产等情况，给用户提供产品使用中的问题解答  \n数据准备：  \n·证券知识库  \n·数据表:user_tag,user_behavior_event",
        "id": 365,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 366,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 367,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 7,
        "text": "CASE：智能文档分析助手",
        "id": 368,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 45,
        "text": "用户上传一份包含复杂图表、公式和多栏排版的科研论文PDF，望针对论文中的内容进行提问。Step1.在Dify中创建应用，比如：智能文档分析助手",
        "id": 369,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "Step2.集成Mineru作为工具",
        "id": 370,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 55,
        "text": "将 Mineru封装成一个Dify可以调用的工具。即将 Mineru 的核心功能（PDF 解析和内容提取）通过API暴露出来。  \n当用户上传 PDF文件时，Dify 应用会首先调用 Mineru工具。",
        "id": 371,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "Step3.Dify利用LLM进行回答",
        "id": 372,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 28,
        "text": "MinerU处理后的高质量文本被返回给Dify应用 $\\Rightarrow$ 作为上下文信息，传递给LLM",
        "id": 373,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 41,
        "length_tokens": 37,
        "text": "用户提问：论文中的实验结果有哪些？LLM 基于Mineru提取的文本内容，更准确地在文档上下文中找到相关知识，并进行回答。",
        "id": 374,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 375,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "Step1，设置用户上传的变量uploaded_pdf,user_question ",
        "id": 376,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 42,
        "length_tokens": 19,
        "text": "Step2，添加MinerU插件，解析用户的uploaded_pdf $\\Rightarrow$ 输出text",
        "id": 377,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 42,
        "length_tokens": 8,
        "text": "Step3，使用LLM进行回答",
        "id": 378,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "Step4，将LLM回答的结果，返回给用户 ",
        "id": 379,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 380,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 381,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 8,
        "text": "Step1，设置用户上传的变量",
        "id": 382,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 6,
        "text": "变量名称：uploaded_pdf ",
        "id": 383,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "显示名称：请上传PDF文件",
        "id": 384,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "选择单文件类型，然后选择文档类型",
        "id": 385,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 15,
        "text": "变量名称：user_question显示名称：请输入您的问题最大长度：100",
        "id": 386,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 2,
        "text": "编辑变量",
        "id": 387,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 388,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 389,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 390,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 7,
        "text": "Step2，添加MinerU插件",
        "id": 391,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 6,
        "text": "这里使用MinerU官方API",
        "id": 392,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 10,
        "text": "Base URL: http://mineru.net/ ",
        "id": 393,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 13,
        "text": "令牌token获取 https://mineru.net/apiManage/token ",
        "id": 394,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 395,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "Min Parse File ",
        "id": 396,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 3,
        "text": "添加描述...",
        "id": 397,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 3,
        "text": "设置授权 ",
        "id": 398,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 2,
        "text": "× ",
        "id": 399,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 22,
        "text": "配置凭据后，工作区中的所有成员都可以在编排应用程序时使用此工具。",
        "id": 400,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 8,
        "text": "MinerU服务的BaseURL \\*",
        "id": 401,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 6,
        "text": "https://mineru.net ",
        "id": 402,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 2,
        "text": "令牌",
        "id": 403,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 31,
        "text": "eyJ0eXBIljoiSldUliwiYWxnljoiSFM1MTlifQ.eyJqdGkiC ",
        "id": 404,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 2,
        "text": "如何获取",
        "id": 405,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "服务类型\\*",
        "id": 406,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "MinerU官方API",
        "id": 407,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 408,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "Step3， 使用LLM进行回答",
        "id": 409,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "模型：qwen-turbo ",
        "id": 410,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "SYSTEM提示词：",
        "id": 411,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 20,
        "text": "你是一个论文助手，下面是论文的全文，你需要基于用户的问题进行回答。",
        "id": 412,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 15,
        "text": "用户上传的论文： {x} Parse File/ {x} text",
        "id": 413,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "USER提示词：",
        "id": 414,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "@开始/{x}user_question ",
        "id": 415,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 17,
        "text": "Step4， 设置结束节点 output $= L L M$ 的输出text ",
        "id": 416,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 2,
        "text": "结束 ",
        "id": 417,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "1 … X ",
        "id": 418,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 3,
        "text": "添加描述...",
        "id": 419,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 420,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 421,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 6,
        "text": "使用智能文档分析助手",
        "id": 422,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 12,
        "text": "上传INTERNVIDEO2.5.pdf，然后提问：",
        "id": 423,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 6,
        "text": "论文的实验结果怎么样？",
        "id": 424,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "Test Run ",
        "id": 425,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 9,
        "text": "输入 结果 详情 追踪 ",
        "id": 426,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 4,
        "text": "请上传PDF文件",
        "id": 427,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 428,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 5,
        "text": "Test Run#1 ",
        "id": 429,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 430,
        "type": "table",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 10,
        "text": "MinerU节点的运行时间相对较长",
        "id": 431,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 5,
        "text": "Min PARSEFILE ",
        "id": 432,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "2 m 43.154 s ",
        "id": 433,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 4,
        "text": "输入 □ K ",
        "id": 434,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 73,
        "text": "1 {   \n2 \"file\":{   \n3 \"dify_model_identity\": __dify__file_'   \n4 \"id\": null,   \n5 \"tenant_id\": \"90df0b3d-e3b0-4cfd-9150-044e98e98c cf\",   \n6 \"tvne\":\"dnrument\" ",
        "id": 435,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 1,
        "text": "输出",
        "id": 436,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 46,
        "length_tokens": 106,
        "text": "1 {  \n2 \"text\": \"# INTERNVIDEO2.5:EMPOWERING VIDEO MLLMS WITH LONGAND RICH CONTEXT MODELING \\n\\nYiWang\\*1，Xinhao \\$\\\\mathbf { L i }^$\\{ \\ * \\ 2$ 1 }\\$ ，Ziang \\$\\\\mathbf { Ya \\* 1 } }\\$ ，Yinan \\$\\\\mathbfH = 1 }}\\$ ，Jiashuo\\$l\\mathhf √}\\\\mathhf{ }>{",
        "id": 437,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "CASE: 智能文档分析助手",
        "id": 438,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "结束节点的输出结果：",
        "id": 439,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 47,
        "length_tokens": 162,
        "text": "\"output\":\"论文中的实验结果显示，InternVideo2.5在各种视频理解基准测试中达到了最先进的性能。具体来说，在大约7B模型规模的情况下，InternVideo2.5在多个短片和长片视频问答基准测试中几乎达到了领先地位。与基础模型InternVL2.5相比，InternVideo2.5无论是在短片还是长片预测上都有总体上的提升。特别是在处理短片时，InternVideo2.5在MVBench和Perception Test上的提升超过了3个百分点。对于长片视频的理解，虽然整体趋势仍在上升，但在不同的基准测试中变化有所不同。例如，在EgoSchema、MLVU和LVBench上的提",
        "id": 440,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 47,
        "length_tokens": 100,
        "text": "在上升，但在不同的基准测试中变化有所不同。例如，在EgoSchema、MLVU和LVBench上的提升较为显著，而在LongVideoBench和VideoMME(无子任务)上的提升相对较小。此外，InternVideo2.5还展示了增强的视觉能力，如物体跟踪等，证明了长且丰富的上下文（LRC）在提高基本视觉任务和高层次推理方面的有效性。\"",
        "id": 441,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 48,
        "length_tokens": 10,
        "text": "打卡： 智能文档分析助手",
        "id": 442,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 48,
        "length_tokens": 18,
        "text": "在Dify工作流中使用MinerU，对于用户上传的PDF进行精细解析",
        "id": 443,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 48,
        "length_tokens": 43,
        "text": "掌握MinerU插件使用  \nBase URL: http://mineru.net/  \n令牌token获取 https://mineru.net/apiManage/token  \n·将文档内容作为上下文，进行LLM回答",
        "id": 444,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 49,
        "length_tokens": 10,
        "text": "如何应用Agent API(Coze, Dify)",
        "id": 445,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "Coze API使用",
        "id": 446,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 51,
        "length_tokens": 42,
        "text": "cozepy 是 Coze平台官方提供的Python SDK，用于与Coze 智能体进行API交互。它支持同步和异步调用、流式输出、分页查询等功能",
        "id": 447,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 51,
        "length_tokens": 7,
        "text": "Step1. 获取 API Token ",
        "id": 448,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 51,
        "length_tokens": 44,
        "text": "· 访问 https://www.coze.cn/open/oauth/pats  \n登录账户  \n·创建个人访问令牌 (Personal Access Token)  \n·设置适当的权限和过期时间  \n复制生成的token",
        "id": 449,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 450,
        "type": "table",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "cozepy工具",
        "id": 451,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "Step2.获取智能体ID ",
        "id": 452,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 7,
        "text": "1.进入智能体详情页面",
        "id": 453,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 50,
        "text": "2.从URL中提取智能体ID   \n比如   \nhttps://www.c0ze.cn/store/agent/7507272032905199655?   \nbot_id=true   \n智能体ID 就是7507272032905199655 ",
        "id": 454,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 32,
        "text": "coze.cn/store/agent/7507272032905199655?bot_id=true&bid=6gbvma4fk1g0b ",
        "id": 455,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 5,
        "text": "cystanford ",
        "id": 456,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 5,
        "text": "离离原上草",
        "id": 457,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 10,
        "text": "古诗词绘画Agent 12:17",
        "id": 458,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "开始调用工作流",
        "id": 459,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 40,
        "text": "“离离原上草”描绘出一幅广袤而充满生机的原野画面，以下从不同维度为你呈现其具体场景：",
        "id": 460,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 5,
        "text": "整体画面印象",
        "id": 461,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 118,
        "text": "在一片辽阔无垠的原野之上，视线所及之处，皆是连绵不绝的青草。它们肆意地生长着，与远处的天际线相接，形成了一幅宏大而又和谐的自然画卷。整个原野仿佛被一层绿色的绒毯所覆盖，在阳光的照耀下，闪烁着灵动的光芒，给人以生机勃勃、充满希望之感。",
        "id": 462,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "近景特写",
        "id": 463,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 151,
        "text": "蹲下身子靠近这些青草，能看到一株株草茎笔直而坚韧，从肥沃的土地中茁壮地挺立起来。草叶细长而翠绿，上面还挂着清晨的露珠，在阳光的折射下宛如晶莹剔透的珍珠，摇摇欲坠。微风拂过，草叶轻轻摇曳，相互摩挲，发出沙沙的声响，仿佛在低声诉说着生命的故事。每一片草叶都充满了生命力，它们努力地伸展着，向着天空汲取阳光和雨露",
        "id": 464,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "$\\circledcirc$ 停止响应",
        "id": 465,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 6,
        "text": "Step3.初始化客户端 ",
        "id": 466,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 20,
        "text": "import os   \nfrom cozepy import Coze, TokenAuth,   \nCOZE_CN_BASE_URL ",
        "id": 467,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 75,
        "text": "#配置参数 coze_api_token $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"your_api_token_here\" coze_bot_id $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"your_bot_id_here\" coze_api_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ COZE_CN_BASE_URL ",
        "id": 468,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 51,
        "text": "#初始化客户端  \n$\\mathtt { c o z e } = \\mathtt { C o z e ( \\xi }$ auth $\\ c =$ TokenAuth(token=coze_api_token),base_url $\\ c =$ coze_api_base  \n）",
        "id": 469,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 16,
        "text": "普通聊天：使用‘create_and_poli可以简化非流式聊天",
        "id": 470,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 84,
        "text": "from cozepy import ChatStatus   \n# 普通聊天示例   \nchat_poll $\\mathbf { \\tau } = \\mathbf { \\tau }$ coze.chat.create_and_poll( bot_id $\\ c =$ \"your_bot_id\", user_id=\"user_123\", additional_messages $\\ c =$ [Message.build_user_question_text(\"你好   \n\")]   \n）   \nif chat_poll.chat.status $\\scriptstyle = =$ ChatS",
        "id": 471,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 53,
        "length_tokens": 51,
        "text": "\nif chat_poll.chat.status $\\scriptstyle = =$ ChatStatus.COMPLETED: for message in chat_poll.messages: if message.role $\\scriptstyle = =$ \"assistant\" and message.content: print(f\"智能体回复: {message.content}\") ",
        "id": 472,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "cozepy工具",
        "id": 473,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 54,
        "length_tokens": 6,
        "text": "流式聊天 (推荐)",
        "id": 474,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 54,
        "length_tokens": 20,
        "text": "from cozepy import Coze, TokenAuth,Message, ChatEventType, MessageContentType ",
        "id": 475,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 54,
        "length_tokens": 64,
        "text": "#流式聊天示例   \nfor event in coze.chat.stream( bot_id $= ^ { 1 }$ 'your_bot_id\", user_id $\\ c =$ \"user_123\",   \nadditional_messages $\\ c =$ [Message.build_user_question_text(\"   \n你好，请介绍一下你自己\")]   \n）： ",
        "id": 476,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 54,
        "length_tokens": 64,
        "text": "if event.event $\\scriptstyle = =$ ChatEventType.CONVERSATION_MESSAGE_DELTA: if (hasattr(event.message,'content') and event.message.content and hasattr(event.message.content, 'type') and event.message.content.type $\\scriptstyle = =$ MessageContentType.TEXT): print(event.message.content.text, end $\\ c",
        "id": 477,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 54,
        "length_tokens": 59,
        "text": ".TEXT): print(event.message.content.text, end $\\ c =$ \"\",flush $\\ c =$ True) elif isinstance(event.message.content, str): print(event.message.content, end $\\ c =$ \"\",flush $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ True) ",
        "id": 478,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 13,
        "text": "CASE: 古诗词绘画 (Coze API) ",
        "id": 479,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 46,
        "text": "TO DO: 古诗词绘画Coze APl（Python客户端）基于cozepy库开发Coze 智能体Step1.在‘config.py'文件中配置Coze APl信息：",
        "id": 480,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 84,
        "text": "# Coze APi 配置 COZE_API_TOKEN $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"您的_Coze_API_Token\" COZE_BOT_ $| \\mathsf { D } = \"$ 您的_智能体_ID\" COZE_CN_BASE_URL $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"https://api.coze.cn\" ",
        "id": 481,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "Step2.设置流式接收回复",
        "id": 482,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 22,
        "text": "for chunk in client.chat_stream(\"离离原上草\"): print(chunk, end=\"\", flush=True) ",
        "id": 483,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 47,
        "text": "Coze智能体交互式聊天启动！输入‘quit'或‘exit'退出程序输入‘stream’切换到流式模式输入‘normal’切换到普通模式输入 'info'查看智能体信息",
        "id": 484,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 66,
        "text": "Coze客户端初始化成功API地址: https://api.coze.cn智能体ID: 7507272032905199655智能体名称：古诗词绘画Agent智能体描述：古诗词绘画Agent[普通]请输入您的问题：stream$\\boxtimes$ 已切换到流式模式",
        "id": 485,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 486,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 13,
        "text": "CASE: 古诗词绘画 (Coze API) ",
        "id": 487,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 20,
        "text": "[流式］请输入您的问题：离离原上草用户：离离原上草",
        "id": 488,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 489,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 47,
        "text": "$\\ast$ 智能体：开始调用工作流“离离原上草\"描绘出一幅生动且富有生命力的草原画面，以下从不同角度为你详细描述：",
        "id": 490,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 6,
        "text": "### 整体印象",
        "id": 491,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 84,
        "text": "在广袤无垠的大地上，一片连绵起伏的草原映入眼帘。目之所及，皆是随风摇曳的青草，它们像是大地铺开的绿色绒毯，一直 延伸到天际，与湛蓝的天空相接，形成了一幅壮阔而和谐的自然画卷。",
        "id": 492,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 6,
        "text": "### 近景特写",
        "id": 493,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 132,
        "text": "凑近细看，每一株草都充满着勃勃生机。它们茎干细长而坚韧，从土地中挺拔而出，大约有半人多高。叶片狭长而翠绿，上面 还挂着清晨的露珠，在阳光的映照下，宛如晶莹剔透的珍珠，闪烁着细碎的光芒。微风拂过，草叶相互摩挲，发出沙沙的声响，仿佛在轻声诉说着生命的故事。",
        "id": 494,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 5,
        "text": "### 中景展现",
        "id": 495,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 129,
        "text": "视野稍微拉远一些，可以看到草原上的草一丛接着一丛，紧密而有序地生长着。它们高低错落，有的草尖微微弯曲，像是在向 大地致敬；有的则昂首挺立，尽情享受着阳光的照耀。草丛中偶尔夹杂着一些不知名的野花，红的、黄的、紫的，星星点点地 散布其中，为这片绿色的海洋增添了一抹绚丽的色彩。",
        "id": 496,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 7,
        "text": "### 远景概览 ",
        "id": 497,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 134,
        "text": "站在高处眺望，整个草原就像一片绿色的波涛，连绵不绝。草原的边缘与远处的山峦相连，青山与绿草相互映衬，构成了一幅 如诗如画的美景。天空中，洁白的云朵悠悠飘荡，与地上的青草相互呼应，让人心旷神怡。偶尔有一群牛羊在草原上悠闲地吃草，它们的身影点缀在这片绿色之中，更增添了一份宁静与祥和。",
        "id": 498,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 71,
        "text": "“离离原上草\"所描绘的画面，不仅展现了大自然的壮美与生机，也让人感受到了生命的顽强与不息。Acient china \"The lush grass on the plain\" depicts a vivid and vibrant grassland scene.The following provides a detailed description from different perspectives: ",
        "id": 499,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 4,
        "text": "### Overall Impression ",
        "id": 500,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 67,
        "text": "On the vast and boundless land,a rolling grassland comes into view.As far as the eye can see， there are gr en grasses swaying in the wind.They are like a green carpet spread out by the earth，stretching all the wa y to the horizon and meeting the deep - blue sky， forming a magnificent and harmonious ",
        "id": 501,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 13,
        "text": " - blue sky， forming a magnificent and harmonious natural picture. ",
        "id": 502,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 6,
        "text": "### Close - up View ",
        "id": 503,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 67,
        "text": "Taking acloser look，each blade of grass is full of vitality. Their stems are slender and tough，standing u pright from the soil，about half a person's height.The leaves are long， narrow and emerald - green，with th e morning dew still hanging on them.In the sunlight， they are like glittering pearls， tw",
        "id": 504,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 51,
        "text": " the sunlight， they are like glittering pearls， twinkling with tiny r ays of light. When the gentle breeze blows， the grass leaves rub against each other， making a rustling sound ，as if softly telling the story of life. ",
        "id": 505,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 67,
        "text": "### Medium - distance View   \nPulling the view back a bit，one can see that the grass on the prairie grows in clusters，closely and orderl upright，fully enjoying the sunlight.Occasionally，there are some unknown wildflowers mixed among the gras   \nS clusters.Red，yellow，and purple，they are scattered her",
        "id": 506,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 27,
        "text": "sters.Red，yellow，and purple，they are scattered here and there，adding a splash of gorgeous color to this green ocean. ",
        "id": 507,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 5,
        "text": "### Distant View ",
        "id": 508,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 62,
        "text": "Looking out froma high place，the entire grassland is like a continuous green wave.The edge of the grassla nd is conected to the distant mountains.The green mountains and the lush grass complement each other，form ing a picturesque scenery.In the sky， white clouds float leisurely，echoing the grass on ",
        "id": 509,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 55,
        "text": "white clouds float leisurely，echoing the grass on the ground，making people feel relaxed and happy.Occasionally，a group of cattle and sheep are grazing leisurely on the grass land.Their figures are dotted in this green expanse，adding more tranquility and peace. ",
        "id": 510,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 55,
        "text": "The picture depicted by \"The lush grasson the plain\" not only shows the grandeur and vitality of nature but also makes people feel the tenacity and endlessness of life.![The image](https://s.coze.cn/t/lThZvuoyR_o/) ",
        "id": 511,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 25,
        "text": "根据你提供的古诗词“离离原上草\"，我已经完成绘画并展示了图像。",
        "id": 512,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 513,
        "type": "image",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 57,
        "length_tokens": 7,
        "text": "打卡：Coze API调用",
        "id": 514,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 57,
        "length_tokens": 17,
        "text": "找到你之前完成的Coze智能体，比如：古诗词绘画Agent",
        "id": 515,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 57,
        "length_tokens": 11,
        "text": "掌握cozepy工具使用调用Coze API",
        "id": 516,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 57,
        "length_tokens": 54,
        "text": "Step1.获取APIToken  \nStep2.获取智能体ID  \nStep3.初始化客户端  \nStep4.使用普通聊天或者流式聊天进行对话  \n可以在Coze智能体中，添加输出节点，增加交互的体验感",
        "id": 517,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 58,
        "length_tokens": 4,
        "text": "Dify API使用",
        "id": 518,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 4,
        "text": "Dify API使用",
        "id": 519,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 22,
        "text": "API密钥(APIKey):每个应用都会生成一个或多个API密钥，用于身份验证。",
        "id": 520,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 15,
        "text": "APIBaseURL:每个应用都有一个基础的API访问地址。",
        "id": 521,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 29,
        "text": "API端点(Endpoints):Dify为不同类型的应用和操作提供了不同的 API端点。最常见的包括：",
        "id": 522,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 21,
        "text": "·聊天(ChatMessages):用于与对话型应用进行交互，发送消息并获取回复。",
        "id": 523,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 26,
        "text": "·文本补全(Completion Messages):用于与文本生成类应用进行交互，提供输入并获取生成的文本。",
        "id": 524,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 30,
        "text": "·工作流执行(Workflow Execution):如果应用是基于工作流构建的，可以通过APl触发工作流并获取结果。",
        "id": 525,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 11,
        "text": "Thinking: 如何创建Dify应用的API Key?",
        "id": 526,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 4,
        "text": "API密钥 ",
        "id": 527,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 29,
        "text": "如果不想你的API被滥用，请保护好你的APIKey:)最佳实践是避免在前端代码中明文引用。",
        "id": 528,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 59,
        "length_tokens": 28,
        "text": "进入应用 $\\Rightarrow$ 访问 $\\mathsf { A P l } \\Rightarrow$ 右上角API秘钥 ",
        "id": 529,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 4,
        "text": "DifyAPI使用",
        "id": 530,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 37,
        "text": "F— dify_agent_client.py #主要客户端类├— dify_workflow_example.py #工作流示例F— requirements.txt #依赖包README.md #使用说明",
        "id": 531,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 39,
        "text": "dify_agent_client.py使用了difyapi的封装，方便用于其他项目  \ndify_workflow_example.py 实现了LLM联网搜索的workflow调用，用于演示",
        "id": 532,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 9,
        "text": "客户端类 (DifyAgentClient) ",
        "id": 533,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 89,
        "text": "class DifyAgentClient: def __init__(self, base_url: str,api_key: str): self.base_url $\\mathbf { \\tau } = \\mathbf { \\tau }$ base_url.rstrip('/\") self.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ api_key self.headers $= \\{$ 'Authorization': f'Bearer {api_key}' 'Content-Type': 'application/json', 'Acc",
        "id": 534,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 20,
        "text": "api_key}' 'Content-Type': 'application/json', 'Accept': 'application/json' } ",
        "id": 535,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 60,
        "length_tokens": 29,
        "text": "存储Dify服务器地址和API密钥  \n构建HTTP请求头，使用BearerToken认证  \n统一管理API调用的基础配置",
        "id": 536,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 4,
        "text": "Dify API使用",
        "id": 537,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 5,
        "text": "智能应用类型检测 ",
        "id": 538,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 43,
        "text": "def chat_completion(self, user_input: str, app_type: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"auto\"): if app_type $\\scriptstyle = =$ \"auto\": ",
        "id": 539,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 45,
        "text": "#1.先尝试聊天端点 result $\\mathbf { \\tau } = \\mathbf { \\tau }$ self._try_chat_endpoint.(...) if \"not_chat_app\" in result.get(\"message\",\"\"): ",
        "id": 540,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 45,
        "text": "#2.再尝试完成端点 result $\\mathbf { \\tau } = \\mathbf { \\tau }$ self._try_completion_endpoint.(...) if \"app_unavailable\" in result.get(\"message\",\"\"): ",
        "id": 541,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 19,
        "text": "#3.最后尝试工作流端点return self._try_workflow_endpoint(..)",
        "id": 542,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 4,
        "text": "核心逻辑：",
        "id": 543,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 61,
        "length_tokens": 45,
        "text": "·自动检测机制：按照聊天→完成→工作流的顺序尝试·错误驱动检测：根据特定错误码判断应用类型·容错设计：一个端点失败自动尝试下一个",
        "id": 544,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 62,
        "length_tokens": 10,
        "text": "Dify API端点 (聊天应用) ",
        "id": 545,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 62,
        "length_tokens": 100,
        "text": "1.聊天应用 API (/chat-messages')   \ndef_try_chat_endpoint(self, user_input: str, user_id: str,   \nconversation_id: Optional[str], stream: bool): url $\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"{self.base_url}/chat-messages\" $\\mathsf { p a y l o a d } = \\left\\{ \\begin{array} { l l } { \\begin{array} { r l r }",
        "id": 546,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 62,
        "length_tokens": 98,
        "text": "\\{ \\begin{array} { l l } { \\begin{array} { r l r } \\end{array} } \\end{array} \\right.$ \"inputs\": {, #空输入对象 \"query\": user_input, #用户消息 \"response_mode\": \"streaming\" if stream else \"blocking\", \"user\": user_id } if conversation_id: payload[\"conversation_id\"] $\\mathbf { \\tau } = \\mathbf { \\tau }$ conversa",
        "id": 547,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 62,
        "length_tokens": 24,
        "text": "d\"] $\\mathbf { \\tau } = \\mathbf { \\tau }$ conversation_id #维持对记 ",
        "id": 548,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 62,
        "length_tokens": 3,
        "text": "API特点：",
        "id": 549,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 62,
        "length_tokens": 30,
        "text": "·支持多轮对话（通过conversation_id）·用户输入通过\\`query字段传递：支持流式和阻塞式响应",
        "id": 550,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 63,
        "length_tokens": 9,
        "text": "Dify API端点 (完成应用)",
        "id": 551,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 63,
        "length_tokens": 101,
        "text": "2.完成应用 APl (/completion-messages\")   \ndef_try_completion_endpoint(self, user_input: str, user_id: str,   \nstream: bool): url $\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"{self.base_url}/completion-messages\" $\\mathsf { p a y l o a d } = \\left\\{ \\begin{array} { l l } { \\begin{array} { r l r } \\end{array} }",
        "id": 552,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 63,
        "length_tokens": 67,
        "text": "y} { l l } { \\begin{array} { r l r } \\end{array} } \\end{array} \\right.$ \"inputs\": 0, #空对象（官方文档格式） \"response_mode\": \"streaming\" if stream else \"blocking\", \"user\": user_id } ",
        "id": 553,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 63,
        "length_tokens": 3,
        "text": "API特点：",
        "id": 554,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 63,
        "length_tokens": 23,
        "text": "单次完成任务，不维持对话状态inputs通常为空对象适用于文本生成、翻译等任务",
        "id": 555,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 64,
        "length_tokens": 10,
        "text": "Dify API端点 (工作流应用)",
        "id": 556,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 64,
        "length_tokens": 107,
        "text": "3.工作流应用 API (/workflows/run')   \ndef_try_workflow_endpoint(self,user_input: str, user_id: str,   \nstream: bool): url $\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"{self.base_url}/workflows/run\" $\\mathsf { p a y l o a d } = \\left\\{ \\begin{array} { l l } { \\begin{array} { r l r } \\end{array} } \\end{array} \\",
        "id": 557,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 64,
        "length_tokens": 58,
        "text": "begin{array} { r l r } \\end{array} } \\end{array} \\right.$ \"inputs\": {\"query\": user_input},#工作流输入参数 \"response_mode\": \"streaming\" if stream else \"blocking\", \"user\": user_id } ",
        "id": 558,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 64,
        "length_tokens": 3,
        "text": "API特点：",
        "id": 559,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 64,
        "length_tokens": 25,
        "text": "必须先发布工作流才能调用输入参数通过\\`inputs'对象传递·支持复杂的业务逻辑处理",
        "id": 560,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 10,
        "text": "Dify API端点 (工作流应用)",
        "id": 561,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 6,
        "text": "工作流调用示例：",
        "id": 562,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 81,
        "text": "def simple_workflow_example():#配置信息BASE_URL $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"你的Dify URL\"API_KEY $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"你的API KEY\"#创建客户端client $\\mathbf { \\tau } = \\mathbf { \\tau }$ DifyAgentClient(BASE_URL, API_KEY)",
        "id": 563,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 68,
        "text": "# 调用工作流  \nuser_input $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"黄金价格和哪些因素有关\"  \nresult $\\mathbf { \\tau } = \\mathbf { \\tau }$ client.run_workflow(inputs $\\ c =$ {\"input\": user_input},user_id=\"demo_user\"  \n）",
        "id": 564,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 15,
        "text": "工作流回复：### 总结整理：影响黄金价格的关键因素",
        "id": 565,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 18,
        "text": "####1．\\*\\*宏观经济因素 $^ { * * }$ ",
        "id": 566,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 70,
        "text": "：\\*\\*经济衰退与金融危机 $^ { * * }$ ：历史上的经济衰退（如2008年金融危机或2019年的新冠疫情）通常会导致黄金价格大幅上涨。投资者倾向于在经济危机时转向黄金以寻求避险。",
        "id": 567,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 47,
        "text": "- \\*\\*贸易战与地缘政治冲突\\*\\*：例如中美贸易战等政治紧张局势，往往促使投资者将资金转向黄金，以获得更稳定的资产保值",
        "id": 568,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 55,
        "text": "\\*\\*美元汇率 $^ { * * }$ ：美元是全球主要储备货币，其强弱直接影响黄金价格。美元走强时，黄金价格通常走弱；反之，美元疲软时，黄金价格趋于上涨。",
        "id": 569,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 24,
        "text": "#### 2，\\*\\*通货膨胀与利率 $^ { * * }$ ",
        "id": 570,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 47,
        "text": "－\\*\\*通货膨胀\\*\\*：通胀率较高时，持有现金的风险增大，黄金作为抗通胀工具的价值凸显，推动黄金价格上涨。",
        "id": 571,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 72,
        "text": "\\*\\*利率 $^ { * * }$ ：低利率环境下，黄金的投资吸引力增强，因为持有黄金的机会成本较低。而利率升高时，黄金的投资价值会下降，因投资者更倾向于选择收益更高的资产（如储蓄账户或债券）。",
        "id": 572,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 18,
        "text": "#### 3，\\*\\*石油价格 $^ { * * }$ ",
        "id": 573,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 38,
        "text": "－石油价格上涨通常伴随通胀压力，从而推动黄金价格上涨。石油作为重要的能源资源，其价格波动对全球经济有显著影响。",
        "id": 574,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 19,
        "text": "#### 4．\\*\\*黄金供需关系 $^ { * * }$ ",
        "id": 575,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 93,
        "text": "。\\*\\*供给\\*\\*：全球黄金产量较为稳定，约每年3500吨。矿工罢工或新技术应用等因素可能导致供给减少，从而推高金价。  \n-\\*\\*需求 $^ { * * }$ ：黄金需求主要来自首饰、工业用途、投资和央行购金。其中，投资需求和央行购金是决定黄金需求的关键因素。",
        "id": 576,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 23,
        "text": "#### 5. $* *$ 避险属性与资产配置 $^ { * * }$ ",
        "id": 577,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 53,
        "text": "-\\*\\*避险资产 $^ { * * }$ ：黄金因其稀缺性和稳定性，常被视为避险资产。在地缘政治动荡、战争或金融危机时，黄金价格往往会上涨。",
        "id": 578,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 29,
        "text": "－\\*\\*资产配置\\*\\*：投资者在资产组合中加入黄金可以实现多元化，降低整体投资风险。",
        "id": 579,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 18,
        "text": "####6．\\*\\*历史与文化因素 $^ { * * }$ ",
        "id": 580,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 86,
        "text": "－\\*\\*文化与传统 $^ { * * }$ ：许多国家和地区（如中国）将黄金视为财富储存和身份象征，这进一步支撑了黄金的需求。  \n－\\*\\*历史经验 $^ { * * }$ ：历史上黄金与通胀密切相关，其生产成本逐年增加，这也为金价提供了长期支撑。",
        "id": 581,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 18,
        "text": "#### 7．\\*\\*全球市场动态 $^ { * * }$ ",
        "id": 582,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 45,
        "text": "-\\*\\*黄金市场参与者 $^ { * * }$ ：包括银行、黄金生产企业、对冲基金、私人投资者等，他们根据市场情绪调整黄金头寸，导致价格波动。",
        "id": 583,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 65,
        "length_tokens": 65,
        "text": "-\\*\\*黄金定价中心 $^ { * * }$ ：全球三大黄金交易中心（伦敦、纽约、上海）共同影响黄金价格。伦敦市场主要提供现货价格参考，纽约市场反映期货价格，而上海黄金交易所则逐渐提升其国际影响力。",
        "id": 584,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 66,
        "length_tokens": 7,
        "text": "打卡：Dify API调用",
        "id": 585,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 66,
        "length_tokens": 15,
        "text": "找到你之前完成的Dify智能体，比如：LLM联网搜索",
        "id": 586,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 66,
        "length_tokens": 58,
        "text": "了解Dify的三种API端点类型  \n聊天应用APl(/chat-messages\\`)  \n完成应用APl(/completion-messages\\`)  \n工作流应用APl (//workflows/run\\`)可以对智能体应用类型进行智能检测调用Dify API",
        "id": 587,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 66,
        "length_tokens": 2,
        "text": "善 ",
        "id": 588,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 67,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 589,
        "type": "text",
        "file_name": "17.1-Dify部署与应用"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "DeepSeek-R1-0528 ",
        "id": 0,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "DeepSeek-R1-0528 ",
        "id": 1,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 2,
        "length_tokens": 9,
        "text": "DeepSeek-R1-0528: ",
        "id": 2,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 2,
        "length_tokens": 26,
        "text": "于2025年5月28日发布，基于DeepSeek-V3-0324训练参数量达660B。",
        "id": 3,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 2,
        "length_tokens": 48,
        "text": "模型在编程、推理、长文本处理等方面表现卓越，甚至在某些任务上超越Claude 4Sonnet和Gemini 2.5Pro，接近 OpenAl o3-high 水平",
        "id": 4,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 5,
        "type": "table",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 2,
        "length_tokens": 12,
        "text": "https://livecodebench.github.io/leaderboard.html ",
        "id": 6,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 8,
        "text": "DeepSeek-R1-0528 ",
        "id": 7,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "核心亮点：",
        "id": 8,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "超强编程能力",
        "id": 9,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 92,
        "text": "在 LiveCodeBench 测试中，性能接近 OpenAl o3-high，甚至超越 Gemini 2.5 Flash 和 Claude 4 Sonnet。  \n能一次性生成 超千行无Bug代码，在 前端开发（HTML/CSS/JS）、物理模拟、算法优化 等任务中表现优异。  \n开发者实测发现，其代码生成质量高，首次运行即可完美执行，无需调试。",
        "id": 10,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 10,
        "text": "长文本处理 ( $\\cdot$ tokens)",
        "id": 11,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 55,
        "text": "支持20,480字的长上下文推理，适合法律、科研、复杂文档分析等场景。  \n在32Ktokens内的文本召回表现优秀，但 $6 0 \\mathsf { K } +$ 时性能下降。",
        "id": 12,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 10,
        "text": "·深度推理与长时间思考",
        "id": 13,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 3,
        "length_tokens": 53,
        "text": "单任务处理时间可达30-60分钟，适合复杂逻辑推理（如数学证明、多步骤问题）。  \n能正确处理“9.9-9.11\"等易错计算问题，推理过程更缜密。",
        "id": 14,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "DeepSeek-R1-0528 ",
        "id": 15,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "，文本生成优化",
        "id": 16,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 4,
        "length_tokens": 41,
        "text": "输出更自然、格式规范，减少冗余信息（如不再频繁提及“量子力学”）。  \n适用于写作、翻译、商业报告等任务。",
        "id": 17,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "·开源与低成本",
        "id": 18,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 4,
        "length_tokens": 32,
        "text": "模型权重已开源至HuggingFace，采用MIT许可证，可商用。  \n推理成本低，每百万tokens价格为16元。",
        "id": 19,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "DeepSeek-R1-0528 ",
        "id": 20,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 12,
        "text": "8已深度思考（用时8秒）",
        "id": 21,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 45,
        "text": "嗯，用户问了一个很直接的问题——“你是什么版本？”。看来ta想确认我的身份和能力范围。可能刚接触我，或者在其他平台遇到过不同版本的AI助手。",
        "id": 22,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 54,
        "text": "用户语气简洁，没有多余修饰，大概率是实用主义者。回答时需要明确版本号和关键参数，但避免堆砌技术术语。可以顺便提一下知识截止日期一一很多人会关心这个。",
        "id": 23,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 60,
        "text": "啊，提到\"深度求索公司\"时要自然，既表明身份又不显得打广告。最后主动延伸提供帮助，给用户一个开口的机会。毕竟单纯问版本的人，往往接下来就要问具体问题了。",
        "id": 24,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 54,
        "text": "对了，结尾加个表情符号调节气氛，毕竟冷冰冰报版本号显得太机械。用比 $\\hat { \\mathbf { \\Omega } }$ 更合适，后者太跳脱了。",
        "id": 25,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 65,
        "text": "我是DeepSeek-R1版本，由深度求索（DeepSeek）公司研发。我的知识截止到2024年7月，支持中文和英文等多种语言，上下文记忆长度可达128Ktokens，能处理超长文本，比如整本书、长报告或复杂代码库。",
        "id": 26,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 42,
        "text": "我目前是纯文本助手，不支持识图或语音功能，但你可以上传文本类文件（如PDF、Word、Excel等），我可以从中读取文字内容并帮你处理。",
        "id": 27,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 5,
        "length_tokens": 35,
        "text": "如果你对我的功能、使用方式或背后技术感兴趣，欢迎随时问我！ $\\circledcirc$ 需要我帮你做些什么吗？",
        "id": 28,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 29,
        "type": "text",
        "file_name": "17.2-DeepSeek-R1-0528"
      },
      {
        "page": 1,
        "length_tokens": 4,
        "text": "分析式AI基础",
        "id": 0,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "分析式AI基础",
        "id": 2,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 2,
        "length_tokens": 43,
        "text": "分析式AI与生成式AI  \n十大经典机器学习算法  \n常用分类算法  \n贝叶斯分类器  \n决策树与随机森林  \nSVM支持向量机  \n逻辑回归",
        "id": 3,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "项目实战",
        "id": 4,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 2,
        "length_tokens": 22,
        "text": "CASE：二手车价格预测分类与回归的关系数据探索特征选择模型训练与预测",
        "id": 5,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "分析式AI与生成式AI",
        "id": 6,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 3,
        "length_tokens": 14,
        "text": "Thinking: 分析式AI与生成式AI的区别是什么？",
        "id": 7,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "table",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "机器学习的模型",
        "id": 9,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "——10大经典模型",
        "id": 10,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 4,
        "length_tokens": 33,
        "text": "·分类算法：C4.5，朴素贝叶斯（NaiveBayes），SVM，KNN，Adaboost，CART",
        "id": 11,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 4,
        "length_tokens": 10,
        "text": "·聚类算法：K-Means，EM",
        "id": 12,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "·关联分析：Apriori",
        "id": 13,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "·连接分析：PageRank ",
        "id": 14,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "机器学习算法工具包",
        "id": 15,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 16,
        "type": "table",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "贝叶斯原理",
        "id": 17,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "贝叶斯原理：",
        "id": 18,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 6,
        "length_tokens": 197,
        "text": "·贝叶斯为了解决一个叫\"逆向概率\"问题写了一篇文章，尝试解答在没有太多可靠证据的情况下，怎样做出更符合数学逻辑的推测  \n·“逆向概率\"是相对\"正向概率\"而言  \n·正向概率，比较容易理解，比如我们已经知道袋子里面有N个球，不是黑球就是白球，其中M个是黑球，那么把手伸进去摸一个球，就能知道摸出黑球的概率是多少 $\\Rightarrow$ 这种情况往往是上帝视角，即了解了事情的全貌再做判断  \n·逆向概率，贝叶斯则从实际场景出发，提了一个问题：如果我们事先不知道袋子里面黑球和白球的比例，而是通过我们摸出来的球的颜色，能判断出袋子里面黑白球的比例么？",
        "id": 19,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 6,
        "length_tokens": 13,
        "text": "P(BIA)P(A P(AB) (B ",
        "id": 20,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "贝叶斯原理",
        "id": 21,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "贝叶斯原理：",
        "id": 22,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 7,
        "length_tokens": 171,
        "text": "·影响了接下来近200年的统计学理论  \n·建立在主观判断的基础上：在我们不了解所有客观事实的情况下，同样可以先估计一个值  \n·先验概率，通过经验来判断事情发生的概率  \n·后验概率，就是发生结果之后，推测原因的概率  \n·条件概率，P(AIB)表示在事件B已经发生的前提下，事件A发生的概率  \n·似然函数，把概率模型的训练过程理解为求参数估计的过程  \n比如，一个硬币在10次抛落中正面均朝上 $\\Rightarrow$ 那么这个硬币是均  \n匀的可能性是多少？这里硬币均匀就是个参数，似然函数就是  \n用来衡量这个模型的参数",
        "id": 23,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 7,
        "length_tokens": 28,
        "text": "经过推导，贝叶斯推理告诉我们后验概率是与先验概率和似然函数成正比得，即",
        "id": 24,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 7,
        "length_tokens": 108,
        "text": "${ \\cal P } ( A | B ) = { \\cal P } ( A ) \\cdot \\frac { { \\cal P } ( B | A ) } { { \\cal P } ( B ) } \\stackrel { \\longrightarrow } { \\ | \\psi | \\cdot | \\psi | }$ 然函数，牛概率后验概率，可能性 先验概率， 证据，归一化常数函数，分类概率 类别概率 （计算可省略）",
        "id": 25,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "贝叶斯原理",
        "id": 26,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 103,
        "text": "Thinking：假设有一种病叫做“贝叶死”，它的发病率是万分之一，即10000人中会有1个人得病。现有一种测试可以检验一个人是否得病的准确率是 $9 9 . 9 \\%$ ，误报率（假阳）是 $0 . 1 \\%$ 那么，如果一个人被查出来患有“叶贝死”，实际上患有的可能性有多大？",
        "id": 27,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 41,
        "text": "（查出患有\"贝叶死\"的准确率是 $9 9 . 9 \\%$ ，是不是实际上患\"贝叶死的概率也是99.9%？）",
        "id": 28,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 67,
        "text": "在10000个人中，还存在 $0 . 1 \\%$ 的误查的情况，也就是10个人没有患病但是被诊断成阳性。当然10000个人中，也确实存在一个患有贝叶死的人，他有 $9 9 . 9 \\%$ 的概率被检查出来",
        "id": 29,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 41,
        "text": "可以粗算下，患病的这个人实际上是这11个人里面的一员，即实际患病比例是 $1 / 1 1 { \\approx } 9 \\%$ ",
        "id": 30,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 201,
        "text": "贝叶斯原理就是求解后验概率，假设：A表示事件“测出为阳性  \n\",B1表示\"患有贝叶死\"，B2表示\"没有患贝叶死\"  \n患有贝叶死的情况下，测出为阳性的概率为P(A|B1)=99.9%  \n没有患贝叶死，但测出为阳性的概率为 $P ( A | { \\mathsf { B } } 2 ) { = } 0 . 1 \\%$   \n患有贝叶死的概率为 $\\mathsf { P } ( \\mathsf { B } 1 ) { = } 0 . 0 1 \\%$   \n没有患贝叶死的概率 $P ( B 2 ) = 9 9 . 9 9 \\%$   \n那么我们检测出来为阳性，而且是贝叶死的概率P(B1，A)  \n",
        "id": 31,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 174,
        "text": "= 9 9 . 9 9 \\%$   \n那么我们检测出来为阳性，而且是贝叶死的概率P(B1，A)  \n$= \\mathsf { P } ( \\mathsf { B } 1 ) ^ { * } \\mathsf { P } ( \\mathsf { A } | \\mathsf { B } 1 ) = 0 . 0 1 \\% ^ { * } 9 9 . 9 \\% = 0 . 0 0 9 9 9 \\% \\approx 0 . 0 1 \\%$   \nP(B1,A)代表的是联合概率，同样我们可以求得  \n$\\mathsf { P } ( 8 2 , \\mathsf { A } ) = \\mathsf { P }",
        "id": 32,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 8,
        "length_tokens": 104,
        "text": "thsf { P } ( 8 2 , \\mathsf { A } ) = \\mathsf { P } ( 8 2 ) ^ { * } \\mathsf { P } ( \\mathsf { A } | 8 2 ) = 9 9 . 9 9 \\% ^ { * } 0 . 1 \\% = 0 . 0 9 9 9 9 \\% \\approx 0 . 1 \\%$ ",
        "id": 33,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "贝叶斯原理",
        "id": 34,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 19,
        "text": "检查为阳性的情况下，患有贝叶死的概率，即P(B1IA)",
        "id": 35,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 57,
        "text": "$$\nP \\big ( B _ { 1 } | A \\big ) = \\frac { 0 . 0 1 \\% } { 0 . 0 1 \\% + 0 . 1 \\% } \\approx 9 \\%\n$$",
        "id": 36,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 17,
        "text": "检查出是阳性的条件下，但没有患有贝叶死的概率为",
        "id": 37,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 67,
        "text": "$$\nP { \\big ( } B _ { 2 } \\mid A { \\big ) } = { \\frac { 0 . 1 \\% } { 0 . 0 1 \\% + 0 . 1 \\% } } \\approx 9 0 . 9 \\%\n$$",
        "id": 38,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 58,
        "text": "$0 . 0 1 \\% + 0 . 1 \\%$ 均出现在了P(B1IA)和P(B2|A)的计算中作为分母，称之为论据因子，也相当于一个权值因子",
        "id": 39,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "我们可以总结出贝叶斯公式",
        "id": 40,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 141,
        "text": "$$\nP { \\big ( } B _ { i } \\mid A { \\big ) } = { \\frac { P { \\big ( } B _ { i } { \\big ) } P { \\big ( } A \\mid B _ { i } { \\big ) } } { P { \\big ( } B _ { 1 } { \\big ) } P { \\big ( } A \\mid B _ { 1 } { \\big ) } + P { \\big ( } B _ { 2 } { \\big ) } P { \\big ( } A \\mid B _ { 2 } { \\big ) } } }\n$$",
        "id": 41,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 12,
        "text": "从而我们可以得到通用的贝叶斯公式",
        "id": 42,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 9,
        "length_tokens": 94,
        "text": "$$\nP \\big ( B _ { i } \\mid A \\big ) = \\frac { P \\big ( B _ { i } \\big ) P \\big ( A \\mid B _ { i } \\big ) } { \\displaystyle \\sum _ { i = 1 } ^ { n } P \\big ( B _ { i } \\big ) P \\big ( A \\mid B _ { i } \\big ) }\n$$",
        "id": 43,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "朴素贝叶斯",
        "id": 44,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "朴素贝叶斯：",
        "id": 45,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 12,
        "text": "·一种简单但极为强大的预测建模算法",
        "id": 46,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 40,
        "text": "·假设每个输入变量是独立的。这是一个强硬的假设，实际情况并不一定，但是这项技术对于绝大部分的复杂问题仍然非常有效",
        "id": 47,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 15,
        "text": "朴素贝叶斯模型由两种类型的概率组成：",
        "id": 48,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 21,
        "text": "每个类别的概率P(Cj)每个属性的条件概率P(AilCj)",
        "id": 49,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "什么是类别概率：",
        "id": 50,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 55,
        "text": "·假设我有7个棋子，其中3个是白色的，4个是黑色的那么棋子是白色的概率就是3/7，黑色的概率就是 $4 / 7 \\Rightarrow$ 这个是类别概率",
        "id": 51,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "什么是条件概率：",
        "id": 52,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 46,
        "text": "·假设我把这7个棋子放到了两个盒子里，其中盒子A里面有2个白棋，2个黑棋；盒子B里面有1个白棋，2个黑棋",
        "id": 53,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 10,
        "length_tokens": 49,
        "text": "那么在盒子A中抓到白棋的概率就是1/2，抓到黑棋的概率也是1/2，这个就是条件概率，也就是在某个条件（比如在盒子A中）下的概率",
        "id": 54,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "朴素贝叶斯",
        "id": 55,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "训练朴素贝叶斯模型的过程：",
        "id": 56,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 11,
        "length_tokens": 90,
        "text": "·在朴素贝叶斯中，我们要统计的是属性的条件概率，也就是假设取出来的是白色的棋子，那么它属于盒子A的概率是2/3  \n·Step1：先给出训练数据，以及这些数据对应的分类  \n·Step2，计算类别概率和条件概率  \n·Step3，使用概率模型（基于贝叶斯原理）对新数据进行预测",
        "id": 57,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "同时发生A和B的概率",
        "id": 58,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 59,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类器",
        "id": 60,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 12,
        "text": "朴素贝叶斯分类（离散值）：",
        "id": 61,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 56,
        "text": "·如何根据身高，体重，鞋码，判断是否为男女，比如一个新的数据：身高\"高\"、体重\"中\"，鞋码\"中 $\\mathbf { \\eta } ^ { \\prime \\prime } = >$ 男or女？",
        "id": 62,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 18,
        "text": "·求在A1、A2、A3属性下，Cj的概率",
        "id": 63,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 121,
        "text": "$$\nP { \\left( C _ { j } \\mid A _ { 1 } A _ { 2 } A _ { 3 } \\right) } = { \\frac { P { \\left( A _ { 1 } A _ { 2 } A _ { 3 } \\mid C _ { j } \\right) } P { \\left( C _ { j } \\right) } } { P { \\left( A _ { 1 } A _ { 2 } A _ { 3 } \\right) } } }\n$$",
        "id": 64,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 51,
        "text": "因为一共有2个类别，所以我们只需要求得P(C1|A1A2A3)和P(C2|A1A2A3)的概率即可，然后比较下哪个分类的可能性大，就是哪个分类结果",
        "id": 65,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 9,
        "text": "分别求下这些条件下的概率：",
        "id": 66,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 102,
        "text": "$$\n\\mathsf { P } ( \\mathsf { A } 1 | \\mathsf { C } 2 ) { = } 0 , \\mathsf { P } ( \\mathsf { A } 2 | \\mathsf { C } 2 ) { = } 1 / 2 , \\mathsf { P } ( \\mathsf { A } 3 | \\mathsf { C } 2 ) { = } 1 / 2\n$$",
        "id": 67,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 68,
        "type": "table",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 89,
        "text": "所以 $\\scriptstyle { \\big \\downarrow } \\operatorname { P } ( { \\mathrm { A 1 A 2 A 3 } } | \\mathsf { C 1 } ) = 1 / 1 6 , \\operatorname { P } ( { \\mathrm { A 1 A 2 A 3 } } | \\mathsf { C 2 } ) = 0$ ",
        "id": 69,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 12,
        "length_tokens": 39,
        "text": "因为P(A1A2A3|C1)P(C1)>P(A1A2A3|C2)P(C2)，所以应该是c1类别，即男性",
        "id": 70,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类器",
        "id": 71,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 11,
        "text": "朴素贝叶斯分类（连续值）：",
        "id": 72,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 212,
        "text": "·身高180、体重120，鞋码41，请问该人是男是女呢  \n·可以假设男性和女性的身高、体重、鞋码都是正态分布，通过样本计算出均值和方差，也就是得到正态分布的密度函数。有了密度函数，就可以把值代入，算出某一点的值  \n比如，男性的身高是均值179.5、标准差为3.697的正态分布。所  \n以男性的身高为180的概率为0.1069  \n同理可以计算得出男性体重为120的概率为0.000382324，男性鞋  \n码为41号的概率为0.120304111  \nP(A1A2A3|C1) $\\ c =$ P(A1|C1)P(A2|C1)P(A3|C1)=0.1069\\*0.000382324\\*0.  ",
        "id": 73,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 51,
        "text": "P(A1|C1)P(A2|C1)P(A3|C1)=0.1069\\*0.000382324\\*0.  \n120304111 $\\ O =$ 4.9169e-6",
        "id": 74,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 75,
        "type": "table",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 182,
        "text": "$\\mathsf { P } ( \\mathsf { A 1 A 2 A 3 } | \\mathsf C 2 ) = \\mathsf { P } ( \\mathsf { A 1 } | \\mathsf C 2 ) \\mathsf { P } ( \\mathsf { A 2 } | \\mathsf C 2 ) \\mathsf { P } ( \\mathsf { A 3 } | \\mathsf C 2 ) = 0 . 0 0 0 0 0 1 4 7 4$ $8 9 ^ { * } 0 . 0 1 5 3 5 4 1 4 4 ^ { * } 0 . 1 2 0 3 0 6 0 7 4 = 2 . 7",
        "id": 76,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 56,
        "text": " 3 5 4 1 4 4 ^ { * } 0 . 1 2 0 3 0 6 0 7 4 = 2 . 7 2 4 4 6 - 9$ ",
        "id": 77,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 13,
        "length_tokens": 17,
        "text": "很明显这组数据分类为男的概率大于分类为女的概率",
        "id": 78,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类器",
        "id": 79,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "Excel中的NORMDIST函数：",
        "id": 80,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 14,
        "length_tokens": 114,
        "text": "· NORMDIST(x,mean,standard_dev,cumulative)  \nx：正态分布中，需要计算的数值；  \nMean：正态分布的平均值；  \nStandard_dev：正态分布的标准差;  \nCumulative：取值为逻辑值，即False或True，决定了函数的形式当为True时，函数结果为累积分布  \n当为False时，函数结果为概率密度  \nNORMDIST(180,179.5,3.697,0)=0.1069",
        "id": 81,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "Python中的概率密度：",
        "id": 82,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 14,
        "length_tokens": 112,
        "text": "stats.norm.pdf(x,mu, sigma) 返回参数为 $\\mu$ 和 $\\sigma$ 的正态分布密度函数在x处的值 from scipy import stats mu = 179.5 $\\mathsf { s i g m a } = 3 . 6 9 7$ $\\mathtt { \\Delta } \\mathtt { x } = 1 8 0$ prob $\\mathbf { \\tau } = \\mathbf { \\tau }$ stats.norm.pdf(x, mu, sigma) print(prob) ",
        "id": 83,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类器",
        "id": 84,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类：",
        "id": 85,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 15,
        "length_tokens": 121,
        "text": "·常用于文本分类，文本过滤、情感预测、推荐系统等，尤其是对于英文等语言来说，分类效果很好  \n·准备阶段，需要确定特征属性，属性值以及 $| \\mathsf { a b e l } = >$ 训练集  \n·训练阶段，输入是特征属性和训练样本，输出是分类器，主要工作是计算每个类别在训练样本中的出现频率及每个特征属性划分对每个类别的条件概率  \n·应用阶段，使用分类器对新数据进行分类",
        "id": 86,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 87,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类器",
        "id": 88,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "sklearn工具使用：",
        "id": 89,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 11,
        "text": "·from sklearn.naive_bayes import GaussianNB ",
        "id": 90,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 31,
        "text": "高斯朴素贝叶斯：特征变量是连续变量，符合高斯分布，比如说人的身高，物体的长度",
        "id": 91,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "GaussianNB(priors $\\ c =$ None)#模型创建 ",
        "id": 92,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 28,
        "text": "priors，先验概率大小，如果没有给定，模型则根据样本数据自己计算（利用极大似然法）",
        "id": 93,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 6,
        "text": "查看模型对象的属性：",
        "id": 94,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 46,
        "text": "classprior:每个样本的概率 classcount：每个类别的样本数量 theta：每个类别中每个特征的均值 sigma：每个类别中每个特征的方差 ",
        "id": 95,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "from sklearn.naive_bayes import MultinomialNB ",
        "id": 96,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 151,
        "text": "多项式朴素贝叶斯：特征变量是离散变量，符合多项分布，在  \n文档分类中特征变量体现在一个单词出现的次数，或者是单词  \n的TF-IDF值等  \nMultinomialNB(alpha ${ \\tt \\tt = } 1 . 0 \\$ ,fit_prior $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ True,class_prior $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ None)  \nalpha:先验平滑因子，默认等于1，当等于1时表示拉普拉斯平滑  \nfit_prior:是否去学习类的先验",
        "id": 97,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 16,
        "length_tokens": 116,
        "text": "a:先验平滑因子，默认等于1，当等于1时表示拉普拉斯平滑  \nfit_prior:是否去学习类的先验概率，默认是True  \nclass_prior:各个类别的先验概率，如果没有指定，则模型会根据  \n数据自动学习，每个类别的先验概率相同，即类别数N分之一  \n模型对象的属性：  \nclass_count_：训练样本中各类别对应的样本数  \nfeature_count_：每个类别中各个特征出现的次数",
        "id": 98,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "朴素贝叶斯分类器",
        "id": 99,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "sklearn工具使用：",
        "id": 100,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 13,
        "text": "· from sklearn.naive_bayes import BernoulliNB ",
        "id": 101,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 144,
        "text": "伯努利朴素贝叶斯：特征变量是布尔变量，符合0/1分布，在文  \n档分类中特征是单词是否出现  \nBernoulliNB(alpha ${ \\tt \\Omega } = 1 . 0$ ,fit_prior $\\risingdotseq$ True,class_prior $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ None)  \nalpha:平滑因子，与多项式中的alpha一致  \nfit_prior:是否去学习类的先验概率，默认是True  \nclass_prior:各个类别的先验概率，如果没有指定，则模型会根据  \n数据自动学习，每个类别的先",
        "id": 102,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 74,
        "text": "lass_prior:各个类别的先验概率，如果没有指定，则模型会根据  \n数据自动学习，每个类别的先验概率相同，即类别数N分之一  \n模型对象的属性：  \nclass_count_：训练样本中各类别对应的样本数  \nfeature_count_：每个类别中各个特征出现的次数",
        "id": 103,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 17,
        "text": "·ToDo使用朴素贝叶斯进行mnist手写数字分类",
        "id": 104,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 17,
        "length_tokens": 35,
        "text": "3 3 4 6 /  \n8 ！ c 9 8  \n0 3 1 女 子  \n0 2 9 6 0",
        "id": 105,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 106,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 4,
        "text": "决策树：",
        "id": 107,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 14,
        "text": "·决策树基本上就是把我们以前的经验总结出来",
        "id": 108,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 20,
        "text": "·常见的决策树算法有C4.5、ID3和CART ",
        "id": 109,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 16,
        "text": "·Thinking：如何构造一个判断是否去打篮球的决策树",
        "id": 110,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 23,
        "text": "将哪个属性（天气、温度、湿度、刮风）作为根节点是个关键问题",
        "id": 111,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 112,
        "type": "table",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 113,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "信息、熵以及信息增益：",
        "id": 114,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 53,
        "text": "·引用香农的话来说，信息是用来消除随机不确定性的东西·对于机器学习中的决策树而言，如果带分类的事物集合可以划分为多个类别当中，则某个类（xi）的信息可以定义为",
        "id": 115,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 46,
        "text": "$$\n\\boxed { I \\big ( X = x _ { i } \\big ) } = - \\log _ { 2 } \\boxed { P \\big ( x _ { i } \\big ) }\n$$",
        "id": 116,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "随机变量的信息 当xi发生时的概率",
        "id": 117,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 45,
        "text": "·熵是约翰.冯.诺依曼建议使用的命名，熵 $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ 信息的期望值",
        "id": 118,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 102,
        "text": "$$\nH ( X ) = \\sum _ { i = 1 } ^ { n } p { \\big ( } x _ { i } { \\big ) } I { \\big ( } x _ { i } { \\big ) } = - \\sum _ { i = 1 } ^ { n } p { \\big ( } x _ { i } { \\big ) } \\log p { \\big ( } x _ { i } { \\big ) }\n$$",
        "id": 119,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 174,
        "text": "熵用来度量不确定性的，当熵越大， $x = x i$ 的不确定性越大对于机器学习中的分类问题，熵越大 $\\Rightarrow$ 这个类别的不确定性大·信息增益在决策树算法中是用来选择特征的指标，信息增益越大，则这个特征的选择性越好信息增益 $g \\left( D , A \\right) = H \\left( D \\right) - H \\left( D \\mid A \\right)$ 原有树的熵 $\\mathsf { H } ( \\mathsf { D } )$ 增加了一个分裂节点，使得熵变成了 ${ \\mathsf { H } } ( { \\mathsf { D } } | { \\math",
        "id": 120,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 30,
        "text": "了 ${ \\mathsf { H } } ( { \\mathsf { D } } | { \\mathsf { A } } )$ ",
        "id": 121,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 123,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 124,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "随机森林的生成：",
        "id": 125,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 20,
        "length_tokens": 69,
        "text": "·森林中的每棵树都是独立的  \n·bagging思想，将若干个弱分类器的分类结果进行投票选择，从而组成一个强分类器  \n·bagging不用单棵决策树来做预测，增加了预测准确率，即不容易过拟合，减少了预测方差",
        "id": 126,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 20,
        "length_tokens": 17,
        "text": "少数服从多数，获得票数最多的类别就是森林的分类结果",
        "id": 128,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 129,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "随机森林的生成：",
        "id": 130,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 48,
        "text": "·如果训练集大小为N，对于每棵树而言，随机且有放回地从训练集中的抽取N个训练样本（采样方式称为bootstrapsample），作为该树的训练集",
        "id": 131,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 93,
        "text": "每棵树的训练集都是不同的，而且里面包含重复的训练样本·如果每个样本的特征维度为M，指定一个常数 $m < < M$ ，随机地从M个特征中选取m个特征子集，每次树进行分裂时，从这m个特征中选择最优的·每棵树都尽最大程度的生长，没有剪枝过程",
        "id": 132,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 133,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 134,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "随机森林分类效果（错误率）：",
        "id": 135,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 50,
        "text": "·森林中任意两棵树的相关性：相关性越大，错误率越大·森林中每棵树的分类能力：每棵树的分类能力越强，整个森林的错误率越低",
        "id": 136,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "特征选择个数m（随机森林的参数）：",
        "id": 137,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 21,
        "length_tokens": 24,
        "text": "m越大，树的相关性和分类能力会相应提升如何选择最优的m是关键问题",
        "id": 138,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 139,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 22,
        "length_tokens": 5,
        "text": "决策树工具：",
        "id": 140,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 22,
        "length_tokens": 86,
        "text": "·from sklearn.tree import DecisionTreeClassifier  \nDecisionTreeClassifier(criterion='entropy')  \ncriterion，gini或者entropy，默认是基尼系数，后者是信息熵  \nmax_depth，决策树最大深度，默认为None  \nmin_samples_split，内部节点再划分所需最小样本数  \nmax_leaf_nodes，最大叶子节点数  \nclass_weight，类别权重",
        "id": 141,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "随机森林工具：",
        "id": 142,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 22,
        "length_tokens": 112,
        "text": "·from sklearn.ensemble import RandomForestClassifier  \n·RandomForestClassifier(n_estimators $_ { \\cdot = 1 0 }$ ，criterion $= ^ { \\prime }$ gini\")  \nn_estimators，森林中决策树的个数，默认为10  \nmax_features，寻找最佳分割时需要考虑的特征数目，默认  \n为auto，即max_features=sqrt(n_features)  \ncriterion，gini或者entropy，默认是基尼系数，后者是信息熵  \nmax_d",
        "id": 143,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 22,
        "length_tokens": 70,
        "text": ")  \ncriterion，gini或者entropy，默认是基尼系数，后者是信息熵  \nmax_depth，决策树最大深度，默认为None  \nmin_samples_split，内部节点再划分所需最小样本数  \nmax leafnodes，最大叶子节点数  \nclass_weight，类别权重",
        "id": 144,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 23,
        "length_tokens": 67,
        "text": "SVM思想：一些线性不可分的问题可能是非线性可分的，也就是在高维空间中存在分离超平面（separating hyperplane）使用非线性函数从原始的特征空间映射至更高维的空间，转化为线性可分问题",
        "id": 145,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 146,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "SVM工具：",
        "id": 147,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 131,
        "text": "sklearn中支持向量分类主要有三种方法：SVC、NuSVC、LinearSVC   \nsklearn.svm.SVC( $\\ c = 1 . 0$ ，kernel $\\mathbf { \\Phi } = \\mathbf { \\Phi } ^ { \\prime }$ rbf', degree $^ { = 3 }$ ,gamma $= ^ { \\prime }$ auto', coef $) { = } 0 . 0$ shrinking $\\mathop :$ True,probability=False,to $\\mathsf { I } { = } 0 . 0 0 1$ ,cache_s",
        "id": 148,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 116,
        "text": "=False,to $\\mathsf { I } { = } 0 . 0 0 1$ ,cache_size $= 2 0 0$ class_weight $\\ c =$ None,verbose $\\ c =$ False,max_iter=-1, decision_function_shape $= \"$ ovr',random_state $\\ c =$ None)   \nsklearn.svm.NuSVC( $\\mathsf { n u } { = } 0 . 5$ ,kernel='rbf',degree $\\mathbf { \\lambda } = :$ 3,gamma $= ^ {",
        "id": 149,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 106,
        "text": "f',degree $\\mathbf { \\lambda } = :$ 3,gamma $= ^ { \\vert }$ auto', coef $\\scriptstyle \\mathtt { \\lambda } = 0 . 0$ ，shrinking $\\varXi$ True,probability=False, to $\\mathsf { l } { = } 0 . 0 0 1$ ,cache_size=200, class_weight $\\ c =$ None,verbose $\\ c =$ False,max_iter=-1, decision_function_shape $= ^",
        "id": 150,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 122,
        "text": "=$ False,max_iter=-1, decision_function_shape $= ^ { \\mathsf { I } }$ ovr',random_state $\\circleddash$ None)   \nsklearn.svm.LinearSvC(penalty $= ^ { \\prime } \\vert { 2 ^ { \\prime } }$ loss $= ^ { \\prime }$ squared_hinge', dual=True, t $_ { \\cdot 0 1 = 0 . 0 0 0 1 }$ ， ${ \\mathsf { C } } { = } 1 . 0$",
        "id": 151,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 115,
        "text": "= 0 . 0 0 0 1 }$ ， ${ \\mathsf { C } } { = } 1 . 0$ ，multi_class $= ^ { \\prime }$ ovr',fit_intercept $\\risingdotseq$ True, intercept_scaling $\\scriptstyle = 1$ ,class_weight $\\mathbf { \\Psi } : =$ None,verbose $_ { = 0 }$ random_state $\\ c =$ None,max_iter $\\mathbf { \\tau } = \\mathbf { \\tau }$ 1000) ",
        "id": 152,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "常用参数：",
        "id": 153,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 180,
        "text": "·C，惩罚系数，类似于LR中的正则化系数，C越大惩罚越大nu，代表训练集训练的错误率的上限（用于NuSVC）kernel，核函数类型，RBF,Linear,Poly,Sigmoid,precomputed，默认为RBF径向基核（高斯核函数）gamma，核函数系数，默认为autodegree，当指定kernel为'poly'时，表示选择的多项式的最高次数，默认为三次多项式probability，是否使用概率估计shrinking，是否进行启发式，SVM只用少量训练样本进行计算penalty，正则化参数，L1和L2两种参数可选，仅LinearSVC有loss，损失函数，有‘hinge’和‘squa",
        "id": 154,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 24,
        "length_tokens": 76,
        "text": "参数，L1和L2两种参数可选，仅LinearSVC有loss，损失函数，有‘hinge’和‘squared_hinge’两种可选，前者又称L1损失，后者称为L2损失  \n·tol:残差收敛条件，默认是0.0001，与LR中的一致",
        "id": 155,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "SVM工具",
        "id": 156,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "SVM工具: ",
        "id": 157,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 25,
        "length_tokens": 168,
        "text": "·SVC，SupportVector Classification，支持向量机用于分类 libsvm中自带了四种核函数：线性核、多项式核、RBF以及sigmoid核  \n·SVR，Support Vector Regression，支持向量机用于回归 Kernel核的选择技巧的：  \n·sklearn中支持向量分类主要有三种方法：SVC、NusSVC、LinearSVc·如果样本数量<特征数：  \n·基于libsvm工具包实现，台湾大学林智仁教授在200年开发的一个简 方法1：简单的使用线性核就可以，不用选择非线性核单易用的SVM工具包 方法2：可以先对数据进行降维，然后使用非线性核  \n·S",
        "id": 158,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 25,
        "length_tokens": 127,
        "text": "可以，不用选择非线性核单易用的SVM工具包 方法2：可以先对数据进行降维，然后使用非线性核  \n·SVC，C-Support Vector Classification，支持向量分类 ·如果样本数量 $> =$ 特征数  \n·NuSVC，Nu-Support VectorClasification，核支持向量分类，和SVc类 可以使用非线性核，将样本映射到更高维度，可以得到比较好的结果似，不同的是可以使用参数来控制支持向量的个数  \n·LinearSVC， Linear Support Vector Classification",
        "id": 159,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 25,
        "length_tokens": 17,
        "text": "线性支持向量分类，使用的核函数是linear逻辑回归",
        "id": 160,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 161,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "逻辑回归模型",
        "id": 162,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 27,
        "length_tokens": 6,
        "text": "逻辑回归: ",
        "id": 163,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 27,
        "length_tokens": 32,
        "text": "假设数据服从伯努利分布通过极大化似然函数的方法运用梯度下降来求解参数将数据进行二分类",
        "id": 164,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "逻辑回归模型",
        "id": 165,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "逻辑回归的假设：",
        "id": 166,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 31,
        "text": "·任何的模型都有自己的假设，在假设条件下才是适用的·假设1：数据服从伯努利分布",
        "id": 167,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 36,
        "text": "典型例子：连续的掷n次硬币（每次实验结果不受其他实验结果的影响，即n次实验是相互独立的)",
        "id": 168,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 49,
        "text": "贝努力分布为离散型概率分布，如果成功，随机变量取值为1；如果失败，随机变量取值为0。成功概率记为p，失败概率为 $q = 1 - p$ ",
        "id": 169,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 95,
        "text": "$$\nf _ { X } ( x ) = p ^ { x } ( 1 - p ) ^ { 1 - x } = { \\left\\{ \\begin{array} { l l } { p } & { { \\mathrm { ~ i f ~ } } x = 1 } \\\\ { q } & { { \\mathrm { ~ i f ~ } } x = 0 } \\end{array} \\right. }\n$$",
        "id": 170,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 29,
        "text": "对应二分类问题，样本为正类的概率p，和样本为负类的概率 $9 = 1 .$ ",
        "id": 171,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 25,
        "text": "$$\np = h _ { \\hat { \\theta } } ( x ; \\hat { \\theta } )\n$$",
        "id": 172,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 22,
        "text": "$$\n\\displaystyle q = 1 - h _ { \\theta } ( x ; \\theta )\n$$",
        "id": 173,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 15,
        "text": "·假设2：正类的概率由sigmoid函数计算，即",
        "id": 174,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 175,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 134,
        "text": "预测样本为正的概率 $p ( y = 1 | x ; \\theta ) = h _ { \\theta } ( x ; \\theta ) = \\frac { 1 } { 1 + e ^ { - \\theta ^ { T } = 5 } }$ 预测样本为负的概率 $p ( \\boldsymbol { y } = 0 | \\boldsymbol { x } ; \\boldsymbol { \\theta } ) = 1 - h _ { \\boldsymbol { \\theta } } ( \\boldsymbol { x } ; \\boldsymbol { \\theta } ) = \\frac { 1 ",
        "id": 176,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 28,
        "length_tokens": 54,
        "text": "mbol { x } ; \\boldsymbol { \\theta } ) = \\frac { 1 } { 1 + e ^ { \\boldsymbol { \\theta } ^ { T } { \\cdot } \\boldsymbol { x } } }$ ",
        "id": 177,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "逻辑回归模型",
        "id": 178,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 16,
        "text": "Thinking: 决策边界是线性or非线性？ ",
        "id": 179,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 180,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 127,
        "text": "对于线性的决策 $\\begin{array} { l } { { \\displaystyle \\ i \\not { \\\\exists } \\not { \\mathbb { F } } \\colon \\ \\theta _ { 0 } + \\theta _ { 1 } x _ { 1 } + , . . . , + \\theta _ { n } x _ { n } = \\sum _ { i = 1 } ^ { n } \\theta _ { i } x _ { i } = \\theta ^ { T } x } } \\\\ { { \\displaystyle h _ { \\theta } ( x ) =",
        "id": 181,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 64,
        "text": " x } } \\\\ { { \\displaystyle h _ { \\theta } ( x ) = g ( \\theta ^ { T } x ) = \\frac { 1 } { 1 + e ^ { - \\theta ^ { T } x } } } } \\end{array}$ 构造预测函数",
        "id": 182,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 31,
        "text": "$h _ { \\theta } ( x )$ 表示结果为1的概率，对于输入×，分类结果为1和0的概率为",
        "id": 183,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 68,
        "text": "$$\n\\begin{array} { l } { P ( y = 1 | x ; \\theta ) = h _ { \\theta } ( x ) } \\\\ { P ( y = 0 | x ; \\theta ) = 1 - h _ { \\theta } ( x ) } \\end{array}\n$$",
        "id": 184,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "公式(1)",
        "id": 185,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "·构造损失函数",
        "id": 186,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 141,
        "text": "$C o s t ( h _ { \\theta } ( x ) , y ) = \\left\\{ \\begin{array} { l l } { - \\log ( h _ { \\theta } ( x ) ) } & { \\ i f y = 1 } \\\\ { - \\log ( 1 - h _ { \\theta } ( x ) ) } & { \\ i f y = 0 } \\end{array} \\right.$   \n$J ( \\theta ) = \\frac { 1 } { m } \\sum _ { i = 1 } ^ { n } C o s t ( h _ { \\theta } ( x ^ {",
        "id": 187,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 154,
        "text": "{ i = 1 } ^ { n } C o s t ( h _ { \\theta } ( x ^ { ( i ) } ) , y ^ { ( i ) } ) = - \\frac { 1 } { m } \\sum _ { i = 1 } ^ { n } \\Bigl ( y ^ { ( i ) } \\log h _ { \\theta } ( x ^ { ( i ) } ) + ( 1 - y ^ { ( i ) } ) \\log ( 1 - h _ { \\theta } ( x ^ { ( i ) } ) ) \\Bigr )$ Cost函数与J函数是基于最大似然估计推导得到的  \n将公式1综合起来",
        "id": 188,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 152,
        "text": "} ) ) \\Bigr )$ Cost函数与J函数是基于最大似然估计推导得到的  \n将公式1综合起来： $P ( y | x ; \\theta ) = ( h _ { \\theta } ( x ) ) ^ { \\mathrm { y } } ( 1 - h _ { \\theta } ( x ) ) ^ { 1 - y }$ 取似然函数为 $L ( \\theta ) = \\prod _ { i = 1 } ^ { m } P ( y ^ { ( i ) } \\mid x ^ { ( i ) } ; \\theta ) = \\prod _ { i = 1 } ^ { m } ( h _ { \\the",
        "id": 189,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 146,
        "text": " \\theta ) = \\prod _ { i = 1 } ^ { m } ( h _ { \\theta } ( x ^ { ( i ) } ) ) ^ { y ^ { ( i ) } } ( 1 - h _ { \\theta } ( x ^ { ( i ) } ) ) ^ { 1 - y ^ { ( i ) } }$ 对数似然函数为  \n$l ( \\theta ) = \\log L ( \\theta ) = \\sum _ { i = 1 } ^ { m } \\Bigl ( y ^ { ( i ) } \\log h _ { \\theta } ( x ^ { ( i ) } ) + ( 1 - ",
        "id": 190,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 114,
        "text": ") } \\log h _ { \\theta } ( x ^ { ( i ) } ) + ( 1 - y ^ { ( i ) } ) \\log ( 1 - h _ { \\theta } ( x ^ { ( i ) } ) ) \\Bigr )$ 最大似然估计就是求使 $l ( \\theta ) _ { . }$ 又最大值时的θ，这里可以使用梯度上升法求解，也即对 $J ( \\theta )$ 梯度下降法求最小值",
        "id": 191,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 29,
        "length_tokens": 26,
        "text": "$$\nJ ( \\theta ) = - { \\frac { 1 } { m } } l ( \\theta )\n$$",
        "id": 192,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "逻辑回归模型",
        "id": 193,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "似然函数：",
        "id": 194,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 64,
        "text": "·关于统计模型中的参数的函数，表示模型参数中的似然性·给定输出×时，关于参数θ的似然函数 $\\mathsf { L } ( \\boldsymbol { \\Theta } | \\mathsf { x } )$ 等于给定参数0后变量X的概率",
        "id": 195,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 28,
        "text": "$$\nL \\left( \\theta | x \\right) = P \\left( X = x | \\theta \\right)\n$$",
        "id": 196,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "逻辑回归: ",
        "id": 197,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 46,
        "text": "·如何进行分类：设定一个阈值，判断正类概率是否大于该阈值，一般阈值是0.5，所以只用判断正类概率是否大于0.5即可",
        "id": 198,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "Thinking: 为什么会在训练中将高度相关的特征去掉？",
        "id": 199,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 30,
        "length_tokens": 25,
        "text": "1）可解释性更好  \n2）提高训练的速度，特征多了，会增大训练的时间",
        "id": 200,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "逻辑回归模型",
        "id": 201,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "优点: ",
        "id": 202,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 53,
        "text": "·形式简单，模型的可解释性非常好·根据特征的权重可以得到不同的特征对最后结果的影响（某个特征的权重值高 $\\Rightarrow$ 这个特征对结果的影响大)",
        "id": 203,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 204,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 121,
        "text": "·工程上的baseline，如果特征工程做的好，效果不会差·训练速度较快，计算量只和特征的数目相关·模型资源占用小，只需要存储各个维度的特征值·方便输出结果调整。逻辑回归可以很方便的得到最后的分类结果，因为输出的是每个样本的概率分数，我们可以很容易的对这些概率分数进行cutoff，也就是划分阈值(大于某个阈值的是一类，小于某个阈值的是一类)",
        "id": 205,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 206,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 207,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 208,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "缺点: ",
        "id": 209,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 18,
        "text": "·准确率不是很高，形式简单，很难拟合数据的真实分布",
        "id": 210,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 10,
        "text": "·很难处理样本不均衡问题",
        "id": 211,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 24,
        "text": "·很难处理非线性数据，在不引入其他方法的情况下，只能处理线性可分的数据",
        "id": 212,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 31,
        "length_tokens": 28,
        "text": "·逻辑回归本身无法筛选特征，可以采用gbdt来筛选特征，然后再用逻辑回归",
        "id": 213,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 32,
        "length_tokens": 202,
        "text": "·机器学习包括监督学习，无监督学习，半监督学习，强化学习  \n·符号学派，认为事情都是有因果的，机器可以自己摸索出规律，典型代表为决策树  \n·贝叶斯学派，因果之间不是必然发生，是有一定概率的，即$\\mathrm { P \\left( A \\mid B \\right) }$ ，典型代表为朴素贝叶斯  \n·类推学派，通过类比可以让我们学习到很多未知的知识，所以我们需要先定义“相似度”，通过相似度进行发现  \n·联结学派，模仿人脑神经元的工作原理，所有模式识别和记忆建立在神经元的不同连接方式上，典型代表为神经网络，深度学习  \n·进化学派，上帝通过基因选择来适者生存，典型代表为遗传算法",
        "id": 214,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 215,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "AI大赛：二手车价格预测 ",
        "id": 216,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 217,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 218,
        "type": "table",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 219,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "：评价标准MAE(Mean Absolute Error):",
        "id": 220,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 99,
        "text": "若真实值为 $y = ( y _ { 1 } , y _ { 2 } , \\cdot \\cdot \\cdot , y _ { n } )$ ，模型的预测值为 $\\hat { y } = ( \\hat { y } _ { 1 } , \\hat { y } _ { 2 } , \\cdots , \\hat { y } _ { n } )$ ，那么该模型的MAE计算公式为",
        "id": 221,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 45,
        "text": "$$\nM A E = \\frac { \\sum _ { i = 1 } ^ { n } | y _ { i } - \\hat { y } _ { i } | } { n } .\n$$",
        "id": 222,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 57,
        "text": "例如，真实值 $y = ( 1 5 , 2 0 , 1 2 )$ ，预测值 $\\hat { y } = ( 1 7 , 2 4 , 9 )$ ，那么这个预测结果的MAE为",
        "id": 223,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 54,
        "text": "$$\nM A E = { \\frac { | 1 5 - 1 7 | + | 2 0 - 2 4 | + | 1 2 - 9 | } { 3 } } = 3 .\n$$",
        "id": 224,
        "type": "equation",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 16,
        "text": "MAE是L1IoSS，MAE越小模型越准确 ",
        "id": 225,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "·提交结果，与sample_submit.csv中的格式一致",
        "id": 226,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "分类与回归的区别",
        "id": 227,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 36,
        "length_tokens": 21,
        "text": "分类与回归是监督学习中的两大核心任务，二者既有联系又有区别",
        "id": 228,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "·输出类型",
        "id": 229,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 36,
        "length_tokens": 19,
        "text": "分类：预测离散类别标签（如“男/女”、“是/否”）。",
        "id": 230,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 36,
        "length_tokens": 15,
        "text": "回归：预测连续数值（如房价、资产金额）。",
        "id": 231,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 36,
        "length_tokens": 29,
        "text": "·目标函数分类常用交叉熵损失（Cross-Entropy），回归常用均方误差（MSE）。",
        "id": 232,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "分类与回归的区别",
        "id": 233,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "Thinking: 分类与回归的内在联系是什么？ ",
        "id": 234,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 5,
        "text": "·概率视角 ",
        "id": 235,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 41,
        "text": "分类的输出可视为类别的概率（如逻辑回归），而回归可通过阈值处理转化为分类（如预测概率>0.5为一类）。",
        "id": 236,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 4,
        "text": "·模型共享 ",
        "id": 237,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 37,
        "text": "某些模型（如朴素贝叶斯、决策树、SVM、逻辑回归、神经网络）通过调整输出层即可切换任务：",
        "id": 238,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "分类：Softmax输出离散概率。",
        "id": 239,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "回归：线性输出连续值。",
        "id": 240,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 4,
        "text": "·问题转化",
        "id": 241,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 37,
        "length_tokens": 86,
        "text": "回归问题可离散化为分类（如年龄预测 $$ 年龄段分类）。  \n某些分类任务（如有序分类）可视为回归的离散特例。  \n有序分类的类别具有明确的顺序关系（如“差/中/好”、“1\\~5星评分”），类别标签不仅是符号，还隐含了连续的潜在变量。",
        "id": 242,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "分类与回归的区别",
        "id": 243,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 38,
        "length_tokens": 13,
        "text": "Thinking: 分类与回归的本质共性是什么？",
        "id": 244,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 38,
        "length_tokens": 44,
        "text": "均为从输入数据中学习映射关系 $\\mathrm { f } ( \\mathrm { X } )  \\mathrm { Y }$ ，核心目标是最小化预测与真实值的差异。",
        "id": 245,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 38,
        "length_tokens": 48,
        "text": "分类与回归是监督学习的一体两面，区别在于输出空间的性质，但二者共享模型框架和优化思想。  \n实际应用中常相互转化或结合（如回归后分类）。",
        "id": 246,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 247,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 4,
        "text": "祖传参数：",
        "id": 248,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 134,
        "text": "·Step1，数据加载  \n原始数据是用空格分隔  \n·Step2，数据探索  \n数据整体情况  \n查看缺失值，缺失值可视化  \n查看label的分布（该项目中price为label）  \nmodel $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ xgb. XGBRegressor(n_estimator $= 2 0 0 0$ ， learning_rate=0.1,subsample=0.8， colsample_bytree=0.8,min_child_samples $= 3$ ，eval_metric $\\mathbf { \\Phi } = { ",
        "id": 249,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 66,
        "text": "_samples $= 3$ ，eval_metric $\\mathbf { \\Phi } = { \\bf { \\dot { \\Phi } } }$ auc'  \nreg_lambda ${ } _ { , = 0 }$ . 5,max depth $= 1 5$ ， tree method $\\ P$ gpu hist' )",
        "id": 250,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 251,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 25,
        "text": "Step3，特征选择Step4，模型训练使用XGBoost，超参数设置·Step5，模型预测",
        "id": 252,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 253,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 254,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "Thinking：有哪些提分（减少MAE）的方式？",
        "id": 255,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 40,
        "length_tokens": 101,
        "text": "1、时间类型数据(regDate，creatDate)  \n2、模型融合，使用XGBoost,LightGBM  \n3、增加新的特征，对brand进行统计  \nbrand_amount， brand_price_max, brand_price_min,  \nbrand_price_median， brand_price_sum, brand_price_std,  \nbrand_price_mean  \n单模型XGBoost， $\\mathrm { M A E } { = } ?$   \nXGBoost $^ +$ LightGBM， MAE=?",
        "id": 256,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 257,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 258,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 41,
        "length_tokens": 23,
        "text": "编写Python代码，打开used_car_train_20200313.csv，查看数据字段及前5行数据",
        "id": 259,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 41,
        "length_tokens": 23,
        "text": "我会帮你编写代码来查看二手车训练数据。首先让我检查一下文件是否存在。",
        "id": 260,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": ">Listed 5 items in current directory ",
        "id": 261,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 41,
        "length_tokens": 35,
        "text": "很好，我看到训练数据文件 used_car_train_20200313.cs$\\mathsf { v }$ 已经存在。我将创建一个新的Python文件来查看数据。",
        "id": 262,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 263,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 264,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 64,
        "text": "@view_data. py 帮我做EDA我会帮你对二手车数据进行探索性数据分析(EDA)。我将创建一个更详细的EDA分析脚本，包括数据概览、缺失值分析、数值型特征分布、类别型特征分布等。",
        "id": 265,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 266,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 101,
        "text": "view_data.py +81-9√ □   \n# -\\*- coding: utf-8 -\\*_   \nIIⅡ   \n查看二手车训练数据的基本信息   \n二手车数据探索性分析(EDA)   \n11   \nimport pandas as pd   \nimport numpy as np   \nimport matplotlib.pyplot as plt   \nimport seaborn as sns   \nplt.rcParams['font.sans-serif'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['SimHei'] #用   \n",
        "id": 267,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 47,
        "text": "{ \\sigma } = \\mathbf { \\sigma }$ ['SimHei'] #用   \nplt.rcParams['axes.unicode_minus'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False # 用来 ",
        "id": 268,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 20,
        "text": "我已经创建了一个全面的EDA分析脚本，这个脚本将进行以下分析：",
        "id": 269,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "1.数据概览",
        "id": 270,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 32,
        "text": "·显示数据基本信息 (数据类型、非空值数量等)·显示数据统计描述 (均值、标准差、分位数等)",
        "id": 271,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "2.缺失值分析",
        "id": 272,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 24,
        "text": "·统计每个特征的缺失值数量和比例 ·只显示存在缺失值的特征 ",
        "id": 273,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "3.数值型特征分布分析",
        "id": 274,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 16,
        "text": "·识别所有数值型特征·绘制价格分布图",
        "id": 275,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 7,
        "text": "4.类别型特征分析",
        "id": 276,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 17,
        "text": "·识别所有类别型特征）绘制Top10品牌分布图",
        "id": 277,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "5.相关性分析 ",
        "id": 278,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 42,
        "length_tokens": 19,
        "text": "·计算数值型特征之间的相关性）绘制相关性热力图",
        "id": 279,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 280,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 43,
        "length_tokens": 50,
        "text": "我需要对price进行建模，使用 XGBoost  \n这里需要注意：  \n对日期变量regDate 和creatDate进行处理，  \n目前regDate和creatDate的格式类似 20040402  \n编写新的Python",
        "id": 281,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 43,
        "length_tokens": 28,
        "text": "我会帮你创建一个新的Python文件，使用XGBoost对二手车价格进行建模，并处理日期特征。",
        "id": 282,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 43,
        "length_tokens": 85,
        "text": "train_xgboost.py $+ 1 6 0 - 1 v$ 口 C # -\\*- coding: utf-8 -\\*- III 二手车价格预测－XGBoost模型 1 import pandas as pd import numpy as np from sklearn.model_selection import train_test_sp from sklearn.preprocessing import LabelEncoder import xgboost as xgb from sklearn.metrics import mean_squared_error，r import",
        "id": 283,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 43,
        "length_tokens": 19,
        "text": "sklearn.metrics import mean_squared_error，r import matplotlib.pyplot as plt from datetime import datetime ",
        "id": 284,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 285,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 12,
        "text": "1、评估中增加MAE指标的评估",
        "id": 286,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 54,
        "text": "2、使用 测试集 used_car_testB_20200421.csv,对数据进行预测  \n预测结果写入到 used_car_sample_submit.csv,按照这个格式，即SaleID，price  \n将price字段写入。最终生成新的submit结果文件",
        "id": 287,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 20,
        "text": "我会帮你修改代码，增加MAE评估指标并添加测试集预测功能：",
        "id": 288,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 18,
        "text": "train_xgboost.py $+ 7 4 - 2 8 <$ ",
        "id": 289,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 55,
        "text": "from sklearn.model_selection import train_test_sp   \nfrom sklearn.preprocessing import LabelEncoder   \nimport xgboost as xgb   \nfrom sklearn.metrics import mean_squared_error，r   \nfrom sklearn.metrics import mean_squared_error，r   \nimport matplotlib.pyplot as plt   \nfrom datetime import datetime   \n",
        "id": 290,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 44,
        "length_tokens": 77,
        "text": "pyplot as plt   \nfrom datetime import datetime   \nimport seaborn as sns   \n12hidden lines day $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ int(date_str[6:8]) return pd.Series([year，month，day]，index=['   \ndef load_and_process_data():   \ndef nrocess data7data Yahel encoders=None istn ",
        "id": 291,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 292,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 45,
        "length_tokens": 30,
        "text": "查看这些分类特征的 唯一值的个数我会修改代码来查看每个分类特征的唯一值个数：",
        "id": 293,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 294,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 45,
        "length_tokens": 19,
        "text": "train_xgboost.py $+ 3 8 { \\big . } V$ ",
        "id": 295,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 45,
        "length_tokens": 92,
        "text": "def analyze_categorical_features(data): 111 分析分类特征的唯一值个数 11I categorical_features $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['name'，'model'，'bra print(\"\\n分类特征分析：\") print(\"-\" \\* 50) for feature in categorical_features: if feature in data.columns: unique_values $\\mathbf { \\sigma } = \\mathbf { \\sigma }",
        "id": 296,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 45,
        "length_tokens": 66,
        "text": "ue_values $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data[feature].nunique print(f\"{feature}: {unique_values} 个l if unique_values $\\angle \\cdot \\angle$ 10：＃ 如果唯一值较 print(fv 具体值：{sorted(datalfea ",
        "id": 297,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 298,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 45,
        "text": "我在训练 xgboost的时候，现在验证结果是 rmse，想改成 mae[960] validation 0-rmse:551.36867 validation_1-rmse:1277. 40573",
        "id": 299,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 37,
        "text": "我会修改XGBoost模型的评估指标从RMSE改为MAE。需要修改两个地方：模型参数中的eval_metric和评估函数中的指标计算。",
        "id": 300,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 301,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 20,
        "text": "我已经修改了XGBoost模型的评估指标，主要做了以下更改：",
        "id": 302,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 19,
        "text": "1.在模型参数中，将eval_metric从默认的RMSE改为'mae':",
        "id": 303,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 304,
        "type": "image",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 305,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 56,
        "text": "将训练前的数据进行保存，方便后续直接使用python就是两个文件，即数据预处理的python，和模型训练和预测的python我会将代码拆分为两个文件：一个用于数据预处理和保存，另一个用于模型训练和预测。",
        "id": 306,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 307,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 8,
        "text": "首先，创建数据预处理文件：",
        "id": 308,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 82,
        "text": "data_preprocessing.py $+ 1 5 8 - 1 \\ √$   \n# -\\*- coding: utf-8 -\\*_   \n1II   \n二手车数据预处理   \n111   \nimport pandas as pd   \nimport numpy as np   \nfrom sklearn.model_selection import train_test_sp   \nfrom sklearn.preprocessing import LabelEncoder   \nimport joblib   \nimport os   \ndef process_date(date_st",
        "id": 309,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 17,
        "text": "rt joblib   \nimport os   \ndef process_date(date_str): 11I ",
        "id": 310,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "现在，创建模型训练和预测文件：",
        "id": 311,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 69,
        "text": "train_xgboost.py $+ 2 4 - 1 2 0 <$ 口 ， import pandas as pd import numpy as np from sklearn.model_selection import train_test_sp from sklearn.preprocessing import LabelEncoder import xgboost as xgb from sklearn.metrics import mean_squared_error，r import matplotlib.pyplot as plt from datetime import d",
        "id": 312,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 18,
        "text": "rt matplotlib.pyplot as plt from datetime import datetime import seaborn as sns import joblib ",
        "id": 313,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 47,
        "length_tokens": 10,
        "text": "我已经将代码拆分为两个文件：",
        "id": 314,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 315,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 9,
        "text": "我想进一步优化模型，有一些思路",
        "id": 316,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 124,
        "text": "1、当前日期类型数据采用的是原数据 $\\Rightarrow$ year， month， day  \n是否增加一个 日期diff，即基于base_date的日期diff  \n2、使用XGBoost进行训练，目前learning_rat $\\mathrm { e } { = } 0 . 1$ 是否要改成  \nlearning_rate = 0.01  \n另外n_estimators 可以增加，我发现 验证集的mae 和实际提交结  \n果的mae很接近。实际提交结果是548，在验证集的mae是546  \n帮我分析 这些思路是否可行",
        "id": 317,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 11,
        "text": "我来分析一下您提出的优化思路：",
        "id": 318,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 9,
        "text": "1.关于日期特征的优化：",
        "id": 319,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 111,
        "text": "·当前的日期处理方式是将日期拆分为年、月、日，这种方式虽然保留了时间的周期性特征，但确实没有很好地体现时间的连续性和相对关系。  \n·添加基于base_date的日期差值是一个很好的想法，因为：a.可以直接反映车辆的\"市场年龄\"b.相比分开的年月日，日期差值更能体现时间的连续性c.可以更好地捕捉时间对价格的线性影响",
        "id": 320,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "·建议实现方式：",
        "id": 321,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 55,
        "text": "·选择一个基准日期 (如数据集中最早的日期或固定的某个日期)·计算每条记录的日期与基准日期的天数差·保留原有的年月日特征 (因为可能存在季节性影响)",
        "id": 322,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 9,
        "text": "2.关于XGBoost参数调整:",
        "id": 323,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 48,
        "length_tokens": 66,
        "text": "）当前参数：learning_rat $\\mathsf { e } { = } \\boldsymbol { \\Theta } . 1$ ,n_estimator $s = 1 0 0 0$ 验证集MAE(546)和实际提交结果MAE(548)非常接近，这说明：",
        "id": 324,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 49,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 325,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 49,
        "length_tokens": 28,
        "text": "@train_xgboost. py 参考这个，帮我编写一个1ightgbm训练和预测的代码，新的Python",
        "id": 326,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 49,
        "length_tokens": 40,
        "text": "我来帮你编写一个使用LightGBM的训练和预测代码。LightGBM通常在处理大规模数据时比XGBoost更快，同时保持着相似的性能",
        "id": 327,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 49,
        "length_tokens": 97,
        "text": "$\\scriptstyle { \\vec { \\pmb { e } } }$ train_lightgbm.py $+ 1 7 4 - 1 \\ √$   \n# -\\*- coding: utf-8 -\\*-   \n二手车价格预测－LightGBM模型   \nIII   \nimport pandas as pd   \nimport numpy as np   \nimport lightgbm as lgb   \nfrom sklearn.metrics import mean_squared_error，r   \nimport matplotlib.pyplot as plt   \nimport",
        "id": 328,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 49,
        "length_tokens": 25,
        "text": "ror，r   \nimport matplotlib.pyplot as plt   \nimport seaborn as sns   \nimport joblib   \n#设置中文显示 ",
        "id": 329,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 50,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 330,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 50,
        "length_tokens": 25,
        "text": "@train_xgboost.py 参考这个，帮我编写一个catboost训练和预测的代码，新python文件",
        "id": 331,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 50,
        "length_tokens": 34,
        "text": "我来帮你创建一个使用CatBoost进行二手车价格预测的代码。我会参考XGBoost的实现，并针对CatBoost的特点进行优化。",
        "id": 332,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 50,
        "length_tokens": 85,
        "text": "train_catboost.py $+ 1 6 7 - 1 =$ # -\\*- coding: utf-8 -\\*- 111 二手车价格预测－CatBoost模型 11I import pandas as pd import numpy as np from catboost import CatBoostRegressor from sklearn.metrics import mean_squared_error，r import matplotlib.pyplot as plt import seaborn as sns import joblib #设置中文显示 ",
        "id": 333,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 51,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 334,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 51,
        "length_tokens": 29,
        "text": "都有哪些特征工程的思路，可以筛选一些重要的，然后使用CatBoost进行建模和预测，给我新的Python代码",
        "id": 335,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 51,
        "length_tokens": 38,
        "text": "我来为你创建一个结合高效特征工程和CatBoost建模的完整解决方案。我会选择最重要的特征工程思路，并实现完整的代码。",
        "id": 336,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 51,
        "length_tokens": 93,
        "text": "...e_engineering_and_catboost.py $+ 4 2 6 - 1 \\ √$ □ < # -\\*- coding: utf-8 -\\*- 1I 二手车价格预测－高级特征工程与catBoost建模 III import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns from catboost import CatBoostRegressor，Pool from sklearn.metrics import mean_squared_error，m ",
        "id": 337,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 51,
        "length_tokens": 24,
        "text": " from sklearn.metrics import mean_squared_error，m from sklearn.model_selection import train_test_sp import joblib imbort datetime ",
        "id": 338,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 339,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 16,
        "text": "刚才的特征工程，帮我总结到 特征工程.md 中",
        "id": 340,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 14,
        "text": "特征工程.md>#二手车价格预测特征工程总结",
        "id": 341,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 11,
        "text": "1#二手车价格预测特征工程总结",
        "id": 342,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 6,
        "text": "##1.时间特征",
        "id": 343,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 23,
        "text": "时间特征是二手车价格预测中的关键因素，我们对原始的日期数据进行了以下处理：",
        "id": 344,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 11,
        "text": "$7$ ###1.1基础时间特征",
        "id": 345,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 84,
        "text": "8 -\\*\\*车辆年龄\\*\\*：计算车辆从注册到创建记录的天数和年数  \n9 -\\*\\*注册日期分解\\*\\*：将注册日期拆分为年、月、日三个独立特征  \n10 ，\\*\\*创建日期分解\\*\\*：将创建日期拆分为年、月、日三个独立特征",
        "id": 346,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 347,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 10,
        "text": "12###1.2高级时间特征 ",
        "id": 348,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 129,
        "text": "13 \\*\\*车龄分段 $^ { * * }$ ：将车龄划分为不同区间（0-1年、1-3年、3-5年、5-10年、10年以  \n上）  \n14 \\*\\*季节特征\\*\\*：从月份计算季度信息  \n15 -\\*\\*是否为新车\\*\\*：根据车龄判断是否为新车（使用年限<1年)  \n16 -\\*\\*每年行驶公里数 $^ { * * }$ ：公里数除以使用年限  \n17",
        "id": 349,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "18##2.车辆特征 ",
        "id": 350,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 14,
        "text": "$2 0 、$ ###2.1缺失值处理",
        "id": 351,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 31,
        "text": "21-为每个数值型特征创建缺失标记（_missing)  \n22-使用中位数填充缺失值",
        "id": 352,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 15,
        "text": "$2 4 、$ ###2.2特征交互 ",
        "id": 353,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 52,
        "length_tokens": 21,
        "text": "25 -\\*\\*功率与排量比\\*\\*：衡量车辆性能指标 ",
        "id": 354,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 53,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 355,
        "type": "text",
        "file_name": "18.1-分析式AI基础"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "不同领域的AI算法",
        "id": 0,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "不同领域的AI算法",
        "id": 2,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 2,
        "length_tokens": 65,
        "text": "·金融行业的应用场景  \n个人金融、公司金融、金融机构  \n渠道运营、风险管理、资金交易、数字财务  \n制造行业：缺陷检测快消行业：供应链补货  \nAI大赛：二手车价格预测  \n如何通过特征工程，进行模型调优",
        "id": 3,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 4,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "金融行业的应用场景",
        "id": 5,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "Fintech应用场景",
        "id": 6,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "Fintech: ",
        "id": 7,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 18,
        "text": "Financial $^ +$ technology，通过科技手段，使得金融服务变得更加效率",
        "id": 8,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 34,
        "text": "金融业务：保险、银行、券商、基金需要有科技为其支撑。此外，互联网公司也在开展金融业务，如蚂蚁金服",
        "id": 9,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 15,
        "text": "高盛集团的总裁宣称：Weareatech firm.",
        "id": 10,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 26,
        "text": "近几年，摩根大通集团约有1/3的分析师和员工被逼迫加入编程课程学习",
        "id": 11,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 12,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 4,
        "length_tokens": 10,
        "text": "需求驱动技术发展需求驱动人才发展",
        "id": 13,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "银行不同部门的应用场景",
        "id": 14,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "1、个人金融：",
        "id": 15,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 24,
        "text": "个人金融部门利用数据算法为客户提供个性化服务，比如客户画像与精准营销、家庭财务规划",
        "id": 16,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "2、公司金融：",
        "id": 17,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 20,
        "text": "公司金融部门通过数据算法优化企业金融服务，比如：企业信用评估、供应链金融",
        "id": 18,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "3、金融机构：",
        "id": 19,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "对金融机构客户提供服务，运用银行自身资源，开展负债业务、资产业务和中间业务等，以获取综合效益。",
        "id": 20,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "4、渠道运营：",
        "id": 21,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 21,
        "text": "渠道运营部门利用数据算法提升客户体验和运营效率，比如客户行为分析、网点运营管理",
        "id": 22,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "5、风险管理：",
        "id": 23,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 26,
        "text": "风险管理是银行的核心职能之一，主要涉及：风险建模，市场风险预测，合规与监控",
        "id": 24,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "6、资金交易：",
        "id": 25,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 19,
        "text": "资金交易部门利用数据算法提升交易效率和风险管理比如算法交易、市场趋势预测",
        "id": 26,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 6,
        "text": "7、数字财务：",
        "id": 27,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 5,
        "length_tokens": 23,
        "text": "数字财务部门通过数据算法优化财务管理，比如财务预测与决策，智能融资决策",
        "id": 28,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "个人金融 ",
        "id": 29,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 7,
        "length_tokens": 8,
        "text": "客户流失分析与预警 ",
        "id": 30,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 7,
        "length_tokens": 11,
        "text": "场景：客户流失分析与预警 ",
        "id": 31,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "手机银行贷款页面优化",
        "id": 33,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "场景：手机银行贷款页面优化",
        "id": 34,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 8,
        "length_tokens": 35,
        "text": "：手机银行作为重要的媒介触点针对不同地域、不同客群、不同行为习惯的用户，匹配贷款产品千篇一律or猜你喜欢",
        "id": 35,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 36,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 37,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "标签落地应用 （易车案例）",
        "id": 38,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "因客定价",
        "id": 40,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "场景：因客定价 ",
        "id": 41,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 10,
        "length_tokens": 56,
        "text": "·利率可以基于借款人的信用、贡献度等因素进行差别化定价  \n优质客户 $\\Rightarrow$ 利率低一些  \n普通客户 $\\Rightarrow$ 利率高一些  \n优质客户的衡量可以参考信用评分卡",
        "id": 42,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 44,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "因客定价",
        "id": 45,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 36,
        "text": "某银行推出个人消费贷，采用“因客定价”策略，根据借款人的信用状况、贡献度等因素，差异化设定利率。",
        "id": 46,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "1.优质客户：低利率客户信息",
        "id": 47,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 55,
        "text": "姓名：张先生  \n信用评分：850分（分数区间：350-950分）  \n贡献度：高（长期存款客户，持有银行理财产品）  \n职业：大型企业高管  \n收入：稳定且高于平均水平",
        "id": 48,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "定价逻辑",
        "id": 49,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 27,
        "text": "信用评分高，违约风险低，对银行贡献度高，属于高价值客户职业和收入稳定，还款能力强。",
        "id": 50,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "利率设定",
        "id": 51,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 11,
        "length_tokens": 38,
        "text": "基准利率： $5 \\%$ 优惠利率： $4 . 2 \\%$ （基于客户信用和贡献度下调0.8个百分点）",
        "id": 52,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "因客定价",
        "id": 53,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 11,
        "text": "2.普通客户：较高利率客户信息",
        "id": 54,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 49,
        "text": "姓名：李先生  \n信用评分：650分（分数区间：350-950分）  \n贡献度：中（仅持有普通储蓄账户）  \n职业：自由职业者  \n收入：波动较大",
        "id": 55,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "定价逻辑",
        "id": 56,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 40,
        "text": "信用评分中等，有一定违约风险。  \n对银行贡献度一般，未达到优质客户标准。  \n职业和收入稳定性较差，还款能力存在不确定性。",
        "id": 57,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "利率设定",
        "id": 58,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 12,
        "length_tokens": 38,
        "text": "基准利率： $5 \\%$ 实际利率： $6 . 5 \\%$ （基于客户信用和贡献度上浮1.5个百分点）",
        "id": 59,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 14,
        "length_tokens": 21,
        "text": "长尾客群营销 （基于客户的潜力值及活跃度进行细分）",
        "id": 61,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 62,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "公司金融",
        "id": 63,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "贷款商机挖掘 ",
        "id": 64,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 72,
        "text": "建立分行级存量客户数据库一个数据库能装入分行XX×万零售客户一期建设若干授信敏感变量，包含个人反洗钱九要素，分行近一年12个月没有AUM数，四个季度结息数，以及是否为小微企业相关标识和信用卡持有情况",
        "id": 65,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 66,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 55,
        "text": "由于信用卡本身做了征信查询授权，就可以利用信用卡的贷后征信查询做信用模型，数据库的变量做白名单筛选。将总行产品预审模型到分行数据库跑数，生成最终准客户名单。",
        "id": 67,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 29,
        "text": "最终挑选出存量客户中符合贷款产品的准客户，交由三支队伍中的存量经营团队线下营销",
        "id": 68,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 1,
        "text": "分",
        "id": 69,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 2,
        "text": "C ",
        "id": 70,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "分行存量零售客户xxx万",
        "id": 71,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "小微标识客户名单xx万",
        "id": 72,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 16,
        "length_tokens": 2,
        "text": "白名单",
        "id": 73,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "贷款商机挖掘 ",
        "id": 74,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 22,
        "text": "零售大表：客户姓名，年龄，收入，人生阶段，资产层级，职…. ",
        "id": 75,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 33,
        "text": "企业客户表：客户姓名，年龄，企业名称，行业经营范围，企业成立时间，持股比例，是否专精特新企业纳税评级",
        "id": 76,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 47,
        "text": "字段所属表：所属库名，表名，字段名称，中文名称，字段类型，字段描述，字段备注，脱敏类型，安全等级，允许空值，统计口径是否主键，是否码值",
        "id": 77,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 22,
        "text": "意愿表：号码，姓名，性别，年龄，是否纳税A评级，营销响应分",
        "id": 78,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 79,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 16,
        "text": "XXX万零售客户（包括信用卡和非信用卡客群）",
        "id": 80,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "XX万小微客户 ",
        "id": 81,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 17,
        "length_tokens": 17,
        "text": "筛选营销响应分 $> 5 2 0$ 的客户 ",
        "id": 82,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 18,
        "length_tokens": 2,
        "text": "金融机构",
        "id": 83,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "金融机构大客户与交易相关性分析",
        "id": 84,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "场景：金融机构大客户与交易相关性",
        "id": 85,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 19,
        "length_tokens": 48,
        "text": "·市场上的波动会影响到金融机构大客户在我行的结算余额  \n·对当前市场波动率进行判断，并基于结算余额与市场波动率的相关性进行分析和预警",
        "id": 86,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "100 （%）率 wwus ",
        "id": 87,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 88,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 89,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 20,
        "length_tokens": 3,
        "text": "渠道运营 ",
        "id": 90,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "商圈生意机会地图",
        "id": 91,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "常住人群画像",
        "id": 92,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 21,
        "length_tokens": 3,
        "text": "区域消费等级",
        "id": 93,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 94,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "商圈生意机会地图",
        "id": 95,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 96,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 22,
        "length_tokens": 21,
        "text": "基于GeoHash编码的区域，计算区域的竞争压力指数（网点密集度）",
        "id": 97,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 98,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 22,
        "length_tokens": 16,
        "text": "结合人口密度分布，计算区域网点的生意机会地图",
        "id": 99,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 23,
        "length_tokens": 2,
        "text": "风险管理",
        "id": 100,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "金融风控模型",
        "id": 101,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "场景：金融数据分析与风险控制",
        "id": 102,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 24,
        "length_tokens": 38,
        "text": "在信贷领域中存在信用卡违约和欺诈的风险，通过用户行为数据，分析申请借款用户的信用状况，来判断是否存在逾期。",
        "id": 103,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 24,
        "length_tokens": 39,
        "text": "通过分析交易时间、交易金额、收款方等多维度数据，我们还可以对信用卡会否被盗刷进行预测，防止信用卡被盗刷的风险",
        "id": 104,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 24,
        "length_tokens": 21,
        "text": "此外，通过预测模型，我们还可以分析出哪些因素容易导致违约，从而加强产品的设计",
        "id": 105,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "金融风控模型",
        "id": 107,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 108,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 4,
        "text": "金融风控模型",
        "id": 109,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "评分卡模型: ",
        "id": 110,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 43,
        "text": "·评分卡模型是常用的金融风控手段之一  \n风控，就是风险控制，我们采取各种措施和方法，减少风险发生的  \n可能性，或风险发生时造成的损失",
        "id": 111,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 45,
        "text": "·根据客户的各种属性和行为数据，利用信用评分模型，对客户的信用进行评分，从而决定是否给予授信，授信的额度和利率，减少在金融交易中存在的交易风险",
        "id": 112,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 13,
        "text": "·按照不同的业务阶段，可以划分为三种：",
        "id": 113,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 47,
        "text": "贷前：申请评分卡（Application score card），称为A卡贷中：行为评分卡（Behaviorscorecard），称为B卡贷后：催收评分卡（Collectionscorecard），称为C卡",
        "id": 114,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 14,
        "text": "Thinking：A卡B卡C卡的数据源有何区别？",
        "id": 115,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 26,
        "length_tokens": 86,
        "text": "1）外部征信数据是A卡中用户的主要数据  \n2）对于复贷用户，已经有了历史平台表现，所以B卡通常不会再次查询用户的外部数据，而是利用历史平台表现 $\\Rightarrow$ 节省成本  \n3）c卡不会再次查询用户外部征信数据，主要利用历史贷款过程中，催收人员记录的用户表现作为主要数据",
        "id": 116,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "金融风控模型",
        "id": 117,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "评分卡模型: ",
        "id": 118,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 52,
        "text": "·客户评分 $\\mathbf { \\tau } = \\mathbf { \\tau }$ 基准分 $^ +$ 年龄评分 $+$ 性别评分 $+$ 婚姻状况评分 $+$ 学历评分 $+$ 贷款申请次数",
        "id": 119,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 46,
        "text": "Thinking:某客户年龄为27岁，性别为男， 婚姻状况为已婚， 学历为本科， 贷款申请次数为1次， 那么他的评分 $= ?$ ",
        "id": 120,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 72,
        "text": "650 (基准分) $+ 8$ (年龄评分) $+ ~ 4 \\AA$ （性别评分） $+ 8$ (婚姻 评分) $+ 1 2$ (学历评分) $^ +$ 13(贷款申请次数) $= 6 9 5$ ",
        "id": 121,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 12,
        "text": "Thinking：评分卡的最高分和最低分是多少？",
        "id": 122,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 33,
        "text": "最低分： $6 5 0 - 8 - 2 - 3 + 1 - 8 = 6 3 0$ ",
        "id": 123,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 39,
        "text": "最高分： $6 5 0 + 1 3 + 4 + 8 + 1 2 + 1 3 = 7 0 0$ ",
        "id": 124,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 125,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "Case: 基于评分卡的风控模型开发 ",
        "id": 126,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "Project：基于评分卡的风控模型开发 ",
        "id": 127,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 27,
        "text": "·数据集GiveMeSomeCredit，15万样本数据https://www.kaggle.com/c/GiveMeSomeCredit/data",
        "id": 128,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 13,
        "text": "－基本属性：包括了借款人当时的年龄",
        "id": 129,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 17,
        "text": "一偿债能力：包括了借款人的月收入、负债比率",
        "id": 130,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 44,
        "text": "－信用往来：两年内35-59天逾期次数、两年内60-89天逾期次数、两年内90天或高于90天逾期的次数",
        "id": 131,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 23,
        "text": "－财产状况：包括了开放式信贷和贷款数量、不动产贷款或额度数量。",
        "id": 132,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "一其他因素：包括了借款人的家属数量",
        "id": 133,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 22,
        "text": "一时间窗口：自变量的观察窗口为过去两年，因变量表现窗口为未来两年",
        "id": 134,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 135,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "资金交易 ",
        "id": 136,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "外汇市场预测",
        "id": 137,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "场景：外汇市场预测",
        "id": 138,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 57,
        "text": "·对外汇市场进行预测，进行金融产品设计比如两个月美债和人民币倒挂激增，再看欧元，是否做个三角套汇（是否有套利空间，如果银行推广这个商品银行是有收益的，对客户也是有收益的）",
        "id": 139,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "1）波动规律分析法",
        "id": 140,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 30,
        "text": "通过外汇市场行情的波动进行分析，认为之前的行情变化规律和后市行情的变化规律有一定的参照性",
        "id": 141,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "2）基本面分析法",
        "id": 142,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 54,
        "text": "适合中长期行情，货币的强弱反映该国经济的好坏，尽管中间会有暂时性的波动，但从长期来看，它的价位会最终回归到与经济状况相匹配的位置上。",
        "id": 143,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "3）技术分析法",
        "id": 144,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 15,
        "text": "比如MACD、RSI、移动平均线等指标作为分析依据",
        "id": 145,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 146,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "期货套利模型",
        "id": 147,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "场景：期货套利模型",
        "id": 148,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 31,
        "length_tokens": 117,
        "text": "·影响某个品种的涨跌因素非常多（自身基本面、宏观经济、原材料价格等）  \n·如果只做单边交易 $\\Rightarrow$ 遇到突发事件，会造成剧烈波动，导致平仓  \n·套利交易可以针对单品种跨期，跨品种交易  \n两个合约的相关性极高，一多一空，可以对冲掉  \n$90 \\%$ 以上不确定因素 $\\Rightarrow$ 只要核心逻辑正确的，大概  \n率是赚钱的",
        "id": 149,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 31,
        "length_tokens": 35,
        "text": "Thinking: 空沪金&多伦敦金，在初期各投资50%在国内和国外，某一时期能稳定获利， 需要注意什么？",
        "id": 150,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 151,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 152,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "数字财务",
        "id": 153,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 7,
        "text": "资金流入流出预测 ",
        "id": 154,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "场景：资金流入流出预测 ",
        "id": 155,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 19,
        "text": "· https://tianchi.aliyun.com/competition/entrance /231573/information ",
        "id": 156,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 34,
        "text": "·数据集一共包括4张表：用户基本信息数据、用户申购赎回数据、收益率表和银行间拆借利率表",
        "id": 157,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 22,
        "text": "2.8万用户，284万行为数据，294天拆解利率，427天收益率",
        "id": 158,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 27,
        "text": "2013-07-01到2014-08-31，预测2014年9月的申购和赎回",
        "id": 159,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 33,
        "length_tokens": 158,
        "text": "1e8 1.00 0.75 IL. ld. 0.50   \nreeeett 0.25 0.00 -0.25 -0.50 -0.75 -1.00 1 2 3 4 5 6 7 8 9 121314 15 1617181920 21 2223 24 2526 27 282930 31 date 1e8   \nfaaaett 105005 1 中 L山 -1.0 1 2 3 4 5 6 7 8 9 101112 1314 151617181920 21 22 23 24 25262728293031 date ",
        "id": 160,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "财务数据可视化报表",
        "id": 161,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 34,
        "length_tokens": 11,
        "text": "场景：财务数据可视化报表",
        "id": 162,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 34,
        "length_tokens": 14,
        "text": "数据提取 数据分析 N> BI看板 二 运营建议",
        "id": 163,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 165,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "银行数智化面临的挑战 ",
        "id": 166,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "反欺诈",
        "id": 167,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 2,
        "text": "授信",
        "id": 168,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 2,
        "text": "运营 ",
        "id": 169,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 15,
        "text": "营销：个人或团体的羊毛甚至职业化羊毛党",
        "id": 170,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 14,
        "text": "申请：从个人/企业主体，转变为黑产主体",
        "id": 171,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 20,
        "text": "交易：从一方欺诈演变为更为隐蔽的三方欺诈",
        "id": 172,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 70,
        "text": "$$\n\\begin{array} { l } { 1 } \\\\ { 1 \\qquad 1 \\qquad } \\\\ { 1 \\qquad \\quad 1 } \\\\ { 1 \\qquad \\quad -- \\qquad - -- \\qquad -- \\qquad 1 } \\end{array}\n$$",
        "id": 173,
        "type": "equation",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 48,
        "text": "贷前信审：难以挖掘边界客户不利于精准审核/预授信/授信贷中风控：处理更多数据维度时难以做到实时化的再审核与放款",
        "id": 174,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 175,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 22,
        "text": "贷后管理：人工检测难以完成大批量、复杂行为数据下的风险状态评估",
        "id": 176,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 34,
        "text": "操作风险：人员操作、制度漏洞、监管缺失等造成的操作风险，迫切需要从运营、数据安全等层面加强对风险管控",
        "id": 177,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 35,
        "length_tokens": 33,
        "text": "流动性风险：银行产品竞争日趋激烈，风险的实时识别、资金流入流出的预测成为新挑战制造行业应用场景",
        "id": 178,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 179,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 17,
        "text": "螺栓扭矩曲线识别与缺陷检测 ",
        "id": 180,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 5,
        "text": "·业务场景：",
        "id": 181,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 15,
        "text": "螺栓是否拧紧对于汽车安全至关重要",
        "id": 182,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 16,
        "text": "现在的方法：技术人员只检测最终点是否在某个范围之内",
        "id": 183,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "可能的问题：",
        "id": 184,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 46,
        "text": "实际上，螺栓需要经过一个平台期，再最终达到规定的范围窗口内，安全质量会更高。否则只检测最终点，而没有达到平台期，可能多年之后会有安全隐患",
        "id": 185,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 186,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 38,
        "length_tokens": 17,
        "text": "螺栓扭矩曲线识别与缺陷检测 ",
        "id": 187,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 38,
        "length_tokens": 128,
        "text": "·提出的数据分析解决方案：  \n对完整的扭矩曲线进行分析，检测：  \n1）是否存在平台期，以及平台期的长度  \n2）是否在平台期之前，存在曲线抖动，计算抖动的次数(扭矩爬坡的抖动情况也是螺栓拧紧质量的重要特征)  \n通过数据分析可以提取螺栓扭矩中的重要特征，从而对原  \n有的螺栓拧紧标准进行更新 (之前只对最终点设立标准)",
        "id": 188,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 189,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "车身表面缺陷检测 ",
        "id": 190,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 191,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 192,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "车身表面缺陷检测 ",
        "id": 193,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 194,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 195,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "快消行业应用场景",
        "id": 196,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "什么时候有个精准的预估？？？",
        "id": 197,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 198,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 44,
        "length_tokens": 6,
        "text": "AI应用场景思考",
        "id": 199,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 44,
        "length_tokens": 20,
        "text": "在日常工作中，您认为有哪些分析式AI与生成式AI的应用场景",
        "id": 200,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 44,
        "length_tokens": 126,
        "text": "客户流失分析与预警  \n因客定价  \n长尾客群营销  \n贷款商机挖掘  \n商圈生意机会地图  \n基于评分卡的风控模型开发  \n期货套利模型  \n资金流入流出预测  \n对公授信客户逾期分析  \n百万客群经营  \n反洗钱  \n贷款集中度分析  \n手机银行贷款页面优化  \n贷款质量迁徙率与客户标签分析  \n专精特新客群营销  \n公司/机构财报分析  \n营业厅智能推荐  \n缺陷检测  \n供应链补货预测",
        "id": 201,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 202,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 45,
        "length_tokens": 13,
        "text": "AI大赛：二手车价格预测（进阶）",
        "id": 203,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 46,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 204,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 205,
        "type": "table",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 206,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 10,
        "text": "：评价标准MAE(Mean Absolute Error):",
        "id": 207,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 92,
        "text": "若真实值为 $y = ( y _ { 1 } , y _ { 2 } , \\cdots , y _ { n } )$ ，模型的预测值为 $\\hat { y } = ( \\hat { y } _ { 1 } , \\hat { y } _ { 2 } , \\dots , \\hat { y } _ { n } )$ ，那么该模型的MAE计算公式为",
        "id": 208,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 45,
        "text": "$$\nM A E = \\frac { \\sum _ { i = 1 } ^ { n } | y _ { i } - \\hat { y } _ { i } | } { n } .\n$$",
        "id": 209,
        "type": "equation",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 57,
        "text": "例如，真实值 $y = ( 1 5 , 2 0 , 1 2 )$ ，预测值 $\\hat { y } = ( 1 7 , 2 4 , 9 )$ ，那么这个预测结果的MAE为",
        "id": 210,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 54,
        "text": "$$\nM A E = { \\frac { | 1 5 - 1 7 | + | 2 0 - 2 4 | + | 1 2 - 9 | } { 3 } } = 3 .\n$$",
        "id": 211,
        "type": "equation",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 16,
        "text": "MAE是L1IoSS，MAE越小模型越准确 ",
        "id": 212,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 47,
        "length_tokens": 10,
        "text": "·提交结果，与sample_submit.csv中的格式一致",
        "id": 213,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 214,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 4,
        "text": "祖传参数：",
        "id": 215,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 131,
        "text": "·Step1，数据加载  \n原始数据是用空格分隔  \n·Step2，数据探索  \n数据整体情况  \n查看缺失值，缺失值可视化  \n查看label的分布（该项目中price为label）  \nmodel $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ xgb. XGBRegressor(n_estimator $= 2 0 0 0$ ， learning_rate=0.1,subsample=0.8， colsample_bytree=0.8,min_child_samples $\\scriptstyle : = 3$ ，eval_metric $\\mathb",
        "id": 216,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 69,
        "text": "_samples $\\scriptstyle : = 3$ ，eval_metric $\\mathbf { \\Phi } = { \\bf { \\dot { \\Phi } } }$ auc'  \nreg_lambda ${ } _ { , = 0 }$ . 5,max depth $= 1 5$ ， tree method $\\ P$ gpu hist' )",
        "id": 217,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 218,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 25,
        "text": "Step3，特征选择Step4，模型训练使用XGBoost，超参数设置·Step5，模型预测",
        "id": 219,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 220,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 221,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "Thinking: 如何进行特征工程？",
        "id": 222,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 25,
        "text": "1．数据预处理加载训练集和测试集数据，合并数据，便于统一进行特征工程。",
        "id": 223,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 5,
        "text": "2．特征工程",
        "id": 224,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 73,
        "text": "·创建时间特征（如车龄、注册季节等）。  \n·创建车辆特征（如功率、品牌-车型组合、异常值处理等）。  \n·创建统计特征（如品牌均价、品牌价格比等）。  \n·编码分类特征（如频率编码、CatBoost分类特征标记）。",
        "id": 225,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "3．特征选择与数据准备",
        "id": 226,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 49,
        "length_tokens": 65,
        "text": "·删除无用特征：SaleID，name，offerType，seller（所有车offerType $\\scriptstyle \\cdot = 0$ ,seller只有1个为1，其他都为0)·确认所有分类特征被正确标记。  \n·转换分类特征为 category 类型。",
        "id": 227,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 50,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 228,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 50,
        "length_tokens": 97,
        "text": "def create_time_features(data): print(\"创建时间特征...\") # 转换日期格式 data['regDate'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(data['regDate'], format='%Y%m%d', errors $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ coerce') data['creatDate'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.to_datetime",
        "id": 229,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 50,
        "length_tokens": 104,
        "text": "bf { \\sigma } = \\mathbf { \\sigma }$ pd.to_datetime(data['creatDate'], forma $\\mathrel { \\mathop = } \\stackrel { \\prime } { }$ %Y%m%d', errors $\\ c = \\ \"$ coerce') # 处理无效日期 data.loc[data['regDate'J.isnul(), 'regDate'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.to_datetime('20160101', format='%Y%m%d",
        "id": 230,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 50,
        "length_tokens": 102,
        "text": "sigma }$ pd.to_datetime('20160101', format='%Y%m%d') data.loc[data['creatDate'J.isnull(), 'creatDate'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.to_datetime('20160101', format='%Y%m%d') #车辆年龄（天数） data['vehicle_age_days'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (data['creatDate'] - data['regDate']).",
        "id": 231,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 50,
        "length_tokens": 84,
        "text": "f { \\tau }$ (data['creatDate'] - data['regDate']).dt.days #修复异常值 data.loc[data['vehicle_age_days'] $< 0$ ,'vehicle_age_days'] = 0 #车辆年龄（年） data['vehicle_age_years'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data['vehicle_age_days'] / 365 ",
        "id": 232,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 233,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 102,
        "text": "# 注册年份和月份   \ndata['reg_year'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['regDate'].dt.year   \ndata['reg_month'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['regDate'].dt.month   \ndata['reg_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['regDate'].dt.day   \n#创建年份和月份   \ndata['creat_year'] $\\mathbf {",
        "id": 234,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 110,
        "text": "t.day   \n#创建年份和月份   \ndata['creat_year'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['creatDate'].dt.year   \ndata['creat_month'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['creatDate'].dt.month   \ndata['creat_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['creatDate'].dt.day   \n# 是否为新车（使用年限 ${ < } 1",
        "id": 235,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 121,
        "text": " data['creatDate'].dt.day   \n# 是否为新车（使用年限 ${ < } 1$ 年）   \ndata['is_new_car'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (data['vehicle_age_years']< 1).astype(int)   \n# 季节特征   \ndata['reg_season'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['reg_month'].apply(lambda x: $( \\times \\% 1 2 + 3 ) / / 3 )$ （22   ",
        "id": 236,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 121,
        "text": "y(lambda x: $( \\times \\% 1 2 + 3 ) / / 3 )$ （22   \ndata['creat_season'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['creat_month'].apply(lambda x: $( \\times \\% 1 2 + 3 ) / / 3 )$ （2号   \n# 每年行驶的公里数   \ndata['km_per_year'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['kilometer']/ (data['vehicle_age_years",
        "id": 237,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 23,
        "text": "tau }$ data['kilometer']/ (data['vehicle_age_years'] + 0.1) ",
        "id": 238,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 51,
        "length_tokens": 99,
        "text": "# 车龄分段data['age_segment'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.cut(data['vehicle_age_years'],bins=[0, 1, 3, 5, 10, 100],la $b e l s = \\tilde { \\lfloor 0 - 1 \\rfloor }$ 年','1-3年','3-5年','5-10年','10年以上])return data",
        "id": 239,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 240,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 11,
        "text": "Thinking: 时间特征对建模的重要性？",
        "id": 241,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 7,
        "text": "·反映业务本质 ",
        "id": 242,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 46,
        "text": "时间特征往往与业务场景密切相关。例如在二手车价格预测中，车辆的使用年限（车龄）直接影响其残值，通常车龄越大，价格越低。",
        "id": 243,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 7,
        "text": "·揭示数据变化趋势 ",
        "id": 244,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 38,
        "text": "时间特征可以帮助模型捕捉数据随时间变化的趋势和周期性。例如某些车型在特定年份或季节更受欢迎，价格可能更高。",
        "id": 245,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 3,
        "text": "辅助异常检测",
        "id": 246,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 52,
        "length_tokens": 32,
        "text": "时间特征有助于发现数据中的异常点，比如注册日期晚于创建日期、车龄为负等，这些异常会影响模型效果。",
        "id": 247,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 248,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 7,
        "text": "def create_car_features(data): ",
        "id": 249,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 8,
        "text": "print(\"创建车辆特征...\")",
        "id": 250,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 6,
        "text": "# 缺失值处理",
        "id": 251,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 72,
        "text": "numerical_features $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['power','kiometer''v0',v_1','v2''3','4',5'v_6','v_7''v8',v9','10','11','12',v_13',14'] for feature in numerical_features: ",
        "id": 252,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 65,
        "text": "# 标记缺失值   \ndata[f'{feature}_missing'] $=$ data[feature].isnull().astype(int) # 填充缺失值   \ndata[feature] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data[feature].fillna(data[feature].median()) ",
        "id": 253,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 254,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 73,
        "text": "对每个数值型特征，先生成一个“是否缺失”的二值特征，再用中位数填充缺失值。缺失本身可能蕴含信息（如某些车型的某项参数经常缺失），模型可以利用“缺失标记”捕捉这种隐含信号。",
        "id": 255,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 97,
        "text": "#将model转换为数值型特征   \ndata['model_num'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data['model'].astype('category').cat.codes   \n# 品牌与车型组合   \ndata['brand_model'] $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ data['brand'].astype(str) $+ _ { - } ^ { \\prime \\prime } +$ data['model'].astype(str) ",
        "id": 256,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 53,
        "length_tokens": 13,
        "text": "品牌与车型组合，细化区分不同细分市场",
        "id": 257,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 258,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 57,
        "text": "# 相对年份特征current_year $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ datetime.datetime.now().yeardata['car_age_from_now'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ current_year - data['reg_year']",
        "id": 259,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 117,
        "text": "# 处理异常值   \nnumerical_cols $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['power','kilometer','v_0']   \nfor col in numerical_cols:   \nQ1 = data[col].quantile(0.05)   \n$\\ Q 3 =$ data[col].quantile(0.95)   \n$1 \\mathsf { Q } \\mathsf { R } = \\mathsf { Q } \\mathsf { 3 } - \\mathsf { Q } \\mathsf { 1 }$   \ndata[",
        "id": 260,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 141,
        "text": "thsf { 3 } - \\mathsf { Q } \\mathsf { 1 }$   \ndata[ $\\mathfrak { f } \\{ \\mathsf { c o l } \\} \\_ { \\mathsf { - } } \\mathsf { o u t l i e r } ^ { \\prime } ] = ( ( \\mathsf { d a t a } \\lbrack \\mathsf { c o l } ] < ( \\mathsf { O 1 } - \\mathsf { 1 . 5 } ^ { \\star } \\mathsf { \\Pi } \\mathsf { I O R } ) ) \\m",
        "id": 261,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 105,
        "text": "{ \\star } \\mathsf { \\Pi } \\mathsf { I O R } ) ) \\mid ( \\mathsf { d a t a } \\lbrack \\mathsf { c o l } \\rbrack > ( \\mathsf { O 3 } + \\mathsf { 1 . 5 } ^ { \\star } \\mathsf { \\Pi } \\mathsf { I O R } ) ) )$ .astype(int)   \ndata $^ -$ ",
        "id": 262,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 263,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 3,
        "text": "return data ",
        "id": 264,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 54,
        "length_tokens": 70,
        "text": "对关键数值特征（如功率、公里数、排量）进行异常值检测，并生成异常标记，同时对异常值进行截断处理。异常值往往会影响模型的稳定性，通过标记和修正，既保留了异常信息，又减少了极端值对模型的干扰。",
        "id": 265,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 266,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 55,
        "length_tokens": 104,
        "text": "def create_statistical_features(data, train_idx):print(\"创建统计特征...\")# 仅使用训练集数据创建统计特征只用训练集数据做统计，避免把测试集泄漏到训练过train_data $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data.iloc[train_idx].reset_index(drop $\\circleddash$ True)# 品牌级别统计brand_stats $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_data.groupby('brand",
        "id": 267,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 55,
        "length_tokens": 113,
        "text": "au } = \\mathbf { \\tau }$ train_data.groupby('brand').agg(brand_price_mean $\\ c =$ ('price','mean'), 对每个品牌，统计其在训练集中的平均价格、brand_price_median $\\ c =$ ('price','median'), 中位数、标准差、样本数。brand_price_std $\\ c =$ ('price','std'), 品牌均价/中位价：反映该品牌车辆的市场定位brand_price_count $\\circleddash$ ('price','count') 和价值区间。).",
        "id": 268,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 55,
        "length_tokens": 134,
        "text": "ce_count $\\circleddash$ ('price','count') 和价值区间。).reset_index() 品牌价格标准差：反映该品牌车型价格的离散程度，间接体现品牌丰富度或车型跨度。# 合并统计特征品牌样本数：衡量品牌在数据集中的流行度。data $\\mathbf { \\tau } = \\mathbf { \\tau }$ data.merge(brand_stats, on $\\ c = \\ \"$ brand', how $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ left')# 相对价格特征（相对于平均价格）data['",
        "id": 269,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 55,
        "length_tokens": 58,
        "text": " = \\mathbf { \\rho }$ left')# 相对价格特征（相对于平均价格）data['brand_price_ratio'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data['brand_price_mean']/ data['brand_price_mean'].mean()return data",
        "id": 270,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 56,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 271,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 56,
        "length_tokens": 108,
        "text": "def encode_categorical_features(data):print(\"编码分类特征...\")# 目标编码的替代方案-频率编码categorical_cols $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['model','brand','bodyType','fuelType', 'gearbox','notRepairedDamage']for col in categorical_cols:# 填充缺失值data[col] $=$ data[col].filina('未知') 将所有分类特征的缺失值统一填充为’未知’，避免 NaN",
        "id": 272,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 56,
        "length_tokens": 145,
        "text": "data[col].filina('未知') 将所有分类特征的缺失值统一填充为’未知’，避免 NaN 导致模型报错#频率编码freq_encoding $=$ data.groupby(col).size() / len(data)频率编码能反映某一类别的“流行度”或“稀有度”，data[f'{col}_freq'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data[col].map(freq_encoding)有助于模型捕捉类别分布信息。#将分类变量转换为CatBoost可以识别的格式 对高基数类别（如车型、品牌）尤其有效，能缓解 one-for ",
        "id": 273,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 56,
        "length_tokens": 92,
        "text": "转换为CatBoost可以识别的格式 对高基数类别（如车型、品牌）尤其有效，能缓解 one-for col in categorical_cols: hot 编码维度爆炸的问题。data[col] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data[col].astype('str')频率编码是目标编码的无监督替代方案，避免了数据泄return data, categorical_cols 漏风险。",
        "id": 274,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 275,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 102,
        "text": "def feature_selection(data, categorical_cols): print(\"特征选择和最终数据准备...\") # 删除不再需要的列，所有车offerType $_ { = 0 }$ ,seller只有1个为1，其他都为0 drop_cols $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['regDate','creatDate','price','SalelD','name','offerType','seller','source'] data $\\mathbf { \\sigma } = \\mathbf { \\sigma",
        "id": 276,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 47,
        "text": "urce'] data $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ data.drop(drop_cols, axis $\\ c =$ 1, errors $\\ c = \\ c ^ { \\dagger }$ 'ignore') ",
        "id": 277,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 67,
        "text": "# 确保所有分类特征都被正确标记   \nif 'age_segment' not in categorical_cols and 'age_segment' in data.columns: categorical_cols.append('age_segment')   \nif 'brand_model' not in categorical_cols and 'brand_model' in data.columns: categorical_cols.append('brand_model') ",
        "id": 278,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 54,
        "text": "确保衍生出来的分段特征（如车龄分段、品牌-车型组合）被纳入分类特征列表。这些衍生特征往往有很强的业务意义，能提升模型对类别信息的理解。",
        "id": 279,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 37,
        "text": "#转换分类特征   \nfor col in categorical_cols: if col in data.columns: data[col] $=$ data[col].astype('category')   \nreturn data, categorical_cols ",
        "id": 280,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 67,
        "text": "category类型不仅节省内存，还能让CatBoost 等模型自动识别并高效处理类别特征。CatBoost能自动学习类别特征之间的高阶交互（如品牌$^ +$ 车型 $+$ 车龄分段），无需手动构造大量交叉特征。",
        "id": 281,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 282,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 58,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 283,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 58,
        "length_tokens": 91,
        "text": "def train_catboost_model(X_train, X_val, y_train, y_val, cat_features): print(\"\\n开始训练CatBoost模型...\") # 创建数据池 train_pool $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Pool(X_train, y_train, cat_features $\\ c =$ cat_features) val_pool $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Pool(X_val, y_val, cat_featur",
        "id": 284,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 58,
        "length_tokens": 112,
        "text": " \\mathbf { \\sigma }$ Pool(X_val, y_val, cat_features $\\ c =$ cat_features) # 设置模型参数 params $\\begin{array} { r } { { \\bf \\Psi } = \\left\\{ \\begin{array} { r l } \\end{array} \\right. } \\end{array}$ （2号 'iterations': 3000, 'learning_rate': 0.03, 'depth': 6, 'I2_leaf_reg': 3, \"bootstrap_type': 'Bayesian',",
        "id": 285,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 58,
        "length_tokens": 47,
        "text": "6, 'I2_leaf_reg': 3, \"bootstrap_type': 'Bayesian', 'random_seed': 42, 'od_type': 'Iter', 'od_wait': 100, 'verbose': 100, ",
        "id": 286,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 58,
        "length_tokens": 97,
        "text": "'loss_function': 'MAE', 'eval_metric': 'MAE' 'task_type': 'CPU', 'thread_count': -1 } #创建模型 model $\\mathbf { \\tau } = \\mathbf { \\tau }$ CatBoostRegressor(\\*\\*params) # 训练模型 model.fit( train_pool, eval_set $\\circeq$ val_pool, use_best_model $\\mid =$ True, plot $\\circleddash$ True model.save_model('pr",
        "id": 287,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 58,
        "length_tokens": 27,
        "text": "rue, plot $\\circleddash$ True model.save_model('processed_data/fe_catboost_model.cbm') return model ",
        "id": 288,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 59,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 289,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 60,
        "length_tokens": 9,
        "text": "Project: 二手车交易价格预测 ",
        "id": 291,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 292,
        "type": "image",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 5,
        "text": "Summary 特征工程）",
        "id": 293,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 13,
        "text": "《二手车价格预测》项目中的特征工程：",
        "id": 294,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 6,
        "text": "1．时间特征处理",
        "id": 295,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 95,
        "text": "日期格式转换：将注册日期、创建日期转为 day_diff，或者年、月、日等衍生特征。  \n衍生时间特征：如车龄（天/年）、注册/创建的年、月、日、季节、是否新车、每年行驶公里数、车龄分段等。  \n异常值修正：如注册日期晚于创建日期的情况归为合理默认值。",
        "id": 296,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 7,
        "text": "2．车辆属性特征 ",
        "id": 297,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 28,
        "text": "缺失值处理与标记：对数值型特征填充中位数，并生成缺失标记特征。",
        "id": 298,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 21,
        "text": "特征交互与衍生：如品牌-车型组合、车辆绝对年龄等 ",
        "id": 299,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 61,
        "length_tokens": 32,
        "text": "异常值检测与修正：对功率、公里数、排量等做异常值标记和截断，减少极端值影响。",
        "id": 300,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 5,
        "text": "Summary 特征工程）",
        "id": 301,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 7,
        "text": "3. 统计特征 ",
        "id": 302,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 78,
        "text": "品牌级别统计：基于训练集，统计每个品牌的均价、中位价、标准差、样本数。  \n相对价格特征：如品牌均价与全体均价的比值，反映品牌市场定位。  \n防止数据泄漏：统计特征只用训练集数据计算，保证评估公正性。",
        "id": 303,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 6,
        "text": "4．分类特征编码",
        "id": 304,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 22,
        "text": "缺失值统一填充： 所有分类特征缺失值填充为 ‘未知’。",
        "id": 305,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 28,
        "text": "频率编码：为每个类别特征生成其出现频率的数值特征，反映类别流行度。",
        "id": 306,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 22,
        "text": "类型转换：所有分类特征转为字符串或category 类型，便于CatBoost 原生处理。",
        "id": 307,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 9,
        "text": "5．特征选择与类型标准化",
        "id": 308,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 62,
        "length_tokens": 75,
        "text": "删除无用特征：如原始日期、ID、价格、冗余字段等。  \n补充衍生类别特征：如车龄分段、品牌-车型组合等，纳入分类特征列表。  \n类型标准化：所有分类特征转为category 类型，节省内存并提升模型兼容性。",
        "id": 309,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 63,
        "length_tokens": 4,
        "text": "Summary 特征工程",
        "id": 310,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 63,
        "length_tokens": 8,
        "text": "Thinking: 特征工程的价值？",
        "id": 311,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 63,
        "length_tokens": 23,
        "text": "特征工程决策模型上限，而模型（调参）只是把上限跑出来而已。",
        "id": 312,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 63,
        "length_tokens": 94,
        "text": "丰富的数据表达：通过多维度、多层次的特征衍生，极大提升了模型对业务本质的理解能力。  \n高效的类别特征利用：充分发挥 CatBoost 对类别特征的原生支持，避免 one-hot 维度爆炸，提升模型性能。  \n异常与缺失处理：通过缺失标记和异常值修正，提升模型鲁棒性和泛化能力。",
        "id": 313,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 63,
        "length_tokens": 115,
        "text": "Cursor进行特征工程，存在概率性的情况 $\\Rightarrow$ 可能处理会有问题，比如：将 power+model进行数值相加，实际上没有物理含义，增加了噪音。没有将训练集和测试集合并，单独处理的特征工程，可能测试集的编码缺失的情况对kilometers的分箱可能是［0，5，10，20]，并不能反应整体的数据集的情况等$\\Rightarrow$ 需要从业务角度，对特征工程进行验证",
        "id": 314,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 64,
        "length_tokens": 8,
        "text": "打卡：二手车价格预测",
        "id": 315,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 64,
        "length_tokens": 42,
        "text": "针对AI大赛：二手车价格预测，编写AI算法，进行预测，挑战分数<550 https://tianchi.aliyun.com/competition/entrance/231784/information ",
        "id": 316,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 64,
        "length_tokens": 31,
        "text": "训练集： used_car_train_20200313.csv测试集： used_car_testB_20200421.csv选择适合的模型特征工程",
        "id": 317,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 318,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 319,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 64,
        "length_tokens": 18,
        "text": "时间特征处理车辆属性特征统计特征分类特征编码异常值处理",
        "id": 320,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 65,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 321,
        "type": "text",
        "file_name": "19.1-不同领域的AI算法"
      },
      {
        "page": 1,
        "length_tokens": 3,
        "text": "DeepSeek使用",
        "id": 0,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "DeepSeek使用",
        "id": 2,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 2,
        "length_tokens": 47,
        "text": "·DeepSeek的创新   \nCASE：小球碰撞试验 (Cursor $+$ DeepSeek-R1)   \nDeepSeek私有化部署选择   \n·Ollama部署DeepSeek-R1   \nAPI调用DeepSeek ",
        "id": 3,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "DeepSeek的创新 ",
        "id": 4,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "DeepSeek-V3模型",
        "id": 5,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 6,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 4,
        "length_tokens": 55,
        "text": "DeepSeek-V3在推理速度上相较历史模型有了大幅提升。在目前大模型主流榜单中，DeepSeek-V3在开源模型中位列榜首，与世界上最先进的闭源模型不分伯仲。",
        "id": 7,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "DeepSeek-V3的训练成本",
        "id": 8,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 9,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 21,
        "text": "DeepSeek-V3的训练成本，假设H800的租用是\\$2/小时 ",
        "id": 10,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 5,
        "length_tokens": 80,
        "text": "DeepSeek-V3的推出是2024年12月，并没有太大波澜DeepSeek-R1火出圈，通过新的奖励机制GRPO (group relative policy optimization)，并使用规则类验证机制自动对输出进行打分。以V3为基础模型，一个多月内训练出了性能堪比GPT-o1的R1模型，成果非常亮眼。",
        "id": 11,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "DeepSeek-R1模型",
        "id": 12,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 13,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 14,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "DeepSeek-R1模型",
        "id": 15,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "DeepSeek-R1 ",
        "id": 16,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 96,
        "text": "DeepSeek-R1遵循MIT License，允许用户通过蒸馏技术借助R1训练其他模型。  \nDeepSeek-R1上线API，对用户开放思维链输出，通过设置model $\\models ^ { \\prime }$ deepseek-reasoner'即可调用。  \n2024-12-26 发布V3  \n2025-1-15 发布APP  \n2025-1-20 发布R1  \n多家企业宣布融合DeepSeek",
        "id": 17,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 7,
        "length_tokens": 83,
        "text": "MIT License是一种非常宽松的开源许可协议，允许用户自由地使用、修改、分发和商业化软件或模型。相比之下，Meta Llama的License相对严格，虽然LLaMA3是开源的，但许可协议限制了商业用途和对模型的修改，比如新的模型如果使用LLaMA，需要名称上带有LLaMA标识。",
        "id": 19,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 14,
        "text": "蒸馏小模型超越 OpenAl o1-mini ",
        "id": 20,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 64,
        "text": "在开源 DeepSeek-R1-Zero 和 DeepSeek-R1两个 660B 模型的同时，通过 DeepSeek-R1的输出，蒸馏了6 个小模型，其中32B和70B 模型在多项能力上实现了对标OpenAlo1-mini的效果。",
        "id": 21,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 22,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "DeepSeek的创新: MLA ",
        "id": 23,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 11,
        "text": "MLA (Multi-Head Latent Attention) ",
        "id": 24,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "Multi-Head Attention ",
        "id": 25,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 71,
        "text": "在\"Allyouneedisattention\"的背景下，传统的多头注意力（MHA，Multi-HeadAttention）的键值（KV）缓存机制事实上对计算效率形成了较大阻碍。缩小KV缓存（KVCache）大小，并提高性能，在之前的模型架构中并未很好的解决。",
        "id": 26,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 36,
        "text": "DeepSeek引入了MLA，一种通过低秩键值联合压缩的注意力机制， 在显著减小KV缓存的同时提高计算效率。",
        "id": 27,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 25,
        "text": "低秩近似是快速矩阵计算的常用方法，在MLA之前很少用于大模型计算。",
        "id": 28,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 66,
        "text": "从大模型架构的演进情况来看，Prefill和KVCache容量瓶颈的问题正一步步被新的模型架构攻克，巨大的KVCache正逐渐成为历史。（实际上在2024年6月发布的DeepSeek-V2就已经很好的降低了KVCache的大小)",
        "id": 29,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "DeepSeek的创新： DeepSeek-MoE ",
        "id": 31,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 54,
        "text": "V3使用了61个MoE (Mixof Expert混合专家)block，虽然总参数量很大，但每次训练或推理时只激活了很少链路，训练成本大大降低，推理速度显著提高。",
        "id": 33,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 10,
        "length_tokens": 85,
        "text": "MoE类比为医院的分诊台，在过去所有病人都要找全科医生，效率很低。但是MoE模型相当于有一个分诊台将病人分配到不同的专科医生那里。DeepSeek在这方面也有创新，之前分诊是完全没有医学知识的保安，而现在用的是有医学知识的本科生来处理分流任务",
        "id": 34,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 12,
        "text": "DeepSeek的创新： 混合精度框架",
        "id": 35,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 36,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 11,
        "length_tokens": 109,
        "text": "整个混合精度框架使用了FP8数据格式，但为了简化说明，只展示了线性算子（Linear Operator）的部分采用了混合精度框架，即在不同的区块里使用不同的精度来存储数据。我们知道精度越高，内存占用越多，运算复杂度越大。DeepSeek在一些不需要很高精度的模块，使用很低的精度FP8储存数据，极大的降低了训练计算量。",
        "id": 37,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 13,
        "text": "Thinking: 为什么DeepSeek计算速度快， 成本低?",
        "id": 38,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "·架构设计方面",
        "id": 39,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 30,
        "text": "DeepSeekMoE架构：在推理时仅激活部分专家，避免了激活所有参数带来的计算资源浪费。",
        "id": 40,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 22,
        "text": "MLA架构：MLA通过降秩KV矩阵，减少了显存消耗.",
        "id": 41,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "·训练策略方面",
        "id": 42,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 41,
        "text": "多token预测（MTP）目标：在训练过程中采用多token预测目标，即在每个位置上预测多个未来token，增加了训练信号的密度，提高了数据效率。",
        "id": 43,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 12,
        "length_tokens": 68,
        "text": "混合精度训练框架：在训练中，对于占据大量计算量的通用矩阵乘法（GEMM）操作，采用FP8精度执行。同时，通过细粒度量化策略和高精度累积过程，解决了低精度训练中出现的量化误差问题。",
        "id": 44,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 45,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "Thinking: 为什么DeepSeek-R1的推理能力强大？",
        "id": 46,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 51,
        "text": "·强化学习驱动：DepSeek-R1通过大规模强化学习技术显著提升了推理能力。在数学、代码和自然语言推理等任务上表现出色，性能与OpenAi的o1正式版相当。",
        "id": 47,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 50,
        "text": "·长链推理（CoT）技术：DeepSeek-R1采用长链推理技术，其思维链长度可达数万字，能够逐步分解复杂问题，通过多步骤的逻辑推理来解决问题",
        "id": 48,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 13,
        "length_tokens": 91,
        "text": "强化学习的作用：训练大模型，结合少量SFT，引入少量高质量监督数据（如数千个CoT示例）进行微调提升模型初始推理能力，再通过RL进一步优化，最终达到与OpenAIo1相当的性能长链推理CoT：CoT让AI模型逐步分解复杂问题，比如在智能客服、市场分析报告、AI辅助编程领域",
        "id": 49,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 50,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 146,
        "text": "DeepSeek-R1-Zero首次验证了纯强化学习在LLM中能显著增强推理能力的可行性，即无需SFT，仅通过RL即可激励模型学会长链推理和反思。提出了多阶段训练策略 (冷启动 ${ \\tt > R L - > S F T - > }$ 全场景RL），有效兼顾准确率与可读性，产出 DeepSeek-R1，性能比肩 OpenAl-o1-1217。展示了知识蒸馏在提升小模型推理能力方面的潜力，并开源多个大小不一的蒸馏模型（1.5B\\~70B)",
        "id": 52,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 53,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 15,
        "length_tokens": 14,
        "text": "DeepSeek +Cursor使用:物理世界中的小球碰撞",
        "id": 54,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "DeepSeek +Cursor使用",
        "id": 55,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 22,
        "text": "在File $- >$ Preferences $$ Cursor Settings 中设置deepseek-r1和deepseek-v3模型",
        "id": 56,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 2,
        "text": "× ",
        "id": 57,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 22,
        "text": "在OpenAIAPIKey中进行设置，这里是采用OpenAI的协议，可以使用自定义的模型",
        "id": 58,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 1,
        "text": "区",
        "id": 59,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 1,
        "text": "区",
        "id": 60,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "Model Names ",
        "id": 61,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 21,
        "text": "Add new models to Cursor. Often used to configure the latest OpenAl models or OpenRouter models. ",
        "id": 62,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 63,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "claude-3.5-sonnet ",
        "id": 64,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 65,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 2,
        "text": "√ ",
        "id": 66,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "deepseek-r1 ",
        "id": 67,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 68,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "deepseek-v3 ",
        "id": 69,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 37,
        "text": "OpenAl Key = skQ2gN9CgZOz9jrzjCCHkijalkUyaXpHS6xssmmkl327kkib0G ",
        "id": 70,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 30,
        "text": "OpenAl Base URL $\\mathbf { \\tau } = \\mathbf { \\tau }$ http://chatapi.littlewheat.com/v1 ",
        "id": 71,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "设置好deepseek-r1和deepseek-v3模型之后，可以在Cursor中选择该模型进行编程",
        "id": 72,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "cursor-small ",
        "id": 73,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 28,
        "text": "+ Add context一个红色的小球在三角区域内运动，碰到边界就反弹，编写一个HTML网页",
        "id": 74,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "OpenAl API Key ",
        "id": 75,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "deepseek-r1 ",
        "id": 76,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "normal/agentsubmit ",
        "id": 77,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 1,
        "text": "：",
        "id": 78,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 24,
        "text": "With your Cursor Pro subscription, you do not need to use your own OpenAl key unless you're using custom models. ",
        "id": 79,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 2,
        "text": "Dismiss ",
        "id": 80,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 6,
        "text": "Turn OffOpenAlKey ",
        "id": 81,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 32,
        "text": "You can putin your OpenAl key to use Cursor at public API costs.Note: this can cost more than pro and won't work for custom model features. ",
        "id": 82,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 83,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 6,
        "text": "Override OpenAl Base URL γ",
        "id": 84,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "http://chatapi.littlewheat.com/v1 ",
        "id": 85,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 11,
        "text": "CASE: 物理世界中的小球碰撞",
        "id": 86,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 4,
        "text": "<think> ",
        "id": 87,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 24,
        "text": "个红色的小球在三角区域内运动，碰到边界就反弹编写一个HTML网页",
        "id": 88,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 66,
        "text": "好的，我现在需要帮助用户创建一个在三角区域内反弹的小球的HTML页面。首先，我得考虑如何实现这个效果。用户想要一个红色小球在三角形内运动，碰到边界反弹。我需要用HTML5的Canvas来绘制图形和动画。",
        "id": 89,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 72,
        "text": "首先，我得确定三角形的边界。三角形通常有三个边，但检测碰撞可能会比较复杂。因为Canvas的路径是矢量，可能需要用数学方法来判断小球是否碰到三角形的边。或者，我可以将三角形视为三个线段，分别检测碰撞。",
        "id": 90,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 66,
        "text": "接下来是小球的运动。小球有位置(x,y）和速度（dx,dy)，每次动画帧更新位置。当碰到边界时，速度方向改变。但是，三角形的边界是斜边，所以反弹方向不能简单取反，需要计算反射向量。",
        "id": 91,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 64,
        "text": "这可能会比较复杂。用户可能希望简化处理，比如将三角形视为三个墙壁，每次碰撞后根据碰到的边反转速度的相应分量。或者，可能需要计算小球到各边的距离，判断是否发生碰撞，然后调整速度方向。",
        "id": 92,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 93,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 69,
        "text": "考虑到用户可能希望代码简单，我先考虑一个等边三角形，顶点在上方，底边水平。这样三条边分别是左斜边、右斜边和底边。对于左右斜边，碰撞检测可能需要计算点是否在边的附近，并调整速度方向。",
        "id": 94,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 35,
        "text": "但这样做可能数学计算较多。或者，可以使用三个直线方程，检测小球的中心是否接近某条边，并计算反射方向。",
        "id": 95,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 94,
        "text": "另一个思路是使用边界框，将三角形的三个边作为反射面，当小球碰撞时，根据边的方向调整速度。例如，底边是水平的，碰撞时反转dy；左右边是斜的，碰撞时需要计算反射。这可能涉及到向量运算，比如计算反射向量。假设边的法线向量，然后根据入射速度计算反射速度。",
        "id": 96,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 51,
        "text": "不过，这样计算起来可能有点复杂，特别是对于初学者。有没有更简单的方法？比如，将三角形视为由三个线段组成，每次检测小球与这三个线段的碰撞，然后反弹。",
        "id": 97,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 41,
        "text": "或者，使用边界的斜率和小球的运动方向来判断碰撞。例如，当小球碰到左斜边时，根据边的斜率调整速度分量。",
        "id": 98,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 89,
        "text": "deepseek-r1会进行很长的思考，然后编写出HTML代码。编写的HTML代码运行可能不符合要求，需要进一步调整不过，这样可能需要较多的几何计算。为了简化，我可以假设三角形是一个等边三角形，三个边的方程已知，然后检测小球的中心是否接近某条边，并在碰撞时调整速度方向。",
        "id": 99,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 100,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 70,
        "text": "现在，我需要考虑如何表示三角形的边。例如，左斜边可能是从左上角到右下角，右斜边是从右上角到右下角，底边是水平的。假设三角形的顶点在画布的上中点，底边在底部。",
        "id": 101,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 39,
        "text": "接下来，小球的初始位置应该在三角形内部。当小球移动时，检查它是否超出了三角形的任何一边。如果超出，则反弹。",
        "id": 102,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 17,
        "length_tokens": 30,
        "text": "但如何判断点是否在三角形内？或者，当小球的中心碰到边时，视为碰撞。这可能需要进",
        "id": 103,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 11,
        "text": "CASE: 物理世界中的小球碰撞",
        "id": 104,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 11,
        "text": "基于之前的思考，帮我完善HTML",
        "id": 105,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 19,
        "text": "HTML样式有了调整，但是小球还是会飞出三角区域，需要进一步调整",
        "id": 107,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 4,
        "text": "<think> ",
        "id": 108,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 54,
        "text": "好吧，用户希望完善之前的HTML，但当前的代码已经实现了基本功能。首先，我需要仔细检查代码，看看哪些地方可以改进。注意到用户提到之前的功能是正确的，所以不能破坏现有逻辑。",
        "id": 109,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 48,
        "text": "首先，界面方面，原生的canvas边框比较单调，可以考虑添加背景色或者渐变效果，让画面更吸引人。比如给画布加个渐变背景，这样视觉效果更好。",
        "id": 110,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 58,
        "text": "然后，动画流畅度方面，当前的移动速度是固定的，用户可能想要更自然的运动。可以考虑调整速度参数，比如使用小数，让运动更平滑。或者添加随机的速度变化，但要注意不能改变原有反弹逻辑。",
        "id": 111,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 46,
        "text": "界面文字提示也是一个改进点。可以在页面下方添加说明文字，比如使用CSS在body中添加一个div，说明这是三角区域反弹球，这样用户更清楚演示内容。",
        "id": 112,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 37,
        "text": "另外，小球的外观可以优化，比如添加阴影效果或者高光，让它看起来更立体。在drawBall函数里，用ctx.shadow来增加立体感。",
        "id": 113,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 55,
        "text": "代码可读性方面，可以添加更多注释，尤其是碰撞检测的部分，虽然用户可能已经了解，但清晰的注释有助于维护。比如在checkCollisionWithEdge函数中解释参数A和B代表边的两个端点。",
        "id": 114,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 43,
        "text": "检查是否存在中文乱码，确保HTML的meta标签有设置UTF-8。原来的代码没有<metacharset>，需要补充，这样中文注释和可能的文本就不会乱码。",
        "id": 115,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 32,
        "text": "最后，考虑响应式布局，让画布在不同设备上居中显示。可以通过CSS的flex布局让canvas居中，提升用户体验。",
        "id": 116,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 56,
        "text": "综合这些点，逐步修改代码，确保每一处改动都不影响原有功能。比如添加meta标签，修改背景样式，增加文字提示，美化小球外观，并调整速度参数。同时保持代码结构清晰，注释准确。",
        "id": 117,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 4,
        "text": "</think> ",
        "id": 118,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 16,
        "text": "我将在原有功能不变的基础上做以下改进优化：",
        "id": 119,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 120,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "CASE: 物理世界中的小球碰撞",
        "id": 121,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 15,
        "text": "小球弹了之后，弹出去了啊，帮我检查代码",
        "id": 122,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "<think> ",
        "id": 123,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 48,
        "text": "好的，用户反馈说小球碰撞后弹出去了，我需要仔细检查代码中的碰撞检测逻辑。首先，查看checkCollisionWithEdge函数，注意到计算法线向量的方式可能有问题。",
        "id": 124,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 133,
        "text": "原计算法线方向的部分，使用的是最近的点的坐标减去起点A的坐标，再除以边长度，但这种计算是否垂直于边呢？假设边的向量是(B.x-A.x, B.y-A.y)，那么与其垂直的向量应该是（B.y - A.y，-(B.x - A.x)）或者相反方向。原代码中计算normal的x分量是(nearest.y -A.y)/edgeLength，这等于边的y分量除以长度，这可能错误地将边的方向当成了法线方向。",
        "id": 125,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 126,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 82,
        "text": "正确的法线应该使用边的垂直向量。比如，边向量是 (edgeX,edgeY)，则法线应该是(edgeY，-edgeX）方向，并进行单位化。原代码中使用的是从最近点减去A点后的处理，这可能导致了法线方向错误，导致反射后的速度方向不正确，出现弹出问题。",
        "id": 127,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 41,
        "text": "需要修改normal的计算方式，使用边向量取垂直向量，确保法线方向正确，从而正确反射速度，这样小球就不会弹出边界了。",
        "id": 128,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "</think> ",
        "id": 129,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 28,
        "text": "经过检查，碰撞检测中的法线方向计算存在微小误差。我们需要修正法线向量计算方式：",
        "id": 130,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 7,
        "text": "问题原因与修正说明：",
        "id": 132,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "1.原法线方向计算错误：",
        "id": 133,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 24,
        "text": "直接告诉deepseek-r1遇到的错误，修正后，小球会在三角区域内进行运动",
        "id": 134,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 35,
        "text": "旧代码使用的计算方式会导致法线方向与实际边向量方向不一致修正后直接通过边向量计算法向量，确保方向准确",
        "id": 135,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "2.反射公式正确性验证：",
        "id": 136,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 19,
        "length_tokens": 17,
        "text": "normal.x = edge.y / edgeLength 和 normal.y = -edge.x / ",
        "id": 137,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "CASE: 物理世界中的小球碰撞",
        "id": 138,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 21,
        "text": "考虑小球的重力，以及三角区域的支撑力，小球的弹力进行完善",
        "id": 139,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 15,
        "text": "每次运行，小球可以从随机的任意方向抛出",
        "id": 140,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "小球的弹力大一些",
        "id": 141,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 24,
        "text": "最后到地面都垂直弹跳了，不是应该还会滚动么，就是有水平的速度",
        "id": 142,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 10,
        "text": "下面增加一个刷新按钮，可以重新执行这个HTML",
        "id": 143,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 17,
        "text": "中文显示是乱码，另外考虑到手机显示， 页面需要做自适应",
        "id": 144,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 145,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 26,
        "text": "'hinking：当我们写程序的时候，什么时候用DeepSeek-V3-0324，什么时候用DeepSeek-R1?",
        "id": 146,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 25,
        "text": "V3-0324：日常编程、快速开发、前端代码生成、常规脚本任务。",
        "id": 147,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 26,
        "text": "R1：数学密集型计算、复杂算法、代码逻辑深度优化、需要推理过程的任务。",
        "id": 148,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 21,
        "length_tokens": 20,
        "text": "$\\Rightarrow$ 更擅长复杂算法实现，能优化逻辑并减少错误 ",
        "id": 149,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "DeepSeek私有化部署",
        "id": 150,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "私有化部署 (DeepSeek模型)",
        "id": 151,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 152,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "DeepSeek-R1蒸馏模型",
        "id": 153,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "私有化部署 (DeepSeek模型)",
        "id": 155,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 24,
        "length_tokens": 46,
        "text": "放出来的1.5B、7B、14B等模型是Qwen/Ilama借助R1推理强化调出来的\"蒸馏\"版本，不是真正的R1。真正",
        "id": 156,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 24,
        "length_tokens": 106,
        "text": "的DeepSeek-R1是671B全量版 deepseek-r1:1.5b--1-2G显存 deepseek-r1:7b--6-8G显存 deepseek-r1:8b--8G显存 deepseek-r1:14b--10-12G显存 deepseek-r1:32b--24G-48显存 deepseek-r1:70b--96G-128显存 deepseek-r1:671b--496GB ",
        "id": 157,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 158,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 24,
        "length_tokens": 14,
        "text": "https://modelscope.cn/search?search $\\ c =$ deepseek ",
        "id": 159,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "私有化部署 (DeepSeek模型)",
        "id": 160,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 161,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "私有化部署 (DeepSeek模型)",
        "id": 162,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 163,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "私有化部署 (DeepSeek模型)",
        "id": 164,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 165,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "私有化部署 （代码模型",
        "id": 166,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 167,
        "type": "table",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 28,
        "length_tokens": 49,
        "text": "基于DeepSeekMoE框架发布了拥有160亿和2360亿参数的DeepSeek-Coder-V2。  \n其中，激活参数仅为24亿和210亿，这包括了基础模型和指令模型。",
        "id": 168,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "VIIm使用",
        "id": 169,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 29,
        "length_tokens": 92,
        "text": "VIIm使用：是由伯克利大学LMSYS组织开源的LLM高速推理框架，用于提升LLM的吞吐量与内存使用效率。它通过PagedAttention技术高效管理注意力键和值的内存，并结合连续批处理技术优化推理性能。vLLM支持量化技术、分布式推理、与HuggingFace模型无缝集成等功能",
        "id": 170,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 29,
        "length_tokens": 38,
        "text": ":rve deepseek-ai/DeepSeek-R1-Distill-Qwen-32B--tensor-paralel-size2 --max-model-len32768--enforce-eager ",
        "id": 171,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 29,
        "length_tokens": 15,
        "text": "vllmserve，启动vLLM推理服务的命令",
        "id": 172,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 29,
        "length_tokens": 127,
        "text": "·deepseek-ai/DeepSeek-R1-Distill-Qwen-32B，Hugging Face 模型库中的模型名称，vLLM会尝试从 HF下载模型·--tensor-parallel-size 2，启用张量并行，在2个GPU上分布式运行模型 (适合32B大模型)·--max-model-len32768，设置模型的最大上下文长度（32K tokens），确保能处理长文本。·--enforce-eager，禁用cUDA Graph 优化 (可能在某些环境下更稳定，但性能稍低)",
        "id": 173,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "VIIm使用",
        "id": 174,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 48,
        "text": "Thinking：如果我在本地的ubuntu下面有/root/autodl-tmp/models/tclf90/deepseek-r1-distillqwen-32b-gptq-int4,如何使用vIIm进行推理？",
        "id": 175,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 59,
        "text": "vllmserve/root/autodl-tmp/models/tclf90/deepseek-r1-distll-qwen-32b-gptq-int4--tensor-parallel-size1--max-model-len 32768 --enforce-eager --quantization gptq --dtype half",
        "id": 176,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 20,
        "text": "关键改动：指定本地路径：替换HF模型名为你的本地路径。",
        "id": 177,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "--quantization gptq:显式声明使用GPTQ量化。",
        "id": 178,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 34,
        "text": "--dtype：设为half（FP16）或auto（自动选择），因为GPTQ本身是4-bit，但计算时需指定中间精度。",
        "id": 179,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 108,
        "text": "Loading safetensors checkpoint shards: 0% Completed 0/4 [00:00<?, ?it/s] Loading safetensors checkpoint shards: 25% Completed 1/4 [00:00<00:02, 1.13it/s] Loading safetensors checkpoint shards: 50% Completed 2/4 [00:02<00:02, 1. 22s/it] Loading safetensors checkpoint shards: 75% Completed 3/4 [00:03<",
        "id": 180,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 96,
        "text": "nsors checkpoint shards: 75% Completed 3/4 [00:03<00:01, 1.22s/it] Loading safetensors checkpoint shards: 100% Completed 4/4 [00:04<00:00, 1.17s/it] Loading safetensors checkpoint shards: 100% Completed 4/4 [00:04<00:00, 1. 17s/it] ",
        "id": 181,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 94,
        "text": "ERROR 03-25 1:02:05 [core.py:340] RuntimeError: CUDA out of memory occurred when warming up sampler ase try lowering max_num_seqs\" orgpu_memory_utilization' when initializing the engine.   \nERROR 03-25 11:02:05 [c0re.py:340]   \nCRITICAL 03-25 11:02:05 [core_client.py:269] Got fatal signal from worke",
        "id": 182,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 30,
        "length_tokens": 22,
        "text": "5 [core_client.py:269] Got fatal signal from worker processes， shutting down. causeissue. ",
        "id": 183,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "VIlm使用",
        "id": 184,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 75,
        "text": "ierve /root/autodl-tmp/models/tclf90/deepseek-r1-distil-qwen-32b-gptq-int4-tensor-paralel-size1--maxmodel-len 4096 --quantization gptq --dtype half--gpu-memory-utilization 0.8--max-num-seqs8--enforce-eager ",
        "id": 185,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 107,
        "text": "INFO 03-25 11:06:45 [loader.py:429] Loading weights took 4.84 seconds   \nINFO_03-25_11:06:45_[gpu_model_runner.py:1176] Model loading took 18.1678 GB and 5.752492 seconds   \nERROR 03-25 11:06:47 [core.py:340] EngineCore hit an exception: Traceback (most recent call last):   \nEROR03-2511:06:47core.py",
        "id": 186,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 112,
        "text": "ost recent call last):   \nEROR03-2511:06:47core.py:340]File\"/rot/miniconda3/b/python3.10/site-packages/vlm//engie/core.py\"，ine32inrn _engine_core   \nERROR 03-25 11:06:47 [core.py:340] engine_core = EngineCoreProc(\\*args，\\*\\*kwargs)   \nERROR 03-25 11:06:47 [core.py:340] File \"/root/miniconda3/lib/pyt",
        "id": 187,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 111,
        "text": "06:47 [core.py:340] File \"/root/miniconda3/lib/python3.10/site-packages/vllm/v1/engine/core.py\"，line 287,in__i nit   \nERROR 03-25 11:06:47 [core.py:340] super(.__init_(vllm_config，executor_class，log_stats)   \nERROR 03-25 11:06:47 [core.py:340] File \"/root/miniconda3/lib/python3.10/site-packages/vllm",
        "id": 188,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 109,
        "text": "/root/miniconda3/lib/python3.10/site-packages/vllm/v1/engine/core.py\"，line 62, in __in it   \nERROR 03-25 11:06:47 [c0re.py:340] num_gpu_blocks，num_cpu_blocks = self._initialize_kv_caches(   \nERROR 03-25 11:06:47 [core.py:340] File \"/root/miniconda3/lib/python3.10/site-packages/vllm/v1/engine/core.py",
        "id": 189,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 109,
        "text": "ib/python3.10/site-packages/vllm/v1/engine/core.py\"，line 124，in _in itialize_kv_caches   \nERROR 03-25 11:06:47 [core.py:340] kv_cache_configs = get_kv_cache_configs(vllm_config,kv_cache_specs,   \nERROR 03-25 11:06:47 [core.py:340] File \"/root/miniconda3/lib/python3.10/site-packages/vllm/v1/core/kv_c",
        "id": 190,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 109,
        "text": "da3/lib/python3.10/site-packages/vllm/v1/core/kv_cache_utils.py\"， line 576 in get_kv_cache_configs   \nERROR 03-25 11:06:47 [c0re.py:340] check_enough_kv_cache_memory(vllm_config， kv_cache_spec,   \nERROR 03-25 11:06:47 [core.py:340] File \"/root/miniconda3/lib/python3.10/site-packages/vllm/v1/core/kv_",
        "id": 191,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 94,
        "text": "nda3/lib/python3.10/site-packages/vllm/v1/core/kv_cache_utils.py\"，line 468 ，in check_enough_kv_cache_memory   \nERROR 03-25 11:06:47 [core.py:340] raise ValueError(\"No available memory for the cache blocks.   \nEROR03-2511:06:47core.py:340]ValueError:Noavailablememoryforthecacheblocks.Tryincreasinggpu",
        "id": 192,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 83,
        "text": "oavailablememoryforthecacheblocks.Tryincreasinggpu_memory_utiiationw hen initializing the engine.   \nERROR 03-25 11:06:47 [c0re.py:340]   \nCRITICAL 03-2511:06:47[core_client.py:269]Gotfatal signalfrom worker processesshuttingdown.Seestack traceabove forroot cause issue.   \nKilled ",
        "id": 193,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 31,
        "length_tokens": 68,
        "text": "尽管我们已经将参数调整到非常保守的配置(max-model-len $\\scriptstyle 1 = 4 0 9 6$ 、gpu-memory-utilization $_ { | = 0 . 8 }$ ），但32BGPTQ量化模型仍然无法在24GB GPU 上运行。",
        "id": 194,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 32,
        "length_tokens": 14,
        "text": "CASE: DeepSeek-R1-7B使用(GPU部署）",
        "id": 195,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "CASE: DeepSeek-R1-7B使用",
        "id": 196,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 33,
        "length_tokens": 106,
        "text": "#导入必要的库   \nfrom modelscope import AutoModelForCausalLM, AutoTokenizer   \n#设置模型路径   \nmodel_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"/root/autodl-tmp/models/deepseek-ai/DeepSeek  \nR1-Distill-Qwen-7B\"   \n#加载模型   \n# torch_dtype $\\ c =$ \"auto\"自动选择合适的数据类型   \n#device_map=\"cuda\"指定使用GPU加速   \nmodel $\\mathb",
        "id": 197,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 33,
        "length_tokens": 98,
        "text": "类型   \n#device_map=\"cuda\"指定使用GPU加速   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoModelForCausalLM.from_pretrained( model_name, torch_dtype $\\ c =$ \"auto\", device_map=\"cuda\"#也可以设置为\"auto\"自动选择设备   \n）   \n#加载对应的分词器   \ntokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoTokenizer.from_pretrained(model",
        "id": 198,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 33,
        "length_tokens": 112,
        "text": "thbf { \\tau }$ AutoTokenizer.from_pretrained(model_name)   \n#设置用户输入的提示词   \nprompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"帮我写一个二分查找法\"   \n#构建对话消息列表   \n$\\mathsf { m e s s a g e s } = [$ {\"role\": \"system\",\"content\": \"You are a helpful assistant.\"}, {\"role\": \"user\", \"content\": prompt}   \n]   \n#将消息转换为模型可接",
        "id": 199,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 33,
        "length_tokens": 75,
        "text": "e\": \"user\", \"content\": prompt}   \n]   \n#将消息转换为模型可接受的格式   \ntext $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer.apply_chat_template( messages, tokenize $\\ c =$ False, add_generation_prompt $\\mathbf { \\lambda } = \\mathbf { \\vec { \\lambda } }$ True ",
        "id": 200,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 201,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "CASE: DeepSeek-R1-7B使用",
        "id": 202,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 96,
        "text": "#将文本转换为模型输入格式并移动到正确的设备上   \nmodel_inputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer([text],   \nreturn_tensors $\\ c =$ \"pt\").to(model.device)   \n#将生成的token ID解码为文本   \n# skip_special_tokens $\\ c =$ True跳过特殊token   \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer.batch_decode(generated_ids",
        "id": 203,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 77,
        "text": "hbf { \\tau }$ tokenizer.batch_decode(generated_ids,   \nskip_special_tokens $\\ c =$ True)[0]   \n#打印生成的回复   \nprint(response)   \n#生成回复   \ngenerated_ids $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.generate( \\*\\*model_inputs, max_new_tokens $\\ c =$ 2000   \n） ",
        "id": 204,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 205,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 206,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 56,
        "text": "嗯，我现在要学习一下二分查找法，也就是二分查找。我对这个算法不是很熟悉，但我知道它是一种高效的查找方法，特别是在有序数组中。让我先理清思路，然后一步步来。",
        "id": 207,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 63,
        "text": "首先，二分查找的基本思想是将一个数组不断对半分，然后在分好的两部分中继续查找，直到找到目标元素。这种方法的时间复杂度是0(1ogn)，这比线性查找要快很多，特别是当数组很大时。",
        "id": 208,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 85,
        "text": "那具体步骤是什么呢？我记得应该是先确定数组的中点，然后比较中点处的元素和目标元素的大小。如果中点处的元素等于目标，就找到了；如果目标比中点小，那么在左边继续查找；如果目标比中点大，则在右边继续查找。这个过程不断重复，直到找到目标或者数组遍历完毕。",
        "id": 209,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 165,
        "text": "举个例子，假设有一个有序数组：[1,3,5,7,9,1,13,15]，我要找数字7。首先，数组的长度是8，中点应该是第4个元素，也就是7的位置。所以直接找到了。但如果我要找的是数字6，那么中点是7，比6大，所以应该在左边继续查找。然后新的子数组是[1,3,5]，中点是3的位置，元素是5。6比5大，所以继续在右边查找。新的子数组是[5,7]，中点是6的位置，元素是7。但是6比7小，所以继续在左边查找，但左边只有一个元素5，比较后发现6不在数组中。",
        "id": 210,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 46,
        "text": "那么，二分查找的关键点在于数组必须是有序的，并且每次查找都要计算中点，并根据比较结果调整左右边界。那具体怎么在代码中实现呢？",
        "id": 211,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 97,
        "text": "我记得通常会用一个循环，初始时左边界left=0，右边界right=n-1。然后计算中点mid=(left+right)/2。如果数组[mid]等于目标，返回mid；否则，如果目标小于数组[mid]，则right=mid-1，继续在左边查找；否则，left=mid+1，继续在右边查找。直到left>right时，说明没找到。",
        "id": 212,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 11,
        "text": "那我来试着写一个伪代码：",
        "id": 213,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 58,
        "text": "#提取生成的文本部分 (去除输入部分)   \ngenerated_ids $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [ output_ids[len(input_ids):] for input_ids, output_ids in   \nzip(model_inputs.input_ids,generated_ids)   \n] ",
        "id": 214,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 91,
        "text": "function binary_search(array，target): left = 0 right $\\mathbf { \\Psi } = \\mathbf { \\Psi }$ len(array)-1 while left $< =$ right: mid $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ (left $^ +$ right）//2 if array[mid] $\\scriptstyle = =$ target: return mid elifarray[mid]<target: left $\\mathbf { \\sigma } = \\m",
        "id": 215,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 34,
        "length_tokens": 53,
        "text": "ifarray[mid]<target: left $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ mid +1 else: right $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ mid -1 return -1 # 表示没找到 ",
        "id": 216,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "Ollama使用",
        "id": 217,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 36,
        "length_tokens": 16,
        "text": "Ollama官方主要支持macOs和Linux，但Windows用户也可以安装",
        "id": 218,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "方法1： 使用 WSL",
        "id": 219,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 36,
        "length_tokens": 79,
        "text": "Step1,打开PowerShell（管理员权限），运行：wsl--install  \n重启电脑后，WSL会自动完成安装（默认安装Ubuntu）  \nStep2,安装 Ollama  \n在 WSL 终端（Ubuntu） 中运行:curl -fsSL https://ollama.com/install.sh丨 sh  \nStep3，启动Ollama 服务  \nollama serve",
        "id": 220,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 36,
        "length_tokens": 18,
        "text": "(保持此终端运行，另开一个新终端进行后续操作)",
        "id": 221,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 37,
        "length_tokens": 7,
        "text": "方法2:直接下载Windows版",
        "id": 222,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 37,
        "length_tokens": 7,
        "text": "https://ollama.com/ ",
        "id": 223,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 37,
        "length_tokens": 18,
        "text": "安装后，OIlama会作为服务运行（可在任务管理器查看）",
        "id": 224,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "Get up and running with large language models. ",
        "id": 225,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 37,
        "length_tokens": 33,
        "text": "Run Llama 3.3, DeepSeek-R1, Phi-4, Mistral, Gemma 3, and other models, locally. ",
        "id": 226,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 227,
        "type": "image",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 4,
        "text": "Ollama使用",
        "id": 228,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 130,
        "text": "Ollama官方模型库 https://ollama.com/library  \n下载deepseek-r1:1.5b 模型  \nollama pull deepseek-r1:1.5b  \n如果要删除该模型，可以使用  \nollama rm deepseek-r1:1.5b  \n运行该模型，使用  \nollama run deepseek-r1:1.5b  \nPS C:\\Windows\\System32> ollama run deepseek-r1:1.5b  \nvvv 你好啊  \n<think>  \n</think>  \n你好！很高兴见到你，有什么我可以帮忙的吗？",
        "id": 229,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 230,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "qwq ",
        "id": 231,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 14,
        "text": "QwQ is the reasoning model of the Qwen series. ",
        "id": 232,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "tools 32b ",
        "id": 233,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 35,
        "text": "↓ 1.1M Pulls $0$ 8 Tags $\\textcircled { \\scriptsize { \\perp } }$ Updated 2 weeks ago ",
        "id": 234,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "deepseek-r1 ",
        "id": 235,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 36,
        "text": "DeepSeek's first-generation of reasoning models with comparable performance to OpenAl-o1, including six dense models distilled from DeepSeek-R1 based on Llama and Qwen. ",
        "id": 236,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 38,
        "length_tokens": 57,
        "text": "1.5b 7b 8b 14b 32b 70b 671b ↓ 31.5M Pulls $0$ 29 Tags $\\textcircled { \\scriptsize { \\perp } }$ Updated 7 weeks ago ",
        "id": 237,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "CASE: DeepSeek-R1使用(API调用)",
        "id": 238,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "CASE: DeepSeek-R1使用-阿里代理",
        "id": 239,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "1、基本设置：",
        "id": 240,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 45,
        "text": "import dashscope   \nfrom dashscope.api_entities.dashscope_response import Role   \n# 设置 API key   \ndashscope.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"your-api-key' ",
        "id": 241,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "2、模型调用封装:",
        "id": 242,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 95,
        "text": "def get_response(messages):response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call(model $\\mathsf { I } \\mathop { = } \\frac { \\boldsymbol { \\mathsf { I } } } { \\boldsymbol { \\mathsf { I } } }$ deepseek-r1'，#使用 deepseek-r1 模型messages $\\mathbf { \\tau } =$ messages,result_format $= ^ {",
        "id": 243,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 29,
        "text": "$\\mathbf { \\tau } =$ messages,result_format $= ^ { \\prime }$ message'#将输出设置为message形式）return response",
        "id": 244,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "3、情感分析实现:",
        "id": 245,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 115,
        "text": "review $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '这款音效特别好给你意想不到的音质。‘   \nmessages =[ {\"role\":\"system\",\"content\":\"你是一名舆情分析师，帮我判断   \n产品口碑的正负向，回复请用一个词语：正向或者负向\"}, {\"role\": \"user\",\"content\": review}   \n]   \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_response(messages)   \nprint(response.output.choi",
        "id": 246,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 17,
        "text": "t_response(messages)   \nprint(response.output.choices[O].message.content) ",
        "id": 247,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 40,
        "length_tokens": 2,
        "text": "正向",
        "id": 248,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 41,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 249,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 41,
        "length_tokens": 38,
        "text": "·大模型API是连接AI能力的桥梁，让开发者无需关注底层架构即可调用前沿AI能力，极大拓展了技术应用的边界。",
        "id": 250,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 41,
        "length_tokens": 90,
        "text": "·Prompt工程是激活大模型潜力的钥匙  \n结构化设计 (角色定义/分步指令/示例规范)  \n业务场景对齐(需求分析→Prompt迭代→效果验证)  \n性能优化技巧 (温度系数/输出限制/上下文管理)  \n·LLM正在重塑开发范式，通过大模型API接口覆盖NLP/CV/多模态任务",
        "id": 251,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 42,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 252,
        "type": "text",
        "file_name": "2.1-DeepSeek使用"
      },
      {
        "page": 1,
        "length_tokens": 4,
        "text": "Prompt Engineering提示工程",
        "id": 0,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "Prompt原理",
        "id": 1,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "Prompt原理: ",
        "id": 2,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 70,
        "text": "GPT在处理Prompt时，GPT模型将输入的文本（也就是Prompt）转换为一系列的词向量。  \n·然后，模型通过自回归生成过程逐个生成回答中的词汇。在生成每个词时， 模型会基于输入的Prompt以及前面生成的所有词来进行预测。",
        "id": 3,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 13,
        "text": "·这个过程不断重复，直到模型生成完整的回答 ",
        "id": 4,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 11,
        "text": "Thinking: 你认为PromptEngineering的重要性如何?",
        "id": 5,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "一个有效的Prompt可以：",
        "id": 6,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 30,
        "text": "提升AI模型给出的答案的质量缩短与AI模型的交互时间，提高效率·减少误解，提高沟通的顺畅度",
        "id": 7,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "image",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "提示词策略差异",
        "id": 9,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "通用模型",
        "id": 10,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "推理模型",
        "id": 11,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 3,
        "length_tokens": 44,
        "text": "需要显示引导推理步骤，比如通过CoT提示，否则可能会忽略关键逻辑·依赖提示词补偿能力短板，比如要求分步骤思考，提供few-shot参考示例等",
        "id": 12,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 3,
        "length_tokens": 55,
        "text": "·提示语更简洁，指需要明确任务目标和需求，因为模型已经内化了推理逻辑·无需逐步指导，模型会自动生成结构化推理过程。如果强行分步骤拆解，反而会降低其推理能力",
        "id": 13,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "提示词关键原则",
        "id": 14,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 15,
        "type": "table",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "Prompt 编写原则 ",
        "id": 16,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 6,
        "text": "Prompt编写原则: ",
        "id": 17,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 13,
        "text": "·明确目标：清晰定义任务，以便模型理解。",
        "id": 18,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 14,
        "text": "·具体指导： 给予模型明确的指导和约束 ",
        "id": 19,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 17,
        "text": "·简洁明了：使用简练、清晰的语言表达Prompt。",
        "id": 20,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 16,
        "text": "·适当引导：通过示例或问题边界引导模型",
        "id": 21,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 15,
        "text": "·迭代优化： 根据输出结果，持续调整和优化 ",
        "id": 22,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "一些有效做法：",
        "id": 23,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 11,
        "text": "·强调，可以适当的重复命令和操作",
        "id": 24,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "·给模型一个出路，如果模型可能无法完成，告诉它说\"不知道'",
        "id": 25,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 28,
        "text": "·尽量具体，对于专业性要求强的，少留解读空间（在你的专业领域中，把它看成孩子)",
        "id": 26,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 27,
        "type": "image",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "Prompt 编写原则 ",
        "id": 28,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 14,
        "text": "·具体指导： 给予模型明确的指导和约束 ",
        "id": 29,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "示例1：文本摘要生成任务目标",
        "id": 30,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "生成新闻文章的摘要",
        "id": 31,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "不明确的指导：",
        "id": 32,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "请为这篇新闻文章生成摘要",
        "id": 33,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "具体的指导：",
        "id": 34,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 21,
        "text": "请将以下新闻文章总结为3-4句话，包含主要事件、人物和时间地点。",
        "id": 35,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 10,
        "text": "示例2：客户服务对话任务目标",
        "id": 36,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "回答客户关于订单状态的问题",
        "id": 37,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "不明确的指导：",
        "id": 38,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "请回答客户关于订单状态的问题",
        "id": 39,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "具体的指导：",
        "id": 40,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 6,
        "length_tokens": 38,
        "text": "请使用礼貌的语言回答客户关于订单状态的问题，提供具体的订单信息和预计到达时间。如果订单有任何问题请提供解决方案或进一步的联系信息。",
        "id": 41,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "Prompt 编写原则 ",
        "id": 42,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 14,
        "text": "·具体指导： 给予模型明确的指导和约束。",
        "id": 43,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 11,
        "text": "示例3：生成abeautifulgirl的图片",
        "id": 44,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 8,
        "text": "不明确的指导：a beautiful girl",
        "id": 45,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 46,
        "type": "image",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "具体的指导：",
        "id": 47,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 54,
        "text": "anime girl with long dark hair， simple and elegant style, light silver and light gray, Wavy resin sheets，in the style of digital painting, gongbi, realistic yet romantic, shiny/glossy, cute and dreamy, smooth lines, pure white background, ",
        "id": 48,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 49,
        "type": "image",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 7,
        "length_tokens": 15,
        "text": "动漫少女，长黑发数码画风，纯白底色",
        "id": 50,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "Prompt 编写原则 ",
        "id": 51,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 17,
        "text": "·简洁明了：使用简练、清晰的语言表达Prompt。",
        "id": 52,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 20,
        "text": "示例1：文章续写任务目标根据给定开头续写一段故事。",
        "id": 53,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 54,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "冗长的指导：",
        "id": 55,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 74,
        "text": "请基于下面提供的故事开头续写一段文字。续写时请保持与原文风格一致，注意故事的连贯性和合理性。希望续写的部分能够引人入胜，并且能够自然地衔接上文。如果有任何疑问，请尽量参照原文的风格进行。",
        "id": 56,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "简洁明了的指导：",
        "id": 57,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "根据以下开头续写故事：",
        "id": 58,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 18,
        "text": "示例2：翻译任务任务目标将一段英文文本翻译成中文",
        "id": 59,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "冗长的指导：",
        "id": 61,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 75,
        "text": "请将以下英文文本翻译成中文。我希望翻译的内容准确，并且保持原文的意思。翻译时请注意语法和用词，尽量使用简洁明了的语言表达。如果有任何不确定的地方，请尽量保持原意，不要进行过多的自由发挥。下面是需要翻译的文本。",
        "id": 62,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "简洁明了的指导：",
        "id": 63,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 10,
        "text": "请将以下英文文本翻译成中文：",
        "id": 64,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 8,
        "length_tokens": 23,
        "text": "Thinking：具体指导与简洁明了是相对的 你是如何理解这两个原则的？",
        "id": 65,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "Prompt 编写原则 ",
        "id": 66,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 16,
        "text": "·适当引导：通过示例或问题边界引导模型",
        "id": 67,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "示例1：邮件撰写",
        "id": 68,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 10,
        "text": "TO DO：写一封请假邮件。",
        "id": 69,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "无引导的指导：",
        "id": 70,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "请写一封请假邮件。",
        "id": 71,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 14,
        "text": "如果有优秀范例模版，对于模型来说是很好的指导",
        "id": 72,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "有引导的指导：",
        "id": 73,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 22,
        "text": "请写一封请假邮件，内容包括请假原因、请假时间以及对工作的安排。",
        "id": 74,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "示例：",
        "id": 75,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "主题：请假申请",
        "id": 76,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "尊敬的[经理姓名],",
        "id": 77,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 61,
        "text": "我因个人原因需要请假两天，从6月20日至6月21日。请假期间，我会确保手头工作交接给同事[同事姓名]，并保持电话畅通。如有紧急情况，可随时联系我。感谢您的理解和批准。",
        "id": 78,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 2,
        "text": "此致",
        "id": 79,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "敬礼 ",
        "id": 80,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "[您的姓名] ",
        "id": 81,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "Prompt 编写原则 ",
        "id": 82,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 26,
        "text": "·迭代优化：根据输出结果，持续调整和优化帮我写一个 $a + b$ 的Python函数",
        "id": 83,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 84,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 65,
        "text": "下面是一个简单的Python函数，用于计算两个数a和b的和：  \ndef add(a, b):return a + b  \n#示例使用  \nresult $\\mathbf { \\tau } = \\mathbf { \\tau }$ add(3, 5)  \nprint(result) # 输出:8",
        "id": 85,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "需要考虑a和b不是数值的情况",
        "id": 86,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 42,
        "text": "为了处理a和b可能不是数值的情况，可以在函数中添加类型检查，并在参数不是数值时抛出一个适当的异常。以下是一个改进的版本：",
        "id": 87,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "def add(a, b): ",
        "id": 88,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 21,
        "text": "if not isinstance(a, (int, float)) or not isinstance(b, (int, float)): ",
        "id": 89,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 17,
        "text": "raise TypeError(\"Both a and b must be numbers (int or float)\") ",
        "id": 90,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "return a + b ",
        "id": 91,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "Prompt 编写框架 （重要性排序）",
        "id": 92,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "Prompt的组成: ",
        "id": 93,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "重要性排序：",
        "id": 94,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 38,
        "text": "1.任务（Task）：始终以动词开始任务句子（如\"生成\"，\"给予\"，'写作\"等），明确表达你的最终目标，可以有多个。",
        "id": 95,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 17,
        "text": "2.上下文（Context）：提供上下文背景、所处环境等。",
        "id": 96,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 39,
        "text": "3.示例（Exemplars）：提供具体的例子，用于可以提高输出质量。  \n有时候我们没有示例，这时可以让GPT帮忙生成示例。",
        "id": 97,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 27,
        "text": "4.角色（Persona）：你希望Ai扮演的角色。可以是具体的人，也可以是虚构的角色。",
        "id": 98,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 21,
        "text": "5.格式（Format）：你希望输出的格式，如表格、列表、段落等。",
        "id": 99,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 22,
        "text": "6.语气（Tone）：指定输出的语气，如正式、非正式、幽默等。",
        "id": 100,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 22,
        "text": "任务 $>$ 上下文 $>$ 示例 $>$ 角色 $>$ 格式 $>$ 语气",
        "id": 101,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "如果模型回答不满意，依次Check自己的Prompt内容进行调整",
        "id": 102,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "写prompt是一个不断尝试和调整的过程",
        "id": 103,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "Prompt 编写技巧 ",
        "id": 104,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 12,
        "length_tokens": 16,
        "text": "在了解Prompt编写原则的基础上，还有一些Prompt编写技巧：",
        "id": 105,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 12,
        "length_tokens": 45,
        "text": "1、限制模型输出的格式  \n2、使用分隔符区分输入的不同部分  \n3、提供样例  \n4、CoT思维工具  \n5、面向不同的角色进行讲解",
        "id": 106,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "技巧1: 限制模型输出的格式",
        "id": 107,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 12,
        "length_tokens": 57,
        "text": "比如让大模型输出JSON格式，可以结构化数据，方便后续解析用户：请从财务报表中提取以下信息，包括：公司名称，股票代码，营收，净利润，毛利，总资产，总负债。并以JSON格式返回。",
        "id": 108,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 12,
        "length_tokens": 62,
        "text": "\"公司名称\":\"伊利股份\", \"股票代码\":\"600887 \", \"营收\":\"325亿元\", \"净利润\": \"59.23亿元\", \"毛利\": \"105.6亿元\", \"总资产\":\"1516.2亿元\", \"总负债\":\"910亿元' ” ",
        "id": 109,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "Prompt 编写技巧 ",
        "id": 110,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 13,
        "text": "技巧2: 使用分隔符区分输入的不同部分",
        "id": 111,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "请把三个引号括起来的文本，分别总结成为一句话",
        "id": 112,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "\"文本内容1\"",
        "id": 113,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "\"文本内容2\"",
        "id": 114,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 30,
        "text": "在编写Prompt时，通过使用分隔符，可以清晰地区分不同部分的文本，提升文本的组织性和可读性。",
        "id": 115,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "技巧3: 提供样例",
        "id": 116,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 47,
        "text": "针对有一定歧义或复杂的情况，给出具体示例方便大模型进行学习请帮我对用户的评价进行分类，直接输出：正面/负面，并给出理由示例1：",
        "id": 117,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 43,
        "text": "用户评价：这次开户真是太满意了，都一周了，客服还没有回复我输出：负面，客户并不是真的满意，客服一周未回复，造成了不满。",
        "id": 118,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "示例2：",
        "id": 119,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 19,
        "text": "用户评价：广发银行的开户过程非常顺利，客服态度亲切。",
        "id": 120,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "输出：正面，开户过程顺利，客服态度好。",
        "id": 121,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "请回答如下问题：",
        "id": 122,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 13,
        "length_tokens": 25,
        "text": "用户评价：开户流程简洁明了，不需要繁琐的纸质材料，所有步骤都可以在线完成",
        "id": 123,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 5,
        "text": "Prompt 编写技巧 ",
        "id": 124,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "技巧4: CoT思维工具",
        "id": 125,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 33,
        "text": "CoT（Chainof Thought，思维链）通过将复杂任务分解为多个简单的步骤，帮助模型系统地思考并解决问题。",
        "id": 126,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 52,
        "text": "你是一个数学助手，请根据以下步骤计算用户输入的金额。请将每个金额首先加上1000元，接着减去500元，然后乘以1.2输出计算结果，以'，作为分隔符进行返回。",
        "id": 127,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 10,
        "text": "你可以参考以下计算过程来帮助解决：",
        "id": 128,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "-= ",
        "id": 129,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "对于输入：2000,3000,4000",
        "id": 130,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "计算过程如下：",
        "id": 131,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 29,
        "text": "首先分别对输入的2000,3000,4000加上1000，得到：3000,4000, 5000",
        "id": 132,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 65,
        "text": "然后将3000,4000,5000分别减去500，得到：2500,3500,4500  \n然后将2500,3500,4500分别乘以1.2，得到：3000,4200,5400  \n答案是：3000,4200,5400",
        "id": 133,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "1=1 ",
        "id": 134,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 14,
        "length_tokens": 10,
        "text": "输入：1500,2500,3500",
        "id": 135,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "Prompt 编写技巧 ",
        "id": 136,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 55,
        "text": "你是一个客户服务助手，请按照以下步骤处理客户的投诉。首先，记录客户的投诉类型，然后确定处理优先级（高、中、低），接着分配给适当的部门，最后生成一个处理跟踪编号并直接输出。",
        "id": 137,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "计算过程示例：",
        "id": 138,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 3,
        "text": "1== ",
        "id": 139,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 16,
        "text": "客户投诉：客服的态度冷淡，没有耐心解答我的问题",
        "id": 140,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "处理过程如下：",
        "id": 141,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 69,
        "text": "首先记录客户的投诉类型，得到：客服态度差然后确定处理优先级，得到：优先级高然后分配给适当的部门，得到：客服部最后生成一个跟踪编号，得到KF10001客户投诉：我的账户意外冻结了。我并未收到任何提前通知或解释。",
        "id": 142,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 143,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 144,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 145,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 146,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 13,
        "text": "CoT（ChainofThought，思维链）的作用:",
        "id": 147,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 15,
        "length_tokens": 80,
        "text": "·系统化问题解决：将复杂问题分解为多个简单步骤，使解决过程更加有序和清晰。  \n·提高透明度，减少错误：帮助理解和追踪每个决策点，减少整体错误发生的概率。  \n·提升模型推理能力：帮助模型学习如何系统地分解和解决此类问题，提高在类似任务中的表现。",
        "id": 148,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "Prompt 编写技巧 ",
        "id": 149,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 11,
        "text": "技巧5: 面向不同的角色进行讲解",
        "id": 150,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 17,
        "text": "把我当做五岁小朋友一样，向我解释超导体。",
        "id": 151,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 17,
        "text": "好的！让我们用一个简单的比喻来解释超导体。",
        "id": 152,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 68,
        "text": "想象一下，你有一条滑滑的滑滑梯。如果你把一个小球放在滑梯的顶端，小球会很快滑到滑梯的底端，对吗？这个滑滑梯很光滑，所以小球滑下来时不会有太多阻力。这就像一个超导体。",
        "id": 153,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 56,
        "text": "在电线上，电流就像小球在滑梯上滑动。通常，电线上有一些阻力，就像粗糙的滑滑梯，小球滑下时会慢一些。但在超导体里，就像一个超级光滑的滑",
        "id": 154,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 38,
        "text": "滑梯，小球（电流）可以一直滑下去而不会停，也没有任何阻力。这意味着电流可以非常快速、非常轻松地通过超导体。",
        "id": 155,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 16,
        "length_tokens": 43,
        "text": "所以，超导体就是一种可以让电流毫无阻力地通过的特殊材料，电流在其中就像小球在光滑的滑梯上一样，滑得非常快！",
        "id": 156,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "学会与AIGC沟通",
        "id": 157,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "Prompt Engineering ",
        "id": 158,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 17,
        "length_tokens": 30,
        "text": "未来每个人都是promptengineer任务结果 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 大模型 $^ +$ Prompt",
        "id": 159,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 17,
        "length_tokens": 9,
        "text": "Thinking: 如何得到我们想要的结果",
        "id": 160,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 17,
        "length_tokens": 11,
        "text": "了解我们的需求·了解大模型的工作原理",
        "id": 161,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 162,
        "type": "image",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 18,
        "length_tokens": 4,
        "text": "Prompt实战 ",
        "id": 163,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "设置 API Key ",
        "id": 164,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 19,
        "length_tokens": 10,
        "text": "设置环境变量中的DASHSCOPE_API_KEY",
        "id": 165,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 166,
        "type": "image",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "import dashscope import os ",
        "id": 167,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 19,
        "length_tokens": 36,
        "text": "# 从环境变量中获取API Keydashscope.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ Os.getenv('DASHSCOPE_API_KEY')",
        "id": 168,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "CASE: 使用提示词完成任务",
        "id": 169,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 20,
        "length_tokens": 27,
        "text": "Thinking：我们想让AI扮演电信的客服人员，如何识别用户的手机流量套餐的需求？",
        "id": 170,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 20,
        "length_tokens": 87,
        "text": "# 基于 prompt 生成文本  \ndef get_completion(prompt, model $\\mid =$ \"deepseek-v3\"):messages $\\mathbf { \\tau } = \\mathbf { \\tau }$ [{\"role\": \"user\",\"content\": prompt}]#将 prompt作为用户输入response $\\mathbf { \\tau } = \\mathbf { \\tau }$ dashscope.Generation.call(model $\\ c =$ model,messages $\\vartriangle { \\vartria",
        "id": 171,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 20,
        "length_tokens": 94,
        "text": "el $\\ c =$ model,messages $\\vartriangle { \\vartriangle { \\vartriangle } }$ messages,result_format $\\mathbf { \\lambda } = \\mathbf { \\lambda } ^ { \\prime }$ message'，#将输出设置为message形式temperature $\\scriptstyle 1 = 0$ ，#模型输出的随机性，0表示随机性最小）return response.output.choices[0].message.content #返回模型生成的文本",
        "id": 172,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "CASE: 使用提示词完成任务",
        "id": 173,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 3,
        "text": "#任务描述",
        "id": 174,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 3,
        "text": "instruction = ",
        "id": 175,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 54,
        "text": "你的任务是识别用户对手机流量套餐产品的选择条件。  \n每种流量套餐产品包含三个属性：名称，月费价格，月流量。  \n根据用户输入，识别用户在上述三种属性上的需求是什么。",
        "id": 176,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "-=\\` ",
        "id": 177,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 63,
        "text": "#用户输入  \ninput_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ \\\\`  \n办个100G的套餐。1-  \n# prompt模版。instruction 和input_text会被替换为上面的内容  \nprompt = f.\"!  \n#目标  \n{instruction}",
        "id": 178,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 179,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "#用户输入 {input_text} 111111 ",
        "id": 180,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 29,
        "text": "#调用大模型   \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_completion(prompt)   \nprint(response) ",
        "id": 181,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 27,
        "text": "根据用户输入“办个100G的套餐”，可以识别出用户对手机流量套餐产品的选择条件如下：",
        "id": 182,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 107,
        "text": "1.\\*\\*月流量\\*\\*：用户明确需求是 $\\boldsymbol { * } \\boldsymbol { * } _ { 1 0 0 6 } \\boldsymbol { * } \\boldsymbol { * }$ 的月流量。  \n2.\\*\\*名称\\*\\*：用户没有提及具体的套餐名称，因此名称需求不明确。  \n3.\\*\\*月费价格\\*\\*：用户没有提及具体的月费价格，因此价格需求不明确。",
        "id": 183,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 21,
        "length_tokens": 31,
        "text": "总结：用户的主要需求是\\*\\*月流量为100G\\*\\*的套餐，对名称和月费价格没有明确要求。",
        "id": 184,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "CASE：JSON格式返回 ",
        "id": 185,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 22,
        "length_tokens": 18,
        "text": "Thinking: 如何让AI返回JSON格式， 更方便后续的识别和使用",
        "id": 186,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 22,
        "length_tokens": 50,
        "text": "#输出格式  \noutput_format=!  \n以JSON 格式输出  \n1=  \n#稍微调整下咒语，加入输出格式  \nprompt = f!  \n#目标  \n{instruction}  \n#输出格式  \n{output_format}",
        "id": 187,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "#用户输入 {input_text} 11=1 ",
        "id": 188,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 22,
        "length_tokens": 33,
        "text": "#调用大模型，指定用JSONmode输出 response $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_completion(prompt) print(response) ",
        "id": 189,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 22,
        "length_tokens": 14,
        "text": "'\\`json { \"月流量\":\"100G\" } ",
        "id": 190,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "CASE： 使用CoT分步骤推理",
        "id": 191,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 12,
        "text": "Thinking: 如何审核客服的回答是否符合规范要求？",
        "id": 192,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 176,
        "text": "#输出描述  \noutput_format=!  \n如果符合规范，输出：Y  \n如果不符合规范，输出：N  \n/1=instruction = \\*  \n给定一段用户与手机流量套餐客服的对话，。  \n你的任务是判断客服的回答是否符合下面的规范：  \n-必须有礼貌  \n-必须用官方口吻，不能使用网络用语  \n-介绍套餐时，必须准确提及产品名称、月费价格和月流量总量。上述信息缺失一项或多项，或信息与事实不符，都算信息不准确  \n-不可以是话题终结者  \ncontext = \\*\"  \n用户：你们有什么流量大的套餐  \n客服：亲，我们现在正在推广无限套餐，每月300  \n元就可以享受1000G流量，",
        "id": 193,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 37,
        "text": "么流量大的套餐  \n客服：亲，我们现在正在推广无限套餐，每月300  \n元就可以享受1000G流量，您感兴趣吗？  \n/",
        "id": 194,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 195,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 196,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "已知产品包括：",
        "id": 197,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 63,
        "text": "经济套餐：月费50元，月流量10G  \n畅游套餐：月费180元，月流量100G  \n无限套餐：月费300元，月流量1000G  \n校园套餐：月费150元，月流量200G，限在校学生办理",
        "id": 198,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 23,
        "length_tokens": 29,
        "text": "cot = \"\"\\`#cot $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"请一步一步分析对话\"",
        "id": 199,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "CASE： 使用CoT分步骤推理",
        "id": 200,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 201,
        "type": "table",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "CASE: 使用Prompt调优Prompt",
        "id": 202,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "Thinking: 如何使用Prompt优化Prompt?",
        "id": 203,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "user_prompt= ",
        "id": 204,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 33,
        "text": "做一个手机流量套餐的客服代表，叫小瓜。可以帮助用户选择最合适的流量套餐产品。可以选择的套餐包括：",
        "id": 205,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 63,
        "text": "经济套餐，月费50元，10G流量；  \n畅游套餐，月费180元，100G流量；  \n无限套餐，月费300元，1000G流量；  \n校园套餐，月费150元，200G流量，仅限在校生。 =",
        "id": 206,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "instruction =! ",
        "id": 207,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 23,
        "text": "你是一名专业的提示词创作者。你的目标是帮助我根据需求打造更好的提示词。",
        "id": 208,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 6,
        "text": "你将生成以下部分：",
        "id": 209,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 33,
        "text": "提示词：{根据我的需求提供更好的提示词}优化建议：{用简练段落分析如何改进提示词，需给出严格",
        "id": 210,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 211,
        "type": "table",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 212,
        "type": "text",
        "file_name": "2.2-提示词工程"
      },
      {
        "page": 1,
        "length_tokens": 3,
        "text": "机器学习神器",
        "id": 0,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 2,
        "length_tokens": 2,
        "text": "学习方法",
        "id": 1,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 2,
        "length_tokens": 13,
        "text": "· Thinking: behind the theory,original from the real problem ",
        "id": 2,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 2,
        "length_tokens": 12,
        "text": "·Action: solve problems by tools,present the results ",
        "id": 3,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 4,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "预测全家桶 ",
        "id": 5,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 3,
        "length_tokens": 48,
        "text": "Project A: 员工离职预测 ·ProjectB：男女声音识别 ·分类算法：LR，SVM，KNN ·树模型：GBDT,XGBoost, LightGBM, CatBoost， NGBoost ",
        "id": 6,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "机器学习神器",
        "id": 7,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 3,
        "length_tokens": 49,
        "text": "·什么是集成学习GBDT原理  \nXGBoost  \nLightGBMCatBoost  \n·在Project中使用机器学习神器  \n·AI大赛：二手车价格预测  \n·如何防止模型过拟合",
        "id": 8,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 4,
        "length_tokens": 9,
        "text": "1/2 预测全家桶 ",
        "id": 9,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 10,
        "text": "Project A: 员工离职预测 ",
        "id": 10,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "员工离职预测 ",
        "id": 11,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "In Class Competition ",
        "id": 12,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 17,
        "text": "https://www.kaggle.com/c/bi-attrition-predict/ ",
        "id": 13,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 48,
        "text": "·我们有员工的各种统计信息，以及该员工是否已经离职，统计的信息包括了（工资、出差、工作环境满意度、工作投入度、是否加班、是否升职、工资提升比例等）",
        "id": 14,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 35,
        "text": "·现在需要你来通过训练数据得出员工离职预测，并给出你在测试集上的预测结果。我们将给出课程上公开的榜单",
        "id": 15,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 16,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 6,
        "length_tokens": 10,
        "text": "Project A: 员工离职预测 ",
        "id": 17,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 7,
        "length_tokens": 10,
        "text": "Project A: 员工离职预测 ",
        "id": 19,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 20,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "预测全家桶 ",
        "id": 21,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 8,
        "length_tokens": 11,
        "text": "常用预测（分类，回归）模型：",
        "id": 22,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 8,
        "length_tokens": 32,
        "text": "·分类算法：LR，SVM，KNN · 树模型：GBDT,XGBoost, LightGBM,CatBoost，NGBoost ",
        "id": 23,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 24,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 8,
        "length_tokens": 14,
        "text": "·特征工程：好的特征工程是拿分的关键",
        "id": 25,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 8,
        "length_tokens": 10,
        "text": "·模型：懂原理，会调参 ",
        "id": 26,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 9,
        "length_tokens": 4,
        "text": "常用预测模型",
        "id": 27,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 9,
        "length_tokens": 33,
        "text": "数据预处理  \n分类算法：LR，SVM，KNN  \n树模型：GBDT,XGBoost, LightGBM, CatBoost， NGBoost",
        "id": 28,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "Project A: 数据预处理",
        "id": 29,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "Step1，对数据进行探索",
        "id": 30,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 10,
        "length_tokens": 96,
        "text": "#工离职预测   \nimport pandas as pd   \ntrain $\\ c =$ pd.read_csv('train.csv',index_col $\\scriptstyle 1 = 0$ ）   \ntest=pd.read_csv('test.csv',index_col=0)   \nprint(train['Attrition'].value_counts())   \n#处理Attrition字段   \ntrain['Attrition']=train['Attrition'].map(lambda x:1 if $\\ x = = 1$ Yes' else O)   \n#查看",
        "id": 31,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 10,
        "length_tokens": 38,
        "text": ".map(lambda x:1 if $\\ x = = 1$ Yes' else O)   \n#查看数据中每列是否有空值   \nprint(train.isna().sum()) ",
        "id": 32,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 10,
        "length_tokens": 87,
        "text": "No 988   \nYes 188   \nName: Attrition, dtype: int64   \nAge 0   \nAttrition 0   \nBusinessTravel 0   \nDailyRate 0   \nDepartment 0   \nDistanceFromHome 0   \nEducation 0   \nEducationField 0   \nEmployeeCount 0   \nYearslnCurrentRole 0   \nYearsSinceLastPromotion 0   \nYearsWithCurrManager 0   \ndtype: int64 ",
        "id": 33,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "Project A: 数据预处理",
        "id": 34,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "Step2， 去掉无用特征，处理分类特征",
        "id": 35,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 108,
        "text": "#去掉没用的列员工号码，标准工时（ $\\scriptstyle \\left. = 8 0 \\right.$ ））   \ntrain $\\mathbf { \\tau } = \\mathbf { \\tau }$ train.drop(['EmployeeNumber','StandardHours'],axis ${ \\mathfrak { s } } = 1$ ）   \ntest $\\mathbf { \\tau } = \\mathbf { \\tau }$ test.drop(['EmployeeNumber','StandardHours'],axis $_ { \\cdot = 1 }$ ）  ",
        "id": 36,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 68,
        "text": "umber','StandardHours'],axis $_ { \\cdot = 1 }$ ）   \n#对于分类特征进行特征值编码   \nfrom sklearn.preprocessing import LabelEncoder   \nattr=['Age','BusinessTravel','Department','Education','EducationField','Gender'   \n,'JobRole','MaritalStatus','Over18','OverTime'] ",
        "id": 37,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "for feature in attr: ",
        "id": 38,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 42,
        "text": "Ibe $\\ c =$ LabelEncoder() train[feature]=lbe.fit_transform(train[feature]) test[feature] $= |$ be.transform(test[feature]) train.to_csv('temp.csv') ",
        "id": 39,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 40,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "Project A: 数据预处理",
        "id": 41,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 42,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "LR工具",
        "id": 44,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 3,
        "text": "LR工具：",
        "id": 45,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 10,
        "text": "from sklearn.linear_model.logistic import LogisticRegression ",
        "id": 46,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "参数:",
        "id": 47,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 189,
        "text": "penalty，惩罚项，正则化参数，防止过拟合，I1或l2，默认为l2·C，正则化系数入的倒数，float类型，默认为1.0solver，损失函数优化方法，liblinear（默认），Ibfgs，newton-cg，sagrandom_state，随机数种子max_iter，算法收敛的最大迭代次数，默认为100$\\scriptstyle \\mathbf { \\ t o } 1 = 0 . 0 0 0 1$ ：优化算法停止条件，迭代前后函数差小于tol则终止verbose $= 0$ ：日志冗长度int：冗长度；0：不输出训练过程；1：偶尔输出； ${ > } 1$ ：对每个子模型都输出n_jo",
        "id": 48,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 88,
        "text": "int：冗长度；0：不输出训练过程；1：偶尔输出； ${ > } 1$ ：对每个子模型都输出n_jobs $\\mathord { \\left. \\vert { \\begin{array} { r l } \\end{array} } \\right. }$ ：并行数，int：个数；-1：跟CPU核数一致；1:默认值",
        "id": 49,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "常用方法：",
        "id": 50,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 13,
        "length_tokens": 91,
        "text": "fit(X,y,sample_weight $\\ c =$ None)  \nfit_transform(X,y=None,\\*\\*fit_params)predict(X)，用来预测样本，也就是分类predict_proba(X)，输出分类概率。返回每种类别的概率，按照分类类别顺序给出。score(X,y, sample_weight $\\mathop { \\bf { \\phi } } =$ None)，返回给定测试集合的平均准确率（mean accuracy）",
        "id": 51,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "LR工具",
        "id": 52,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "Step3, 模型参数配置 ",
        "id": 53,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 128,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ LogisticRegression(max_iter=100, verbose $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ True, random_state $\\scriptstyle = 3 3$ ， tol=1e-4 iter 25 act 1.052e+01 pre 1.050e+01 delta 2.865e-01 f 3.291e+02 g 3.106e+02 CG 9 t 5.049e-02 pre 5.014e-02 delta 2.86",
        "id": 54,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 163,
        "text": ".106e+02 CG 9 t 5.049e-02 pre 5.014e-02 delta 2.865e-01 f 3.186e+02 lgl 5.462e+04 CG 1 t 8.230e-03 pre 8.184e-03 delta 2.865e-01 f 3.185e+02 lgl 5.377e+03 CG cg reaches trust region boundary ） t 9.298e+00 pre 9.223e+00 delta 4.300e-01 f 3.185e+02 |lgl 2.770e+02 CG 1: iter 29 act 2.898e-02 pre 2.878e",
        "id": 55,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 127,
        "text": "l 2.770e+02 CG 1: iter 29 act 2.898e-02 pre 2.878e-02 delta 4.300e-01 f 3.092e+02 lgl 3.736e+04 CG 2   \nmodel.fit(X_train, y_train) iter act1epreedeta4elCG 6 2 cg reaches trust region boundary   \npredict $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict_proba(test)[:,1] act 7e2preedeta47 B 5.929e+",
        "id": 56,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 153,
        "text": "edict_proba(test)[:,1] act 7e2preedeta47 B 5.929e+04 CG 12 2 act 3.256e+00 pre 3.259e+00 delta 4.477e-01 f 3.007e+02 lgl 8.364e+02 CG 8 iter 35 act 3.303e-02 pre 3.265e-02 delta 4.477e-01 f 2.974e+02 lgl 3.015e+04 CG 2   \ntest['Attrition'] $\\ c =$ predict iter act 3.761e-01 pre 3.697e-01 delta 4.477",
        "id": 57,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 144,
        "text": "edict iter act 3.761e-01 pre 3.697e-01 delta 4.477e-01 f 2.974e+02 lgl 3.958e+02 CG 6 iter 37 act 2.707e-04 pre 2.705e-04 delta 4.477e-01 f 2.970e+02 gl 3.163e+03 CG 2   \n#转化为二分类输出   \ntest['Attrition']=test['Attrition'].map(lambda x:1 if $x > = 0 . 5$ else 0)   \ntest[['Attrition']].to_csv('submit_Ir",
        "id": 58,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 21,
        "text": "$ else 0)   \ntest[['Attrition']].to_csv('submit_Ir.csv') ",
        "id": 59,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "SVM工具：",
        "id": 61,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 131,
        "text": "sklearn中支持向量分类主要有三种方法：SVC、NuSVC、LinearSVC   \nsklearn.svm.SVC( $\\ c = 1 . 0$ ，kernel $\\mathbf { \\Phi } = \\mathbf { \\Phi } ^ { \\prime }$ rbf', degree $^ { = 3 }$ ,gamma $= ^ { \\prime }$ auto', coef $) { = } 0 . 0$ shrinking $\\mathop :$ True,probability=False,to $\\mathsf { I } { = } 0 . 0 0 1$ ,cache_s",
        "id": 62,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 116,
        "text": "=False,to $\\mathsf { I } { = } 0 . 0 0 1$ ,cache_size $= 2 0 0$ class_weight $\\ c =$ None,verbose $\\ c =$ False,max_iter=-1, decision_function_shape $= \"$ ovr',random_state $\\ c =$ None)   \nsklearn.svm.NuSVC( $\\mathsf { n u } { = } 0 . 5$ ,kernel='rbf',degree $\\mathbf { \\lambda } = :$ 3,gamma $= ^ {",
        "id": 63,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 106,
        "text": "f',degree $\\mathbf { \\lambda } = :$ 3,gamma $= ^ { \\vert }$ auto', coef $\\scriptstyle \\mathtt { \\lambda } = 0 . 0$ ，shrinking $\\varXi$ True,probability=False, to $\\mathsf { l } { = } 0 . 0 0 1$ ,cache_size=200, class_weight $\\ c =$ None,verbose $\\ c =$ False,max_iter=-1, decision_function_shape $= ^",
        "id": 64,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 122,
        "text": "=$ False,max_iter=-1, decision_function_shape $= ^ { \\mathsf { I } }$ ovr',random_state $\\circleddash$ None)   \nsklearn.svm.LinearSvC(penalty $= ^ { \\prime } \\vert { 2 ^ { \\prime } }$ loss $= ^ { \\prime }$ squared_hinge', dual=True, t $_ { \\cdot 0 1 = 0 . 0 0 0 1 }$ ， ${ \\mathsf { C } } { = } 1 . 0$",
        "id": 65,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 115,
        "text": "= 0 . 0 0 0 1 }$ ， ${ \\mathsf { C } } { = } 1 . 0$ ，multi_class $= ^ { \\prime }$ ovr',fit_intercept $\\risingdotseq$ True, intercept_scaling $\\scriptstyle = 1$ ,class_weight $\\mathbf { \\Psi } : =$ None,verbose $_ { = 0 }$ random_state $\\ c =$ None,max_iter $\\mathbf { \\tau } = \\mathbf { \\tau }$ 1000) ",
        "id": 66,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "常用参数：",
        "id": 67,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 180,
        "text": "·C，惩罚系数，类似于LR中的正则化系数，C越大惩罚越大nu，代表训练集训练的错误率的上限（用于NuSVC）kernel，核函数类型，RBF,Linear,Poly,Sigmoid,precomputed，默认为RBF径向基核（高斯核函数）gamma，核函数系数，默认为autodegree，当指定kernel为'poly'时，表示选择的多项式的最高次数，默认为三次多项式probability，是否使用概率估计shrinking，是否进行启发式，SVM只用少量训练样本进行计算penalty，正则化参数，L1和L2两种参数可选，仅LinearSVC有loss，损失函数，有‘hinge’和‘squa",
        "id": 68,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 15,
        "length_tokens": 76,
        "text": "参数，L1和L2两种参数可选，仅LinearSVC有loss，损失函数，有‘hinge’和‘squared_hinge’两种可选，前者又称L1损失，后者称为L2损失  \n·tol:残差收敛条件，默认是0.0001，与LR中的一致",
        "id": 69,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "SVM工具",
        "id": 70,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "SVM工具: ",
        "id": 71,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 16,
        "length_tokens": 167,
        "text": "·SVC，SupportVector Classification，支持向量机用于分类 libsvm中自带了四种核函数：线性核、多项式核、RBF以及sigmoid核  \n·SVR，Support Vector Regression，支持向量机用于回归 Kernel核的选择技巧的：  \n·sklearn中支持向量分类主要有三种方法：sVC、NusVC、LinearSVc·如果样本数量<特征数：  \n·基于libsvm工具包实现，台湾大学林智仁教授在200年开发的一个简 方法1：简单的使用线性核就可以，不用选择非线性核单易用的SVM工具包 方法2：可以先对数据进行降维，然后使用非线性核  \n·SV",
        "id": 72,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 16,
        "length_tokens": 127,
        "text": "以，不用选择非线性核单易用的SVM工具包 方法2：可以先对数据进行降维，然后使用非线性核  \n·SVC，C-Support Vector Classification，支持向量分类 ·如果样本数量 $> =$ 特征数  \n·NuSVC，Nu-Support VectorClasification，核支持向量分类，和SVc类 可以使用非线性核，将样本映射到更高维度，可以得到比较好的结果似，不同的是可以使用参数来控制支持向量的个数  \n·LinearSVC， Linear Support Vector Classification",
        "id": 73,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 16,
        "length_tokens": 13,
        "text": "线性支持向量分类，使用的核函数是linear",
        "id": 74,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 17,
        "length_tokens": 67,
        "text": "SVM思想：一些线性不可分的问题可能是非线性可分的，也就是在高维空间中存在分离超平面（separating hyperplane）使用非线性函数从原始的特征空间映射至更高维的空间，转化为线性可分问题",
        "id": 75,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 76,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 18,
        "length_tokens": 3,
        "text": "SVM工具",
        "id": 77,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "Step3, 模型参数配置 ",
        "id": 78,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 79,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 80,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "Project B： 男女声音识别 ",
        "id": 81,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "男女声音识别",
        "id": 82,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 19,
        "length_tokens": 65,
        "text": "·数据集：3168个录制的声音样本（来自男性和女性演讲者），采集的频率范围是0hz-280hz，已经对数据进行了预处理  \n·一共有21个属性值，请判断该声音是男还是女？  \n·使用Accuracy作为评价标准",
        "id": 83,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "B ",
        "id": 84,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "Project B: 男女声音识别 ",
        "id": 85,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 86,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 87,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "Project B： 男女声音识别 ",
        "id": 88,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "男女声音识别",
        "id": 89,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 21,
        "length_tokens": 119,
        "text": "·Step1，数据加载  \nStep2，数据预处理  \n分离特征X和Target y  \n使用标签编码，male $- > 1$ ,female $- > 0$   \n将特征X矩阵进行规范化  \n#标准差标准化，处理后的数据符合标准正态分布  \nscaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ StandardScaler()  \nStep3，数据集切分，train_test_split  \nStep4，模型训练  \nSVM， Linear SVM  \nStep5，模型预测",
        "id": 90,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 91,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "常用预测模型",
        "id": 92,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 22,
        "length_tokens": 33,
        "text": "数据预处理  \n分类算法：LR，SVM，KNN  \n树模型：GBDT,XGBoost,LightGBM,CatBoost，NGBoost",
        "id": 93,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "每种模型都有适用的场景",
        "id": 94,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 4,
        "text": "LR优点：",
        "id": 95,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 38,
        "text": "实现简单，广泛的应用于工业问题上;·分类时计算量非常小，速度很快，使用资源低；·方便观测样本概率分数；",
        "id": 96,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "LR缺点: ",
        "id": 97,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 83,
        "text": "·当特征空间很大时，LR的性能不是很好；  \n·容易欠拟合，准确度不太高；  \n·不能很好地处理大量多类特征或变量;  \n·通常只处理二分类问题，多分类需要使用softmax（LR在多分类的推广），且必须线性可分；  \n·对于非线性特征，需要进行转换；",
        "id": 98,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "SVM优点：",
        "id": 99,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 58,
        "text": "·可以解决高维问题，即大型特征空间；  \n·能够处理非线性特征的相互作用；  \n·需要先对数据进行归一化，因为计算是基于距离的模型，所以SVM和LR都需要对数据进行归一化处理",
        "id": 100,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 6,
        "text": "SVM缺点: ",
        "id": 101,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 35,
        "text": "·当样本很多时，效率并不是很高；  \n·对非线性问题没有通用解决方案，可能会很难找到合适核函数",
        "id": 102,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 7,
        "text": "对缺失数据敏感；",
        "id": 103,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 23,
        "length_tokens": 31,
        "text": "SVM核的选择是有技巧的，样本数量<特征数，线性核，大于特征数使用非线性核",
        "id": 104,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "每种模型都有适用的场景",
        "id": 105,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 24,
        "length_tokens": 141,
        "text": "·可以使用LR模型作为预测的Baseline  \n·FM衍生模型在推荐系统，尤其是CTR预估中有广泛应用，弥补了LR模型的不足（需要人工组合特征，耗费大量时间和人力)  \n·Attention机制，对于Diversity多样性的情况，Attention机制可以提升效率，并且得出更好的结果  \n·TreeEnsemble模型，比如GBDT，使用广泛，因为训练模型更可控  \n对于LR模型，如果欠拟合，需要增加feature，才能提高  \n准确率。而对于tree-ensemble来说，解决方法是训练更  \n多的决策树tree。Kaggle比赛中使用很多",
        "id": 106,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "常用预测模型：",
        "id": 107,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 24,
        "length_tokens": 76,
        "text": "·分类算法：LR，SVM，KNN  \n矩阵分解：FunkSVD，BiasSVD，SVD++  \n· FM模型：FM,FFM,DeepFM,NFM，AFM  \n树模型：GBDT,XGBoost, LightGBM,CatBoost，NGBoost  \nAttention模型： DIN,DIEN,DSIN",
        "id": 108,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 25,
        "length_tokens": 6,
        "text": "2/2机器学习神器",
        "id": 109,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "什么是集成学习",
        "id": 110,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 26,
        "length_tokens": 4,
        "text": "集成学习：",
        "id": 111,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 26,
        "length_tokens": 31,
        "text": "·思想，将多个弱分类器按照某种方式组合起来，形成一个强分类器（三个臭皮匠赛过诸葛亮）",
        "id": 112,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 26,
        "length_tokens": 54,
        "text": "·Bagging，把数据集通过有放回的抽样方式，划分为多个数据集，分别训练多个模型。针对分类问题，按照少数服从多数原则进行投票，针对回归问题，求多个测试结果的平均值",
        "id": 113,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 26,
        "length_tokens": 51,
        "text": "·Stacking，通常是不同的模型，而且每个分类都用了全部训练数据，得到预测结果y1,y2,.,yk，然后再训练一个分类器 Meta Classifier,将这些预测结果作为输入，得到最终的预测结果",
        "id": 114,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 115,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "什么是集成学习",
        "id": 116,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "集成学习：",
        "id": 117,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 142,
        "text": "·Boosting，与Bagging一样，使用的相同的弱学习器，不过是以自适应的方法顺序地学习这些弱学习器，即每个新学习器都依赖于前面的模型，并按照某种确定性的策略将它们组合起来  \n·两个重要的Boosting算法：AdaBoost（自适应提升）和Gradient Boosting（梯度提升）  \n·AdaBoost，使用前面的学习器用简单的模型去适配数据，然后分析错误。然后会给予错误预测的数据更高权重，然后用后面的学习器去修复  \n·Boosting通过把一些列的弱学习器串起来，组成一个强学",
        "id": 118,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 2,
        "text": "习器",
        "id": 119,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 120,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 2,
        "text": "268 ",
        "id": 121,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 35,
        "text": "集成学习：训练弱学习器，并添加到集成模型中更新：基于当前的集成学习结果，更新训练集（值或权重）",
        "id": 122,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 123,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "什么是集成学习",
        "id": 124,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "Boosting与Bagging: ",
        "id": 125,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 28,
        "length_tokens": 166,
        "text": "·结构上，Bagging是基分类器并行处理，而Boosting是串行处理·训练集，Bagging的基分类器训练是独立的，而Boosting的训练集是依赖于之前的模型  \n·作用，Bagging的作用是减少variance，而Boosting在于减少bias对于Bagging，对样本进行重采样，通过重采样得到的子样本集训练模型，最后取平均。因为子样本集的相似性，而且使用相同的弱学习器，因此每个学习器有近似相等的bias和variance，因为每个学习器相互独立，所以可以显著降低variance，但是无法降低bias  \n对于Boosting，采用顺序的方式最小化损失函数，所以bias自然是逐步下",
        "id": 126,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 28,
        "length_tokens": 37,
        "text": "是无法降低bias  \n对于Boosting，采用顺序的方式最小化损失函数，所以bias自然是逐步下降，子模型之和不能显著降低variance",
        "id": 127,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 128,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "机器学习神器",
        "id": 129,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 29,
        "length_tokens": 7,
        "text": "GradientBoosting集成学习：",
        "id": 130,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 29,
        "length_tokens": 35,
        "text": "·XGBoost,LightGBM,CatBoost,NGBoost实际上是对GBDT方法的不同实现，针对同一目标、做了不同的优化处理",
        "id": 131,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 132,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "XGBoost: ",
        "id": 133,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "https://arxiv.0rg/abs/1603.02754 ",
        "id": 134,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "· 对于一个问题，INPUT X: age,gender,occupation,… ",
        "id": 135,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 12,
        "text": "Target y: How does the person like computer games? ",
        "id": 136,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 138,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 30,
        "length_tokens": 10,
        "text": "基学习器，采用CART回归树",
        "id": 139,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "XGBoost: ",
        "id": 140,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 23,
        "text": "目标函数 $\\dot { \\bf \\Phi } =$ 损失函数 $^ +$ 正则化项",
        "id": 141,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 39,
        "text": "$$\nO b j ( \\Theta ) = \\underset { \\ Y } { \\cal L } ( \\Theta ) + \\boldsymbol { \\Omega } ( \\Theta )\n$$",
        "id": 142,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 17,
        "text": "损失函数：拟合数据 正则化项：惩罚复杂模型",
        "id": 143,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 20,
        "text": "·误差函数尽量拟合训练数据，正则化项鼓励简单的模型",
        "id": 144,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 41,
        "text": "· $\\Omega ( f _ { t } )$ 用于控制树的复杂度，防止过拟合，使得模型更简化，也使得最终的模型的预测结果更稳定",
        "id": 145,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 61,
        "text": "$$\n\\Omega \\big ( f _ { t } \\big ) = \\gamma T + \\frac { 1 } { 2 } \\lambda \\sum _ { j = 1 } ^ { T } w _ { \\underbrace { j } } ^ { 2 }\n$$",
        "id": 146,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 19,
        "text": "T：叶子数量 wj：叶子分数的L2正则项 ",
        "id": 147,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 14,
        "text": "γ：加入新叶子节点引入的复杂度代价",
        "id": 148,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 46,
        "text": "$f _ { t } \\left( x \\right) = w _ { q \\left( x \\right) } \\quad \\mathsf { w }$ 代表叶子向量，q表示树的结构",
        "id": 149,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 150,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 31,
        "length_tokens": 44,
        "text": "$$\n\\Omega = \\gamma \\times 3 + \\frac { 1 } { 2 } \\lambda \\big ( 4 + 0 . 0 1 + 1 \\big )\n$$",
        "id": 151,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 32,
        "length_tokens": 7,
        "text": "TreeEnsemble集成学习：",
        "id": 152,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 32,
        "length_tokens": 89,
        "text": "单个CART回归树过于简单，可以通过多个CART回归树组成一个强学习器·预测函数，样本的预测结果 $\\mathbf { \\Psi } =$ 每棵树预测分数之和$\\hat { y } _ { i } = \\sum _ { k = 1 } ^ { K } f _ { k } \\big ( x _ { i } \\big )$ ",
        "id": 153,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "目标函数优化",
        "id": 155,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 32,
        "length_tokens": 125,
        "text": "$$\n\\begin{array} { c } { { O b j \\displaystyle \\big ( \\Theta \\big ) = \\sum _ { i } l \\big ( y _ { i } , \\hat { y } _ { i } \\big ) + \\sum _ { k } \\Omega \\big ( f _ { k } \\big ) } } \\\\ { { \\Omega \\big ( f \\big ) = \\gamma T + \\displaystyle \\frac { 1 } { 2 } \\lambda \\| w \\| ^ { 2 } } } \\end{array}\n$$",
        "id": 156,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 32,
        "length_tokens": 22,
        "text": "正则项是由叶子结点的数量和叶子结点权重的平方和决定",
        "id": 157,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 7,
        "text": "XGBoost的目标函数：",
        "id": 158,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 99,
        "text": "$$\nO b j ^ { t } = \\sum _ { i = 1 } ^ { n } l \\big ( y _ { i } , \\hat { y } _ { i } ^ { ( t - 1 ) } + f _ { t } \\big ( x _ { i } \\big ) \\big ) + \\Omega \\big ( f _ { t } \\big ) + \\mathrm { c o n s t a n t }\n$$",
        "id": 159,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "·对目标函数改进，进行二阶泰勒展开： ",
        "id": 160,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 92,
        "text": "$$\nf { \\big ( } x + \\Delta x { \\big ) } \\approx f { \\big ( } x { \\big ) } + f ^ { \\prime } { \\big ( } x { \\big ) } \\Delta x + { \\frac { 1 } { 2 } } f ^ { \\prime } { \\big ( } x { \\big ) } \\Delta x ^ { 2 }\n$$",
        "id": 161,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "·定义 ",
        "id": 162,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 163,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 186,
        "text": "$$\n\\begin{array} { r l } & { \\hat { y } _ { i } ^ { ( 0 ) } = 0 } \\\\ & { \\hat { y } _ { i } ^ { ( 1 ) } = f _ { 1 } ( x _ { i } ) = \\hat { y } ^ { ( 0 ) } + f _ { 1 } ( x _ { i } ) } \\\\ & { \\hat { y } _ { i } ^ { ( 2 ) } = f _ { 1 } ( x _ { i } ) + f _ { 2 } ( x _ { i } ) = \\hat { y } _ { i } ^ { ( 1 ) } + f _ { 2 } ( x _ { i } ) } \\\\ & { \\cdots } \\end{array}\n$$",
        "id": 164,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 80,
        "text": "$$\n\\hat { \\cal y } _ { i } ^ { ( t ) } = \\sum _ { k = 1 } ^ { t } f _ { k } ( x _ { i } ) = \\hat { \\cal y } _ { i } ^ { ( t - 1 ) } + f _ { t } ( x _ { i } )\n$$",
        "id": 165,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "保留前t-1轮的模型预测 加入新的预测函数",
        "id": 166,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "如何选择每一轮的预测函数f？",
        "id": 167,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 33,
        "length_tokens": 24,
        "text": "选取一个f来使得目标函数尽量降低，即加入f后的预测结果与实际结果误差减少",
        "id": 168,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "XGBoost的目标函数：",
        "id": 169,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 384,
        "text": "$$\n\\begin{array} { l } { { \\displaystyle O b j ^ { \\prime } \\approx \\sum _ { i = 1 } ^ { n } \\biggl [ g _ { i } f _ { i } \\biggl ( x _ { i } \\biggr ) + \\frac { 1 } { 2 } h _ { i } f _ { i } ^ { 2 } \\bigl ( x _ { i } \\bigr ) \\biggr ] + \\Omega \\bigl ( f _ { i } \\bigr ) } } \\\\ { { \\displaystyle \\qquad = \\sum _ { i = 1 } ^ { n } \\biggl [ g _ { i } ^ { \\mathrm { \\tiny \\dag } } w _ { q ( x _ { i } ) } + \\frac { 1 } { 2 } h _ { i } w _ { q ( x _ { i } ) } ^ { 2 } \\biggr ] + \\gamma + \\lambda \\frac { 1 } { 2 } \\sum _ { j = 1 } ^ { T } w _ { j } ^ { 2 } } } \\\\ { { \\displaystyle \\qquad = \\sum _ { j = 1 } ^ { T } \\biggl [ \\biggl ( \\sum _ { i \\in I _ { i } } g _ { i } \\biggr ) w _ { j } + \\frac { 1 } { 2 } \\biggl ( \\sum _ { i \\in I _ { i } } h _ { i } + \\lambda \\biggr ) w _ { j } ^ { 2 } \\biggr ] + \\gamma { \\cal T } } } \\end{array}\n$$",
        "id": 170,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "·T为叶子节点数量",
        "id": 171,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 113,
        "text": "$I _ { j }$ 定义为每个叶子节点里面的样本集合 $I _ { j } = \\left\\{ i \\vert q ( x _ { i } ) = j \\right\\}$ $f _ { t } \\left( x _ { i } \\right) = w _ { q ( x _ { i } ) }$ 即每个样本所在叶子节点索引的分数（叶子权重 $\\boldsymbol { \\mathsf { w } } )$ （204号",
        "id": 172,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 35,
        "text": "$G _ { j } , H _ { j }$ 分别表示每个叶子节点的一阶梯度的和，与二阶梯度的和：",
        "id": 173,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 84,
        "text": "$$\n\\begin{array} { c } { { G _ { j } = \\displaystyle \\sum _ { i \\in I _ { j } } g _ { i } } } \\\\ { { { } } } \\\\ { { H _ { j } = \\displaystyle \\sum _ { i \\in I _ { j } } h _ { i } } } \\end{array}\n$$",
        "id": 174,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 6,
        "text": "目标函数改写为：",
        "id": 175,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 207,
        "text": "$$\n\\begin{array} { l } { { \\displaystyle O b j ^ { t } = \\sum _ { j = 1 } ^ { T } \\left[ \\left( \\sum _ { i \\in I _ { j } } g _ { i } \\right) w _ { j } + \\frac { 1 } { 2 } \\left( \\sum _ { i \\in I _ { j } } h _ { i } + \\lambda \\right) w _ { j } ^ { 2 } \\right] + \\gamma T } } \\\\ { { \\displaystyle \\ = \\sum _ { j = 1 } ^ { T } \\left[ G _ { j } w _ { j } + \\frac { 1 } { 2 } \\big ( H _ { j } + \\lambda \\big ) w _ { j } ^ { 2 } \\right] + \\gamma T } } \\end{array}\n$$",
        "id": 176,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 34,
        "length_tokens": 175,
        "text": "$$\n\\begin{array} { r l } { { } } & { { \\displaystyle \\frac { \\partial O b j } { \\partial w _ { j } } = G _ { j } + \\big ( H _ { j } + \\lambda \\big ) w _ { j } = 0 } } \\\\ { { } } & { { w _ { j } = - \\displaystyle \\frac { G _ { j } } { H _ { j } + \\lambda } \\quad O b j = - \\displaystyle \\frac { 1 } { 2 } \\sum _ { j = 1 } ^ { T } \\displaystyle \\frac { G _ { j } ^ { 2 } } { H _ { j } + \\lambda } + \\gamma T } } \\end{array}\n$$",
        "id": 177,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 35,
        "length_tokens": 7,
        "text": "XGBoost的目标函数：",
        "id": 178,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 35,
        "length_tokens": 31,
        "text": "·Obj目标函数也称为结构分数（打分函数），代表当指定一个树的结构的时候，我们在目标上最多可以减少多少",
        "id": 179,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 180,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "XGBoost的目标函数：",
        "id": 181,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 21,
        "text": "·求Obj分数最小的树结构，可以穷举所有可能，但计算量太大",
        "id": 182,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 60,
        "text": "$$\nO b j = - \\frac { 1 } { 2 } \\sum _ { j = 1 } ^ { T } \\frac { G _ { j } ^ { 2 } } { H _ { j } + \\lambda } + \\gamma T\n$$",
        "id": 183,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 16,
        "text": "·使用贪心法，即利用打分函数（计算增益）",
        "id": 184,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 39,
        "text": "以Gain作为是否分割的条件，Gain看作是未分割前的Obj减去分割后的左右Obj，加入新叶子节点引入的复杂度代价",
        "id": 185,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 186,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 36,
        "length_tokens": 39,
        "text": "如果 $\\mathsf { G a i n } { < } 0$ ，则此叶节点不做分割，分割方案个数很多，计算量依然很大",
        "id": 187,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "XGBoost的分裂节点算法：",
        "id": 188,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 37,
        "length_tokens": 125,
        "text": "·贪心方法，获取最优分割节点（splitpoint）  \n将所有样本按照gi从小到大排序，通过遍历，查看每个  \n节点是否需要分割  \n·对于特征值的个数为n时，总共有n-1种划分  \n·Step1，对样本扫描一遍，得出GL，GR  \n·Step2，根据Gain的分数进行分割通过贪心法，计算效率得到大幅提升，XGBoost重新定义划分属性，即Gain，而Gain的计算是由目标损失函数obj决定的",
        "id": 189,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 190,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 191,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 38,
        "length_tokens": 19,
        "text": "XGBoost的分裂节点算法（近似算法，Histogram 2016 paper）：",
        "id": 192,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 38,
        "length_tokens": 200,
        "text": "·对于连续型特征值，样本数量非常大，该特征取值过多时，遍历所有取值会花费很多时间，且容易过拟合  \n·方法，在寻找split节点的时候，不会枚举所有的特征值，而会对特征值进行聚合统计，然后形成若干个bucket(桶)，只将bucket边界上的特征值作为split节点的候选，从而获得性能提升  \n·从算法伪代码中该流程还可以分为两种，全局的近似是在新生成一棵树之前就对各个特征计算分位点并划分样本，之后在每次分裂过程中都采用近似划分，而局部近似就是在具体的某一次分裂节点的过程中采用近似算法  \nfor $k = 1$ to m doPropose $S _ { k } = \\{ s _ { k 1",
        "id": 193,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 38,
        "length_tokens": 127,
        "text": "r $k = 1$ to m doPropose $S _ { k } = \\{ s _ { k 1 } , s _ { k 2 } , \\cdot \\cdot \\cdot s _ { k l } \\}$ by percentiles on feature $k$ Proposal can be done per tree (global), or per split(local).  \nend  \nfor $k = 1$ to m do（20 $\\begin{array} { r } { G _ { k v }  = \\sum _ { j \\in \\{ j | s _ { k , v } \\",
        "id": 194,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 38,
        "length_tokens": 137,
        "text": "_ { k v }  = \\sum _ { j \\in \\{ j | s _ { k , v } \\geq \\mathbf { x } _ { j k } > s _ { k , v - 1 } \\} } g _ { j } } \\\\ { H _ { k v }  = \\sum _ { j \\in \\{ j | s _ { k , v } \\geq \\mathbf { x } _ { j k } > s _ { k , v - 1 } \\} } h _ { j } } \\end{array}$ （204号  \nend  \nFollow same step as in previous sect",
        "id": 195,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 38,
        "length_tokens": 23,
        "text": "（204号  \nend  \nFollow same step as in previous section to find max  \nscore only among proposed splits.",
        "id": 196,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 197,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "XGBoost算法特点：",
        "id": 198,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 39,
        "length_tokens": 213,
        "text": "·XGBoost将树模型的复杂度加入到正则项中，从而避免过拟合，泛化性能好  \n·损失函数是用泰勒展开式展开的，用到了一阶导和二阶导，可以加快优化速度  \n·在寻找最佳分割点时，采用近似贪心算法，用来加速计算  \n·不仅支持CART作为基分类器，还支持线性分类器，在使用线性分类器的时候可以使用L1，L2正则化  \n·支持并行计算，XGBoost的并行是基于特征计算的并行，将特征列排序后以block的形式存储在内存中，在后面的迭代中重复使用这个结构。在进行节点分裂时，计算每个特征的增益，选择增益最大的特征作为分割节点，各个特征的增益计算可以使用多线程并行  \n·优点：速度快、效果好、能处理大规模",
        "id": 199,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 39,
        "length_tokens": 68,
        "text": "大的特征作为分割节点，各个特征的增益计算可以使用多线程并行  \n·优点：速度快、效果好、能处理大规模数据、支持自定义损失函数等  \n·缺点：算法参数过多，调参复杂，不适合处理超高维特征数据",
        "id": 200,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 201,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 40,
        "length_tokens": 6,
        "text": "XGBoost工具: ",
        "id": 202,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 40,
        "length_tokens": 49,
        "text": "https://github.com/dmlc/xgboost  \n参数分为：  \n通用参数：对系统进行控制Booster参数：控制每一步的booster(tree/regression)  \n·学习目标参数：控制训练目标的表现",
        "id": 203,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "通用参数：",
        "id": 204,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 40,
        "length_tokens": 142,
        "text": "·booster，模型选择，gbtree或者gblinear。gbtree使用基于树的模型进行提升计算，gblinear使用线性模型进行提升计算。[default $\\mathop { \\bf { \\phi } } =$ gbtree]  \n·silent，缄默方式，0表示打印运行时，1表示以缄默方式运行，不打印运行时信息。[default $\\scriptstyle : = 0 ]$   \n·nthread，XGBoost运行时的线程数，[default=缺省值是当前系统可以获得的最大线程数]  \n·num_feature，boosting过程中用到的特征个数，XGBoost会自动设置",
        "id": 205,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 206,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 4,
        "text": "Booster参数：",
        "id": 207,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 80,
        "text": "·eta [default $\\left. = 0 . 3 \\right]$ 1，为了防止过拟合，更新过程中用到的收缩步长。在每次提升计算之后，算法会直接获得新特征的权重。eta通过缩减特征的权重使提升计算过程更加保守，取值范围为[0,1]",
        "id": 208,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 78,
        "text": "·gamma [default $\\left[ = 0 \\right]$ ，分裂节点时，损失函数减小值只有大于等于gamma节点才分裂，gamma值越大，算法越保守，越不容易过拟合，但性能就不一定能保证，需要tradeoff，取值范围 $[ 0 , \\infty ]$ ",
        "id": 209,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 49,
        "text": "· max_depth [default $\\mathrel { \\mathop = } 6$ 5]，树的最大深度，取值范围为 $[ 1 , \\infty ]$ ，典型值为3-10",
        "id": 210,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 85,
        "text": "·min_child_weight[default $_ { : = 1 ] }$ ，一个子集的所有观察值的最小权重和。如果新分裂的节点的样本权重和小于min_child_weight则停止分裂。这个可以用来减少过拟合，但是也不能太高，会导致欠拟合，取值范围为 $[ 0 , \\infty ]$ ",
        "id": 211,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 41,
        "length_tokens": 137,
        "text": "$$\nG a i n = { \\frac { 1 } { 2 } } \\Biggl [ { \\frac { G _ { L } ^ { 2 } } { H _ { L } + \\lambda } } + { \\frac { G _ { R } ^ { 2 } } { H _ { R } + \\lambda } } - { \\frac { ( G _ { L } + G _ { R } ) ^ { 2 } } { H _ { L } + H _ { R } + [ \\lambda ] } } \\Biggr ] - [ \\gamma ] \\Biggr \\} \\quad \n$$",
        "id": 212,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 213,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "Booster参数：",
        "id": 214,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 42,
        "length_tokens": 146,
        "text": "·subsample[default $: = 1$ 1，构建每棵树对样本的采样率，如果设置成0.5，XGBoost会随机选择 $50 \\%$ 的样本作为训练集  \n·colsample_bytree [default $\\scriptstyle : = 1 ]$ ，列采样率，也就是特征采样率  \n· lambda[default ${ \\tt \\Psi } = 1 { \\tt \\Psi }$ ,alias:reg_lambda]，L2正则化，用来控制XGBoost的正则化部分  \n·alpha[default ${ \\bf \\bar { \\Lambda } } { \\bf \\Lambda }",
        "id": 215,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 42,
        "length_tokens": 82,
        "text": "[default ${ \\bf \\bar { \\Lambda } } { \\bf \\Lambda } = 0$ ,alias:reg_alpha]，L1正则化，增加该值会让模型更加收敛  \n·scale_pos_weight[default $\\scriptstyle : = 1 ]$ ，在类别高度不平衡的情况下，将参数设置大于0，可以加快收敛",
        "id": 216,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 217,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "学习目标参数：",
        "id": 218,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 43,
        "length_tokens": 118,
        "text": "·objective[default $\\mathbf { \\Psi } : =$ reg:linear]，定义学习目标，reg:linear，reg:logistic，binary:logistic，binary:logitraw，count:poisson，multi:softmax,multi:softprob， rank:pairwise  \n·eval_metric，评价指标，包括rmse，logloss，error，merror，mlogloss，auc，ndcg，map等  \n·seed[ default $_ { : = 0 }$ ]，随机数的种子  \n·dtrain，训练的数",
        "id": 219,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 43,
        "length_tokens": 139,
        "text": "eed[ default $_ { : = 0 }$ ]，随机数的种子  \n·dtrain，训练的数据  \n·num_boost_round，提升迭代的次数，也就是生成多少基模型  \n·early_stopping_rounds，早停法迭代次数  \n·evals：这是一个列表，用于对训练过程中进行评估列表中的元素。形式是evals $\\mathbf { \\tau } = \\mathbf { \\tau }$ [(dtrain,'train'),(dval,'val')]或者是ev $\\mathsf { a l s } = [ ( \\mathsf { d t r a i n } , ^ { \\pr",
        "id": 220,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 43,
        "length_tokens": 110,
        "text": " { a l s } = [ ( \\mathsf { d t r a i n } , ^ { \\prime } \\mathsf { t r a i n } ^ { \\prime } )$ ］对于第一种情况，它使得我们可以在训练过程中观察验证集的效果  \n·verbose_eval，如果为True，则对evals中元素的评估输出在结果中；如果输入数字，比如5，则每隔5个迭代输出一次  \n·learning_rates：每一次提升的学习率的列表",
        "id": 221,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 222,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 44,
        "length_tokens": 15,
        "text": "#天猫用户复购预测（XGBoost使用示意）",
        "id": 223,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 44,
        "length_tokens": 119,
        "text": "X_train,X_valid,y_train,Y_valid $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(train_X,train_y,test_size=.2)  \n#使用XGBoost  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.XGBClassifier(max_depth $^ { = 8 }$ ，#树的最大深度n_estimators $_ { \\mathsf { 3 } } = 1 0 0 0$ ，#提升迭代的次数，也就是生成多少基模型min_child_w",
        "id": 224,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 44,
        "length_tokens": 171,
        "text": "{ 3 } } = 1 0 0 0$ ，#提升迭代的次数，也就是生成多少基模型min_child_weight $: = 3 0 0$ ,#一个子集的所有观察值的最小权重和colsample_bytree=0.8,#列采样率，也就是特征采样率subsample $\\scriptstyle : = 0 . 8$ ，#构建每棵树对样本的采样率eta $= 0 . 3$ ，#eta通过缩减特征的权重使提升计算过程更加保守，防止过拟合seed=42 #随机数种子  \n）  \nmodel.fit(X_train, y_train,eval_metric $= ^ { \\prime }$ auc',eva",
        "id": 225,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 44,
        "length_tokens": 98,
        "text": "ain, y_train,eval_metric $= ^ { \\prime }$ auc',eval_set $\\ c =$ [(X_train,y_train),(X_valid,y_valid)],verbose=True,#早停法，如果auc在10epoch没有进步就stopearly_stopping_round $_ { : = 1 0 }$   \n】  \nmodel.fit(X_train, y_train)  \nprob $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict_proba(test_data)",
        "id": 226,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 227,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 228,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "Step3, 模型参数配置 ",
        "id": 229,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 45,
        "length_tokens": 133,
        "text": "param $\\mathbf { \\tau } = \\mathbf { \\tau }$ {'boosting_type':'gbdt', 'objective' :'binary:logistic',#任务目标 'eval_metric':'auc',#评估指标 'eta' :0.01,#学习率 'max_depth':15,#树最大深度 'colsample_bytree':0.8,#设置在每次迭代中使用特征的比例 'subsample':0.9,#样本采样比例 'subsample_freq':8,#bagging的次数 'alpha': 0.6,#L1正则 'lambda': 0,#L2",
        "id": 230,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 45,
        "length_tokens": 30,
        "text": "':8,#bagging的次数 'alpha': 0.6,#L1正则 'lambda': 0,#L2正则 ",
        "id": 231,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 4,
        "text": "XGBoost工具",
        "id": 232,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 11,
        "text": "Step4, 模型训练，得出预测结果",
        "id": 233,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 104,
        "text": "X_train, X_valid, y_train, y_valid $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(train.drop('Attrition',axis $_ { \\cdot = 1 }$ ), train['Attrition'],   \ntest_size ${ \\tt \\Psi } = 0 . 2$ ,random_state $= 4 2$ ）   \ntrain_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.DMatrix(X_train,label=y_t",
        "id": 234,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 98,
        "text": " = \\mathbf { \\tau }$ xgb.DMatrix(X_train,label=y_train)   \nvalid_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.DMatrix(X_valid, label=y_valid)   \ntest_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.DMatrix(test)   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.train(param, train_data, evals $\\ c ",
        "id": 235,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 108,
        "text": "{ \\tau }$ xgb.train(param, train_data, evals $\\ c =$ [(train_data,'train'),(valid_data,'valid')],   \nnum_boost_round $= 1 0 0 0 0$ ,early_stopping_round $s = 2 0 0$ ,verbose_eva $1 = 2 5$ ）   \npredict $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(test_data)   \ntest['Attrition'] $\\ c =$ predict",
        "id": 236,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 69,
        "text": "ct(test_data)   \ntest['Attrition'] $\\ c =$ predict   \n#转化为二分类输出   \ntest['Attrition']=test['Attrition'].map(lambda x:1 if $x > = 0 . 5$ else 0)   \ntest[['Attrition']].to_csv('submit_lgb.csv') ",
        "id": 237,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 238,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "LightGBM: ",
        "id": 239,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 47,
        "length_tokens": 60,
        "text": "2017年经微软推出，XGBoost的升级版  \nKaggle竞赛使用最多的模型之一，必备机器学习神器  \nLight $\\Rightarrow$ 在大规模数据集上运行效率更高（20 $G B M = 2$ Gradient Boosting Machine",
        "id": 240,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 48,
        "length_tokens": 4,
        "text": "Motivation: ",
        "id": 241,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 48,
        "length_tokens": 142,
        "text": "·常用的机器学习算法，例如神经网络等算法，都可以以mini-batch的方式训练，训练数据的大小不会受到内存限制  \n·GBDT在每一次迭代的时候，都需要遍历整个训练数据多次。如果把整个训练数据装进内存则会限制训练数据的大小；如果不装进内存，反复地读写训练数据又会消耗非常大的时间。对于工业级海量的数据，普通的GBDT算法是不能满足其需求的  \n·LightGBM的提出是为了解决GBDT在海量数据遇到的问题，让GBDT可以更好更快地用于工业场景",
        "id": 242,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 243,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 244,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 49,
        "length_tokens": 9,
        "text": "LightGBM与XGBoost: ",
        "id": 245,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 49,
        "length_tokens": 100,
        "text": "·模型精度：两个模型相当训练速度：LightGBM训练速度更快 $\\Rightarrow 1 / 1 0$ ·内存消耗：LightGBM占用内存更小 $\\Rightarrow 1 / 6$ ·特征缺失值：两个模型都可以自动处理特征缺失值·分类特征：XGBoost不支持类别特征，需要对其进行OneHot编码，而LightGBM支持分类特征",
        "id": 246,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 247,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 50,
        "length_tokens": 8,
        "text": "XGBoost模型的复杂度：",
        "id": 248,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 50,
        "length_tokens": 161,
        "text": "·模型复杂度 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 树的棵数×每棵树的叶子数量×每片叶子生成复杂度   \n·每片叶子生成复杂度 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 特征数量 $\\mathsf { x }$ 候选分裂点数量×样本的数量   \n针对XGBoost的优化：   \n·Histogram算法，直方图算法 $\\Rightarrow$ 减少候选分裂点数量   \n·GOSS算法，基于梯度的单边采样算法 $\\Rightarrow$ 减少样本的数量   \n·EFB算法，互斥特征捆绑算法 $\\Rightar",
        "id": 249,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 50,
        "length_tokens": 72,
        "text": "$\\Rightarrow$ 减少样本的数量   \n·EFB算法，互斥特征捆绑算法 $\\Rightarrow$ 减少特征的数量   \n· LightGBM $\\mathbf { \\tau } = \\mathbf { \\tau }$ XGBoost $^ +$ Histogram $+$ GOSS + EFB ",
        "id": 250,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 251,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 51,
        "length_tokens": 13,
        "text": "XGBoost的预排序（pre-sorted）算法：",
        "id": 252,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 51,
        "length_tokens": 71,
        "text": "·将样本按照特征取值排序，然后从全部特征取值中找到最优的分裂点位·预排序算法的候选分裂点数量 $\\mathbf { \\bar { \\rho } } = \\mathbf { \\bar { \\rho } }$ 样本特征不同取值个数减1",
        "id": 253,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 254,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 51,
        "length_tokens": 146,
        "text": "$$\nG a i n { = } \\frac { 1 } { 2 } \\Biggl [ \\frac { G _ { { L } } ^ { 2 } } { H _ { { L } } + \\lambda } { + } \\frac { G _ { { R } } ^ { 2 } } { H _ { { R } } + \\lambda } { - } \\frac { \\left( G _ { { L } } + G _ { { R } } \\right) ^ { 2 } } { H _ { { L } } + H _ { { R } } + \\lambda } \\Biggr ] { - } \\gamma\n$$",
        "id": 255,
        "type": "equation",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 52,
        "length_tokens": 7,
        "text": "LightGBM的Histogram算法：",
        "id": 256,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "替代XGBoost的预排序算法",
        "id": 257,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 52,
        "length_tokens": 135,
        "text": "思想是先连续的浮点特征值离散化成k个整数，同时构造一个宽度为k的直方图，即将连续特征值离散化到k个bins上（比如 $k = 2 5 5$ ），当遍历一次数据后，直方图累积了需要的统计量，然后根据直方图的离散值，遍历寻找最优的分割点XGBoost需要遍历所有离散化的值，LightGBM只要遍历k个直方图的值·候选分裂点数量 $= k - 1$ ",
        "id": 258,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 259,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 260,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 261,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 53,
        "length_tokens": 4,
        "text": "GOSS算法：",
        "id": 262,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 53,
        "length_tokens": 122,
        "text": "·Gradient-based One-Side Sampling，基于梯度的单边采样算法  \n思想是通过样本采样，减少目标函数增益Gain的计算复杂度  \n·单边采样，只对梯度绝对值较小的样本按照一定比例进行采样，而保留了梯度绝对值较大的样本  \n·因为目标函数增益主要来自于梯度绝对值较大的样本 $\\Rightarrow { \\mathsf { G O S S } }$ 算法在性能和精度之间进行了很好的tradeoff",
        "id": 263,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 264,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 53,
        "length_tokens": 72,
        "text": "gi：梯度绝对值，假设阈值为0.1对gi $< 0 . 1$ 的样本 $\\Rightarrow 1 / 3$ 概率进行采样对gi> $_ { \\cdot = 0 . 1 }$ 的样本 $\\Rightarrow$ 全部保留",
        "id": 265,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 53,
        "length_tokens": 2,
        "text": "V ",
        "id": 266,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 267,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "EFB算法：",
        "id": 268,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 54,
        "length_tokens": 197,
        "text": "·ExclusiveFeatureBundling，互斥特征绑定算法  \n·思想是特征中包含大量稀疏特征的时候，减少构建直方图的特征数量，从而降低计算复杂度  \n·数据集中通常会有大量的稀疏特征（大部分为0，少量为非0）我们认为这些稀疏特征是互斥的，即不会同时取非零值  \n·EFB算法可以通过对某些特征的取值重新编码，将多个这样互斥的特征绑定为一个新的特征  \n·类别特征可以转换成onehot编码，这些多个特征的onehot编码是互斥的，可以使用EFB将他们绑定为一个特征  \n·在LightGBM中，可以直接将每个类别取值和一个bin关联，从而自动地处理它们，也就无需预处理成onehot编码",
        "id": 269,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 270,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 55,
        "length_tokens": 5,
        "text": "LightGBM工具：",
        "id": 271,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 55,
        "length_tokens": 28,
        "text": "import lightgbm as lgb   \n官方文档:http://lightgbm.readthedocs.io/en/latest/PythonIntro.html ",
        "id": 272,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 55,
        "length_tokens": 2,
        "text": "参数:",
        "id": 273,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 55,
        "length_tokens": 77,
        "text": "boosting_type，训练方式，gbdt  \n。objective，目标函数，可以是binary，regressionmetric，评估指标，可以选择auc,mae，mse，binary_logloss,multi_loglossmax_depth，树的最大深度，当模型过拟合时，可以降低max_depth  \nmindata in leaf，叶子节点最小记录数，默认20",
        "id": 274,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 55,
        "length_tokens": 16,
        "text": "Bagging参数：bagging_fraction+bagging_freq（需要同时设置）",
        "id": 275,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 55,
        "length_tokens": 129,
        "text": "·bagging_fraction，每次迭代时用的数据比例，用于加快训练速度和减小过拟合  \nbagging_freq：bagging的次数。默认为o，表示禁用bagging，非零值表示执行k次bagging，可以设置为3-5  \nfeature_fraction，设置在每次迭代中使用特征的比例，例如为0.8时，意味着在每次迭代中随机选择 $80 \\%$ 的参数来建树  \nearly_stopping_round，如果一次验证数据的一个度量在最近的round中没有提高，模型将停止训练",
        "id": 276,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 56,
        "length_tokens": 2,
        "text": "参数:",
        "id": 277,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 56,
        "length_tokens": 137,
        "text": "·lambda，正则化项，范围为 $0 { \\sim } 1$   \n·min_gain_to_split，描述分裂的最小gain，控制树的有用的分裂  \n：max_cat_group，在group 边界上找到分割点，当类别数量很多时，找分割点很容易过拟合时  \n·num_boost_round，迭代次数，通常 $1 0 0 +$   \n·num_leaves，默认31  \n·device，指定cpu 或者gpu  \n·max_bin，表示 feature将存入的bin 的最大数量  \n·categorical_feature，如果 categorical_features $\\mathrel",
        "id": 278,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 56,
        "length_tokens": 63,
        "text": "egorical_feature，如果 categorical_features $\\mathrel { \\mathop : } = 0 , 1 , 2$ ，则列0，1，2是categorical变量  \n·ignore_column，与categorical_features类似，只不过不是将特定的列视为categorical，而是完全忽略",
        "id": 279,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 57,
        "length_tokens": 8,
        "text": "Step3, 模型参数配置 ",
        "id": 280,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 57,
        "length_tokens": 128,
        "text": "m $\\mathbf { \\tau } = \\mathbf { \\tau }$ {'boosting_type':'gbdt', 'objective':'binary',#任务类型 'metric':'auc',#评估指标 'learning_rate' :O.01,#学习率 'max_depth':15,#树的最大深度 'feature_fraction':0.8,#设置在每次迭代中使用特征的比例 'bagging_fraction':0.9,#样本采样比例 'bagging_freq':8,#bagging的次数 'lambda_I1': O.6,#L1正则 'lambda_l2':0,",
        "id": 281,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 57,
        "length_tokens": 30,
        "text": ",#bagging的次数 'lambda_I1': O.6,#L1正则 'lambda_l2':0,#L2正则 ",
        "id": 282,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 4,
        "text": "LightGBM工具",
        "id": 283,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 11,
        "text": "Step4, 模型训练， 得出预测结果",
        "id": 284,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 75,
        "text": "X_train,X_valid,y_train,Y_valid $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(train.drop('Attrition',axis $_ { \\cdot = 1 }$ ), train['Attrition'], test_size ${ \\tt \\Psi } = 0 . 2$ ,random_state $= 4 2$ ） ",
        "id": 285,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 28,
        "text": "trn_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ Igb.Dataset(X_train, label=y_train) ",
        "id": 286,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 27,
        "text": "val_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ Igb.Dataset(X_valid, label=y_valid) ",
        "id": 287,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 100,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ lgb.train(param,train_data,valid_sets $\\ c =$ [train_data,valid_data],num_boost_round $\\mathbf { \\tau } = \\mathbf { \\tau }$ 10000,early_stopping_round $s = 2 0 0$ ,verbose_eva $\\mathsf { I } = 2 5$ , categorical_feature $\\mathbf { \\sigma } =$ attr) ",
        "id": 288,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 9,
        "text": "predict $\\ c =$ model.predict(test) ",
        "id": 289,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 10,
        "text": "test['Attrition'] $\\ c =$ predict ",
        "id": 290,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "#转化为二分类输出",
        "id": 291,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 31,
        "text": "test['Attrition']=test['Attrition'].map(lambda x:1 if $x > = 0 . 5$ else 0) ",
        "id": 292,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 15,
        "text": "test[['Attrition']].to_csv('submit_lgb.csv') ",
        "id": 293,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 294,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 59,
        "length_tokens": 3,
        "text": "参数对比",
        "id": 295,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 296,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 60,
        "length_tokens": 9,
        "text": "祖传参数 (LightGBM) ",
        "id": 297,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 298,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 60,
        "length_tokens": 130,
        "text": "LGBMClassifier经验参数   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ Igb.LGBMClassifier( num_leaves $= 2 ^ { * * } 5 - 1$ ,reg_alpha $= 0 . 2 5$ , reg_lambda=0.25,   \nobjective $= ^ { 1 }$ binary', max_depth $= - 1$ ,learning_rate $= 0 . 0 0 5$ ,min_child_samples $^ { = 3 }$   \nrandom_state $= 2 0 2 1$ n",
        "id": 299,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 60,
        "length_tokens": 123,
        "text": "_samples $^ { = 3 }$   \nrandom_state $= 2 0 2 1$ n_estimators $\\ c =$ 2000,subsample=1,colsample_bytree $\\scriptstyle = 1$ 1 ）   \nnum_leave $1 = 2 ^ { * * } 5 - 1$ #树的最大叶子数，对比×GBoost一般为   \n2^(max_depth)   \nreg_alpha，L1正则化系数   \nreglambda，L2正则化系数   \nmax_depth，最大树的深度 ",
        "id": 300,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 301,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 60,
        "length_tokens": 47,
        "text": "n_estimators，树的个数，相当于训练的轮数 subsample，训练样本采样率 (行采样) colsample_bytree，训练特征采样率 (列采样) ",
        "id": 302,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 8,
        "text": "祖传参数 (XGBoost ",
        "id": 303,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 8,
        "text": "XGBoost VS LightGBM ",
        "id": 304,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 13,
        "text": "XGBoost效果相对LightGBM可能会好一些",
        "id": 305,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 114,
        "text": "xgb $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.XGBClassifier( max_depth $= 6$ ,learning_rate $_ { = 0 . 0 5 }$ ,n_estimators=2000, objective $= ^ { \\mathsf { I } }$ binary:logistic', tree_method $= ^ { \\prime }$ gpu_hist', subsample $= 0 . 8$ , colsample_bytree $\\scriptstyle : = 0 . 8$ min_child_samp",
        "id": 306,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 40,
        "text": "ple_bytree $\\scriptstyle : = 0 . 8$ min_child_samples=3,eval_metric $u ^ { \\prime }$ auc',reg_lambda=0.! ） ",
        "id": 307,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 118,
        "text": "max_depth，树的最大深度  \nlearning_rate,学习率  \nreg_lambda，L2正则化系数  \nn_estimators，树的个数，相当于训练的轮数  \nobjective，目标函数,binary:logistic用于二分类任务  \ntree_method，使用功能的树的构建方法，hist代表使用直方图优  \n化的近似贪婪算法  \nsubsample，训练样本采样率 (行采样)  \ncolsample_bytree，训练特征采样率 (列采样)",
        "id": 308,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 309,
        "type": "image",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 61,
        "length_tokens": 38,
        "text": "subsample，colsample_bytree是个值得调参的参数典型的取值为0.5-0.9 (取0.7效果可能更好)",
        "id": 310,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 62,
        "length_tokens": 4,
        "text": "CatBoost算法：",
        "id": 311,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 62,
        "length_tokens": 149,
        "text": "·俄罗斯科技公司Yandex开源的机器学习库（2017年）  \n·https://arxiv.0rg/pdf/1706.09516.pdf  \n· CatBoost $\\mathbf { \\tau } = \\mathbf { \\tau }$ Catgorical $^ +$ Boost  \n·高效的处理分类特征（categoricalfeatures），首先对分类特征做统计，计算某个分类特征（category）出现的频率，然后加上超参数，生成新的数值型特征（numericalfeatures）  \n·同时使用组合类别特征，丰富了特征维度  \n·采用的基模型是对称决策树，算法的参数少、支持分类变",
        "id": 312,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 62,
        "length_tokens": 43,
        "text": " \n·同时使用组合类别特征，丰富了特征维度  \n·采用的基模型是对称决策树，算法的参数少、支持分类变量，通过可以防止过拟合",
        "id": 313,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 63,
        "length_tokens": 13,
        "text": "CatBoost， LightGBM， XGBoost对比:",
        "id": 314,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 63,
        "length_tokens": 148,
        "text": "·2015年航班延误数据，包含分类和数值变量  \n:https://www.kaggle.com/usdot/flight-delays/data  \n一共有约500条记录，使用 $10 \\%$ 的数据，即50条记录CatBoost过拟合程度最小，在测试集上准确度最高0.816，同时预测用时最短，但这个表现仅仅在有分类特征，而且调节了one-hot最大量时才会出现  \n如果不利用CatBoost算法在这些特征上的优势，表现效果就会变成最差，AUC0.752  \n使用CatBoost需要数据中包含分类变量，同时适当地调节这些变量时，才会表现不错",
        "id": 315,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 63,
        "length_tokens": 0,
        "text": "",
        "id": 316,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 64,
        "length_tokens": 13,
        "text": "CatBoost， LightGBM， XGBoost对比:",
        "id": 317,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 64,
        "length_tokens": 91,
        "text": "处理特征为分类的神器  \n·支持即用的分类特征，因此我们不需要对分类特征进行预处理（比如使用LabelEncoding或OneHotEncoding)  \nCatBoost设计了一种算法验证改进，避免了过拟合。因此处理分类数据比LightGBM和XGBoost 强  \n：准确性比XGBoost更高，同时训练时间更短  \n支持 GPU训练可以处理缺失的值",
        "id": 318,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 319,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 64,
        "length_tokens": 64,
        "text": "实验1，分类模型MNIST识别（6万数据，784特征)实验2，回归模型，预测纽约出租车票价 (6万数据，7个特征)实验3，回归模型，预测纽约出租车票价 (200万数据，7个特征)",
        "id": 320,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 65,
        "length_tokens": 3,
        "text": "CatBoost工具",
        "id": 321,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 65,
        "length_tokens": 5,
        "text": "CatBoost工具: ",
        "id": 322,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 65,
        "length_tokens": 27,
        "text": "· https://github.com/dmlc/xgboost ·https://catboost.ai/docs/concepts/python-reference_catboostclassifier.html ",
        "id": 323,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 65,
        "length_tokens": 4,
        "text": "构造参数：",
        "id": 324,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 65,
        "length_tokens": 128,
        "text": "·learning_rate，学习率  \n· depth，树的深度  \n·l2_leaf_reg，L2正则化系数  \n·n_estimators，树的最大数量，即迭代次数  \n·one_hot_max_size，one-hot编码最大规模，默认值根据数据和训练环境的不同而不同  \n·loss_function，损失函数，包括Logloss，RMSE，MAE，CrossEntropy，回归任务默认RMSE，分类任务默认Logloss  \neval_metric，优化目标，包括RMSE，Logloss，MAE，CrossEntropy，Recall，Precision，F1，Accuracy，AU",
        "id": 325,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 65,
        "length_tokens": 22,
        "text": "s，MAE，CrossEntropy，Recall，Precision，F1，Accuracy，AUC，R2",
        "id": 326,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 66,
        "length_tokens": 3,
        "text": "CatBoost工具",
        "id": 327,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 66,
        "length_tokens": 4,
        "text": "fit函数参数：",
        "id": 328,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 66,
        "length_tokens": 108,
        "text": "·X，输入数据数据类型可以是：list;pandas.DataFrame;pandas.y=Nonecat features=None，用于处理分类特征sample_weight=None，输入数据的样本权重  \n·logging_level=None，控制是否输出日志信息，或者其他信息  \n·plot=False，训练过程中，绘制，度量值，所用时间等  \neval_set=None，验证集合，数据类型list(X,y)tuples  \nbaseline $\\ c =$ Noneuse_best_model $\\ c =$ None  \nverbose $\\ c =$ None",
        "id": 329,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 67,
        "length_tokens": 49,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ CatBoostClassifier(iteration $\\scriptstyle \\mathsf { s } = 1 0 0 0$ ，#最大树数，即迭代次数",
        "id": 330,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 67,
        "length_tokens": 129,
        "text": "depth $= 6$ ，#树的深度  \nlearning_rate $\\mathbf { \\varepsilon } = 0 . 0 3$ ,#学习率  \ncustom_ ${ \\mathsf { I o s s } } = ^ { \\prime } { \\mathsf { A u c } } ^ { \\prime }$ ,#训练过程中，用户自定义的损失函数  \neval_metric $\\because \\mathsf { A U C } ^ { \\prime }$ ,#过拟合检验（设置True）的评估指标，用于优化  \nbagging_temperatur $\\scriptstyle \\",
        "id": 331,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 67,
        "length_tokens": 144,
        "text": "ue）的评估指标，用于优化  \nbagging_temperatur $\\scriptstyle \\mathtt { \\underline { { \\sigma } } } = 0 . 8 3$ ，#贝叶斯bootstrap强度设置  \n$r s \\mathsf { m } = 0 . 7 8 ,$ #随机子空间  \nod_type $\\mathrel { \\mathop : }$ Iter',#过拟合检查类型  \nod_wait $_ { : = 1 5 0 }$ ，#使用Iter时，表示达到指定次数后，停止训练  \nmetric_period $= 4 0 0$ ，#计算优化评估值的频率 ",
        "id": 332,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 67,
        "length_tokens": 88,
        "text": "指定次数后，停止训练  \nmetric_period $= 4 0 0$ ，#计算优化评估值的频率  \nl2_leaf_ $\\displaystyle \\mathsf { r e g } = 5$ ,#2正则参数  \nthread_count $= 2 0$ ，#并行线程数量  \nrandom_seed $= 9 6 7$ #随机数种子  \n）",
        "id": 333,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 3,
        "text": "CatBoost工具",
        "id": 334,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 8,
        "text": "Step3, 模型参数配置 ",
        "id": 335,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 107,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ cb.CatBoostClassifier(iterations=1000, depth $\\scriptstyle 1 = { \\overline { { \\jmath } } }$ 7， learning_rate $_ { ! = 0 . 0 1 }$ ， loss_function $= ^ { \\mathsf { 1 } }$ Logloss', eval_metric $= ^ { \\prime }$ AUC', logging_level $\\mathbf { \\tau } = \\mathbf",
        "id": 336,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 35,
        "text": "}$ AUC', logging_level $\\mathbf { \\tau } = \\mathbf { \\tau }$ Verbose', metric_period $\\scriptstyle = 5 0$ ",
        "id": 337,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 45,
        "text": "#得到分类特征的列号 categorical_features_indices =[] fori in range(len(X_train.columns)): if X_train.columns.values[i] in attr: categorical_features_indices.append(i) print(categorical_features_indices) ",
        "id": 338,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 32,
        "text": "attr=['Age','BusinessTravel','Department','Education','EducationField','Gend er','JobRole','MaritalStatus','Over18','OverTime'] ",
        "id": 339,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 68,
        "length_tokens": 22,
        "text": "[0,1,3,5,6,9,13,15,19,20] ",
        "id": 340,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 3,
        "text": "CatBoost工具",
        "id": 341,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 11,
        "text": "Step4, 模型训练，得出预测结果",
        "id": 342,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 70,
        "text": "model.fit(X_train,y_train,eval_set=(X_valid,y_valid),   \ncat_features $\\ c =$ categorical_features_indices)   \npredict $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(test)   \ntest['Attrition'] $\\ c =$ predict   \ntest[['Attrition']].to_csv('submit_cb.csv') ",
        "id": 343,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 146,
        "text": "0： test: 0.6390374 best: 0.6390374 (0) t0tal: 80.6ms remaining: 1m 20s   \n50: test: 0.7998472 best: 0.7998472 (50) total: 805ms remaining: 15s   \n100: test: 0.8054131 best: 0.8054131 (100) total: 1.54s remaining: 13.8s   \n150 : test: 0.8053039 be5t: 0.8054131 (100) total: 2.51s remaining: 14.1s   \n2",
        "id": 344,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 141,
        "text": "0.8054131 (100) total: 2.51s remaining: 14.1s   \n200 : test: 0.8075958 best: 0.8075958 (200) total: 3.55s remaining: 14.1s   \n250 : test: 0.8062862 best: 0.8075958 (200) total: 4.55s remaining: 13.6s   \n300: test: 0.8045400 best: 0.8075958 (200) total: 5.51s remaining: 12.8s   \n350 : test: 0.8059587",
        "id": 345,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 147,
        "text": "l: 5.51s remaining: 12.8s   \n350 : test: 0.8059587 be5t: 0.8075958 (200) total: 6.45s remaining: 11.9s   \n400 : test: 0.8065044 best: 0.8075958 (200) total: 7.41s remaining: 11.1s   \n450 : test: 0.8065044 be5t: 0.8075958 (200) total: 8.44s remaining: 10.3s   \n500: test: 0.8077049 best: 0.8077049 (50",
        "id": 346,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 146,
        "text": " 10.3s   \n500: test: 0.8077049 best: 0.8077049 (500) total: 9.46s remaining: 9.43s   \n550 : test: 0.8090145 best: 0.8090145 (550) total: 10.6s remaining: 8.6s   \n600: test: 0.8106515 best: 0.8106515 (600) total: 11.5s remaining: 7.62s   \n650 : test: 0.8113063 be5t: 0.8113063 (650) total: 12.4s remai",
        "id": 347,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 143,
        "text": "0.8113063 be5t: 0.8113063 (650) total: 12.4s remaining: 6.67s   \n700 : test: 0.8125068 best: 0.8125068 (700) total: 13.4s remaining: 5.71s   \n750 : test: 0.8126160 best: 0.8126160 (750) total: 14.4s remaining: 4.77s   \n800: test: 0.8116337 best: 0.8126160 (750) total: 15.5s remaining: 3.84s   \n850 :",
        "id": 348,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 139,
        "text": "26160 (750) total: 15.5s remaining: 3.84s   \n850 : test: 0.8121794 be5t: 0.8126160 (750) total: 16.5s remaining: 2.89s   \n900: test: 0.8116337 best: 0.8126160 (750) total: 17.6s remaining: 1.94s   \n950 : test: 0.8111972 best: 0.8126160 (750) total: 18.7s remaining: 965ms   \n999 : test: 0.8108698 bes",
        "id": 349,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 61,
        "text": "8.7s remaining: 965ms   \n999 : test: 0.8108698 best: 0.8126160 (750) total: 19.8s remaining: 0us   \nbestTest = 0.8126159555   \nbestIteration = 750 ",
        "id": 350,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 351,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 352,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 70,
        "length_tokens": 93,
        "text": "·LighGBM效率高，在Kaggle比赛中应用多  \n·CatBoost对于分类特征多的数据，可以高效的处理，过拟合程度小，效果好  \n·XGBoost,LightGBM,CatBoost参数较多，调参需要花大量时间  \n·Boosting集成学习包括AdaBoosting和Gradient Boosting  \n·Boosting只是集成学习中的一种（Bagging,Stacking）",
        "id": 353,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 71,
        "length_tokens": 8,
        "text": "打卡：二手车价格预测",
        "id": 354,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 71,
        "length_tokens": 42,
        "text": "针对AI大赛：二手车价格预测，编写AI算法，进行预测，挑战分数<550 https://tianchi.aliyun.com/competition/entrance/231784/information ",
        "id": 355,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 71,
        "length_tokens": 12,
        "text": "训练集: used_car_train_20200313.csv ",
        "id": 356,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 71,
        "length_tokens": 12,
        "text": "测试集： used_car_testB_20200421.csv",
        "id": 357,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 71,
        "length_tokens": 11,
        "text": "XGBoost模型LightGBM模型CatBoost模型",
        "id": 358,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 71,
        "length_tokens": 9,
        "text": "你觉得哪个模型的模型效果好？",
        "id": 359,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 7,
        "text": "如何防止模型过拟合",
        "id": 360,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 10,
        "text": "Thinking: 如何防止模型过拟合？",
        "id": 361,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 21,
        "text": "1、模型层面优化  \n2、数据层面优化  \n3、业务逻辑约束",
        "id": 362,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 11,
        "text": "学习赛第二季:466/780.2130",
        "id": 363,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 88,
        "text": "[19995] validation_0-mae:493.30894   \n[19996] validation_0-mae:493.30957   \n[19997] validation_0-mae:493.30842   \n[19998] validation 0-mae:493.30761   \n[19999] validation_0-mae:493.30777   \n模型3 验证集 MAE:493.31 ",
        "id": 364,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 19,
        "text": "7.2 集成模型预测集成模型验证集 MAE: 492.49",
        "id": 365,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 6,
        "text": "8.评估模型性能",
        "id": 366,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 72,
        "length_tokens": 91,
        "text": "日期：2025-06-06 00:09:57  \n分数：818.1239  \n日期：2025-06-05 12:55:31  \n分数：826.2079  \n日期：2025-06-05 12:28:42  \n分数：826.2079  \n日期：2025-06-05 12:08:09  \n分数：780.2130",
        "id": 367,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 7,
        "text": "如何防止模型过拟合",
        "id": 368,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 10,
        "text": "Thinking: 如何在模型层面进行优化？",
        "id": 369,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 5,
        "text": "正则化技术：",
        "id": 370,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 73,
        "text": "树模型：调整max_depth(建议5-8)、min_samples_leaf(建议10-20，代表每个叶子节点至少包含的样本数)  \n神经网络：添加dropout层(0.2-0.5)+ L2正则化  \n线性模型：增大L1/L2正则化系数",
        "id": 371,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 4,
        "text": "早停机制：",
        "id": 372,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 36,
        "text": "监控验证集loss，设置patience=10-20个epoch，patience代表允许验证集损失validation loss连续不改善的轮次（epochs）数量",
        "id": 373,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 4,
        "text": "集成方法：",
        "id": 374,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 73,
        "length_tokens": 21,
        "text": "使用Blending（用70%训练基模型， $30 \\%$ 训练元模型）",
        "id": 375,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 74,
        "length_tokens": 11,
        "text": "如何防止模型过拟合 （树模型）",
        "id": 376,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 74,
        "length_tokens": 6,
        "text": "XGBoost中的超参数",
        "id": 377,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 74,
        "length_tokens": 163,
        "text": "$\\mathsf { p a r a m s } = \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ （2'objective':'reg:squarederror'，#目标函数，回归问题用平方误差'eval_metric': 'mae', # 评估指标，平均绝对误差'learning_rate': 0.01, # 学习率，控制每棵树对最终结果的影响，越小越保守'max_depth': 6, # 树的最大深度，防止过拟合'subsample': 0.8, # 每棵树随机采样的样本比例，防止过拟合'colsample_bytree': 0.8",
        "id": 378,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 74,
        "length_tokens": 87,
        "text": ": 0.8, # 每棵树随机采样的样本比例，防止过拟合'colsample_bytree': 0.8, # 每棵树随机采样的特征比例，防止过拟合'seed': 42, # 随机种子，保证结果可复现'nthread': -1 #使用全部CPU线程加速训练  \n}",
        "id": 379,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 75,
        "length_tokens": 11,
        "text": "如何防止模型过拟合 （树模型）",
        "id": 380,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 75,
        "length_tokens": 13,
        "text": "在sklearn决策树中，可以使用min_samples_leaf参数",
        "id": 381,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 75,
        "length_tokens": 104,
        "text": "from sklearn.ensemble import RandomForestRegressor  \n#尝试不同值观察效果  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ RandomForestRegressor(min_samples_leaf $\\dot { \\mathbf { \\eta } } = 1 0$ ，# 初始建议值n_estimator ${ \\mathsf { s } } { = } 1 0 0$ ，random_state $= 4 2$   \n）  \nmodel.fit(X_train, y_train)",
        "id": 382,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 75,
        "length_tokens": 72,
        "text": "XGBoost没有min_samples_leaf 这个参数，在XGBoost 中，类似的参数是：min_child_weight，即一个叶子节点上最小的样本权重和（对于回归问题就是样本个数的和）。如果一个叶子节点的样本权重和小于这个值，则不会再分裂。",
        "id": 383,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 76,
        "length_tokens": 12,
        "text": "如何防止模型过拟合 （神经网络）",
        "id": 384,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 76,
        "length_tokens": 12,
        "text": "如果使用神经网络，可以增加layers.Dropout 层",
        "id": 385,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 76,
        "length_tokens": 84,
        "text": "from tensorflow import keras   \nfrom tensorflow.keras import layers   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ keras.Sequential([ layers.Dense(128, activation $= ^ { \\mathsf { \\Gamma } }$ relu',input_shape $\\ c =$ (X_train.shape[1],)), layers.Dropout(0.2), layers.Dense(64, activation $= ^ { \\mat",
        "id": 386,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 76,
        "length_tokens": 46,
        "text": "pout(0.2), layers.Dense(64, activation $= ^ { \\mathsf { \\Gamma } }$ relu'), layers.Dropout(0.1), layers.Dense(1)   \n1) ",
        "id": 387,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 76,
        "length_tokens": 56,
        "text": "神经网络是一种受人脑神经元结构启发的机器学习模型。核心思想是通过大量“神经元”节点的层层连接和非线性变换，自动学习输入特征与输出目标之间的复杂映射关系。",
        "id": 388,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 77,
        "length_tokens": 12,
        "text": "如何防止模型过拟合 （线性模型）",
        "id": 389,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 77,
        "length_tokens": 22,
        "text": "如果使用线性模型，比如逻辑回归，可以使用L1或L2正则化系数",
        "id": 390,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 77,
        "length_tokens": 133,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ LogisticRegression(max_iter=100,verbose $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ True,random_state $= 4 2$ ，$\\scriptstyle { \\mathrm { t o l } } = 1 \\ e - 4 .$ penalty $= ^ { 1 } 1 2 ^ { 1 }$ ，#或'I1'${ \\mathsf { C } } { = } 1 . 0 ,$ # 正则化强度倒数，越小正则化越强 ",
        "id": 391,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 77,
        "length_tokens": 35,
        "text": " \\mathsf { C } } { = } 1 . 0 ,$ # 正则化强度倒数，越小正则化越强  \n）",
        "id": 392,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 77,
        "length_tokens": 126,
        "text": "L1正则化项是模型权重的绝对值之和： （20 $\\begin{array} { l } { { \\displaystyle { \\cal L } 1 = \\lambda \\sum _ { i = 1 } ^ { n } \\left| w _ { i } \\right| } } \\\\ { { \\displaystyle { \\cal L } 2 = \\lambda \\sum _ { i = 1 } ^ { n } w _ { i } ^ { 2 } } } \\end{array}$ L2正则化项是模型权重的平方和 ",
        "id": 393,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 12,
        "text": "如何防止模型过拟合 （早停机制）",
        "id": 394,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 13,
        "text": "使用早停机制， 可以让模型初始化训练次数更多一些",
        "id": 395,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 101,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ xgb.train( params, dtrain, num_boost_round=2000, evals $\\ c =$ evals, early_stopping_rounds $= 5 2 0$ verbose_eval=100   \nT   \nearly_stop $\\mathbf { \\tau } = \\mathbf { \\tau }$ keras.callbacks.EarlyStopping(monitor='val_loss',   \npatience $: = 2 0$ , restor",
        "id": 396,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 102,
        "text": "monitor='val_loss',   \npatience $: = 2 0$ , restore_best_weights $\\ c =$ True)   \nhistory $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.fit( X_train_scaled,y_train, validation_data $\\ c =$ (X_val_scaled, y_val), epoch $s { = } 2 0 0$ ， batch_size $\\mathtt { = 6 4 }$ 冏， callbacks $\\ c =$ [early_stop], ",
        "id": 397,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 26,
        "text": "htt { = 6 4 }$ 冏， callbacks $\\ c =$ [early_stop], verbose=2   \n） ",
        "id": 398,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 0,
        "text": "",
        "id": 399,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 78,
        "length_tokens": 45,
        "text": "早停是一种正则化技术，用于防止模型在训练过程中过拟合。核心思想是：在验证集性能不再提升时提前终止训练，而不是一直训练到收敛。",
        "id": 400,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 79,
        "length_tokens": 6,
        "text": "Blending集成学习方法",
        "id": 401,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 79,
        "length_tokens": 7,
        "text": "Thinking: Blending 是什么？",
        "id": 402,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 79,
        "length_tokens": 18,
        "text": "Blending是一种分层集成学习技术，通过以下两步组合多个模型：",
        "id": 403,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 79,
        "length_tokens": 76,
        "text": "·基模型（BaseModels）：用训练集的 $70 \\%$ 训练多个不同模型（如随机森林、XGBoost、神经网络等）。·元模型（Meta Model）：用剩下的30%数据生成基模型的预测结果作为新特征，训练一个次级模型（通常为线性模型）进行最终预测。",
        "id": 404,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 79,
        "length_tokens": 56,
        "text": "神经网络是一种受人脑神经元结构启发的机器学习模型。核心思想是通过大量“神经元”节点的层层连接和非线性变换，自动学习输入特征与输出目标之间的复杂映射关系。",
        "id": 405,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 80,
        "length_tokens": 6,
        "text": "Blending集成学习方法",
        "id": 406,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 80,
        "length_tokens": 29,
        "text": "假设数据集有15,000条二手车记录，特征包括车龄、里程、品牌等，目标为价格",
        "id": 407,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 80,
        "length_tokens": 72,
        "text": "import numpy as np   \nfrom sklearn.model_selection import train_test_split   \nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor   \nfrom sklearn.linear_model import LinearRegression   \n#原始数据   \nX,y= load_car_data()#假设已加载数据   \nX_train,X_val,y_train,y_val $\\mathbf { \\tau } =",
        "id": 408,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 80,
        "length_tokens": 57,
        "text": "  \nX_train,X_val,y_train,y_val $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(X,y, test_size $\\scriptstyle \\mathtt { = 0 . 3 }$ ,random_state $= 4 2$ ",
        "id": 409,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 80,
        "length_tokens": 0,
        "text": "",
        "id": 410,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 80,
        "length_tokens": 89,
        "text": "# 进一步划分训练集： $70 \\%$ 基模型 $1 3 0 \\%$ 元模型 X_base,X_meta,y_base,y_meta $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split( X_train,γ_train, test_size $\\scriptstyle \\mathtt { = 0 . 3 }$ , random_state $: = 4 2$ 1 ",
        "id": 411,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 81,
        "length_tokens": 6,
        "text": "Blending集成学习方法",
        "id": 412,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 81,
        "length_tokens": 7,
        "text": "Step1: 训练基模型",
        "id": 413,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 81,
        "length_tokens": 110,
        "text": "# 定义3个基模型 model_rf $\\mathbf { \\tau } = \\mathbf { \\tau }$ RandomForestRegressor(n_estimators $_ { \\mathbf { \\lambda } = 1 0 0 }$ , random_state $= 4 2$ model_gb $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ GradientBoostingRegressor(n_estimators $_ { \\mathbf { \\lambda } = 1 0 0 }$ , random_state $= 4 2$ ",
        "id": 414,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 81,
        "length_tokens": 54,
        "text": "hbf { \\lambda } = 1 0 0 }$ , random_state $= 4 2$ model_nn $\\mathbf { \\tau } = \\mathbf { \\tau }$ make_neural_network()#自定义的神经网络 ",
        "id": 415,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 81,
        "length_tokens": 39,
        "text": "#在 $70 \\%$ 数据上训练基模型 model_rf.fit(X_base,y_base) model_gb.fit(X_base,y_base) model_nn.fit(X_base, y_base) ",
        "id": 416,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 82,
        "length_tokens": 6,
        "text": "Blending集成学习方法",
        "id": 417,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 82,
        "length_tokens": 7,
        "text": "Step2：生成元特征",
        "id": 418,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 82,
        "length_tokens": 17,
        "text": "用基模型预测剩余 $30 \\%$ 数据，生成新特征",
        "id": 419,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 82,
        "length_tokens": 53,
        "text": "#获取基模型对元数据集的预测  \nmeta_features $\\mathbf { \\tau } = \\mathbf { \\tau }$ np.column_stack([model_rf.predict(X_meta),model_gb.predict(X_meta),model_nn.predict(X_meta)  \n1)",
        "id": 420,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 82,
        "length_tokens": 26,
        "text": "#元特征示例（每条样本的3个基模型预测值） print(meta_features[:3]) ",
        "id": 421,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 82,
        "length_tokens": 48,
        "text": "#输出类似： #[[12.5,13.1, 11.8], # [8.2,7.9,8.5], # [20.1,19.7,21.3]] ",
        "id": 422,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 6,
        "text": "Blending集成学习方法",
        "id": 423,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 7,
        "text": "Step3: 训练元模型",
        "id": 424,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 44,
        "text": "# 用基模型的预测结果作为输入，真实价格作为目标  \nmeta_model $\\mathbf { \\tau } = \\mathbf { \\tau }$ LinearRegression()  \nmeta_model.fit(meta_features, y_meta)",
        "id": 425,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 7,
        "text": "Step4: 预测新数据",
        "id": 426,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 66,
        "text": "通过Blending学习，可以得到三个模型（rf,gb,nn）的线性回归系数，比如为：权重系数 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [0.4,0.5,0.1],偏置 $= 0 . 2$ ",
        "id": 427,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 92,
        "text": "#对验证集生成基模型预测   \nval_meta_features $\\mathbf { \\tau } = \\mathbf { \\tau }$ np.column_stack([ model_rf.predict(X_val), model_gb.predict(X_val), model_nn.predict(X_val)   \n1)   \n#用元模型做最终预测   \nfinal_predictions $\\mathbf { \\tau } = \\mathbf { \\tau }$ meta_model.predict(val_meta_features)   \n#计算MAE   \nprint(",
        "id": 428,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 29,
        "text": "del.predict(val_meta_features)   \n#计算MAE   \nprint(\"Blending MAE:\",mean_absolute_error(y_val, final_predictions)) ",
        "id": 429,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 83,
        "length_tokens": 52,
        "text": "最终预测 $= w _ { 1 } \\times$ 模型1预测 $+ w _ { 2 } \\times$ 模型2预测 $+ w _ { 3 } \\times$ 模型3预测 $+ b$ ",
        "id": 430,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 84,
        "length_tokens": 110,
        "text": "过拟合（Overfitting）是导致模型在实际应用中表现糟糕的主要原因之一。在二手车价格预测这类数据噪声大、特征复杂的任务中，过拟合会直接影响模型的商业价值和可靠性。训练 $M A E = 4 0 0$ （模型似乎很准），测试 $M A E = 8 0 0$ （实际预测误差翻倍） $\\Rightarrow$ 典型的过拟合",
        "id": 431,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 84,
        "length_tokens": 0,
        "text": "",
        "id": 432,
        "type": "table",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 85,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 433,
        "type": "text",
        "file_name": "20.1-机器学习神器"
      },
      {
        "page": 1,
        "length_tokens": 4,
        "text": "时间序列分析",
        "id": 0,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 1,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 2,
        "length_tokens": 10,
        "text": "你认为金融交易有时间上的规律么？",
        "id": 2,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "案例：沪市指数预测 ",
        "id": 3,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "Case: Shanghai Stock Index Forecast ",
        "id": 4,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "CASE：沪市指数预测 ",
        "id": 5,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 3,
        "length_tokens": 69,
        "text": "·沪市指数的历史数据（从1990年12月19日到2024年6月30日），shanghai_index_1990_12_19_to_2024_06_30.csv  \n·请你对沪市指数未来3个月（截止到2024年9月30日）的变化进行预测",
        "id": 6,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "什么是时间序列模型",
        "id": 8,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "Whatisa time series model ",
        "id": 9,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "时间序列：",
        "id": 10,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 23,
        "text": "·建立了观察结果与时间变化的关系，能帮预测未来一段时间内的结果变化情况",
        "id": 11,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "时间序列分析与回归分析的区别：",
        "id": 12,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 61,
        "text": "·在选择模型前，我们需要确定结果与变量之间的关系。回归分析训练得到的是目标变量y与自变量×（一个或多个）的相关性，然后通过新的自变量x来预测目标变量y。而时间序列分析得到的是目标变量y与时间的相关性",
        "id": 13,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 14,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 4,
        "length_tokens": 77,
        "text": "·回归分析擅长的是多变量与目标结果之间的分析，即便是单一变量，也往往与时间无关。而时间序列分析建立在时间变化的基础上，它会分析目标变量的趋势、周期、时期和不稳定因素等。这些趋势和周期都是在时间维度的基础上，是我们要观察的重要特征",
        "id": 15,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "时间序列：",
        "id": 16,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 72,
        "text": "·按照时间顺序组成的数字序列·历史悠久，在中国古代的农业社会中，人们就将一年中不同时间节点和天气的规律总结了下来，形成了二十四节气，也就是从时间序列中观察天气和太阳的规律（只是当时没有时间序列模型和相应工具)",
        "id": 17,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 76,
        "text": "·时间序列在金融、经济、商业领域拥有广泛的应用·机器学习模型，包括AR、MA、ARMA、ARIMA·神经网络，时序大模型都可以进行时间序列预测时间序列分析是金融时序数据中很重要的工具，了解方法后续执行可由技术或通过AI大模型辅助进行",
        "id": 19,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 20,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 21,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 22,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 23,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "时间序列及分解：",
        "id": 24,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 6,
        "length_tokens": 73,
        "text": "平稳序列，stationary series  \n基本上不存在趋势（Trend）的序列，各观察值基本上在某  \n个固定的水平上波动  \n·非平稳序列，non-stationary series  \n包含趋势、季节性或周期性的序列，可以只有一种成分，也  \n可能是多种成分的组合",
        "id": 25,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "时间序列分析",
        "id": 27,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "Time Series Analysis ",
        "id": 28,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "时间序列及分解：",
        "id": 29,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 31,
        "text": "·趋势（trend）：时间序列在长时期内呈现出来的某种持续上升或持续下降的变动，也称长期趋势",
        "id": 30,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 114,
        "text": "·季节性（seasonality）：时间序列在一年内重复出现的周期波动。销售旺季，销售淡季，旅游旺季、旅游淡季季节，可以是任何一种周期性变化，不一定是一年中的四季含有季节成分的序列可能含有趋势，也可能不含有趋势·周期性（cyclicity）：通常是由经济环境的变化引起不同于趋势变动，不是朝着单一方向的持续运动，而是涨落相间的交替波动",
        "id": 31,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 48,
        "text": "不同于季节变动，季节变动有比较固定的规律，变动周期大多为一年。周期性的循环波动无固定规律，变动周期多在一年以上，且周期长短不一",
        "id": 32,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 28,
        "text": "·随机性（Irregular），指受偶然因素影响所形成的的不规则波动，在时间序列中无法预估",
        "id": 33,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 22,
        "text": "随机性是不规则波动，除去趋势、周期性、季节性的偶然性波动",
        "id": 34,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "时间序列工具 (statsmodels)",
        "id": 36,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "Time Series Tools (statsmodels) ",
        "id": 37,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "statsmodels工具: ",
        "id": 38,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 8,
        "length_tokens": 21,
        "text": "·statsmodels工具包提供统计计算，包括描述性统计以及统计模型的估计和推断",
        "id": 39,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "statsmodels主要包括如下子模块：",
        "id": 40,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 8,
        "length_tokens": 47,
        "text": "·回归模型：线性回归，广义线性模型，线性混合效应模  \n·方差分析（ANOVA）  \n·时间序列分析：AR，ARMA，ARIMA等",
        "id": 41,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "时间序列工具 (statsmodels)",
        "id": 42,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "Time Series Tools (statsmodels) ",
        "id": 43,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "import statsmodels.api as sm ",
        "id": 44,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "#数据加载",
        "id": 45,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 23,
        "text": "data.Timestamp $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(data.Timestamp) ",
        "id": 46,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 50,
        "text": "data $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('shanghai_index_1990_12_19_to_2020_03_12.csv', usecols $\\ c =$ ['Timestamp','Price']) ",
        "id": 47,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 22,
        "text": "data $\\mathbf { \\tau } = \\mathbf { \\tau }$ data.set_index('Timestamp) ",
        "id": 48,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 39,
        "text": "data['Price'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ data['Price'].apply(pd.to_numeric,errors $\\cdot = \\cdot$ ignore') ",
        "id": 49,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 19,
        "text": "#进行线性插补缺漏值 data.Price.interpolate(inplace $\\ c =$ True) ",
        "id": 50,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 9,
        "length_tokens": 60,
        "text": "# 返回三个部分 trend（趋势），seasonal（季节性）和residual (残留  \nresult $\\mathbf { \\tau } = \\mathbf { \\tau }$ sm.tsa.seasonal_decompose(data.Price, period=250)  \nresult.plot()  \nplt.show()",
        "id": 52,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 53,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "Time Series Model ",
        "id": 54,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 3,
        "text": "AR模型：",
        "id": 55,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 40,
        "text": "AutoRegressive，中文叫自回归模型·认为过去若干时刻的点通过线性组合，再加上白噪声就可以预测未来某个时刻的点",
        "id": 56,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 57,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 40,
        "text": "·日常生活环境中就存在白噪声，在数据挖掘的过程中，可以把它理解为一个期望为0，方差为常数的纯随机过程",
        "id": 58,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 56,
        "text": "·AR模型存在一个阶数p，称为AR(p)模型，也叫作p阶自回归模型。指的是通过这个时刻点的前p个点，通过线性组合再加上白噪声来预测当前时刻点的值",
        "id": 59,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 36,
        "text": "·AR是线性时间序列分析模型中最简单的模型，通过前面部分的数据与后面部分的数据之间的相关关系来建立回归方程:",
        "id": 60,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 134,
        "text": "$x _ { t } = \\phi _ { 1 } x _ { t - 1 } + \\phi _ { 2 } x _ { t - 2 } + . . . + \\phi _ { p } x _ { t - p } + u _ { t }$ AR(p)，表示p阶的自回归过程， $\\phi$ 为自回归系数${ \\mathbf { } } u _ { { \\mathbf { } } _ { t } }$ 表示白噪声，是时间序列中的数值的随机波动。这些波动会相互抵消，即累计为0",
        "id": 61,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 10,
        "length_tokens": 51,
        "text": "·如果只有一个时间记录点时，则为AR(1)，即一阶自回归过程:$x _ { t } = \\phi _ { 1 } x _ { t - 1 } + u _ { t }$ ",
        "id": 62,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 63,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "Time Series Model ",
        "id": 64,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "MA模型：",
        "id": 65,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "MovingAverage，中文叫做滑动平均模型",
        "id": 66,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 38,
        "text": "·与AR模型大同小异，AR模型是历史时序值的线性组合MA是通过历史白噪声进行线性组合来影响当前时刻点",
        "id": 67,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 29,
        "text": "·MA模型中的历史白噪声是通过影响历史时序值，从而间接影响到当前时刻点的预测值",
        "id": 68,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 23,
        "text": "·MA模型存在一个阶数q，称为MA(q)模型，也叫作q阶移动平均模型",
        "id": 69,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 47,
        "text": "·AR和MA模型都存在阶数，在AR模型中，用p表示，在MA模型中用q表示，这两个模型大同小异，与AR模型不同的是MA模型是历史白噪声的线性组合",
        "id": 70,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 31,
        "text": "·MA模型，通过前面通过将一段时间序列中白噪声序列进行加权和，可以得到移动平均方程：",
        "id": 71,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 64,
        "text": "$$\nx _ { t } = u _ { t } + \\phi _ { 1 } u _ { t - 1 } + \\phi _ { 2 } u _ { t - 2 } + . . . + \\phi _ { q } u _ { t - q }\n$$",
        "id": 72,
        "type": "equation",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 51,
        "text": "·MA(q)表示q阶移动平均过程， $\\phi$ 为移动回归系数， ${ \\mathbf { } } u _ { { \\mathbf { } } _ { t } }$ 为不同时间点的白噪声",
        "id": 73,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 11,
        "length_tokens": 48,
        "text": "·Xt为第t天的股票价格，而Ut为第t天的新闻影响，当天的股票价格受当天的新闻影响，也受昨天的新闻影响（但影响力要弱些，所以要乘上系数）",
        "id": 74,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "ARMA模型: ",
        "id": 75,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 12,
        "length_tokens": 159,
        "text": "·Auto Regressive MovingAverage，中文叫做自回归滑动平均模型  \n·AR模型和MA模型的混合，相比AR模型和MA模型，它有更准确的估计  \n· ARMA模型存在p和q两个阶数，称为ARMA(p,q)模型:  \nx=u，+Φ $u _ { t - 1 } + \\phi _ { 2 } u _ { t - 2 } + . . . + \\phi _ { q } u _ { t - q } + \\mathscr { S } _ { 1 } x _ { t - 1 } + \\mathscr { S } _ { 2 } x _ { t - 2 } + . . . + \\math",
        "id": 76,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 12,
        "length_tokens": 80,
        "text": "athscr { S } _ { 2 } x _ { t - 2 } + . . . + \\mathscr { S } _ { p } x _ { t - j }$ D：  \n·自回归模型结合了两个模型的特点，AR解决当前数据与后期数据之间的关系，MA则可以解决随机变动，即噪声问题",
        "id": 77,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "ARIMA模型: ",
        "id": 78,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 13,
        "length_tokens": 145,
        "text": "·Auto Regressive Integrated MovingAverage模型，中文叫差分自回归滑动平均模型，也叫求合自回归滑动平均模型  \n·相比于ARMA，ARIMA多了一个差分的过程，作用是对不平稳数据进行差分平稳，在差分平稳后再进行建模  \n·ARIMA的原理和ARMA模型一样。相比于ARMA(p,q)的两个阶数，ARIMA是一个三元组的阶数(p,d,q)，称为ARIMA(p,d,q)模型，其中d是差分阶数  \n·AR，MA是ARMA的特殊形式，而ARMA是ARIMA的特殊形式",
        "id": 79,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "ARIMA模型步骤：",
        "id": 80,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 13,
        "length_tokens": 95,
        "text": "·Step1，观察时间序列数据，是否为平稳序列  \n：Step2，对于非平稳时间序列要先进行d阶差分运算，化为平稳时间序列  \n·Step3，使用ARIMA（p,d,q）模型进行训练拟合，找到最优的(p,d,q)，及训练好的模型  \n：Step4，使用训练好的ARIMA模型进行预测，并对差分进行还原",
        "id": 81,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 13,
        "length_tokens": 20,
        "text": "ARIMA用差分将不平稳数据先变得平稳，再用ARMA模型",
        "id": 82,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 14,
        "length_tokens": 4,
        "text": "关于差分：",
        "id": 83,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 14,
        "length_tokens": 201,
        "text": "·差分 $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ 序列之间做差值，目的是为了得到平稳的序列，也就是去掉前面数值的影响  \n·一次差分为序列之间做一次差值，二次差分为在一次差分的基础上在做一次差分  \n· $f ( x ) = x ^ { 2 }$ 若x=[1,4,9,16,25...] （x有二次趋势)  \n一次差分的结果为 $| [ 4 - 1 , 9 - 4 , 1 6 - 9 , 2 5 - 1 6 . . . ] = [ 3 , 5 , 7 , 9 , 1 1 . . . ]$ ，此时x  \n序列仍不平稳，有一次上升的趋势  \n再做一",
        "id": 84,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 14,
        "length_tokens": 57,
        "text": " 7 , 9 , 1 1 . . . ]$ ，此时x  \n序列仍不平稳，有一次上升的趋势  \n再做一次差分为[2,2,2,2...]，此时x为平稳序列",
        "id": 85,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "ARMA工具: ",
        "id": 86,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "from statsmodels.tsa.arima_model import ARMA ",
        "id": 87,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 30,
        "text": "ARMA(endog,order,exog $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ None) ",
        "id": 88,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 51,
        "text": "·endog：endogenousvariable，代表内生变量，又叫非政策性变量，它是由模型决定的，不被政策左右，可以说是我们想要分析的变量，或者说是我们这次项目中需要用到的变量",
        "id": 89,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 79,
        "text": "order：代表是p和q的值，也就是ARMA中的阶数·exog：exogenousvariables，代表外生变量。外生变量和内生变量一样是经济模型中的两个重要变量。相对于内生变量而言，外生变量又称作为政策性变量，在经济机制内受外部因素的影响，不是我们模型要研究的变量",
        "id": 90,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 91,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 15,
        "length_tokens": 81,
        "text": "如果我们想要创建ARMA(7,0)模型，可以写成：ARMA(data,(7,0))，其中data是我们想要观察的变量，(7,0)代表(p,q)的阶数。  \nfit函数，进行拟合  \npredict(start,end)函数，进行预测，其中start为预测的起始时间，end为预测的终止时间",
        "id": 92,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "#用ARMA进行时间序列预测",
        "id": 93,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "from statsmodels.tsa.arima_model import ARMA ",
        "id": 94,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "#创建数据",
        "id": 95,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 177,
        "text": "data $\\mathbf { \\tau } = \\mathbf { \\tau }$ [3821,4236,3758,6783, 4664, 2589,2538,3542, 4626, 5886, 6233,   \n4199,3561, 2335,5636,3524, 4327, 6064, 3912, 1356, 4305, 4379, 4592,   \n4233,4281, 1613, 1233, 4514,3431, 2159, 2322, 4239, 4733,2268, 5397,   \n5821, 6115, 6631, 6474, 4134, 2728, 5753, 7130, ",
        "id": 96,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 180,
        "text": " \n5821, 6115, 6631, 6474, 4134, 2728, 5753, 7130, 7860, 6991, 7499, 5301,   \n2808,6755,6658,6944,6372,8380, 7366,6352,8333,8281, 11548, 10823,   \n13642, 9973, 6723,13416,12205,13942, 9590,11693, 9276,6519, 6863,   \n8237,10122, 8646,9749, 5346, 4836,9806, 7502, 9387, 11078, 9832, 6886,   \n4285,8351, ",
        "id": 97,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 54,
        "text": "806, 7502, 9387, 11078, 9832, 6886,   \n4285,8351, 9725, 11844, 12387, 10666, 7072, 6429] ",
        "id": 98,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 9,
        "text": "data $\\ c =$ pd.Series(data) ",
        "id": 99,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 34,
        "text": "data_index $\\mathbf { \\tau } = \\mathbf { \\tau }$ sm.tsa.datetools.dates_from_range('1901','1990') ",
        "id": 100,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 101,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "ARMA工具",
        "id": 102,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "Time SeriesTool ARMA ",
        "id": 103,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "#绘制数据图",
        "id": 104,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 145,
        "text": "At iterate 35 f= 8.87823D+00 Iproj gl= 6.55707D-03   \nAt iterate 40 f= 8.87776D+00 lproj g|= 1.28608D-04   \nAt iterate 45 f= 8.87776D+00 Iproj g|= 1.24345D-06   \nAt iterate 50 f= 8.87776D+00 lproj g|= 1.08358D-05   \nAt iterate 55 f= 8.87776D+00 lproj gl= 5.32907D-06   \nTit = total number of iteratio",
        "id": 105,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 74,
        "text": " gl= 5.32907D-06   \nTit = total number of iterations   \nTnf = total number of function evaluations   \nTnint = total number of segments explored during Cauchy searches   \nSkip = number of BFGS updates skipped   \nNact = number of active bounds at final generalized Cauchy point   \nProjg = norm of the f",
        "id": 106,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 104,
        "text": " generalized Cauchy point   \nProjg = norm of the final projected gradient   \nF final function value 中 N Tit Tnf Tnint Skip Nact Projg F 8 58 89 1 0 0 1.243D-06 8.878D+00 F= 8.8777593158679711   \nCONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR\\*EPSMCH   \nWarning: more than 10 function and gradient evaluatio",
        "id": 107,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 84,
        "text": "ning: more than 10 function and gradient evaluations in the last line search. Termination may possibly be caused by a bad search direction.   \nCauchy time 0.000E+00 seconds.   \nSubspace minimization time 0.000E+00 seconds.   \nLine search time 0.000E+00 seconds.   \nTotal User time 0.000E+00 seconds. ",
        "id": 108,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 112,
        "text": "00 seconds.   \nTotal User time 0.000E+00 seconds.   \nAIC: 1615.9967   \ndata.index $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.Index(data_index)   \ndata.plot(figsize=(12,8))   \nplt.show()   \n#创建ARMA模型#创建ARMA模型   \narma $\\mathbf { \\tau } = \\mathbf { \\tau }$ ARMA(data,(7,0)).fit()   \nprint('AIC: %0.4If' %a",
        "id": 109,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 116,
        "text": "$ ARMA(data,(7,0)).fit()   \nprint('AIC: %0.4If' %arma.aic)   \n#模型预测   \npredict_y $\\mathbf { \\tau } = \\mathbf { \\tau }$ arma.predict('1990','2000')   \n#预测结果绘制   \nfig, ax $\\mathbf { \\tau } = \\mathbf { \\tau }$ plt.subplots(figsize=(12, 8))   \nax $\\mathbf { \\tau } = \\mathbf { \\tau }$ data.ix['1901':].pl",
        "id": 110,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 73,
        "text": "f { \\tau } = \\mathbf { \\tau }$ data.ix['1901':].plot( $\\mathsf { a x } \\mathsf { = a x }$   \npredict_y.plot( $\\scriptstyle ( { \\mathsf { a x } } = { \\mathsf { a x } }$   \nplt.show() ",
        "id": 111,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 112,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 113,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 17,
        "length_tokens": 36,
        "text": "AIC准则，也叫作赤池消息准则，是衡量统计模型拟合好坏的一个标准，数值越小代表模型拟合得越好",
        "id": 114,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 21,
        "text": "案例：沪市指数预测 (ARMA) Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 115,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 11,
        "text": "使用ARMA工具对沪市指数进行预测：",
        "id": 116,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "Step1，数据加载&探索",
        "id": 117,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 32,
        "text": "按照不同的时间尺度（天，月，季度，年）可以将数据压缩，得到不同尺度的数据，然后做可视化呈现。",
        "id": 118,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 25,
        "text": "df_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('M').mean() ",
        "id": 119,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 79,
        "text": "·Step2，模型选择&训练，在给定范围内，选择最优的超参数创建ARMA时间序列模型。我们并不知道p和q取什么值时，可以给它们设置一个区间范围，比如都是range(0,3)，然后计算不同模型的AIC数值，选择最小的AIC数值对应的那个ARMA模型",
        "id": 120,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 37,
        "text": "Step3，模型预测，可视化呈现用这个最优的ARMA模型预测未来3个月的沪市指数走势，并将结果做可视化呈现。",
        "id": 121,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 123,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 124,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "Case:Shanghai Stock Index Forecast (ARMA) ",
        "id": 125,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "#数据加载",
        "id": 126,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 105,
        "text": "df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('./shanghai_index_1990_12_19_to_2024_06_30.csv')  \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ df[['Timestamp','Price']]  \n#将时间作为df的索引  \ndf.Timestamp $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(df.Timestamp)  \ndf.index $\\mathbf { \\tau } = \\m",
        "id": 127,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 103,
        "text": "me(df.Timestamp)  \ndf.index $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.Timestamp  \n#数据探索  \nprint(df.head())  \n#按照月，季度，年来统计  \ndf_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('M').mean()  \nprint(df_month)  \ndf_Q $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('Q-DEC').mean()  \ndf year $\\mat",
        "id": 128,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 40,
        "text": "tau }$ df.resample('Q-DEC').mean()  \ndf year $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.resample('A-DEC').mean()",
        "id": 129,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 165,
        "text": "Timestanp Price Tinestanp 1990-12-19 1990-12-19 99.98 1990-12-20 1990-12-20 104.39 1990-12-21 1990-12-21 109.13 1990-12-24 1990-12-24 114.55 1990-12-25- 1990-12-25 120.25 Price Tinestanp 1990-12 -31 116.990000 1991-01-31 132.628182 1991-02-28 131.887778 1991-03 -31 16.01119 1991-04-30 118.426818 201",
        "id": 130,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 19,
        "length_tokens": 103,
        "text": "778 1991-03 -31 16.01119 1991-04-30 118.426818 2019-08-31 2047.063264 2019 -09 -30 2978.383790 2019-10-31 2954.832456 2019-11-30 2923.774700 2019-12-31 2900. 789287 [349 rous x 1 coluuns] ",
        "id": 131,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 132,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 20,
        "length_tokens": 110,
        "text": "Case: Shanghai Stock Index Forecast (ARMA)   \n#按照天，月，季度，年来显示沪市指数的走势   \nfig $\\mathbf { \\tau } = \\mathbf { \\tau }$ plt.figure(figsize $\\ c =$ [15,7])   \nplt.rcParams['font.sans-serif' $\\ c =$ ['SimHei']#用来正常显示中文标签   \nplt.suptitle('沪市指数',fontsize $: = 2 0$ ）   \nplt.subplot(221)   \nplt.plot(df.Price,'-'",
        "id": 133,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 20,
        "length_tokens": 96,
        "text": " 0$ ）   \nplt.subplot(221)   \nplt.plot(df.Price,'-', label='按天')   \nplt.legend()   \nplt.subplot(222)   \nplt.plot(df_month.Price,'-',label='按月')   \nplt.plot(df_Q.Price,'-', labe $| = ^ { | }$ 按季度\")   \nplt.plot(df_year.Price,'-',labe $\\models \\vDash$ 按年\")   \nplt.legend()   \nplt.show() ",
        "id": 134,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 135,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 136,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 138,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 139,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "#设置参数范围 ",
        "id": 140,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 104,
        "text": "ps = range(0, 3)   \nqs = range(0, 3)   \nparameters $\\mathbf { \\tau } = \\mathbf { \\tau }$ product(ps, qs)   \nparameters_list $\\mathbf { \\tau } = \\mathbf { \\tau }$ list(parameters)   \n#寻找最优ARMA模型参数，即best_aic最小   \nresults $\\mathbf { \\varepsilon } = [ ] \\mathbf { \\varepsilon }$   \nbest_aic $\\mathbf { \\t",
        "id": 141,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 101,
        "text": "\\mathbf { \\varepsilon }$   \nbest_aic $\\mathbf { \\tau } = \\mathbf { \\tau }$ float(\"inf\")#正无穷   \nfor param in parameters_list: try: model $\\mathbf { \\tau } = \\mathbf { \\tau }$ ARMA(df_month.Price,order $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ (param[O],param[1])).fit() except ValueError: print('",
        "id": 142,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 101,
        "text": "ram[O],param[1])).fit() except ValueError: print('参数错误:',param) continue aic $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.aic if aic $\\rvert <$ best_aic: best_model $\\mathbf { \\tau } = \\mathbf { \\tau }$ model best_aic $\\mathbf { \\tau } = \\mathbf { \\tau }$ aic best_param $\\mathbf { \\tau } = \\mathbf { ",
        "id": 143,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 43,
        "text": "u }$ aic best_param $\\mathbf { \\tau } = \\mathbf { \\tau }$ param results.append([param,model.aic])   \nprint('最优模型:',best_model.summary()) ",
        "id": 144,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 145,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 146,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 147,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 22,
        "length_tokens": 95,
        "text": "#设置future_month，需要预测的时间date_list   \nfuture_month $= 3$   \nlast_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime(df_month2.index[len(df_month2)-1])   \ndate_list = []   \nfor iin range(future_month): #计算下个月有多少天 year $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_month.year month $\\mathbf { \\tau }",
        "id": 148,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 22,
        "length_tokens": 113,
        "text": " { \\tau }$ last_month.year month $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_month.month if month $\\scriptstyle = = 1 2$ ： month $= 1$ $\\mathsf { y e a r } = \\mathsf { y e a r } + 1$ else: $\\mathsf { m o n t h } = \\mathsf { m o n t h } + 1$ next_month_days $\\mathbf { \\tau } = \\mathbf { \\tau }$ calend",
        "id": 149,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 22,
        "length_tokens": 77,
        "text": "_days $\\mathbf { \\tau } = \\mathbf { \\tau }$ calendar.monthrange(year,month)[1] #print(next_month_days) last_month $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_month $^ +$ timedelta(days $\\ c =$ next_month_days) date_list.append(last_month)   \nprint('date_list=',date_list) ",
        "id": 150,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 22,
        "length_tokens": 65,
        "text": "date_list $\\ c =$ [Timestamp('2020-04-30 00:00:00', freq='M'), Timestamp('2020-05- 31 00:00:00', freq='M'), Timestamp('2020-06-30 00:00:00', freq='M')] ",
        "id": 151,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARMA) ",
        "id": 152,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 153,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 154,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 24,
        "length_tokens": 21,
        "text": "案例：沪市指数预测 (ARMA) Case: Shanghai Stock Index Forecast (ARMA) ",
        "id": 155,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 24,
        "length_tokens": 82,
        "text": "#设置参数范围   \nps = range(0, 5)   \n${ \\tt q s } = { \\tt r a n g e } ( 0 , 5 )$   \n$\\mathsf { d } s = \\mathsf { r a n g e } ( 1 , 2 )$ #使用1阶差分   \nfor param in parameters_list: try: ",
        "id": 156,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 24,
        "length_tokens": 56,
        "text": "model $\\mathbf { \\tau } = \\mathbf { \\tau }$ sm.tsa.statespace.SARIMAX(df_month.Price, order=(param[O],param[1],param[2]) enforce_stationarity=False, enforce_invertibility=False).fit() ",
        "id": 157,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 158,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 24,
        "length_tokens": 45,
        "text": "except ValueError: print('参数错误:',param) continue   \naic $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.aic   \nif aic $\\textless$ best_aic: ",
        "id": 159,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "#输出最优模型 print('最优模型:',best_model.summary()) ",
        "id": 160,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "案例：沪市指数预测 (ARIMA) ",
        "id": 161,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "Case:Shanghai Stock Index Forecast (ARIMA) ",
        "id": 162,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "#添加未来要预测的3个月",
        "id": 163,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 96,
        "text": "future $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame(index $\\mathop { : = }$ date_list, columns $\\ c =$ df_month.columnsdf_month2 $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.concat([df_month2, future])#get_prediction得到的是区间，使用predicted_meandf_month2['forecast'] $\\mathbf { \\tau } = \\mathbf { \\tau }$",
        "id": 164,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 39,
        "text": "['forecast'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ best_model.get_prediction(start $_ { = 0 }$ end=len(df_month2)).predicted_mean 二",
        "id": 165,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 29,
        "text": "W\\  \n#沪市指数预测结果显示  \nplt.figure(figsize=(30,7))_month2.Price.plot(label='实际指数')",
        "id": 166,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 167,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 168,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 49,
        "text": "df_month2.forecast.plot(color='r', $k = ^ { 1 } - 1$ ,labe $\\models \\vDash$ 预测指数\")  \nplt.legend()  \nplt.title('沪市指数（月）')",
        "id": 169,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "plt.xlabel('时间')plt.ylabel('指数')plt.show()",
        "id": 170,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 171,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "资金流入流出",
        "id": 172,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 26,
        "length_tokens": 14,
        "text": "你能对业务量突然上涨/下降的情况进行预测么",
        "id": 173,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 174,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 175,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "CASE：资金流入流出预测 ",
        "id": 176,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 20,
        "text": ":https://tianchi.aliyun.com/competition/entrance/231573/infor mation ",
        "id": 177,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 34,
        "text": "·数据集一共包括4张表：用户基本信息数据、用户申购赎回数据、收益率表和银行间拆借利率表",
        "id": 178,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 50,
        "text": "2.8万用户，284万行为数据，294天拆解利率，427天收益率  \n2013-07-01到2014-08-31，预测2014年9月的申购和赎回",
        "id": 179,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 29,
        "text": "Thinking：如果能对未来30天的资金流入流出预测准确， 对货币类理财产品有怎样的价值？",
        "id": 180,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 27,
        "length_tokens": 160,
        "text": "1e8 1.00 0.75 .l. ld. 0.50   \nrerpeeelt 0.25 0.00 -0.25 -0.50 -0.75 -1.00 1 2 3 4 5 6 7 8 9 1011121314 151617181920 21 2223 24 2526 27 282930 31 date 1e8 10 1 L山   \neetett 550015 中 -1.0 1 2 3 4 5 6 7 8 9 101112131415161718192021 22 2324 252627 28 2930 31 date ",
        "id": 181,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 182,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 28,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 183,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "·用户信息表，user_profile_table",
        "id": 184,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 28,
        "length_tokens": 42,
        "text": "总共随机抽取了约3万用户，主要包含了用户的性别、城市和星座，其中部分用户在2014年9月份第一次出现，这些用户只在测试数据中",
        "id": 185,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 186,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 187,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 29,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 188,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "CASE:Prediction of capital inflow and outflow 用户申购赎回数据表user_balance_table ",
        "id": 189,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 190,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 29,
        "length_tokens": 82,
        "text": "·数据包括了20130701至20140831申购和赎回信息，字段包括用户操作时间和操作记录，其中操作记录包括申购和赎回两个部分  \n·金额的单位是分，即0.01元  \n如果用户今日消费总量为o，即consume_amt=0，同时四个category字段为空  \n·数据经过了脱敏，同时保证了：",
        "id": 191,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 192,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 29,
        "length_tokens": 35,
        "text": "今日余额 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 昨日余额 $+$ 今日申购-今日赎回，不会出现负值",
        "id": 193,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 194,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 195,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "收益率表mfd_day_share_interest ",
        "id": 196,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 14,
        "text": "·收益表为余额宝在14个月内的收益率表",
        "id": 197,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 198,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 15,
        "text": "上海银行间同业拆放利率表mfd_bank_shibor",
        "id": 199,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 27,
        "text": "·银行间拆借利率表是14个月期间银行之间的拆借利率（皆为年化利率）",
        "id": 200,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 201,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 202,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 11,
        "text": "CASE: Prediction of capital inflow and outflow ",
        "id": 203,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "收益计算方式",
        "id": 204,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 14,
        "text": "·主要基于实际余额宝收益计算方法，进行了简化",
        "id": 205,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 35,
        "text": "1）收益计算的时间不再是会计日，而是自然日，以o点为分隔（0点之前算昨天，0点之后算今天）",
        "id": 206,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 86,
        "text": "2）收益的显示时间，即实际将第一份收益打入用户账户的时间，以周一转入周三显示为例，如果用户在周一存入10000元，即1000000分，那么这笔金额是周一确认，周二是开始产生收益，在周三将周二产生的收益打入到用户的账户中，此时用户的账户中显示的是1000110分",
        "id": 207,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 208,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 209,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 210,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 7,
        "text": "提交结果表tc_comp_predict_table",
        "id": 211,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 212,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 45,
        "text": "每一行数据是一天对申购、赎回总额的预测值，输出2014年9月每天的预测，共30行。purchase和redeem 都是金额数据，精确到分",
        "id": 213,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 214,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "评估指标：",
        "id": 215,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 50,
        "text": "1）计算测试集上每天的申购及赎回与实际的误差每日申购相对误差(真实值 $z _ { i }$ ，预则值为 $z _ { i } )$ ：",
        "id": 216,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 44,
        "text": "$$\n\\mathrm { P u r c h a s e } _ { i } = \\frac { | z _ { i } - z _ { i } | } { z _ { i } }\n$$",
        "id": 217,
        "type": "equation",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 18,
        "text": "每日赎回相对误差（真实值y：，预测值为）：",
        "id": 218,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 62,
        "text": "$$\n\\mathrm { { R e d e a m } } _ { i } = \\frac { | { y } _ { i } - \\hat { y ^ { \\prime } } _ { i } | } { { y ^ { \\prime } } _ { i } }\n$$",
        "id": 219,
        "type": "equation",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 56,
        "text": "2）误差与得分之间的计算公式不公布，但保证单调递减第i天的申购误差Purchasei=0，这一天的得分为10分；当Purchasei $> 0 . 3$ ，得分为0",
        "id": 220,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 32,
        "length_tokens": 49,
        "text": "3)总积分 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 申购预测得分 $\\ast 4 5 \\% +$ 赎回预测得分 $45 5 \\%$ ",
        "id": 221,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 222,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 223,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 5,
        "text": "·数据探索EDA ",
        "id": 224,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "1）每日总购买与赎回量的时间序列图",
        "id": 225,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 88,
        "text": "e9 Purchase and Redeem from 7-13 to 9-14 1.0 purchase redeem 0.8 0.6 junou 0.4 0.2 ANW 0.0 2013-07 2013-09 2013-11 2014-01 2014-03 2014-05 2014-07 2014-09 Time ",
        "id": 226,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 24,
        "text": "2）STL分解，将时序图拆分为：Trend $^ +$ Seasonal + Residual ",
        "id": 227,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 35,
        "text": "·方法1：采用时间序列进行预测Step1，平稳性检测adfullerStep2，采用ARIMA模型Step3，模型训练集与预测",
        "id": 228,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 33,
        "length_tokens": 41,
        "text": "·方法2：基于时序规则的挖掘Step1，获得周期因子（weekday）Step2，计算baseStep3，使用base\\*周期因子进行预测",
        "id": 229,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 230,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 46,
        "text": "CASE:Prediction of capital inflow and outflowread_csv中的日期格式解析pd.read_csv('user_balance_table.csv'，parse_dates $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['report_date'])",
        "id": 231,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 232,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 233,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 11,
        "text": "设置parsedates参数，将时间字符串转换为日期格式",
        "id": 234,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "DataFrame.diff()函数",
        "id": 235,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 19,
        "text": "用来将数据进行某种移动之后与原数据进行比较得出的差异数据",
        "id": 236,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 50,
        "text": "DataFrame.shift()函数可以把数据移动指定的位数periods=-1往上移动或往左移动periods ${ \\tt \\Psi } = 1 { \\tt \\Psi }$ 往下移动或往右移动",
        "id": 237,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 238,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 239,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 18,
        "text": "CASE:Prediction of capital inflow and outflow平稳性检测（ADF检测）：",
        "id": 240,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 241,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 56,
        "text": "·在使用时间序列模型时（比如ARMA、ARIMA），需要时间序列是平稳的，所以第一步都需要进行平稳性检验，常用的统计检验方法为ADF检验（也称为单位根检验）",
        "id": 242,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 27,
        "text": "·ADF检验，就是判断序列是否存在单位根，如果序列平稳，就不存在单位根，否则，就会存在单位根",
        "id": 243,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 77,
        "text": "·ADF检验的HO假设就是存在单位根，如果得到的显著性检验统计量小于三个置信度 $( 1 0 \\% , 5 \\% , 1 \\% )$ ，则对应有（$90 \\%$ ，95， $9 9 \\%$ ）的把握来拒绝原假设",
        "id": 244,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 24,
        "text": "from statsmodels.tsa.stattools import adfuller t=adfuller(df_p['total_purchase_amt']) ",
        "id": 245,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 246,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 85,
        "text": "(-1.5898802926313507, 0.4886749751375928, 18, 408, {'1%': -3.446479704252724， '5%': -2.8686500930967354, $\" 1 0 \\% ^ { \\prime }$ :-2.5705574627547096}, 15960.28197033403)",
        "id": 247,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "输出结果依次为：",
        "id": 248,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 41,
        "text": "t-statistic, p-value, usedlag, nobscritical-value：测试统计数据的临界值为 $1 \\%$ ， $5 \\%$ 和 $10 \\%$ ",
        "id": 249,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "AIC ",
        "id": 250,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "如何确定该序列能否平稳：",
        "id": 251,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 35,
        "length_tokens": 122,
        "text": "主要看 $1 \\%$ 、%5、%10不同程度拒绝原假设的统计值和ADFTestresult的比较，如果ADFTestresult同时小于 $1 \\%$ 、 $5 \\%$ 、 $10 \\%$ 即说明非常好地拒绝原假设（原假设是不稳定的，因此证明是平稳的）这里，adf结果为-1.58988，大于三个level的统计值，无法拒绝原假设（原假设是不平稳的），需要进行一阶差分后，再进行检验",
        "id": 252,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 253,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 254,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "时间序列预测",
        "id": 255,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 57,
        "text": "1）针对购买purchase建模 ARIMA(purchase,order=(7,1,5)).fit() model.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 256,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 79,
        "text": "2）针对赎回redeem建模 ARIMA(redeem,order $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ (7,1,5)).fit() model.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 257,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "Thinking：模型预测准确性如何？",
        "id": 258,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 40,
        "text": "1）过于简单，实际情况并不是  \n2）周一到周日的特征规律没有利用  \n3）没有考虑特殊时间，比如节日，利率波动节点",
        "id": 259,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 260,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 261,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 262,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 263,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 5,
        "text": "时间序列规则：",
        "id": 264,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 22,
        "text": "·选择特征可以用简单的统计量来作为特征，从中提取出有用的信息",
        "id": 265,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 57,
        "text": "1）中位数：居于中间位置的数，较为稳健  \n2）均值：当分布符合正态分布时，可以代表整体特征  \n3）临近数据：离待测数据越近的数据对其影响越大",
        "id": 266,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 267,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 37,
        "length_tokens": 63,
        "text": "·很多数据都具有明显的周期性，比如客流量，支付等  \n·需要确定周期长度，比如一周7天，一个月30天，结合STL分解(Seasonal andTrend decomposition)观察周期变化，缺点是没有考虑到节假日、突发事件等情况",
        "id": 268,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 269,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "CASE:Prediction of capital inflow and outflow ",
        "id": 270,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 271,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 18,
        "text": "·假设给任务是根据前三周的数据预测第四周每天的客流量",
        "id": 272,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 273,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 274,
        "type": "image",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "Step1，获得周期因子（weekday）",
        "id": 275,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 12,
        "text": "获得星期几的均值，再除以整体均值",
        "id": 276,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 277,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 45,
        "text": "Step2，计算baseStep3，使用base\\*周期因子进行预测假设 $\\mathtt { b a s e = 1 0 0 }$ ，可以得到第四周的客流量",
        "id": 278,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 279,
        "type": "table",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 39,
        "length_tokens": 9,
        "text": "案例：资金流入流出预测 ",
        "id": 280,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 39,
        "length_tokens": 18,
        "text": "CASE:Prediction of capital inflow and outflow预测下个月每一天的情况：",
        "id": 281,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 282,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 39,
        "length_tokens": 132,
        "text": "·如果想预测下个月每天的流量情况，可以基于每月的规律（1-30号的平均流量）\\*周期因子  \nStep1，计算周期因子（weekday）  \nStep2，计算每日（1号-30号）均值，即1号的平均流量，2号的平均流量...  \nStep3，统计星期几（weekday）在每日（day）出现的频次Step4，基于周期因子获得加权均值，得到每日的base（去掉周期因子的影响）  \nStep5，根据每日的base和周期因子进行预测",
        "id": 283,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 19,
        "text": "案例：资金流入流出预测 CASE:Prediction of capital inflow and outflow ",
        "id": 284,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 68,
        "text": "观察特殊日期清明节，2014年4月5-7日五一，2014年5月1-3日六一，2014年5月31-6月2日中秋节：2014年9月6-8日国庆节：2014年10月1-7日",
        "id": 285,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "2014-04-11 ",
        "id": 286,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 208,
        "text": "2014年 C 4月 中 假期安排 返回今天二 三 四 五 六 日困 休31 1 2 3 4 5 6初一 愚人节 初三 初四 初五 清明节 初七休7 8 9 10 11 12 13初八 初九 初十 十 十二 十三 十四14 15 16 17 18 19 20十五 全民国. 十七 十八 十九 二十 谷雨21 22 23 24 25 26 27廿二 地球日 廿四 廿五 廿六 廿七 廿八休 休 休 班28 29 30 1 2 3 4廿九 初一 初二 劳动节 初四 初五 五四青..5 6 7 8 9 10 11立夏 初八 初九 初十 十一 十二 母亲节",
        "id": 287,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 2,
        "text": "11 ",
        "id": 288,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 18,
        "text": "三月十二甲午年 [马年】戊辰月 壬子日",
        "id": 289,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "宜嫁娅壮π蚀 ",
        "id": 291,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 40,
        "length_tokens": 14,
        "text": "忌亚烷妹断垛竭 开张 ",
        "id": 292,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 293,
        "type": "text",
        "file_name": "21.1-时间序列分析"
      },
      {
        "page": 1,
        "length_tokens": 6,
        "text": "时间序列AI大赛",
        "id": 0,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "Facebook Prophet ",
        "id": 2,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 2,
        "length_tokens": 35,
        "text": "时间序列预测工具 prophet饱和增长  \n突变点  \n节日与大事件  \nProjectA：页面流量预测ProjectB：交通流量预测",
        "id": 3,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "时间序列AI大赛",
        "id": 4,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 2,
        "length_tokens": 20,
        "text": "AI大赛：资金流入流出预测：使用prophet进行预测周期因子分析",
        "id": 5,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "1/2 Facebook Prophet ",
        "id": 6,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "Project：沪市指数预测 ",
        "id": 7,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "Project：沪市指数预测 ",
        "id": 8,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 4,
        "length_tokens": 63,
        "text": "·沪市指数的历史数据（从1990年12月19日到2020年3月12日）·请你编写代码对沪市指数未来3个月（截止到2020年6月30日）的变化进行预测（将数据转化为按月统计即可）",
        "id": 9,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 10,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "时间序列模型",
        "id": 11,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 5,
        "length_tokens": 10,
        "text": "ARMA/ARIMA统计模型的不足：",
        "id": 12,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 5,
        "length_tokens": 102,
        "text": "·ARMA，要求时序数据是稳定的，现实数据很难符合  \n·ARIMA，模型为线性模型，无法处理非线性关系，同时要求数据点的间隔等长，比如X1和×2间隔一个小时，那么X2和X3也间隔一个小时  \n·如果数据缺失，则需要使用插值等方法来预估缺失值，然后再使用预估值来进行参数拟合，这样会引入噪音",
        "id": 13,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 6,
        "length_tokens": 12,
        "text": "Project : 沪市指数预测 (ARIMA) ",
        "id": 14,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 15,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 7,
        "length_tokens": 11,
        "text": "Project：沪市指数预测 (Prophet) ",
        "id": 16,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 17,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 18,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "prophet: ",
        "id": 19,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 8,
        "length_tokens": 107,
        "text": "·facebook开源的时间序列预测工具https://facebook.github.io/prophet/  \n·Prophet是一个基于相加模型（additivemodel）的时间预测，可以精准的拟合非线性的周期趋势  \n·对yearly、weekly和daily的周期性使用非线性拟合，亮点在于Prophet模型还添加了holidays（影响因子），可以很好的对节日（比如十一、春节等）带来的活跃数据的突变进行预测",
        "id": 20,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "prophet的优势：",
        "id": 21,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 8,
        "length_tokens": 144,
        "text": "·处理数据丢失问题  \n·趋势迁移问题（shifts in the trend）  \n·异常的数据点（outliers）  \nprophet模型： $y ( t ) = g ( t ) + s ( t ) + \\mathsf { h } ( t ) + \\mathsf { e }$   \ng(t)代表趋势项，用来表示时间序列中非周期性的变化  \ns(t)代表周期项，用来表示时间序列中的周期变化  \nh(t)代表活动效果项，用来表达时间序列中的一些异常活  \n动，例节假日，购物节等  \ne用来表示不能被模型所描述的异常误差",
        "id": 22,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "Facebook prophet工具",
        "id": 23,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 9,
        "length_tokens": 38,
        "text": "prophet模型： $y ( t ) = g ( t ) + s ( t ) + \\mathsf { h } ( t ) + \\mathsf { e }$ ",
        "id": 24,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 9,
        "length_tokens": 125,
        "text": "·g(t)：趋势项在Prophet中有两种实现方法，第一种是饱和增长模型，第二种是分段线性模型  \n·s(t)：运用傅里叶级数作为周期项，使得预测模型具有灵活的周期效应  \n·h(t)：实际上，很多节日不是在一年中固定的一天发生，  \n比如母亲节（五月的第二个礼拜天），中国的春节  \n在Prophet模型中，用户在进行预测前可以向模型输入活动表格  \n$\\Rightarrow$ Prophet的预测会更加准确",
        "id": 25,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "prophet工具使用：",
        "id": 26,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 9,
        "length_tokens": 75,
        "text": "pip3 install prophet遵循sklearn库的使用接口，  \n模型拟合，fit（一般1-5秒）  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ Prophet()  \nmodel.fit(df)  \n模型预测，predict  \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(future)",
        "id": 27,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 28,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "prophet模型：",
        "id": 29,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 36,
        "text": "·Trend趋势，对时间序列中的趋势部分拟合分段线性函数，线性拟合会将特殊点和缺失数据的影响降到最小",
        "id": 30,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 5,
        "text": "·饱和增长",
        "id": 31,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 54,
        "text": "通常情况下，增长会有最大容量限制，比如未来12个月某app在某地区的下载量，最大下载量要小于等于该地区手机用户总数基于这样的领域知识，分析师可以定义模型的容量限制为C(t)",
        "id": 32,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 83,
        "text": "·突变点，随着突变点数量的增多，拟合变得更灵活。在研究趋势成分时，分析师要面临两个基本问题，即过拟合与欠拟合changepoint_prior_scale参数，可以调整趋势的灵活性，解决过拟合/欠拟合，参数值越大，拟合的时间序列曲线越灵活",
        "id": 33,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 34,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 36,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "Thinking: prohpeth是如何进行突变点分析的？",
        "id": 37,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 78,
        "text": "1）检测突变点Prophet默认在时间序列的前 $80 \\%$ 范围内均匀放置25个候选突变点。通过 稀疏先验（Laplace分布）对突变点的幅度 $\\delta _ { s }$ 进行正则化，筛选出显著的点。",
        "id": 38,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "2)分段趋势建模 ",
        "id": 39,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "趋势公式（以线性趋势为例）：",
        "id": 40,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 91,
        "text": "$$\ng ( t ) = \\left( k + \\sum _ { s \\in S } \\delta _ { s } \\cdot \\mathbb { I } ( t \\geq s ) \\right) \\cdot t + \\left( m + \\sum _ { s \\in S } \\gamma _ { s } \\cdot \\mathbb { I } ( t \\geq s ) \\right)\n$$",
        "id": 41,
        "type": "equation",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "3)预测未来趋势 ",
        "id": 42,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 34,
        "text": "δs：突变点s处的斜率变化量。y：保证函数连续的偏移量（避免突变点处的跳跃）。",
        "id": 43,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 11,
        "length_tokens": 27,
        "text": "未来时间段的趋势延续最后一个突变点后的斜率（即假设未来趋势不再突变）。",
        "id": 44,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 45,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 15,
        "text": "假设某产品的日销量在以下时间点发生突变：",
        "id": 46,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 70,
        "text": "2024-01-01：初始增长（斜率 $\\scriptstyle = 0 . 5$ ）  \n2024-04-01：因促销活动，斜率突增至1.2。  \n2024-07-01：市场竞争加剧，斜率降至0.3。",
        "id": 47,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 113,
        "text": "#生成日期范围  \ndates $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.date_range(start $\\mathbf { \\lambda } ^ { : \\dag }$ 2024-01-01', end='2024-12-31')  \nn_days $\\mathbf { \\tau } = \\mathbf { \\tau }$ len(dates)  \n#模拟趋势突变  \nnp.random.seed(42)  \ntrend $\\mathbf { \\tau } = \\mathbf { \\tau }$ np.concatenate([$0 . 5 ^ ",
        "id": 48,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 130,
        "text": "au } = \\mathbf { \\tau }$ np.concatenate([$0 . 5 ^ { * }$ np.arange(90), #1月-3月：斜率0.5$0 . 5 * 9 0 + 1 . 2 *$ np.arange(91), #4月-6月：斜率1.2（24 $0 . 5 * 9 0 + 1 . 2 * 9 1 + 0 . 3 *$ np.arange(n_days-90-91) #7月-12月： 斜率0.3",
        "id": 49,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 50,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 79,
        "text": "# 添加季节性噪声 $\\mathsf { y } = \\mathsf { t r e n d } + 5 ~ ^ { * }$ np.sin(np.linspace(0, 10\\*np.pi, n_days)) df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({'ds': dates,'y': y}) ",
        "id": 52,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 12,
        "length_tokens": 80,
        "text": "# 可视化原始数据   \nplt.figure(figsize $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (12, 4))   \nplt.plot(df['ds'], df['y'], labe $= ^ { \\mathsf { \\Gamma } }$ Actual')   \nplt.title(\"Simulated Data with Changepoints\")   \nplt.legend()   \nplt.show() ",
        "id": 53,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 54,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 112,
        "text": "## 训练prophet模型   \n#初始化模型（显式启用周季节性）   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ Prophet( yearly_seasonality $\\ c =$ False, weekly_seasonality=True, changepoint_prior_scale $_ { = 0 . 5 }$ ，# 提高突变点灵敏度 changepoint_range $\\scriptstyle \\cdot = 0 . 9$ #在前 $90 \\%$ 数据中检测突变点   \n1 ",
        "id": 55,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "#拟合数据model.fit(df)",
        "id": 56,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 60,
        "text": "#创建未来30天的预测   \nfuture $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.make_future_dataframe(periods $\\scriptstyle = 3 0$   \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(future) ",
        "id": 57,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 46,
        "text": "##可视化突变点与预测 #绘制预测结果 fig1 $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.plot(forecast) plt.title(\"Forecast with Changepoints\") ",
        "id": 58,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 32,
        "text": "#标记突变点 from prophet.plot import add_changepoints_to_plot add_changepoints_to_plot(fig1.gca(), model, forecast) ",
        "id": 59,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 13,
        "length_tokens": 32,
        "text": "#分解趋势和季节性 fig2 $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.plot_components(forecast) ",
        "id": 60,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 61,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 62,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 14,
        "length_tokens": 104,
        "text": "Prophet的突变点机制能自动适应趋势变化，非常适合业务场景中突发事件的建模。传统ARIMA模型，假设趋势是平滑变化的，无法灵活处理突发性趋势转折。Prophet的解决方案：通过突变点检测，Prophet将时间序列分段建模，每段的趋势斜率可以独立调整。例如：产品销量因营销活动突然增长。或者经济指标因政策调整骤降。",
        "id": 63,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 64,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "prophet模型：",
        "id": 65,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 29,
        "text": "·季节性，拟合并预测季节的效果，基于傅里叶级数提出了一个灵活的模型：",
        "id": 66,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 84,
        "text": "$$\ns ( t ) = \\sum _ { n = 1 } ^ { N } \\left( a _ { n } \\cos \\left( { \\frac { 2 \\pi n t } { P } } \\right) + b _ { n } \\sin \\left( { \\frac { 2 \\pi n t } { P } } \\right) \\right)\n$$",
        "id": 67,
        "type": "equation",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 119,
        "text": "P代表周期，年度的 $\\mathsf { P } = 3 6 5 . 2 5$ ，周数据的 $p = 7$ 对季节性建模，在给定N的情况下，估计参数[a,b...aN,bN]傅里叶阶数N是重要的参数，用来定义模型中是否考虑高频变化：如果分析师认为高频变化的成分只是噪声，可以将N取较低值如果不是噪音，可以将N设置为较高值，提升预测精度",
        "id": 68,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 69,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 70,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "Facebookprophet工具",
        "id": 71,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 16,
        "length_tokens": 4,
        "text": "prophet模型：",
        "id": 72,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 16,
        "length_tokens": 75,
        "text": "·活动效果项，即节假日和大事件  \n他们都是重要的时间因素，比如中国传统春节，在这个期间人们会购买大量新商品  \n允许分析师使用过去和未来事件的自定义列表，这些大事件前后的日期将会被单独考虑，并且通过拟合附加的参数模拟节假日和事件的效果",
        "id": 73,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 74,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 75,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 17,
        "length_tokens": 14,
        "text": "Project：佩顿·曼宁维基百科访问流量预测",
        "id": 76,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 17,
        "length_tokens": 108,
        "text": "·数据集，维基百科上面对美国橄榄球运动员佩顿·曼宁的日访问记录，2905条数据（2007年12月10日到2016年1月20日）  \n·Prophet的输入量通常包含两列的数据框：ds 和y  \nds列包含日期（YYYY-MM-DD）或者是具体的时间点（YYYY-MM-  \nDD HH:MM:SS)  \ny列是数值变量，表示我们希望去预测的量",
        "id": 77,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 78,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 79,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "Prophet工具使用：",
        "id": 80,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 119,
        "text": "·makefuturedataframe方法，将未来的日期扩展指定的天数，得到一个数据框。默认情况下，做会自动包含历史数据的日期，因此也可以用来查看模型对于历史数据的拟合效果  \n·predict方法，对每一行future日期得到预测值（yhat）预测forecast创建的对象应当是新的DataFrame，其中包含一列预测值yhat，以及成分的分析和置信区间  \n·plot_components方法，查看预测的成分分析  \n·查看forecast都有哪些列：print(forecast.columns)",
        "id": 81,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "成分分析的绘制：",
        "id": 82,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 20,
        "text": "trend趋势，来自trend字段 yearly趋势，来自yearly字段 weekly趋势，来自weekly字段 ",
        "id": 83,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 93,
        "text": "因为是加法模型，所以：   \nforecast['additive_terms'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ forecast['weekly'] $+$ forecast['yearly']   \nforecast['yhat'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ forecast['trend'] $+$ forecast['additive_terms']   \nforecast['yhat'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ forecast[",
        "id": 84,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 18,
        "length_tokens": 82,
        "text": "\\mathbf { \\sigma } = \\mathbf { \\sigma }$ forecast['trend'] +forecast['weekly'] +   \nforecast['yearly']   \n如果有节假日因素，那么   \nforecast['yhat'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ forecast['trend'] +forecast['weekly'] +   \nforecast['yearly'] $+$ forecast['holidays'] ",
        "id": 85,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 86,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "·查看forecast.tail() ",
        "id": 87,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 29,
        "text": "会发现'multiplicative_terms','multiplicative_terms_lower','multiplicative_terms_upper'这3列为空，因为是加法模型",
        "id": 88,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "·成分分析趋势解读 ",
        "id": 89,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "weekly中的Monday为0.035的意思就是，在trend的基础上，加0.035",
        "id": 90,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 34,
        "text": "Saturday为-0.3的意思就是，在trend的基础上，减0.3因此，weekly这条线的高低反应了销量的趋势",
        "id": 91,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 10,
        "text": "Thinking：一年这种哪个月份，销量最高？",
        "id": 92,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 93,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 94,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "预测饱和增长",
        "id": 95,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 68,
        "text": "Prophet在预测增长情况时，会存达到极值，比如总人口数等，这里称为承载能力（carryingcapacity），这时上限就是趋于饱和新建一列cap来指定承载能力的大小，通常情况下这个值应当通过市场规模的数据或专业知识来决定，比如",
        "id": 96,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 39,
        "text": "${ \\mathsf { d f } } [ ^ { \\prime } { \\mathsf { c a p } } ^ { \\prime } ] = 8 . 5$ ",
        "id": 97,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 35,
        "text": "注意：DataFrame每行都必须指定cap值，但不一定是恒定值，如果市场规模在不断地增长，那么cap也可以是不断增长的序列",
        "id": 98,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 11,
        "text": "预测饱和减少（市场的最低floor）",
        "id": 99,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 25,
        "text": "logistic增长模型还可以处理饱和最小值，方法与指定最大值的列的方式相同",
        "id": 100,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 101,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 102,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "·趋势突变点",
        "id": 103,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 21,
        "length_tokens": 144,
        "text": "真实的时间序列数据往往存在一些突变点  \nProphet将自动监测到这些点，并对趋势做适当地调整  \n默认下，Prophet会识别出25个潜在的突变点（均匀分  \n布在在前 $80 \\%$ 的时间序列数据中），绝大多数突变点并  \n不会包含在建模过程中  \n# 显示突变点的位置  \nfrom fbprophet.plot import add_changepoints_to_plot  \nfig = m.plot(forecast)  \na $\\mathbf { \\tau } = \\mathbf { \\tau }$ add_changepoints_to_plot(fig.gca(),m, f",
        "id": 104,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 21,
        "length_tokens": 19,
        "text": " { \\tau }$ add_changepoints_to_plot(fig.gca(),m, forecast)",
        "id": 105,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 107,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 22,
        "length_tokens": 94,
        "text": "·指定突变点的位置   \n使用changepoints参数   \n$\\mathsf { m } =$ Prophet(changepoints $\\ c =$ ['2014-01-01'])   \nm.fit(df)   \nfuture $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.make_future_dataframe(periods=365)   \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.predict(future)   \nm.plot(forecast) ",
        "id": 108,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 109,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 110,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "·对节假日建模 ",
        "id": 111,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 20,
        "text": "创建一个新的DataFrame，包含两列（节假日holiday 和日期戳 ds )",
        "id": 112,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 46,
        "text": "注意：这个DataFrame必须包含所有出现的节假日（不仅是历史数据集中，还是要预测的时期中的）比如，所有佩顿·曼宁参加过的季后赛 与 决赛日期",
        "id": 113,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 139,
        "text": "playoffs $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({ 'holiday': 'playoff', 'ds': pd.to_datetime(['2008-01-13','2009-01-03','2010-01-16', '2010-01-24','2010-02-07','2011-01-08', '2013-01-12','2014-01-12','2014-01-19', '2014-02-02','2015-01-11','2016-01-17', '2016-01-24','2016-02-07']), 'lowe",
        "id": 114,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 116,
        "text": "','2016-01-17', '2016-01-24','2016-02-07']), 'lower_window': 0, 'upper_window': 1,   \n}   \nsuperbowls $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({ 'holiday': 'superbowl', 'ds': pd.to_datetime(['2010-02-07','2014-02-02','2016-02-07']), 'lower_window': 0, 'upper_window':1,   \n})   \nholidays $\\",
        "id": 115,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 23,
        "length_tokens": 40,
        "text": "window': 0, 'upper_window':1,   \n})   \nholidays $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.concat(playoffs,superbowls)) ",
        "id": 116,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "Project A: 页面访问流量预测",
        "id": 117,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 24,
        "length_tokens": 156,
        "text": "ds playoff superbowl   \n2190 2014-02-02 1.217571 1.230312   \n2191 2014-02-03 1.898042 1.466063   \n2532 2015-01-11 1.217571 0.000000   \n2533 2015-01-12 1.898042 0.000000   \n2901 2016-01-17 1.217571 0.000000   \n2902 2016-01-18 1.898042 0.000000   \n2908 2016-01-24 1.217571 0.000000   \n2909 2016-01-25 1",
        "id": 118,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 24,
        "length_tokens": 78,
        "text": " 2016-01-24 1.217571 0.000000   \n2909 2016-01-25 1.898042 0.000000   \n2922 2016-02-07 1.217571 1.230312   \n2923 2016-02-08 1.898042 1.466063 ",
        "id": 119,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 24,
        "length_tokens": 106,
        "text": "·对节假日建模  \n这个DataFrame创建好了，就可以通过传入holiday:  \n$\\mathsf { m } =$ Prophet(holidays $\\ c =$ holidays)  \nm.fit(df)  \nfuture $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.make_future_dataframe(periods=365)  \nforecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.predict(future)  \n可以通过forecast数据框，展示节假日效应  \nprint(foreca",
        "id": 120,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 24,
        "length_tokens": 69,
        "text": "t(future)  \n可以通过forecast数据框，展示节假日效应  \nprint(forecast[(forecast['playoff'] $^ +$   \nforecast['superbowl']).abs() $> 0 \\mathrm { 1 }$ I[['ds','playoff',  \n'superbowl']][-10:])",
        "id": 121,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "Project B: 交通流量预测 ",
        "id": 123,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "ProjectB：交通流量预测",
        "id": 124,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 25,
        "length_tokens": 59,
        "text": "·JetRail高铁的乘客数量预测  \n·数据集：jetrail.csv，根据过往两年的数据（2012年8月至2014年9月），需要用这些数据预测接下来7个月的乘客数量  \n·以每天为单位聚合数据集",
        "id": 125,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 25,
        "length_tokens": 57,
        "text": "$\\mathsf { m } =$ Prophet(yearly_seasonality=True, seasonality_prior_scale=0.1) #预测未来7个月，213天 future $\\mathbf { \\tau } = \\mathbf { \\tau }$ m.make_future_dataframe(periods=213) ",
        "id": 126,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "Project: 沪市指数预测 ",
        "id": 128,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 26,
        "length_tokens": 7,
        "text": "Project：沪市指数预测 ",
        "id": 129,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 26,
        "length_tokens": 63,
        "text": "·沪市指数的历史数据（从1990年12月19日到2020年3月12日）·请你编写代码对沪市指数未来3个月（截止到2020年6月31日）的变化进行预测（将数据转化为按月统计即可）",
        "id": 130,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 27,
        "length_tokens": 57,
        "text": "Prophet针对的是商业预测任务·优点：不需要特征工程就能得到趋势，季节因素和节假日因素·不足：无法利用更多的信息，如在预测商品的销量时，无法利用商品的信息，门店的信息，促销的信息等",
        "id": 132,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 133,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 27,
        "length_tokens": 59,
        "text": "·传入prophet的数据分为两列ds 和y  \nds表示时间戳（pandas的日期格式）  \ny表示truevalue，也是需要预测的值（数值型）带holidays参数的prophet  \nm = Prophet(holidays=holidays)",
        "id": 134,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "·生成未来日期",
        "id": 135,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 27,
        "length_tokens": 109,
        "text": "future $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.make_future_dataframe(periods=365)  \nfuture为时间轴，在原有基础上增加365天（会包括之前的历  \n史时间戳)  \n模型训练 model.fit(df)  \n模型预测 forecast $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.predict(future)  \n成分分析，plot_components(forecast)  \n绘制trend,weekly,yearly趋势图，会包括之前历史时间戳预测",
        "id": 136,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 6,
        "text": "forecaset字段包括：",
        "id": 138,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 95,
        "text": "ds,时间轴   \ntrend,trend_lower,trend_upper,趋势   \nyhat,yhat_lower,yhat_upper，预测值   \nweekly,weekly_lower,weekly_upper,星期趋势   \nyearly,yearly_lower,yearly_upper，年趋势   \nadditive_terms,additive_terms_lower,additive_terms_upper，加法模   \n型趋势（星期趋势 $+$ 年趋势），即 forecast'additive_terms'] =   \nforecast['weekly'] $+$ f",
        "id": 139,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 55,
        "text": "ast'additive_terms'] =   \nforecast['weekly'] $+$ forecast['yearly']   \nmultiplicative_terms， multiplicative_terms_lower,   \nmultiplicative_terms_upper，乘法模型趋势，如果使用加法模型时，   \nmultiplicative_terms为空 ",
        "id": 140,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "：趋势变化点model.changepoints ",
        "id": 141,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 150,
        "text": "趋势变化点：时间序列经常会在轨迹中发生突然变化，可以  \n自动检测出这些点  \n当模型训练完之后，就可以找到趋势变化点，默认为25个，  \n分布在前 $80 \\%$ 的时间序列中  \n可以使用参数n_changepoints设置潜在变化点的数量，比如  \nmodel= prophet (n_changepoints $\\scriptstyle = 3 0$ ）  \n可以使用参数changepoint_range设置前多少的时间序列来寻  \n找潜在变化点，比如在时间序列的前 $90 \\%$ 处寻找潜在的变化点  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau ",
        "id": 142,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 31,
        "text": "潜在的变化点  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ Prophet(changepoint_range=0.9)",
        "id": 143,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "人工指定突变点的位置：",
        "id": 144,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "·指定预测类型",
        "id": 145,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 29,
        "length_tokens": 119,
        "text": "growth $= ^ { \\mathsf { 1 } }$ linear'或growth $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"logistic\"  \n默认的增长趋势为linear  \n如果使用growth $\\ c =$ \"logistic\"，就需要指定cap，因为预测时需要  \n用到cap，可以不指定floor，因为logistic默认的最小饱和值是0  \n$m =$ Prophet(growth $= \"$ logistic')  \n${ \\mathsf { d } } { \\mathsf { f } } [ ^ { \\prime } { \\ma",
        "id": 146,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 29,
        "length_tokens": 85,
        "text": "hsf { d } } { \\mathsf { f } } [ ^ { \\prime } { \\mathsf { c a p } } ^ { \\prime } ] = 6$ #不设置会报错  \n·模型的学习方式  \n默认情况下为加性的，如果改成乘性的(multiplicative)，需要  \n设置seasonality_mode $= ^ { \\prime }$ multiplicative'",
        "id": 147,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "Prophet中的参数设置：",
        "id": 148,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 29,
        "length_tokens": 143,
        "text": "·Capacity，在增量函数是逻辑回归函数的时候，需要设置的容量值  \n· Change Points: 通过 n_changepoints 和 changepoint_range来设置时间序列的变化点  \n·季节性和节假日，可以根据实际的业务需求来指定相应的节假日  \n光滑参数：  \nchangepoint_prior_scale设置趋势项的灵活度，即跟随性，默  \n认为0.05，值越大，拟合的跟随性越好，可能会过拟合  \nseasonality_prior_scale用来控制季节项的灵活度  \nholidays_prior_scale用来控制节假日的灵活度",
        "id": 149,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "时间序列AI大赛",
        "id": 150,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 31,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 151,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "Project：资金流入流出预测 ",
        "id": 152,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 31,
        "length_tokens": 53,
        "text": "· https://tianchi.aliyun.com/competition/entrance/231573/information  \n·数据集一共包括4张表：用户基本信息数据、用户申购赎回数据、收益率表和银行间拆借利率表",
        "id": 153,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 31,
        "length_tokens": 50,
        "text": "2.8万用户，284万行为数据，294天拆解利率，427天收益率  \n2013-07-01到2014-08-31，预测2014年9月的申购和赎回",
        "id": 154,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 31,
        "length_tokens": 166,
        "text": "1.00 Ldl.haln.1 0.50   \nrreaegatt 0.25   \n0.00   \n-0.25   \n-0.50   \n-0.75   \n-1.00   \n1 2 3 4 5 6 7 8 9 10 11121314 151617181920 212223 242526 27282930 31 date   \n1e8   \n1 1 ÷ LLd. -1.0 ：   \n1 2 3 4 5 6 7 8 9 10 11 12 1314 15 1617 18 1920 21 22 23 24 2526 27 2829 30 31 date ",
        "id": 155,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 156,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "·用户信息表，user_profile_table",
        "id": 157,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 32,
        "length_tokens": 42,
        "text": "总共随机抽取了约3万用户，主要包含了用户的性别、城市和星座，其中部分用户在2014年9月份第一次出现，这些用户只在测试数据中",
        "id": 158,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 159,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 160,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 161,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 33,
        "length_tokens": 11,
        "text": "用户申购赎回数据表user balance table",
        "id": 162,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 33,
        "length_tokens": 85,
        "text": "·数据包括了20130701至 20140831申购和赎回信息，字段包括用户操作时间和操作记录，其中操作记录包括申购和回两个部分  \n·金额的单位是分，即0.01元  \n如果用户今日消费总量为0，即consume_amt $\\scriptstyle = 0$ ，同时四个category字段为空数据经过了脱敏，同时保证了：",
        "id": 163,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 33,
        "length_tokens": 37,
        "text": "今日余额 $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 昨日余额 $^ +$ 今日申购－今日赎回，不会出现负值",
        "id": 165,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 166,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "收益率表 mfd_day_share_interest",
        "id": 167,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 15,
        "text": "，收益表为余额宝在 14个月内的收益率表",
        "id": 168,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 169,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 15,
        "text": "上海银行间同业拆放利率表 mfd bank shibor",
        "id": 170,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 27,
        "text": "·银行间拆借利率表是14个月期间银行之间的拆借利率（皆为年化利率）",
        "id": 171,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 172,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 173,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "收益计算方式",
        "id": 174,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 35,
        "length_tokens": 14,
        "text": "·主要基于实际余额宝收益计算方法，进行了简化",
        "id": 175,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 35,
        "length_tokens": 35,
        "text": "1）收益计算的时间不再是会计日，而是自然日，以0点为分隔（0点之前算昨天，0点之后算今天）",
        "id": 176,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 35,
        "length_tokens": 86,
        "text": "2）收益的显示时间，即实际将第一份收益打入用户账户的时间，以周一转入周三显示为例，如果用户在周一存入10000元，即1000000分，那么这笔金额是周一确认，周二是开始产生收益，在周三将周二产生的收益打入到用户的账户中，此时用户的账户中显示的是1000110分",
        "id": 177,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 178,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 179,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "提交结果表tc_comp_predict_table",
        "id": 180,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 181,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 43,
        "text": "每一行数据是一天对申购、赎回总额的预测值，输出2014年9月每天的预测，共30行。purchase 和 redeem都是金额数据，精确到分",
        "id": 182,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 183,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "评估指标：",
        "id": 184,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 50,
        "text": "1）计算测试集上每天的申购及赎回与实际的误差每日申购相对误差(真实值 $z _ { i }$ ，预则值为 $z _ { i } )$ ：",
        "id": 185,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 62,
        "text": "$$\n\\mathrm { P u r c l i z e s e } _ { \\mathrm { i } } = \\frac { | z _ { \\mathrm { i } } - z _ { \\mathrm { i } } | } { z _ { \\mathrm { i } } }\n$$",
        "id": 186,
        "type": "equation",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 18,
        "text": "每日赎回相对误差（真实值y：，预测值为)：",
        "id": 187,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 60,
        "text": "$$\n\\mathrm { { R e d e e m } _ { i } = \\frac { | \\mathbf { y } _ { i } - \\hat { \\mathbf { y } _ { i } } | } { \\mathbf { y } _ { i } } }\n$$",
        "id": 188,
        "type": "equation",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 58,
        "text": "2）误差与得分之间的计算公式不公布，但保证单调递减第i天的申购误差Purchasei $\\scriptstyle = 0$ ，这一天的得分为10分；当Purchasei>0.3，得分为0",
        "id": 189,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 36,
        "length_tokens": 56,
        "text": "3）总积分 $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 申购预测得分 $\\ast 4 5 \\%$ （20 $^ +$ 赎回预测得分 $\\ast 5 5 \\%$ ",
        "id": 190,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 191,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "数据探索EDA",
        "id": 192,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 15,
        "text": "1）每日总购买与赎回量的时间序列图",
        "id": 193,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 35,
        "text": "·方法1：采用时间序列进行预测Step1，平稳性检测adfullerStep2，采用ARIMA模型Step3，模型训练集与预测",
        "id": 194,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 195,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 24,
        "text": "2）STL分解，将时序图拆分为：Trend $^ +$ Seasonal + Residual ",
        "id": 196,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 37,
        "length_tokens": 41,
        "text": "·方法2：基于时序规则的挖掘Step1，获得周期因子（weekday）Step2，计算baseStep3，使用base\\*周期因子进行预测",
        "id": 197,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 198,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 38,
        "length_tokens": 51,
        "text": "·readcsv中的日期格式解析  \npd.read_csv('user_balance_table.csv'， parse_dates  \n$\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ ['report_date'])  \n设置parse_dates参数，将时间字符串转换为日期格式",
        "id": 199,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "DataFrame.diff()函数",
        "id": 200,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 38,
        "length_tokens": 19,
        "text": "用来将数据进行某种移动之后与原数据进行比较得出的差异数据",
        "id": 201,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 38,
        "length_tokens": 51,
        "text": "DataFrame.shift()函数可以把数据移动指定的位数periods=-1往上移动或往左移动periods ${ \\mathfrak { \\sigma } } _ { = 1 }$ 往下移动或往右移动",
        "id": 202,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 203,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 204,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "平稳性检测（ADF检测）：",
        "id": 205,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 181,
        "text": "·在使用时间序列模型时（比如ARMA、ARIMA），需要时间序列是平稳的，所以第一步都需要进行平稳性检验，常用的统计检验方法为ADF检验（也称为单位根检验）  \n·ADF检验，就是判断序列是否存在单位根，如果序列平稳，就不存在单位根，否则，就会存在单位根  \n·ADF检验的HO假设就是存在单位根，如果得到的显著性检验统计量小于三个置信度 $( 1 0 \\% , 5 \\% , 1 \\% )$ ，则对应有（$90 \\%$ ，95， $9 9 \\%$ ）的把握来拒绝原假设  \nfrom statsmodels.tsa.stattools import adfuller  \nt=adfuller(df",
        "id": 206,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 111,
        "text": "dels.tsa.stattools import adfuller  \nt=adfuller(df_p['total_purchase_amt'])  \n(-1.5898802926313507, 0.4886749751375928, 18, 408, {'1%': -  \n3.446479704252724, '5%': -2.8686500930967354, $\" 1 0 \\% ^ { \\prime }$ :-  \n2.5705574627547096}, 15960.28197033403)",
        "id": 207,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "输出结果依次为：",
        "id": 208,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 41,
        "text": "t-statistic, p-value, usedlag, nobscritical-value：测试统计数据的临界值为 $1 \\%$ ， $5 \\%$ 和 $10 \\%$ ",
        "id": 209,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 3,
        "text": "AIC ",
        "id": 210,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "如何确定该序列能否平稳：",
        "id": 211,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 39,
        "length_tokens": 118,
        "text": "主要看1%、%5、%10不同程度拒绝原假设的统计值和ADFTestresult的比较，如果ADFTestresult同时小于 $1 \\% . 5 \\% . 1 0 \\%$ 即说明非常好地拒绝原假设（原假设是不稳定的，因此证明是平稳的）这里，adf结果为-1.58988，大于三个level的统计值，无法拒绝原假设（原假设是不平稳的），需要进行一阶差分后，再进行检验",
        "id": 212,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 213,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "时间序列预测",
        "id": 214,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 57,
        "text": "1）针对购买purchase建模 ARIMA(purchase,order=(7,1,5)).fit() model.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 215,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 81,
        "text": "2）针对赎回redeem建模   \nARIMA(redeem,order $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ (7,1,5)).fit()   \nmodel.predict('2014-09-01','2014-09-30',typ $\\mathbf { \\tau } = \\mathbf { \\tau }$ levels') ",
        "id": 216,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "Thinking: 模型预测准确性如何？",
        "id": 217,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 40,
        "text": "1）过于简单，实际情况并不是  \n2）周一到周日的特征规律没有利用  \n3）没有考虑特殊时间，比如节日，利率波动节点",
        "id": 218,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 219,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 220,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 41,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 221,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 41,
        "length_tokens": 5,
        "text": "时间序列规则：",
        "id": 222,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 41,
        "length_tokens": 77,
        "text": "·选择特征可以用简单的统计量来作为特征，从中提取出有用的信息1）中位数：居于中间位置的数，较为稳健2）均值：当分布符合正态分布时，可以代表整体特征3）临近数据：离待测数据越近的数据对其影响越大",
        "id": 223,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 224,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 41,
        "length_tokens": 63,
        "text": "·很多数据都具有明显的周期性，比如客流量，支付等  \n·需要确定周期长度，比如一周7天，一个月30天，结合STL分解(Seasonal and Trend decomposition)观察周期变化，缺点是没有考虑到节假日、突发事件等情况",
        "id": 225,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 226,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "基于周期因子的时间序列预测",
        "id": 227,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 18,
        "text": "·假设给任务是根据前三周的数据预测第四周每天的客流量",
        "id": 228,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 229,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 230,
        "type": "image",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "Step1，获得周期因子（weekday）",
        "id": 231,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 12,
        "text": "获得星期几的均值，再除以整体均值",
        "id": 232,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 233,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 48,
        "text": "Step 2，计算baseStep3，使用base\\*周期因子进行预测假设 $\\mathsf { b a s e } { = } 1 0 0$ ，可以得到第四周的客流量",
        "id": 234,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 235,
        "type": "table",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 43,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 236,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 43,
        "length_tokens": 8,
        "text": "预测下个月每一天的情况：",
        "id": 237,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 43,
        "length_tokens": 132,
        "text": "·如果想预测下个月每天的流量情况，可以基于每月的规律（1-30号的平均流量）\\*周期因子  \nStep1，计算周期因子（weekday）  \nStep2，计算每日（1号-30号）均值，即1号的平均流量，2号的平均流量...  \nStep3，统计星期几（weekday）在每日（day）出现的频次Step4，基于周期因子获得加权均值，得到每日的base（去掉周期因子的影响)  \nStep5，根据每日的base和周期因子进行预测",
        "id": 238,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 43,
        "length_tokens": 10,
        "text": "Step1，获得周期因子（weekday）",
        "id": 239,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 10,
        "text": "Project: 资金流入流出预测 ",
        "id": 240,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 68,
        "text": "观察特殊日期清明节，2014年4月5-7日五一，2014年5月1-3日六一，2014年5月31-6月2日中秋节：2014年9月6-8日国庆节：2014年10月1-7日",
        "id": 241,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 209,
        "text": "2014年 C 4月 2 假期安排 返回今天二 三 四 五 六 日休 休31 1 2 3 4 5 6初一 愚人节 初三 初四 初五 清明节 初七休7 8 9 10 11 12 13初八 初九 初十 十一 十二 十三 十四14 15 16 17 18 19 20十五 全民国... 十七 十八 十九 二十 谷雨21 22 23 24 25 26 27廿二 地球日 廿四 廿五 廿六 廿七 廿八休 休 休 班28 29 30 一 2 3 4廿九 初一 初二 劳动节 初四 初五 五四青.5 6 7 8 9 10 11立夏 初八 初九 初十 +一 十二 母亲节",
        "id": 242,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 2,
        "text": "11 ",
        "id": 243,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 18,
        "text": "三月十二甲午年 [马年】戊辰月 壬子日",
        "id": 244,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 23,
        "text": "宜 搬家 装修 结婚 领动 订婚 安葬 作灶 ",
        "id": 245,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 44,
        "length_tokens": 19,
        "text": "忌 开业 入宅 开工 安床 出行 上梁 交易 开张 ",
        "id": 246,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "打卡：资金流入流出预测",
        "id": 247,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 45,
        "length_tokens": 48,
        "text": "针对AI大赛：资金流入流出预测，编写AI算法，进行预测，挑战分数 $> 1 2 0$ https://tianchi.aliyun.com/competition/entrance/231573 ",
        "id": 248,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "数据集 Purchase Redemption Data.zip",
        "id": 249,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 45,
        "length_tokens": 10,
        "text": "选择适合的时间范围时间序列模型",
        "id": 250,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "ARMA/ARIMA prophet ",
        "id": 251,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "周期因子分析模型融合",
        "id": 252,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 253,
        "type": "text",
        "file_name": "22.1-时间序列AI大赛"
      },
      {
        "page": 1,
        "length_tokens": 7,
        "text": "项目实战： 企业知识库",
        "id": 0,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 2,
        "length_tokens": 7,
        "text": "项目实战：企业知识库",
        "id": 2,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 2,
        "length_tokens": 70,
        "text": "CASE:RAG冠军方案 (多路由+动态知识库)RAG比赛任务说明基础RAG系统流程解析模块、Docling优化、表格序列化内容提取（ingestion）·检索 (Retrieval)LLM重排序(LLMreranking父页面检索、整合后的检索器",
        "id": 3,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 2,
        "length_tokens": 58,
        "text": "·增强(Augmentation)  \n生成 (Generation)思维链、结构化输出、思维链+结构化输出  \n·指令细化 (Instruction Refinement)  \n提示词创建、Prompt.py实现RAG系统调参CASE：搭建自己的RAG系统",
        "id": 4,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 16,
        "text": "CASE: RAG冠军方案 （多路由+动态知识库) ",
        "id": 5,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 85,
        "text": "TO DO: 搭建企业知识库RAG系统参考项目：RAG-Challenge-2https://github.com/llyaRice/RAG-Challenge-2·实现知识库RAG系统，在企业RAG挑战赛中取得优异成绩。RAG-Challenge系统在比赛中赢得了所有类别的奖项，展示了在处理公司年度报告问题回答方面的强大能力。",
        "id": 6,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "系统特点：",
        "id": 9,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 14,
        "text": "定制PDF解析： 使用Docling进行PDF文档解析。",
        "id": 10,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 20,
        "text": "向量搜索与父文档检索： 通过向量搜索实现文档检索",
        "id": 11,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 22,
        "text": "·LLM重排序：利用LLM对检索结果进行重排序，提高上下文相关性。",
        "id": 12,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 25,
        "text": "·结构化输出提示： 采用链式推理 (chain-of-thoughtreasoning）进行结构化输出。",
        "id": 13,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 15,
        "text": "查询路由： 支持多公司比较的查询路由功能。",
        "id": 14,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 3,
        "length_tokens": 33,
        "text": "这是竞赛代码，虽然功能完善但存在临时解决方案，比如IBMWatson集成部分是竞赛特定的，无法正常工作。",
        "id": 15,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 4,
        "length_tokens": 16,
        "text": "CASE: RAG冠军方案 （多路由+动态知识库) ",
        "id": 16,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 4,
        "length_tokens": 41,
        "text": "企业RAG比赛: https://github.com/trustbit/enterprise-rag-challenge/tree/main基于公司年度报告构建一个问答系统，简单来说，比赛当天的流程如下：",
        "id": 17,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 4,
        "length_tokens": 161,
        "text": "·我们会收到来自随机挑选公司的100份年度报告，并需要在2.5小时内解析这些报告并构建一个数据库。  \n这些报告是PDF格式，每份最长可达1000页。  \n·然后，系统会生成100个随机问题（基于预设模板），我们的RAG系统必须尽快回答这些问题。  \n所有问题都有确定的答案，例如：·是/否；  \n·公司名称（某些情况下是多个公司名称）；  \n·领导职位头衔、推出的产品名称;  \n·数值指标：营收、商店数量等。  \n每个答案都必须注明引用的页码，确保系统是从原文中得出答案，而不是输出虚假信息（hallucinate）。",
        "id": 19,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 5,
        "length_tokens": 15,
        "text": "CASE: RAG冠军方案 (多路由+动态知识库）",
        "id": 20,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 21,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "获胜方案在native RAG的基础上，加入了两个路由器（router）和LLM重排序模块（LLM reranking)",
        "id": 22,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 16,
        "text": "CASE: RAG冠军方案 (多路由+动态知识库) ",
        "id": 23,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 24,
        "type": "table",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "Ilya Rice ",
        "id": 25,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 62,
        "text": "· Best experiment: Dense Retrieval; Router; LLM reranking; o3-mini · Signature: f1d79f   \n· Summary: Dense retrieval combined with LLM reranking and SO CoT. · Article: How I Won the Enterprise RAG Challenge £   \n· Source code: Github£ ",
        "id": 26,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "Models used: ",
        "id": 27,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 12,
        "text": "· 03-mini-2025-01-31 ",
        "id": 28,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "Architecture ",
        "id": 29,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 46,
        "text": "Ilya Rice solved the problem by making it easy to run numerous experiments before the competition has even started. He created an evaluation pipeline that let him quickly evaluate different architectural solutions. The best solution was also among the fastest ones. ",
        "id": 30,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 33,
        "text": "https://abdullin.com/erc/冠军方案在retrieval和generation，以及score上都取得了不错的成绩，采用o3-mini进行推理",
        "id": 31,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "基础RAG系统流程",
        "id": 33,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "Thinking: 基础RAG系统的开发流程是什么？",
        "id": 34,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 7,
        "length_tokens": 113,
        "text": "·解析(Parsing)：为知识库准备数据，包括收集文档、将其转换为文本格式，并清理无关的噪点信息。  \n·内容提取(Ingestion)：创建并载入知识库。  \n·检索(Retrieval)：构建一个工具，根据用户查询查找并返回相关数据，通常在向量数据库中进行语义搜索。  \n·回答 (Answering)：将检索到的数据 $^ +$ 用户的提示词（prompt），发送给LLM，返回最终答案。",
        "id": 35,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "解析模块 (Parsing)",
        "id": 36,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 9,
        "text": "Thinking: 解析模块的挑战？ ",
        "id": 37,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 32,
        "text": "需要将PDF文档转换为纯文本。PDF解析是一项远非易事的工作，其中充满了无数细微的难题：",
        "id": 38,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 49,
        "text": "·保留表格结构；  \n·保留关键的格式元素 （例如标题和项目符号列表）；  \n·识别多栏文本；  \n·处理图表、图片、公式、页眉/页脚等等。",
        "id": 39,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 34,
        "text": "CAIXAGERALDEDEPOSITOS,S.A CONSOLIDATEDSTATEMENTSOFCHANGESINSHAREHOLDERS'EQUITY (EUR Thousand) ",
        "id": 40,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 169,
        "text": "TTtr 78000 1154 0 889339 8 电 1 电 215.050 1 3 3372 35535 4 1 2 1 8 33753 , , , 8553555 15550 2 535331 4) 85056 956555 1132544 8543 11566 2 1 4866 srtait 71355 533335 \\* 353381 05575 （6988 4 353338 88258 928 · , . 88898 3353333 1 (782 85335 0 2 333531 335220 1 2 , 447.555 25395 11 1 . 21124 335555 134",
        "id": 41,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 92,
        "text": "335220 1 2 , 447.555 25395 11 1 . 21124 335555 134.2144 1 ” 3145254 1 11965 000000 000005 1 (000005) E sesderee 3312 55342 54441 e ngreae ite 喜 福 大型表格有时会旋转90度，导致解析器产生乱码 ",
        "id": 42,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "解析模块 (Parsing)",
        "id": 44,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "Thinking: 如何选择解析器？",
        "id": 45,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 10,
        "text": "作者尝试了20多种解析器：",
        "id": 46,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 49,
        "text": "·小众解析器；  \n·知名的解析器；  \n·基于前沿机器学习算法训练的解析器；  \n·支持API访问的商业解析器。  \n最终作者选择了Docling作为PDF解析器",
        "id": 47,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 31,
        "text": "没有任何解析器可以处理所有细微之处，并在不丢失部分重要信息的情况下，将PDF内容完全还原为文本。",
        "id": 48,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 35,
        "text": "CAIXAGERALDEDEPOSITOS,S.A. CONSOLIDATEDSTATEMENTSOFCHANGESINSHAREHOLDERS'EQUITY (EUR Thousand) ",
        "id": 49,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 160,
        "text": "1ttr 008.000 电 212 U 唱 20.50 1 A 3 332 2 福 880.08 53 83757 1 1 555954 55331 4) 875066 96555 152545 8343 11566 28 , 112846   \nsriat 55555 53331 55331 353338 , 858 88298 235220 32 . , 858   \noue 5353335 M S （722 853333 555 222 33571 U 1 2 , 445.5555 2598 1521 . 2211 355555 24.254 , #1 214254 1369   \nL",
        "id": 50,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 9,
        "length_tokens": 67,
        "text": "98 1521 . 2211 355555 24.254 , #1 214254 1369   \nLperend 00000 000005 . (000005)   \nsdeeeit 335 3534 3534444 aseegreetrreee esreesre Jio 一载 ",
        "id": 51,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 3,
        "text": "Docling优化",
        "id": 52,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 34,
        "text": "尽管 Docling的结果非常优秀，但它缺乏一些基本能力。作者研究了docling源代码，并重写了几个方法以满足需求:",
        "id": 53,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 40,
        "text": "·在解析后得到了一个包含所有必要元数据的JSON文件·利用这个 JSON，可以构建了Markdown文档，表格结构从 PDF 转换为 Markdown 甚至 HTML。",
        "id": 54,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 44,
        "text": "·有时部分文本从PDF中解析出来时会出错，包含特定的语法，降低了可读性和意义。我们使用了十几个正则表达式来处理这个问题。",
        "id": 56,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 27,
        "text": "Operatingsustainably CARBON EMISSIONS5UP (tCO,-e/ct) 0.139 +10% ",
        "id": 57,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 106,
        "text": "[\"Operating sustainably 4\"   \n\"/C.cap/A.cap/R.cap/B.cap/O.cap/N.cap/E.cap/M.cap/I.cap/S.cap/s. cap/I.cap/O.cap/N.cap/S.cap/five.pl/U.cap/P.cap\"   \n\"(t/C.cap/o.cap/two.pl-e/ct)\",   \n\"/zero.pl.tnum./one.tnum.pl /three.pl.tnum/nine.pl.tnum /space. tnum/plus.tnum/one.tnum.pl /zero.pl.tnum /percent.pl\"] ",
        "id": 58,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "使用Docling，可以将报告解析为JSON格式",
        "id": 59,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "表格序列化",
        "id": 60,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "Thinking: 是否需要进行表格序列化？",
        "id": 61,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 32,
        "text": "在大型表格中，度量名称（横向表头）通常离纵向表头太远，削弱了语义连贯性",
        "id": 62,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 151,
        "text": "GEARUPIMOL RISE2013 STEERFOR2020 ROLLINGPLAN   \n2012/3 2013/3 2014/3 2015/3 2016/3 2017/3 2018/3 2019/3 2020/3 2021 20223   \nForthe year   \nShippngandothereveues ￥1,435,220 V1,509,194 1,729,452 V1,817,069 V1,712,222 V1,504,373 V1,652,393 V1,234,077 1,155,404 ￥991,626 ￥1,269,310   \nShippingandotherex",
        "id": 63,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 145,
        "text": ",155,404 ￥991,626 ￥1,269,310   \nShippingandotherexpenses 1,368,794 1,432,014 1,587,902 1,683,795 1,594,568 1,388,264 1,513,736 1,094,915 1,035,771 911,055 1.117,405   \nSelingenndixs 90,885 92,946 100.458 116,024 115,330 113,551 115,972 101,442 95,852 85,674 96,899   \nOperating protit loss] (24,459] ",
        "id": 64,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 153,
        "text": " 85,674 96,899   \nOperating protit loss] (24,459] [15,766] 41,092 17,249 2,323 2,558 22,684 37,718 23,779 15,303] 55,005   \nOrdinary profitloss) [24,320] 128,568] 54,985 51,330 36,267 25,426 31,473 38,574 55,090 133,604 721,779   \n[33,516] [137,938] 71,710 58,332 [156,385] 23,303 (28,709] 46,778 67,",
        "id": 65,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 155,
        "text": "71,710 58,332 [156,385] 23,303 (28,709] 46,778 67,130 100,313 732,993   \nPrfib [26,009] [178,846] 57,393 42,356 [170,447] 5,257 [47,380] 26,875 32,623 90,052 708,819   \nFreecash fow[al•(bl] [129,298] [25,285] 125,615) [66,656] 182,508 [56,318] [2,471] (143,093] [6,527] 44,238 200,187   \nCashflowsfro",
        "id": 66,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 145,
        "text": "] (143,093] [6,527] 44,238 200,187   \nCashflowsfroopeatingcties 5,014 78,955 94,255 92,494 209,189 17,623 98,380 55,248 100.723 98,898 307,637   \nCshofroesinacivieb) [134,312] [104,240] 119,870] (159,150] [26,681] 173,9411 [100,851] 198,341] (107,250] [54,660] [107,450]   \nDepreciationandamortizatio",
        "id": 67,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 142,
        "text": "] [54,660] [107,450]   \nDepreciationandamortization 85,624 94,685 83,983 87,803 92,771 87,190 86,629 90,138 87,765 85,798 86,399   \nAt year-end   \nTotal assets V1,946,161 2,164,611 V2,364,695 ￥2,624,049 v2,219,587 V2,217,528 V2,225,096 V2,134,477 2,098,717 2,095,559 v2,686,701   \nTotaltangibleissets",
        "id": 68,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 152,
        "text": "98,717 2,095,559 v2,686,701   \nTotaltangibleissets 1,293,802 1,303,967 1,379,244 1,498,028 1,376,431 1,323,665 1,290,929 1,193,910 1,201,698 1,099,458 1,111,152   \nToaestetsnde 249,228 323,468 422,626 577,157 353,197 381,097 425.300 524,411 533,320 637,736 1,187,472   \nInterest-baringdebt 869,619 1,",
        "id": 69,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 148,
        "text": "37,736 1,187,472   \nInterest-baringdebt 869,619 1,046,865 1,094,081 1,183,401 1,044,980 1,122,400 1,118,089 1,105,873 1,096,685 1,026,994 1,000,697   \nNetassets 717,909 619,492 783,569 892,435 646,924 683,621 628,044 651,607 641,235 699,150 1,334,866   \nShareholders'equity 637,422 535,422 679,160 78",
        "id": 70,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 140,
        "text": "   \nShareholders'equity 637,422 535,422 679,160 782,556 540,951 571,983 511,242 525,064 513,335 577,782 1,274,570   \nAmounts per share of common stock   \nProitsstaeeYn] (72.53] V_1498.57] W 159.97 V118.07 V_[475.00] V 14.65 v(132.05] v 74.91 V 90.93 V250.99 V1,970.16   \nNet assetsYen] 1,777.57 1,492",
        "id": 71,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 162,
        "text": "V250.99 V1,970.16   \nNet assetsYen] 1,777.57 1,492.53 1,893.00 2,180.87 1,507.60 1,594.08 1,424.94 1,463.46 1,430.77 1,610.04 3,532.32   \nCashdividendsappicabletotheyear[Yen] 16.67 0.00 16.67 23.33 16.67 6.67 6.67 15.00 21.67 50.00 400.00   \nManagement indicators   \nGearing rati [Times] 1.36 1.96 1.",
        "id": 72,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 200,
        "text": "nt indicators   \nGearing rati [Times] 1.36 1.96 1.61 1.51 1.93 1.96 2.19 2.11 2.14 1.78 0.78   \nNet gearing atio Times] 1.23 1.58 1.35 1.35 1.64 1.64 1.82 1.88 1.94 1.63 0.71   \nEquityratio %) 32.8 24.7 28.7 29.8 24.4 25.8 23.0 24.6 24.5 27.6 47.6   \nROAI% [1.3] (1.4] 2.4 2.1 1.5 1.1 1.4 1.8 2.6 6.4",
        "id": 73,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 201,
        "text": "\nROAI% [1.3] (1.4] 2.4 2.1 1.5 1.1 1.4 1.8 2.6 6.4 30.2   \nROEI% (4.0] (30.5] 9.5 5.8 (25.8] 0.9 18.7] 5.2 6.3 16.5 76.5   \nDividendpayout atio [%] - - 10.4 19.8 - 45.5 - 20.0 23.8 19.9 20.3   \nCOemssonfMOLGoupeeTusndto 19,660 18,876 17,810 18.803 18.676 18,203 17.774 12,199 11,137 9,831 10,112   \nN",
        "id": 74,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 79,
        "text": ".676 18,203 17.774 12,199 11,137 9,831 10,112   \nNumberofMOLGroopemployees 9,631 9,665 10,289 10,508 10,500 10,794 10,828 8,941 8,931 8,571 8,547 ",
        "id": 75,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 11,
        "length_tokens": 18,
        "text": "有1500个不相关的token将纵向和横向表头隔开",
        "id": 76,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "表格序列化",
        "id": 77,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 12,
        "length_tokens": 11,
        "text": "Thinking: 大型表格理解的挑战？ ",
        "id": 78,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 12,
        "length_tokens": 135,
        "text": "理论上，大型表格会降低在向量搜索中chunk的相关性（同时，也存在表格不能完全装进一个chunk的情况）。  \n此外，LLM在处理大型表格时也很难将度量名称与表头对应起来，可能会返回错误的值。表格序列化（Serializationof tables）成为了解决方案。  \n关于这个主题的研究较少 $\\Rightarrow$ 需要独立探索，我们可以搜索 Row-wise Serialization（行式序列化）、Attribute-Value Pairing（属性-值对匹配），参考阅读https://arxiv.org/pdf/2402.17944",
        "id": 79,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 80,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 12,
        "length_tokens": 62,
        "text": "结论：作者在测试不同配置时，惊讶地发现我们对它寄予厚望的表格序列化功能不仅没有改进系统，反而略微降低了其有效性 $\\Rightarrow$ 所以实际使用上，并没有采用表格序列化的方法",
        "id": 81,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "表格序列化",
        "id": 82,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 13,
        "length_tokens": 82,
        "text": "Thinking：让LLM对表格数据进行理解，是采用Markdown格式，还是html格式？  \n我们以Markdown 格式向LLM输入表格，但后来改用HTML格式。  \n语言模型对 HTML的理解程度要高得多，而且HTML可以描述包含合并单元格、子标题和其他复杂结构的表格。序列化代码见：tables_serialization.py",
        "id": 83,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 9,
        "text": "内容提取 (ingestion）：分块",
        "id": 84,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 27,
        "text": "报告已从PDF转换为 $\\Rightarrow$ Markdown 文本 $\\Rightarrow$ 接下来，需要用它们来创建数据库。",
        "id": 85,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 56,
        "text": "根据比赛规则，必须指明包含相关信息的页码。企业系统也采用同样的方法：引用允许验证模型的答案是否是虚假信息（halucinated）。这不仅使系统对用户更透明，也简化了开发过程中的调试。",
        "id": 86,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 27,
        "text": "「hinking：如何对文档进行切分？使用一页作为一个chunk，还是300个token作为一个chunk?",
        "id": 87,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 24,
        "text": "最简单的选择是将文档的整页作为一个块，因为页面很少超过几干个token。",
        "id": 88,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 79,
        "text": "但让我们再次思考查询和文档文本块之间的语义连贯性。通常情况下，能回答问题的信息片段不超过十个句子。因此，从逻辑上讲，一个包含目标语句的小段落将比同样语句稀释在一整页相关性较弱的文本中获得更高的相似度得分。",
        "id": 89,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 24,
        "text": "$\\Rightarrow$ 将每页的文本分割成300个token（约15个句子）的块。",
        "id": 90,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 14,
        "length_tokens": 22,
        "text": "每个块都存储其ID 及其在元数据（metadata）中的父页面编号。",
        "id": 91,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "内容提取 (ingestion）：向量化",
        "id": 92,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 15,
        "length_tokens": 115,
        "text": "Thinking：如果我们有100家公司的文档，是创建一个Faiss数据库，还是100个Faiss数据库？100 个数据库，其中1个数据库 ${ \\bf \\varepsilon } = 1 \\$ 个文档。  \n为什么要将所有公司的信息混合在一起，之后再试图将一个公司的收入与另一个公司分开呢？$\\Rightarrow$ 基于公司为单位创建的Faiss数据库，结构更清晰  \n$\\Rightarrow$ 想看哪个公司的情况，就直接从该faiss库中进行检索",
        "id": 93,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "Faiss数据库使用IndexFlatIP方法创建.",
        "id": 94,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 15,
        "length_tokens": 50,
        "text": "Flat索引的优点是所有向量都\"原样\"存储，没有压缩或量化。搜索使用暴力搜索，精度更高。  \n缺点是这种搜索计算和内存消耗更高。",
        "id": 95,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 15,
        "length_tokens": 34,
        "text": "为了将块和查询嵌入到向量表示中，作者使用了text-embedding-3-large (这个需要根据需求，进行替换)",
        "id": 96,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "检索 (Retrieval) ",
        "id": 97,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 53,
        "text": "RAG系统中的R（检索）是一个通用的搜索系统，它接收查询作为输入，返回回答所需的相关文本。  \n在基础实现中，它只是对向量数据库发起查询，提取TopN个结果。",
        "id": 98,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 19,
        "text": "Thinking：Retrieval是RAG系统中的关键部分， 是否需要采用混合搜索？",
        "id": 99,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 48,
        "text": "如果LLM在查询上下文中没有接收到必要信息，它就无法提供正确答案 (无论我们如何精心设置提示词)垃圾进 $\\mid $ 垃圾出（Garbage in → Garbage out）。",
        "id": 100,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 10,
        "text": "常用的策略是：采用混合搜索",
        "id": 101,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 74,
        "text": "=> vDB + BM25混合搜索（Hybrid search），结合了基于向量语义和传统关键词的搜索（BM25算法）。  \n理论上，它通过不仅考虑文本语义，还考虑精确关键词匹配来提高检索准确性。  \n$\\Rightarrow$ 将两种方法的搜索结果合并，再进行重排序。",
        "id": 102,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "混合搜索理论上不错，但在它的基础实现中，它通常会降低检索质量而不是提高",
        "id": 103,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "重排序 (Reranking)",
        "id": 104,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 29,
        "text": "Jina Reranker是一款专为提升信息检索性能设计的神经网络重排序模型，尤其适用于RAG：",
        "id": 105,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 61,
        "text": "·细粒度语义分析：采用交叉编码器架构，对查询和文档进行联合编码，捕捉令牌级别的交互细节，弥补传统向量检索（如余弦相似度）在语义理解上的不足。",
        "id": 106,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 80,
        "text": "·多阶段检索优化：在向量检索初步召回候选文档后，对结果进行二次重排，提升Top-K结果的准确性。例如，在Llamalndex测试中，命中率提升 $7 . 9 \\%$ ，均值倒排率（MRR）提升 $3 3 . 7 \\%$ 。",
        "id": 107,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 37,
        "text": "·多语言支持：支持100多种语言，在MKQA基准测试中表现优于同类模型（如bge-reranker-v2-m3）24。",
        "id": 108,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 53,
        "text": "·Agentic RAG增强：集成函数调用和Text-to-SQL能力，可识别结构化数据查询意图（如MySQL/MongoDB），并为API调用生成相关性评分，扩展了RAG的应用场景。",
        "id": 109,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 51,
        "text": "·超快推理速度：通过Flash Attention 2技术优化，v2版本比前代快6倍，比竞品bge-reranker-v2-m3快15倍，参数量仅278M，兼顾效率与性能",
        "id": 110,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 17,
        "length_tokens": 30,
        "text": "Jina Reranker和bge-m3都是常用的Reranking模型，但在比赛中作者使用功了LLM重排序",
        "id": 111,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 11,
        "text": "LLM 重排序 (LLM reranking) ",
        "id": 112,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "Thinking: 如何实现LLM重排序？",
        "id": 113,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 58,
        "text": "system_prompt_rerank_single_block $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ （20你是一个RAG检索重排专家。你将收到一个查询和一个检索到的文本块，请根据其与查询的相关性进行评分。",
        "id": 114,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 3,
        "text": "评分说明：",
        "id": 115,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 168,
        "text": "1．推理：分析文本块与查询的关系，简要说明理由。  \n2．相关性分数（0-1，步长0.1）：$\\theta \\ =$ 完全无关$0 . 1 =$ 极弱相关$\\theta . 2 { \\it \\Delta \\phi } = { \\it \\Delta \\Psi }$ 很弱相关$0 . 3 =$ 略有相关$\\theta . 4 { \\ } = { \\ }$ 部分相关（2号 $0 . 5 =$ 一般相关$\\theta . 6 { \\it \\Delta \\phi } = { \\it \\Delta \\Psi }$ 较为相关（2 $0 . 7 ~ =$ 相关（2号 $\\theta . 8 \\ =$ 很相关（",
        "id": 116,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 82,
        "text": " }$ 较为相关（2 $0 . 7 ~ =$ 相关（2号 $\\theta . 8 \\ =$ 很相关（24 $\\theta . 9 \\ = \\$ 高度相关$\\mathbf { \\lambda } _ { 1 { \\mathbf { \\lambda } } } = \\mathbf { \\lambda } _ { \\mathbf { \\lambda } }$ 完全匹配",
        "id": 117,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 14,
        "text": "3．只基于内容客观评价，不做假设。",
        "id": 118,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 35,
        "text": "LLM查询结果进行格式化输出，包含两个字段：reasoning (让模型解释其判断) 和relevance_score, 可以直接从JSON中提取。",
        "id": 119,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 18,
        "length_tokens": 100,
        "text": "修正后的相关性得分，使用加权平均计算：  \nvector_weight $\\cdot$ ，llm_weight = 0.7  \n理论上，我们可以直接跳过向量搜索，将每一页都直接传递给LLM。然而，使用embedding进行更便宜、更快速的过滤仍然是必要的。  \n对于一份1000页的文档，仅仅回答一个问题就可能花费约25美分一一太昂贵了。",
        "id": 120,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 19,
        "length_tokens": 9,
        "text": "父页面检索(Parent Page Retrieval)",
        "id": 121,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 19,
        "length_tokens": 24,
        "text": "Thinking：我们之前将文本分割成小块chunk， 这里是否还需要引入其父节点？",
        "id": 122,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 19,
        "length_tokens": 112,
        "text": "虽然回答问题的核心信息通常集中在某个小块中（这也是分块能提升检索效果的原因），但同一页面的其他部分可能仍包含次要却重要的细节。  \n因此，在实际应用中，我们会先检索出TopN个最相关的文本块  \n$\\Rightarrow$ 这些块仅作为\"指针\"来定位对应的完整页面。  \n$\\Rightarrow$ 随后，我们会将整个页面的内容纳入上下文（context）中进行分析。",
        "id": 123,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 19,
        "length_tokens": 30,
        "text": "这就是为什么我们在每个块的元数据中记录其所属的页面编号一一以便快速回溯原始内容。",
        "id": 124,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 20,
        "length_tokens": 13,
        "text": "整合后的检索器(AssembledRetriever) ",
        "id": 125,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 126,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "最终检索器的步骤：",
        "id": 127,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 20,
        "length_tokens": 97,
        "text": "1)对查询进行向量化。  \n2)根据查询向量找到Top30个相关块。  \n3)通过块的元数据提取对应的页面（记得去重）。  \n4）通过LLM重排序器处理这些页面。  \n5）调整页面的相关性得分。  \n6）返回得分最高的Top10页，在每一页前面加上页码，并将它们合并成一个字符串。",
        "id": 128,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "增强 (Augmentation) ",
        "id": 129,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 21,
        "length_tokens": 47,
        "text": "目前为止，向量数据库已建立，RAG系统中的\"R”（检索）已完成，我们现在进入\"A”（增强）部分。  \n这部分相当直接，主要是f-string字符串拼接操作。",
        "id": 130,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 21,
        "length_tokens": 14,
        "text": "Thinking: 如何更有效的管理提示词存储的方式？",
        "id": 131,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 21,
        "length_tokens": 40,
        "text": "在项目中，尝试了不同方法后，最终确定：将提示词存储在一个专门的prompts.py文件中，并将提示词分割成逻辑块:",
        "id": 132,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 21,
        "length_tokens": 62,
        "text": "·核心系统指令;  \n·定义 LLM返回响应格式的 Pydantic schema;  \n·用于创建单次示例（one-shot）/少次示例（few-shot）提示词的问答对示例;  \n·用于插入上下文和查询的模板。",
        "id": 133,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "增强 (Augmentation) ",
        "id": 134,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "1.核心系统指令",
        "id": 135,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 22,
        "length_tokens": 24,
        "text": "告诉大模型\"你是谁、你要做什么、你要遵循哪些规则\"的主提示词。",
        "id": 136,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 22,
        "length_tokens": 54,
        "text": "class AnswerWithRAGContextSharedPrompt:instruction =!  \n你是一个RAG（检索增强生成）问答系统。  \n你的任务是仅基于公司年报中RAG检索到的相关页面内容，回答给定问题。",
        "id": 137,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 22,
        "length_tokens": 3,
        "text": "11= ",
        "id": 138,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 23,
        "length_tokens": 6,
        "text": "增强 (Augmentation) ",
        "id": 139,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 23,
        "length_tokens": 14,
        "text": "2.定义LLM返回响应格式的Pydanticschema ",
        "id": 140,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 23,
        "length_tokens": 33,
        "text": "用Pydantic的BaseModel定义LLM输出的 JSON格式，强制 LLM输出结构化内容，便于后续解析和校验。",
        "id": 141,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 23,
        "length_tokens": 15,
        "text": "Class Cuilipdi ativeAiiswer rrUipt. ",
        "id": 142,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 23,
        "length_tokens": 103,
        "text": "class AnswerSchema(BaseModel):step_by_step_analysis: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\ c =$ \"详细分步推理过程，至少5步，150字以上。\")reasoning_summary: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $= ^ { \\prime }$ \"简要总结推理过程，约50字。\")relevant_pages: List[int] $\\mathbf { \\tau ",
        "id": 143,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 23,
        "length_tokens": 85,
        "text": "，约50字。\")relevant_pages: List[int] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"保持为空列表。\")final_answer: Union[str, Literal[\"N/A\"]] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"公司名称需与问题中完全一致。答案只能是单个公司名或'N/A'。\")",
        "id": 144,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "增强 (Augmentation) ",
        "id": 145,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 24,
        "length_tokens": 58,
        "text": "3.用于创建单次示例 (one-shot）/少次示例 (few-shot) 提示词的问答对示例给LLM一个或几个\"问题-答案\"示例，帮助它学会输出你想要的格式和风格。",
        "id": 146,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 147,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 24,
        "length_tokens": 21,
        "text": "example $\\mathbf { \\tau } = \\mathbf { \\tau }$ r\"\"\"示例: ",
        "id": 148,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 24,
        "length_tokens": 33,
        "text": "问题：\"下列公司中，哪家2022年总资产最低：\"A公司\",\"B公司\",\"C公司\"？若无数据则排除。\"",
        "id": 149,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 24,
        "length_tokens": 39,
        "text": "答案:   \n{   \n\"step_by_step_analysis\":\".\",   \n\"reasoning_summary\": \"..\",   \n\"relevant_pages\": []   \n\"final_answer\":\"C公司'   \n} ",
        "id": 150,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 25,
        "length_tokens": 6,
        "text": "增强 (Augmentation) ",
        "id": 151,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "4.用于插入上下文和查询的模板",
        "id": 152,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 25,
        "length_tokens": 18,
        "text": "让LLM能够\"看到\"相关内容和问题，基于这些内容作答",
        "id": 153,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 25,
        "length_tokens": 30,
        "text": "user_prompt =  \n以下是上下文:  \n\\\"\\\"\\\"  \n{context}  \n\\\"\\\"\\\"  \n以下是问题：  \n\"{question}\"",
        "id": 154,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 25,
        "length_tokens": 37,
        "text": "prompts.py文件就是把所有和LLM交互相关的提示词、格式、示例、模板都集中管理，并且分成了四个逻辑块：",
        "id": 155,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 25,
        "length_tokens": 101,
        "text": "·系统指令：告诉LLM你是谁、你要干什么。  \n·Pydanticschema：告诉LLM输出什么格式。  \n·示例：给LLM看标准答案，学会怎么答。  \n·模板：动态插入上下文和问题，驱动实际问答。  \n这样做的好处是结构清晰、易于维护、可复用、易于扩展，也是当前主流LLM/RAG项目的最佳实践。",
        "id": 156,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 4,
        "text": "生成(Generation)",
        "id": 157,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 33,
        "text": "RAG 中的“G”(生成）是最耗费精力的。要在这一阶段实现高质量，需要巧妙地使用几种技术。",
        "id": 158,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 4,
        "text": "比赛场景:",
        "id": 159,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 48,
        "text": "·每家公司都设置了独立的向量数据库。  \n·问题中明确包含公司名，直接匹配即可定位数据库。  \n实际应用：可能需要LLM提取实体或打标签来匹配数据库。",
        "id": 160,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 17,
        "text": "比赛场景与实际应用中的处理理念是一样的，其核心逻辑：",
        "id": 161,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 25,
        "text": "1.提取公司名 $ 2$ ，匹配对应数据库 $ 3$ 仅搜索该库。",
        "id": 162,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 13,
        "text": "这样可将搜索范围缩小100倍，提升效率。",
        "id": 163,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "技术1： 将查询路由到数据库",
        "id": 165,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "生成(Generation)",
        "id": 166,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 33,
        "text": "比赛要求：答案必须简洁且严格匹配指定数据类型（如int/float/bool/str/list[str]），类似数据库存储格式.",
        "id": 167,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 3,
        "text": "挑战: ",
        "id": 168,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 27,
        "text": "·每种类型有3-6个细节需处理（如去除货币符号、单位换算等）。",
        "id": 169,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 21,
        "text": "·直接让LLM遵守所有规则不可靠：规则越多，出错概率越高",
        "id": 170,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 3,
        "text": "解决方案：",
        "id": 171,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 21,
        "text": "将复杂查询拆解为多个简单步骤， 减少单次请求的规则数量。例如：",
        "id": 172,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "·先提取原始数值；",
        "id": 173,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 10,
        "text": "·再单独处理货币单位转换 ",
        "id": 174,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 175,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "分步操作能显著提升准确性",
        "id": 176,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 10,
        "text": "技术2：将查询路由到提示词",
        "id": 177,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 27,
        "length_tokens": 28,
        "text": "核心思路：简化任务 $\\mid $ 降低LLM认知负荷 $$ 确保格式零错误 ",
        "id": 178,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "生成 (Generation)",
        "id": 179,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 28,
        "length_tokens": 40,
        "text": "在比赛中，由于每个问题的预期响应类型（如int/float/bool/str/list[str]）都是明确给定的，我们可以采用更直接的解决方案：",
        "id": 180,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 28,
        "length_tokens": 33,
        "text": "为每种数据类型预先设计了专门的提示词模板，然后通过简单的if-else逻辑来自动选择对应的提示词版本。",
        "id": 181,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 28,
        "length_tokens": 21,
        "text": "这种方法既保证了回答格式的精确性，又实现了高效的自动化处理。",
        "id": 182,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 183,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "技术3: 复合查询路由",
        "id": 184,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "生成(Generation)",
        "id": 185,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 19,
        "text": "在比赛中，处理涉及多家公司比较的复杂问题时，采用分步拆解",
        "id": 186,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 12,
        "text": "比如： 苹果和微软谁的营收更高？",
        "id": 187,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "1.问题拆解阶段",
        "id": 188,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 40,
        "text": "·首先由LLM将原始比较问题自动拆解为多个独立子问题·示例生成：\"苹果的营收是多少？\"和\"微软的营收是多少？\"",
        "id": 189,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "2.并行查询阶段",
        "id": 190,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "对每个子问题使用标准查询流程独立处理·分别获取各家公司的精确指标数据",
        "id": 191,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "3.综合判断阶段",
        "id": 192,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "·将收集到的各公司数据作为上下文·由LLM进行最终比较并生成答案",
        "id": 193,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 194,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "技术3：复合查询路由",
        "id": 195,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "这种模块化处理模式具有高度可扩展性，能够灵活应对各类复杂比较查询",
        "id": 196,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 30,
        "length_tokens": 12,
        "text": "思维链 (Chain of Thoughts, CoT) ",
        "id": 197,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 30,
        "length_tokens": 29,
        "text": "思维链（CoT）通过让模型在给出最终答案之前\"出声思考\"，显著提高了答案质量。",
        "id": 198,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 30,
        "length_tokens": 34,
        "text": "早期提示词工程中，“一步步思考”（Think stepby step）这类通用指令能提升答案质量，但对复杂任务仍不足。",
        "id": 199,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 30,
        "length_tokens": 25,
        "text": "尤其较弱模型 （如GPT-4o-mini、 Llama 8b) 常出现\"虚假推理",
        "id": 200,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "一一先给答案再倒推理由 甚至捏造事实 ",
        "id": 201,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 30,
        "length_tokens": 31,
        "text": "为了确保CoT的作用，我们必须清晰地引导模型如何进行推理。解释推理步骤、目标、并提供示例。",
        "id": 202,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 12,
        "text": "思维链 (Chain of Thoughts, CoT) ",
        "id": 203,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 13,
        "text": "带有模糊上下文的推理示例：",
        "id": 204,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 17,
        "text": "问题：Ritter Pharmaceuticals Inc.的研发设备 （按成本计）是多少？",
        "id": 205,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "模型的推理步骤：",
        "id": 206,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 58,
        "text": "1.问题询问 Riter Pharmaceuticals Inc.的\"研发设备，按成本计\"。这表明需要从资产负债表中提取一个特定数值，代表专门用于研发的设备的原始购置成本，不包含任何累计折旧。",
        "id": 207,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 61,
        "text": "2.上下文（第35页）显示\"不动产和设备，净额\"为12,500美元。这是一个净值（已扣除折旧），而且是一个更广泛的类别，包含所有不动产和设备，而不仅仅是研发设备。",
        "id": 208,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 53,
        "text": "3.上下文（第37页）还提到“机械和设备\"的\"累计折旧\"为110,000美元。这代表了总的折旧，而不是原始成本，更重要的是，它没有说明这些设备专门用于研发。",
        "id": 209,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 54,
        "text": "4.这两个指标都不完全符合请求的指标。“不动产和设备，净额\"范围太广，且是折旧后的价值。“累计折旧\"仅显示折旧，而非成本，并且缺乏研发的针对性。",
        "id": 210,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 31,
        "length_tokens": 29,
        "text": "由于上下文没有提供仅用于研发设备的原始成本，且我们无法进行假设、计算，因此答案是\"N/A\"。",
        "id": 211,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "结构化输出 (Structured outputs) ",
        "id": 212,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 32,
        "length_tokens": 57,
        "text": "结构化输出（Structured Output，SO） 是一种强制模型返回标准化格式（如JSON/Pydantic schema）的方法。通过API传递schema，确保输出始终符合预定结构。比如，这里是用于LLM重排序的Pydantic schema",
        "id": 213,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 32,
        "length_tokens": 29,
        "text": "有了这个schema，LLM总是会返回一个包含两个字段的JSON一一第一个是字符串，第二个是数字。",
        "id": 214,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 32,
        "length_tokens": 70,
        "text": "class RetrievalRankingSingleBlock(BaseModel): Rank retrieved text block relevance to a query.\"\" reasoning: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field( description=( \"Analysis of the block, identifying key information and how it\"   \n\"relates to the query\" ） ） relevance_score: float $\\mathbf { \\S",
        "id": 215,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 32,
        "length_tokens": 57,
        "text": "he query\" ） ） relevance_score: float $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ Field( description=( \"Relevance score from O to 1, where O is Completely Irrelevant \" \"and 1 is Perfectly Relevant\" ） ） ",
        "id": 216,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 33,
        "length_tokens": 13,
        "text": "CoT+SO （思维链+结构化输出）",
        "id": 217,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 33,
        "length_tokens": 18,
        "text": "思维链 $^ +$ 结构化输出可以理想地结合使用：",
        "id": 218,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 33,
        "length_tokens": 49,
        "text": "在生成阶段，模型有一个专门用于推理的字段，还有一个单独的字段用于最终答案 $\\Rightarrow$ 这样我们可以直接提取答案而无需从冗长的推理步骤中进行解析。",
        "id": 219,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 33,
        "length_tokens": 16,
        "text": "在用于回答比赛问题的主要schema中，设置了四个字段：",
        "id": 220,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 33,
        "length_tokens": 66,
        "text": "step_by_step_analysis：初步推理（思维链本身）。reasoning_summary：前一个字段的精简摘要（用于更轻松地跟踪模型的逻辑）。  \nrelevant_pages：答案引用的报告页码。  \n·final_answer：根据比赛要求格式化后的简洁答案",
        "id": 221,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "指令细化(Instruction Refinement ",
        "id": 222,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "Thinking: 什么是指令细化？",
        "id": 223,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 40,
        "text": "当A回答用户问题时，需要判断\"答案的灵活范围\"一一比如问\"CEO是谁\"，实际要包括哪些类似职位？ (如总裁、董事总经理等)",
        "id": 224,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 62,
        "text": "这种问题，在现实中经常遇到，而且现实数据不完美，即不同公司用不同头衔称呼老大 (美国叫cEO，英国可能叫MD)用户真正想知道的可能比字面意思更广 $\\Rightarrow$ 所以需要对instruction进行细化",
        "id": 225,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "Thinking: 指令细化的挑战是什么？",
        "id": 226,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 16,
        "text": "1.解释自由度：该把哪些边缘情况算作答案？",
        "id": 227,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 32,
        "text": "·硬标准：只认\"CEO\"字眼·软标准：包括相似职位（如总裁/MD），但要划定界限",
        "id": 228,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "2.如果没有找到答案，该如何处理：",
        "id": 229,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 34,
        "length_tokens": 30,
        "text": "比如：问\"股息政策有变吗？\"，若报告未提及，该回答\"无变更\"还是\"无信息\"？",
        "id": 230,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "指令细化(Instruction Refinement) ",
        "id": 231,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "解决方案：",
        "id": 232,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 17,
        "text": "提前与客户确定规则 (如\"接受MD作为CEO的答案吗？\")",
        "id": 233,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "·收集大量边缘案例测试系统",
        "id": 234,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 5,
        "text": "真实案例对比：",
        "id": 235,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "灵活回答 （适合开放问答）",
        "id": 236,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 23,
        "text": "\"Ethan Caldwell是董事总经理（最接近CEO的角色），但目前因调查暂停职务..\"",
        "id": 237,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 28,
        "text": "，严格回答 （适合简答比赛)需预先定义是否允许\"MD\\~CEO\"，否则可能输出错误简答",
        "id": 238,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 35,
        "length_tokens": 44,
        "text": "指令细化，这一部分的工作量与整个数据准备阶段不相上下，因为需要进行无止境的迭代调试、校对答案以及手动分析模型的推理过程。",
        "id": 239,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "提示词创建 (Prompt Creation)",
        "id": 240,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 36,
        "length_tokens": 43,
        "text": "仕比赛前一同，作者团队利用公开的问题生成器快迷创建了IUU不问题的验证集，开通过于动凹台这些问题狄侍了两个重要收益:",
        "id": 241,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 36,
        "length_tokens": 110,
        "text": "·量化改进：验证集成为客观衡量系统性能的标准，通过统计正确率和错误模式，能精准优化提示词和流程。  \n·发现隐性规则：手动分析暴露了问题中隐藏的细节和歧义，促使团队与专家（Rinat）确认回答规范，并将这些规则明确写入提示词指令中。  \n最终，这些洞察被系统化地整合到提示词设计中，形成更严谨的指令框架。",
        "id": 242,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 37,
        "length_tokens": 24,
        "text": "在Prompt.py中有多种prompt，代表不同的任务说明、结构化输出要求和示例，比如：",
        "id": 243,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 37,
        "length_tokens": 36,
        "text": "boolean：要求输出是/否，并分步推理number：要求输出数值，并分步推理name：要求输出实体名names：要求输出实体名列表",
        "id": 244,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 37,
        "length_tokens": 103,
        "text": "这些prompt直接决定了LLM的回答风格和结构。  \n在主流程（如api_requests.py）中，处理每个问题时会读取 kind字段，然后根据 kind选择不同的prompt模板，比如：kind: \"boolean\" $$ 用 AnswerWithRAGContextBooleanPrompt  \nkind: \"number\" $$ 用 AnswerWithRAGContextNumberPrompt  \nkind: \"name\" $$ 用 AnswerWithRAGContextNamePrompt  \nkind: \"names\" $$ 用 AnswerWithRAGContextNa",
        "id": 245,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 37,
        "length_tokens": 16,
        "text": "Prompt  \nkind: \"names\" $$ 用 AnswerWithRAGContextNamesPrompt",
        "id": 246,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "Prompt.py 实现 ",
        "id": 247,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "class AnswerWithRAGContextBooleanPrompt: ",
        "id": 248,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 56,
        "text": "instruction $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.instruction user_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.user_prompt class AnswerSchema(BaseModel): ",
        "id": 249,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 71,
        "text": "step_by_step_analysis: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"\"详细分步推理过程，至少5步，150字以上。特别注意问题措辞，避免被迷惑。有时上下文中看似有答案，但可能并非所问内容，仅为相似项。\\`)",
        "id": 250,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 42,
        "text": "reasoning_summary: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\mid =$ “简要总结分步推理过 程，约50字。\") ",
        "id": 251,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 86,
        "text": "relevant_pages: List[int] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\ c =$ \\\\仅包含直接用于回答问题的信息页面编号。只包括：-直接包含答案或明确陈述的页面-强有力支持答案的关键信息页面不要包含仅与答案弱相关或间接相关的页面。列表中至少应有一个页面。\"\\`)",
        "id": 252,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 69,
        "text": "final_answer: Union[bool] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\ c =$ \"\\个从上下文中精确提取的布尔值（True或False），直接回答问题。如果问题问某事是否发生，且上下文有相关信息但未发生，则返回False.",
        "id": 253,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "\\* ",
        "id": 254,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 45,
        "text": "pydantic_schema $\\mathbf { \\tau } = \\mathbf { \\tau }$ re.sub(r\"^ {4}\",\"\" inspect.getsource(AnswerSchema), flags $\\ c =$ re.MULTILINE) ",
        "id": 255,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 18,
        "text": "example $\\mathbf { \\tau } = \\mathbf { \\tau }$ r\" ",
        "id": 256,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 2,
        "text": "问题：",
        "id": 257,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 19,
        "text": "\"万科企业股份有限公司'年报是否宣布了分红政策变更？\"",
        "id": 258,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 7,
        "text": "答案:   \n\\   \n{ ",
        "id": 259,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 79,
        "text": "\"step_by_step_analysis\":\"1.问题询问是否有分红政策变更。\\n2.年报12、18页提到年度分红金额增加，但政策未变。\\n3.45页有分红细节。\\n4.持续小幅增长，符合既定政策。\\n5.问题问的是政策变更，非金额变化。\",",
        "id": 260,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 23,
        "text": "\"reasoning_summary\":\"年报显示分红金额变化但政策未变，答案为 False。\", ",
        "id": 261,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 15,
        "text": "\"relevant_pages\": [12, 18, 45], ",
        "id": 262,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 38,
        "length_tokens": 7,
        "text": "\"final_answer\": false + ",
        "id": 263,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 5,
        "text": "Prompt.py 实现 ",
        "id": 264,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 10,
        "text": "class AnswerWithRAGContextNumberPrompt: ",
        "id": 265,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 56,
        "text": "instruction $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.instruction user_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.user_prompt class AnswerSchema(BaseModel): ",
        "id": 266,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 50,
        "text": "step_by_step_analysis: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description='详细分步推理过程，至少5步，150字以上。\\*\\*严格的指标匹配要求：\\*\\*",
        "id": 267,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 75,
        "text": "1.明确问题中指标的精确定义，它实际衡量什么？  \n2.检查上下文中的所有可能指标。不要只看名称，要关注其实际衡量内容。  \n3.仅当上下文指标的含义与目标指标\\*完全一致\\*时才接受。可接受同义词，但概念不同则不可。",
        "id": 268,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 14,
        "text": "4.拒绝（并返回'N/A'）的情况:",
        "id": 269,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 74,
        "text": "-上下文指标范围大于或小于问题指标。-上下文指标为相关但非\\*完全等价\\*的概念 (如代理指标或更宽泛类别）。-需要计算、推导或推断才能作答。-聚合不匹配：问题要求单一值，但上下文仅有总计。",
        "id": 270,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 26,
        "text": "5.不允许猜测：如对指标等价性有任何疑问，默认返回\\`N/A。\"\")",
        "id": 271,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 55,
        "text": "reasoning_summary: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\mathbf { \\alpha } = \\mathbf { \\alpha } ^ { \\prime }$ 简要总结分步推理过程 约50字。\") ",
        "id": 272,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 82,
        "text": "relevant_pages: List[int] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"\"\"仅包含直接用于回答问题的信息页面编号。只包括：·直接包含答案或明确陈述的页面-强有力支持答案的关键信息页面不要包含仅与答案弱相关或间接相关的页面。列表中至少应有一个页面。\")",
        "id": 273,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 45,
        "text": "final_answer: Union[float, int, Literal['N/A']] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\" 答案应为精确的数值型指标。 ",
        "id": 274,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 39,
        "length_tokens": 27,
        "text": "-百分比示例：上下文值： $5 8 , 3 \\%$ 最终答案：58.3",
        "id": 275,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "Prompt.py 实现 ",
        "id": 276,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 10,
        "text": "class AnswerWithRAGContextNamePrompt: ",
        "id": 277,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 50,
        "text": "instruction $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.instruction user_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.user_prompt ",
        "id": 278,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "class AnswerSchema(BaseModel): ",
        "id": 279,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 56,
        "text": "step_by_step_analysis:str= Field(description=\"详细分步推理过程至少5步，150字以上。特别注意问题措辞，避免被迷惑。有时上下文中看似有答案，但可能并非所问内容，仅为相似项。\")",
        "id": 280,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 53,
        "text": "reasoning_summary: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ “简要总结分步推理过 程，约50字。\") ",
        "id": 281,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 81,
        "text": "relevant_pages: List[int] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"\"\"仅包含直接用于回答问题的信息页面编号。只包括：-直接包含答案或明确陈述的页面-强有力支持答案的关键信息页面不要包含仅与答案弱相关或间接相关的页面。列表中至少应有一个页面。",
        "id": 282,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 40,
        "length_tokens": 93,
        "text": "final_answer: Union[str, Literal[\"N/A\"]] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"\"\"如为公司名，需与问题中完全一致。  \n如为人名，需为全名。  \n如为产品名，需与上下文完全一致。  \n不得包含多余信息、词语或注释。  \n如上下文无相关信息，返回'N/A'。  \n\"\")",
        "id": 283,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 5,
        "text": "Prompt.py 实现 ",
        "id": 284,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 10,
        "text": "class AnswerWithRAGContextNamesPrompt: ",
        "id": 285,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 25,
        "text": "instruction $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.instruction ",
        "id": 286,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 26,
        "text": "user_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ AnswerWithRAGContextSharedPrompt.user_prompt ",
        "id": 287,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 7,
        "text": "class AnswerSchema(BaseModel): ",
        "id": 288,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 18,
        "text": "\"\"RAG上下文下多实体/名单类答案的结构定义。 11",
        "id": 289,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 49,
        "text": "step_by_step_analysis: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"详细分步推理过程至少5步，150字以上。注意区分实体类型，避免被迷惑。\")",
        "id": 290,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 38,
        "text": "reasoning_summary: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description $\\mid =$ “简要总结推理过程 约50字。\") ",
        "id": 291,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 26,
        "text": "relevant_pages: List[int] $\\mathbf { \\tau } = \\mathbf { \\tau }$ Field(description=\"!\" ",
        "id": 292,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "仅包含直接用于回答问题的页面编号。只包括：",
        "id": 293,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 22,
        "text": "-直接包含答案或明确陈述的页面-强有力支持答案的关键信息页面",
        "id": 294,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 14,
        "text": "不要包含仅与答案弱相关或间接相关的页面。",
        "id": 295,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "列表中至少应有一个页面。",
        "id": 296,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 40,
        "text": "final_answer: Union[List[str], Literal[\"N/A\"]] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Field(description=\"\"每个条目需与上下文完全一致。",
        "id": 297,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 52,
        "text": "如问题问职位（如职位变动），仅返回职位名称，不含姓名或其他信息。新任高管也算作职位变动。若同一职位有多次变动，仅返回一次，且职位名称用单数。",
        "id": 298,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 16,
        "text": "示例：['首席技术官,董事','首席执行官']",
        "id": 299,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 12,
        "text": "如问题问姓名，仅返回上下文中的全名。",
        "id": 300,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 12,
        "text": "示例：['张三，'李四'] ",
        "id": 301,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 25,
        "text": "如问题问新产品，仅返回上下文中的产品名。候选产品或测试阶段产品不算新产品。",
        "id": 302,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 14,
        "text": "示例：['生态智能2000','绿能Pro'] ",
        "id": 303,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "如无信息，返回'N/A'。",
        "id": 304,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "对应kind $\\circleddash$ \"names\"的prompt ",
        "id": 305,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "RAG系统调参",
        "id": 306,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 18,
        "text": "拥有一个验证集不仅帮助改进了提示词，也使整个系统受益。",
        "id": 307,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 30,
        "text": "我们将所有关键功能配置化，以便衡量它们的实际效果并微调超参数。以下是一些示例配置字段：",
        "id": 308,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "class RunConfig: ",
        "id": 309,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 97,
        "text": "#运行流程参数配置   \nuse_serialized_tables: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ False   \nparent_document_retrieval: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ False   \nuse_vector_dbs: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ True   \nuse_bm25_db: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ False   \nI",
        "id": 310,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 114,
        "text": "l $\\mathbf { \\tau } = \\mathbf { \\tau }$ False   \nIlm_reranking: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ False   \nIlm_reranking_sample_size: int $= 3 0$ （2号   \ntop_n_retrieval: int $= 1 0$   \nparallel_requests: int $= 1 \\#$ 并行的数量，需要限制，否则qwen-turbo会超出阈值   \npipeline_details: str = \"   \nsubmission_fi",
        "id": 311,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 94,
        "text": "超出阈值   \npipeline_details: str = \"   \nsubmission_file: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ True   \nfull_context: bool $\\mathbf { \\tau } = \\mathbf { \\tau }$ False   \napi_provider: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"dashscope\" #openai   \nanswering_model: str $\\mathbf { \\tau } = \\mathbf {",
        "id": 312,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 36,
        "text": "answering_model: str $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"qwen-turbo-latest\"   \nconfig_suffix: str = \\*\" ",
        "id": 313,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 42,
        "length_tokens": 42,
        "text": "通过配置不同的RAG超参数，惊讶地发现：原来被寄予厚望的表格序列化，不仅没有改进系统，反而降低了有效性。",
        "id": 314,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 43,
        "length_tokens": 39,
        "text": "统化方法胜于“神奇方案\"：成功并非依赖单一突破性技术，而是通过系统化的流程优化，结合并精细调整多种技术。",
        "id": 315,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 43,
        "length_tokens": 5,
        "text": "这些关键因素包括：",
        "id": 316,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 43,
        "length_tokens": 99,
        "text": "·高质量解析：确保数据预处理精准、结构化。  \n·高效检索：优化检索效率与准确性。  \n·智能路由：动态分配查询到最合适的处理模块。  \n·LLM重排序：利用大语言模型对检索结果重新排序，显著提升相关性。  \n·提示词设计：精心设计的提示词（prompt engineering）使紧凑模型也能发挥出色性能。",
        "id": 317,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 43,
        "length_tokens": 58,
        "text": "RAG的优化是一个精细化工程问题，RAG问答结果高度依赖对任务细节的深入理解，通过精准微调每个环节（解析、检索、路由、排序等），即使简单技术也能实现显著效果。",
        "id": 318,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 44,
        "length_tokens": 7,
        "text": "打卡： RAG-Challenge",
        "id": 319,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 44,
        "length_tokens": 13,
        "text": "跑通RAG-Challenge，并整理阅读笔记，包括：",
        "id": 320,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 44,
        "length_tokens": 96,
        "text": "系统性理解RAG_Challenge中的模块：高质量解析，高效检索，智能路由，LLM重序，提示词设计  \n对代码实现进行理解，包括src文件夹下面的核心实现：api_request_parallel_processor.py， api_requests.py,ingestion.py,parsed_reports_merging.py, pdf_parsing.py, pipeline.py, prompts.py,questions_processing.py, reranking.py,retrieval.py, tables_serialization.py,text_splitter.",
        "id": 321,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 44,
        "length_tokens": 13,
        "text": "trieval.py, tables_serialization.py,text_splitter.pyI",
        "id": 322,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 44,
        "length_tokens": 27,
        "text": "阅读笔记的字数任意（可以是200-500字），找到你认为有价值的部分进行理解和整理",
        "id": 323,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "CASE：打造自己的RAG系统",
        "id": 324,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 189,
        "text": "TO DO：运行RAG-Challenge-2， 并打造自己的RAG系统  \n打造知识库，将多份投研报告存放到  \ndata/stock_data/pdf_reports中  \n【财报】中芯国际：中芯国际2024年年度报告  \n【东方证券】产能利用率提升，持续推进工艺迭代和产品性能升级  \n【光大证券】中芯国际2025年一季度业绩点评：1Q突发生产问题，2Q业绩有望筑底，自主可控趋势不改  \n【国信证券】工业与汽车触底反弹，良率影响短期营收  \n【华泰证券】中芯国际（688981）：上调港股目标价到63港币，看好DeepSeek推动代工需求强劲增长  \n【上海证券】中芯国际深度研究报告：晶圆制",
        "id": 325,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 104,
        "text": "价到63港币，看好DeepSeek推动代工需求强劲增长  \n【上海证券】中芯国际深度研究报告：晶圆制造龙头，领航国产芯片新征程  \n【兴证国际】季度盈利低于预期，看好国产芯片长期空间  \n【中原证券】产能利用率显著提升，持续推进工艺迭代升级——中芯国际(688981)季报点评  \n中芯国际机构调研纪要",
        "id": 326,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 327,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "针对知识库进行提问，比如：",
        "id": 328,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 117,
        "text": "·中芯国际在晶圆制造行业中的地位如何？其服务范围和全球布局是怎样的？  \n·半导体行业有哪些关键特性，这些特性如何助力中芯国际发展？  \n·中芯国际的营收和利润情况近期有何变化？影响因素是什么？  \n·中芯国际的收入结构有何变化？尤其是在中国大陆和北美市场的表现如何？  \n·美国对中国半导体产业的限制政策对中芯国际有何影响？中芯国际如何应对？",
        "id": 329,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 45,
        "length_tokens": 10,
        "text": "存放到 data/stock_data/questions.json 中",
        "id": 330,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 46,
        "length_tokens": 7,
        "text": "CASE：打造自己的RAG系统",
        "id": 331,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 46,
        "length_tokens": 101,
        "text": "Step1，跑通RAG-Challenge-2   \npython -m src.pipeline   \nStep2，简化Markdown生成   \n原有的pipeline中的处理过程复杂，对其进行简化   \n1.解析PDF报告为结构化JSON 改写 pipeline.export_reports_to_markdown()   \npipeline.parse_pdf_reports_sequential() 编写pdf_mineru.py，通过mineru进行文档解析   \n2.序列化表格 from src import pdf_mineru   \npipeline.serialize_ta",
        "id": 332,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 46,
        "length_tokens": 99,
        "text": "rom src import pdf_mineru   \npipeline.serialize_tables(max_worker $: = 5$ ） task_id $\\mathbf { \\tau } = \\mathbf { \\tau }$ pdf_mineru.get_task_id(file_name)   \n3.将解析后的JSON规整为更简单的每页markdown结构 print(f\"task_id: {task_id}\")   \npipeline.merge_reports() pdf_mineru.get_result(task_id)   \n4.导出规整后报告为纯markdown",
        "id": 333,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 46,
        "length_tokens": 30,
        "text": "_mineru.get_result(task_id)   \n4.导出规整后报告为纯markdown文本   \npipeline.export_reports_to_markdown() ",
        "id": 334,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 46,
        "length_tokens": 0,
        "text": "",
        "id": 335,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (mineru解析)",
        "id": 336,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 81,
        "text": "import requests   \nimport time   \nimport zipfile   \napi_key $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '你的api_key'   \nres $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.post(url,headers $\\ c =$ header,json=data)   \nprint(res.status_code)   \nprint(res.json())   \nprint(res.json()[\"data\"])   \ntask_id $\\",
        "id": 337,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 40,
        "text": "json())   \nprint(res.json()[\"data\"])   \ntask_id $\\mathbf { \\tau } = \\mathbf { \\tau }$ res.json()[\"data\"]['task_id']   \nreturn task_id ",
        "id": 338,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 339,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 88,
        "text": "def get_task_id(file_name): url='https://mineru.net/api/v4/extract/task' header = { 'Content-Type':'application/json', \"Authorization\":f\"Bearer {api_key}\".format(api_key) } pdf_url $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'https://vl-image.oss-cn-shanghai.aliyuncs.com/pdf/' $^ +$ file_name data ={ 'url",
        "id": 340,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 36,
        "text": "ai.aliyuncs.com/pdf/' $^ +$ file_name data ={ 'url':pdf_url, 'is_ocr':True, 'enable_formula': False, } ",
        "id": 341,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 47,
        "length_tokens": 21,
        "text": "替换自己的API KEY将文件上传到url中，或使用本地的mineru进行解析",
        "id": 342,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (mineru解析）",
        "id": 343,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 86,
        "text": "def get_result(task_id): url $\\mathbf { \\tau } = \\mathbf { \\tau }$ f'https://mineru.net/api/v4/extract/task/{task_id}' header = { 'Content-Type':'application/json', \"Authorization\":f\"Bearer {api_key}\".format(api_key) } while True: res $\\mathbf { \\tau } = \\mathbf { \\tau }$ requests.get(url, headers $",
        "id": 344,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 99,
        "text": " } = \\mathbf { \\tau }$ requests.get(url, headers $\\ v { r } = \\ v { r }$ header) result $\\mathbf { \\tau } = \\mathbf { \\tau }$ res.json()[\"data\"] print(result) state $\\mathbf { \\tau } = \\mathbf { \\tau }$ result.get('state') err_msg $\\mathbf { \\tau } = \\mathbf { \\tau }$ result.get('err_msg',\") #如果任务还在",
        "id": 345,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 55,
        "text": " \\mathbf { \\tau }$ result.get('err_msg',\") #如果任务还在进行中，等待后重试 if state in ['pending','running']: print(\"任务未完成，等待5秒后重试...\") time.sleep(5) continue ",
        "id": 346,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 111,
        "text": "#如果有错误，输出错误信息if err_msg:print(f\"任务出错: {err_msg}\")return# 如果任务完成，下载文件if state $\\mathbf { \\omega } = { ' } \\mathsf { d o n e } ^ { \\prime }$ ：：full_zip_url $\\mathbf { \\tau } = \\mathbf { \\tau }$ result.get('full_zip_url')if full_zip_url:local_filename $\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"{task_id}.z",
        "id": 347,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 99,
        "text": "\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"{task_id}.zip\"print(f\"开始下载: {full_zip_url}\")$\\boldsymbol { \\mathsf { r } } =$ requests.get(full_zip_url, stream $\\mid =$ True)with open(local_filename,'wb') as f:for chunk in r.iter_content(chunk_size $\\ c =$ 8192):if chunk:f.write(chunk)print(f\"下载完成，已保存到: {loc",
        "id": 348,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 48,
        "length_tokens": 22,
        "text": "92):if chunk:f.write(chunk)print(f\"下载完成，已保存到: {local_filename}\")",
        "id": 349,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 49,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (mineru解析)",
        "id": 350,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 49,
        "length_tokens": 63,
        "text": "if extract_dir is None: extract_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ zip_path.rstrip('.zip') with zipfile.ZipFile(zip_path,'r') as zip_ref: zip_ref.extractall(extract_dir) print(f\"已解压到: {extract_dir}\") ",
        "id": 351,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 49,
        "length_tokens": 118,
        "text": "#下载完成后自动解压unzip_file(local_filename)else:print(\"未找到full_zip_url，无法下载。\")return# 其他未知状态print(f\"未知状态: {state}\")return  \n#解压zip文件的函数  \ndef unzip_file(zip_path,extract_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ None):三-解压指定的zip文件到目标文件夹。:param zip_path:zip文件路径:paramextract_dir:解压目标文件夹，默认为zip同名目录\\\\`",
        "id": 352,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 49,
        "length_tokens": 11,
        "text": "if__name $\\scriptstyle = =$ 中 main ",
        "id": 353,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 49,
        "length_tokens": 78,
        "text": "file_name $\\mathbf { \\zeta } = \\mathbf { \\zeta } ^ { \\prime }$ 【财报】中芯国际：中芯国际2024年年度报告.pdf  \ntask_id $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_task_id(file_name)  \nprint('task_id:',task_id)  \nget_result(task_id)",
        "id": 354,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (text_splitter)",
        "id": 355,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 38,
        "text": "Step3，对Markdown进行切分 原代码是对json进行切分，保存到 test_set/databases/chunked_reports中 #对 json文件分块，输出还是json ",
        "id": 356,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 357,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 358,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 359,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 42,
        "text": "def split_all_reports(self, all_report_dir: Path, output_dir: Path, serialized_tables_dir: Optional[Path] $\\mathbf { \\tau } = \\mathbf { \\tau }$ None): ",
        "id": 360,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 2,
        "text": "= ",
        "id": 361,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 25,
        "text": "批量处理目录下所有报告（json文件），对每个报告进行文本分块，并输出到目标目录。",
        "id": 362,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 26,
        "text": "如果提供了序列化表格目录，会尝试将表格内容插入到对应页面的分块中。",
        "id": 363,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 14,
        "text": "主要用于后续向量化和检索的预处理。",
        "id": 364,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 2,
        "text": "参数：",
        "id": 365,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 110,
        "text": "all_report_dir:存放待处理报告json的目录 output_dir:分块后输出的目标目录 serialized_tables_dir:（可选）存放序列化表格的目录 'content\":{ \"chunks\":[ 了 \"page\":1, \"length_tokens\": 6, \"text\": \"# Annual Report\\n\\n2022\" \"id\":0, \"type\":\"content\" }, { \"page\":2, \"length_tokens\": 129, \"text\": \"# Table of Contents\\n\\n\\nl Management's Discussion ",
        "id": 366,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 57,
        "text": " Table of Contents\\n\\n\\nl Management's Discussion and Analy \"id\":1, \"type\":\"content\" }, { \"page\":3, \"length_tokens\": 10, \"text\": \"# Message to Shareholders\\n\\nDear Shareholders,' \"id\":2, ",
        "id": 367,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 368,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (text_splitter)",
        "id": 369,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 105,
        "text": "对text_splitter.py进行改写 添加 split_markdown_reports 和 split_markdown_file 函数split_markdown_reports(all_md_dir: Path, output_dir: Path,chunk_size: int $= 3 0$ , chunk_overlap: int $= 5$ , subset_csv: Path $\\mathbf { \\tau } = \\mathbf { \\tau }$ None)'-作用：批量处理目录下所有markdown文件，分块并输出为json文件到目标目录。支持通过subset.csv",
        "id": 370,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 33,
        "text": "处理目录下所有markdown文件，分块并输出为json文件到目标目录。支持通过subset.csv补充公司名、sha1等元信息。",
        "id": 371,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 372,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 373,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 4,
        "text": "-参数: ",
        "id": 374,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 56,
        "text": "all_md_dir--md文件目录;  \noutput_dir--输出目录;  \nchunk_size一一每块最大行数;  \nchunk_overlap一一分块重叠行数;  \nsubset_csv一一可选，文件名到公司名映射表。",
        "id": 375,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 13,
        "text": "·返回：无，直接输出分块结果到文件。",
        "id": 376,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 39,
        "text": "split_markdown_file(md_path: Path, chunk_size: int $= 3 0$ chunk_overlap: int $= 5$ ） $- >$ List[Dict]' ",
        "id": 377,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 32,
        "text": "-作用：按行分割markdown文件，每个分块记录起止行号和内容，适合处理结构化较强的md文本。",
        "id": 378,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 51,
        "length_tokens": 43,
        "text": "-参数:md_path--markdown文件路径;  \nchunk_size一一每块最大行数;  \nchunk_overlap一一分块重叠行数。  \n-返回：分块内容列表。",
        "id": 379,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 52,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (text_splitter)",
        "id": 380,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 52,
        "length_tokens": 148,
        "text": "\"metainfo\":{\"sha1\": \"stock_10001\"\"company_name\"：\"中芯国际\",\"file_name\"：\"【财报】中芯国际：中芯国际2024年年度报告.md\"  \n}，  \n\"content\":{\"chunks\":[{\"lines\":[1,30],\"text\"：\"# 中芯国际集成电路制造有限公司2024 年年度报告 \\n\\n# 重要提示}，{\"lines\":[26,55],\"text\"：\"\\nv适用□不适用 \\n公司治理特殊安排情况： \\nv本公司为红筹企业  \n\\$\"lines\":[51,80],\"text\"：“第三节 公司简介和主要财务指标．>\\n第四节 管理",
        "id": 381,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 52,
        "length_tokens": 117,
        "text": "$\"lines\":[51,80],\"text\"：“第三节 公司简介和主要财务指标．>\\n第四节 管理层讨论与分析．12  \n}，  \n{\"lines\":[76,1051,\"text\"：\"尊敬的各位股东、投资人： \\n\\n2024年是中芯国际推动高质量发展取得亲  \n}，  \n{\"lines\":[101,130],\"text\"：\"# 三、信息披露及备置地点 \\n\\n<html><body><table><tr><td>公司迭  \n},",
        "id": 382,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 383,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 52,
        "length_tokens": 31,
        "text": "在pipeline.chunk_reports()中调用了text_splitter.split_markdown_reports，对文档进行了切分保存到 stock_data/databases/chunked_reports",
        "id": 384,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (kind=string)",
        "id": 385,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 20,
        "text": "Thinking:针对kind=string的问题 如何实现? 添加 AnswerWithRAGContextStringPrompt 功能",
        "id": 386,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 69,
        "text": "帮我查找，程序中实现了  \nAnswerWithRAGContextNumberPrompt  \nAnswerWithRAGContextBooleanPrompt  \nAnswerWithRAGContextNamesPrompt  \nComparativeAnswerPrompt  \n在理解这些实现的基础上，我想实现一个  \nAnswerWithRAGContextStringPrompt，即开放性的问题，回答的是  \n一段文本",
        "id": 387,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 74,
        "text": "Searched and read prompts.pyprompts.py +42 √class AnswerWithRAGContextStringPrompt :instruction $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ AnswerWithRAGContextSharedPrompt.instructionuser_prompt $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ AnswerWithRAGContextSharedPrompt.user_promptclass AnswerSchema",
        "id": 388,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 100,
        "text": "GContextSharedPrompt.user_promptclass AnswerSchema(BaseModel):step_by_step_analysis: str $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ Field(description=\"\"\"详细分步推理过程，至少5步，150字以上。请结合上下文信息，逐步分析并归纳答案。mmnreasoning_summary: str $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ Field(description=\"简要总结分步推理过程，约relev",
        "id": 389,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 128,
        "text": " { \\lambda }$ Field(description=\"简要总结分步推理过程，约relevant_pages: List[int] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Field(description=\"\"仅包含直接用于回答问题的信息页面编号。只包括：直接包含答案或明确陈述的页面强有力支持答案的关键信息页面 V已为你新增 AnswerWithRAGContextStringPrompt，实现方式与现有的Number/Boolean/NamesPrompt保持一致，支持开放性文本问题，输出为一段完整文本。注释、字段说明和示例均为中文，便",
        "id": 390,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 53,
        "length_tokens": 63,
        "text": "mesPrompt保持一致，支持开放性文本问题，输出为一段完整文本。注释、字段说明和示例均为中文，便于直接用于RAG场景下的自由文本问答。如需在API或调用链中集成此Prompt，请告知具体调用点！",
        "id": 391,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (kind=string)",
        "id": 392,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 33,
        "text": "example = r''  \n示例：  \n问题：  \n“请简要总结'万科企业股份有限公司'2022年主营业务的主要内容。",
        "id": 393,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 3,
        "text": "答案: ",
        "id": 394,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 71,
        "text": "class AnswerWithRAGContextStringPrompt:instruction $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ AnswerWithRAGContextSharedPrompt.instructionuser_prompt $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ AnswerWithRAGContextSharedPrompt.user_promptclass AnswerSchema(BaseModel):step_by_step_analysis:str $\\mat",
        "id": 395,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 106,
        "text": "rSchema(BaseModel):step_by_step_analysis:str $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ Field(description=\"\"\"  \n详细分步推理过程，至少5步，150字以上。请结合上下文信息，逐步分析并归纳答案。reasoning_summary:str $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Field(description=\"简要总结分步推理过程，约50字。\")relevant_pages: List[int] $\\mathbf { \\sigma } ",
        "id": 396,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 125,
        "text": "字。\")relevant_pages: List[int] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Field(description=\"\"\"  \n仅包含直接用于回答问题的信息页面编号。只包括：  \n·直接包含答案或明确陈述的页面  \n-强有力支持答案的关键信息页面  \n不要包含仅与答案弱相关或间接相关的页面。  \n列表中至少应有一个页面。  \n\"\")final_answer:str $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ Field(description=\"\"\"  \n最终答案为一段完整、连贯的文本，",
        "id": 397,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 128,
        "text": "lambda }$ Field(description=\"\"\"  \n最终答案为一段完整、连贯的文本，需基于上下文内容作答。  \n如上下文无相关信息，可简要说明未找到答案。  \n11111pydantic_schema $\\mathbf { \\tau } = \\mathbf { \\tau }$ re.sub $( r \" \\wedge$ {4}\"，\"\",inspect.getsource(AnswerSchema)，flags=re.MULTILINE)  \nY\"step_by_step_analysis\"：\"1．问题要求总结2022年万科企业股份有限公司的主营业务。\\n2．年报第10-12页\"",
        "id": 398,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 127,
        "text": "ysis\"：\"1．问题要求总结2022年万科企业股份有限公司的主营业务。\\n2．年报第10-12页\"reasoning_summary\"：\"年报10-12页明确列出主营业务，答案基于原文归纳。\",\"relevant_pages\": [10,11,12],\"final_answer\"：\"万科企业股份有限公司2022年主营业务包括房地产开发、物业服务、租赁住房、物流仓储等，  \n}system_prompt $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ build_system_prompt(instruction，example)system_promp",
        "id": 399,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 38,
        "text": "ild_system_prompt(instruction，example)system_prompt_with_schema $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ build_system_prompt(instruction,example,pydantic_schema)",
        "id": 400,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 401,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 13,
        "text": "CASE: 打造自己的RAG系统 (kind=string)",
        "id": 402,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 23,
        "text": "这里对应的kind为string，类似AnswerWithRAGContextNumberPrompt 对应的kind $\\ c =$ number",
        "id": 403,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 11,
        "text": "QSearched 4 times and read api_requests.py ",
        "id": 404,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 77,
        "text": "api_requests.py +6 v（204号 $\\mathbf { i } \\dagger$ use_schema_prompt else prompts .Comparative/response_format $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ prompts. ComparativeAnswerPrompt .AnswerSchemiuser_prompt $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ prompts.ComparativeAnswerPrompt.user_prompte",
        "id": 405,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 82,
        "text": "da }$ prompts.ComparativeAnswerPrompt.user_promptelif schema $\\scriptstyle = =$ \"string\":#新增：支持开放性文本问题system_prompt $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ (prompts.AnswerWithRAGContextStringPrompt.syst$\\mathbf { i } \\dagger$ use_schema_prompt else prompts.AnswerWithRAresponse_format $\\mathbf { ",
        "id": 406,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 74,
        "text": "se prompts.AnswerWithRAresponse_format $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ prompts.AnswerWithRAGContextStringPrompt.Ansuser_prompt $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ prompts.AnswerWithRAGContextStringPrompt.user_prelse:raise ValueError(f\"Unsupported schema:{schema}\")return system_pr",
        "id": 407,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 102,
        "text": "or(f\"Unsupported schema:{schema}\")return system_prompt,response_format,user_prompt已在_build_rag_context_prompts 方法中增加了对 schema $\\scriptstyle = =$ \"string\"的分支，自动调用 AnswerWithRAGContextStringPrompt，实现方式与 number/boolean/names完全一致。这样只要kind或schema为string，即可支持开放性文本问题的RAG问答。如需前端或调用链适配string类型，或有其他自定义需求，请继续说",
        "id": 408,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 33,
        "text": "可支持开放性文本问题的RAG问答。如需前端或调用链适配string类型，或有其他自定义需求，请继续说明！",
        "id": 409,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 11,
        "text": "elif schema $\\scriptstyle = =$ \"string\": ",
        "id": 410,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 79,
        "text": "# 新增：支持开放性文本问题 system_prompt $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ （prompts.AnswerWithRAGContextStringPrompt.system_prompt_with_schema if use_schema_prompt else prompts.AnswerWithRAGContextStringPrompt.system_prompt) response_format $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ prompts.AnswerWithRAG",
        "id": 411,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 50,
        "text": "igma } = \\mathbf { \\sigma }$ prompts.AnswerWithRAGContextStringPrompt.AnswerSchema user_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ prompts.AnswerWithRAGContextStringPrompt.user_prompt ",
        "id": 412,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 23,
        "text": "else: raise ValueError(f\"Unsupported schema: {schema}\") return system_prompt，response_format，user_prompt ",
        "id": 413,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 55,
        "length_tokens": 14,
        "text": "api_request.py 中添加 schema $\\scriptstyle = =$ \"string\"",
        "id": 414,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 56,
        "length_tokens": 12,
        "text": "CASE: 打造自己的RAG系统 (界面)",
        "id": 415,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 56,
        "length_tokens": 12,
        "text": "Thinking: 如何搭建自己的RAG系统界面？",
        "id": 416,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 56,
        "length_tokens": 26,
        "text": "可以找到一个还不错的RAG系统界面，截屏下来，让Cursor进行参考，使用streamlit或者gradio",
        "id": 417,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 56,
        "length_tokens": 57,
        "text": "帮我使用streamlit搭建可视化界面，用户提问了一个问题后台调用类似pipeline.process_questions()  \n默认kind=string，这里只需要单个问题即可，然后回答用户，在界面上显示。  \n参考给你的这个界面风格",
        "id": 418,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 419,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 12,
        "text": "CASE: 打造自己的RAG系统 (界面)",
        "id": 420,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 91,
        "text": "Listed directories app_streamlit.py $+ 5 1 - 1 \\ √$   \nimport streamlit as st   \nfrom src.pipeline import Pipeline   \n#初始化 pipeline (假设有默认配置，或可根据需要调整)   \npipeline $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Pipeline()   \nst.set_page_config(page_title $\\mathbf { \\sigma } =$ \"RAG Challenge 2 - RTX 5080 ",
        "id": 421,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 108,
        "text": "\\mathbf { \\sigma } =$ \"RAG Challenge 2 - RTX 5080 Pow   \n#页面标题   \nst.markdown( \"\"\"   \n<div style $\\ c =$ 'background: linear-gradient(90deg，#7b2ff2 $0 \\%$ ，#f <h2 style $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 'color: white; margin: 0;'> $\\mathcal { O }$ RAG Challenge 2 <div style='color: #fff； fon",
        "id": 422,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 36,
        "text": " O }$ RAG Challenge 2 <div style='color: #fff； font-size: 16px;'>基于深度RAG系统   \n</div> ",
        "id": 423,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 10,
        "text": "解决方案:为 Pipeline 添加 answer_single_question 方法",
        "id": 424,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 37,
        "text": "你可以在 src/pipeline.py 里添加如下方法，复用已有的 QuestionsProcessor 逻辑，支持单问题、kind $\\ c =$ string的即时推理。",
        "id": 425,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 10,
        "text": "推荐实现(直接加到Pipeline类里)：",
        "id": 426,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 80,
        "text": "app_streamlit.py $+ 2 v$   \nimport streamlit as st  \nfrom pathlib import Path  \nfrom src.pipeline import Pipeline，max_config  \nfrom src.questions_processing import QuestionsProcessor  \n# 你可以让 root_path 固定，也可以让用户输入  \nroot_path $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Path(\"data/stock_data\")st.error(",
        "id": 427,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 57,
        "length_tokens": 46,
        "text": "athbf { \\sigma }$ Path(\"data/stock_data\")st.error(f\"生成答案时出错：{e}\")  \nelse:st.info(\"请在左侧输入问题并点击【生成答案】\")",
        "id": 428,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 58,
        "length_tokens": 12,
        "text": "CASE: 打造自己的RAG系统 (界面)",
        "id": 429,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 430,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 431,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 58,
        "length_tokens": 27,
        "text": "经过一系列的沟通调试，搭建出来了streamlit界面，但是输出的结果没有正确解析，还需要完善",
        "id": 432,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 12,
        "text": "CASE: 打造自己的RAG系统 (界面)",
        "id": 433,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 2,
        "text": ". ",
        "id": 434,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 435,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 3,
        "text": "检索结果",
        "id": 436,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 5,
        "text": "分步推理：",
        "id": 437,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 92,
        "text": "1．问题要求确定中芯国际2024年的主营业务金额。  \n2．年报中提到，2024年中芯国际的销售收入为人民币578亿元。  \n3．该数据直接反映了公司的主营业务收入。  \n4．需要确认是否还有其他相关数据或补充说明。  \n5．根据年报内容，没有其他与主营业务收入相关的额外信息，因此可以得出结论。",
        "id": 438,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 4,
        "text": "推理摘要：",
        "id": 439,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 23,
        "text": "年报明确指出2024年中芯国际的销售收入为578亿元，这是主营业务的核心数据。",
        "id": 440,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 3,
        "text": "相关页面：",
        "id": 441,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 5,
        "text": "^0：0]",
        "id": 442,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 3,
        "text": "最终答案：",
        "id": 443,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 444,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 14,
        "text": "中芯国际2024年的主营业务收入为人民币578亿元。",
        "id": 445,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 59,
        "length_tokens": 14,
        "text": "结果解析正确了，但是检索时间过长，还需要进一步优化",
        "id": 446,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 60,
        "length_tokens": 8,
        "text": "打卡：打造自己的RAG系统",
        "id": 447,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 60,
        "length_tokens": 14,
        "text": "结合RAG-Challenge，改成自己的RAG系统，包括：",
        "id": 448,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 60,
        "length_tokens": 34,
        "text": "·使用DashScope API KEY，替换原有的openai API可以使用qwen-turbo-latest作为LLM，text_embedding_v1作为embedding模型",
        "id": 449,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 60,
        "length_tokens": 34,
        "text": "·使用MinerU替换现有的docling解析·更新中文知识库，比如选用多份投研报告作为知识库data/stock_data/pdf_reports",
        "id": 450,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 60,
        "length_tokens": 34,
        "text": "设置相关的问题清单data/stock_data/question.json针对开放式的问题，进行kind $\\ c =$ string的类型设置搭建前端页面，比如使用streamlit",
        "id": 451,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 452,
        "type": "image",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 61,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 453,
        "type": "text",
        "file_name": "23.1-项目实战：企业知识库"
      },
      {
        "page": 1,
        "length_tokens": 10,
        "text": "项目实战：交互式BI报表",
        "id": 0,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 2,
        "length_tokens": 10,
        "text": "项目实战：交互式BI报表",
        "id": 2,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 2,
        "length_tokens": 25,
        "text": "·智能分析趋势预测 (ARIMA分析)异常检测 (Boll带分析)周期性分析 (prophet)",
        "id": 3,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 2,
        "length_tokens": 22,
        "text": "ChatBi的原理数据采集可视化组件查询历史价格  \n对比分析  \n热点新闻",
        "id": 4,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "ChatBi原理",
        "id": 5,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 3,
        "length_tokens": 54,
        "text": "ChatBI的核心原理：通过Text-to-SQL，将自然语言查询（如\"上季度销售额最高的产品\"）自动转换为可执行的SQL语句，从而让非技术用户直接与数据库交互。其关键技术包括：",
        "id": 6,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 3,
        "length_tokens": 37,
        "text": "·语义解析：利用大模型（如Qwen3）理解用户意图，识别查询中的实体（表、字段）和操作（排序、聚合）。",
        "id": 7,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 3,
        "length_tokens": 51,
        "text": "·SQL生成：基于大模型（如Qwen3）将语义结构转化为合规sQL，需解决模式链接（schemalinking）问题，即匹配用户术语与数据库实际表名/字段名。",
        "id": 8,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 3,
        "length_tokens": 44,
        "text": "·交互优化：支持模糊查询(如\"卖得不好的产品\"需定义\"不好\"的阈值）和纠错(如表名歧义时询问用户）。",
        "id": 9,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 3,
        "length_tokens": 59,
        "text": "） 数据库结构复杂时准确率下降，需结合Few-shot学习或微调；  \n·动态数据（如实时更新）可能影响结果一致性。  \n·ChatBI大幅降低数据分析门槛，但依赖高质量的数据字典和持续训练优化。",
        "id": 10,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 10,
        "text": "项目实战：交互式BI报表",
        "id": 11,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 43,
        "text": "TO DO：搭建交互式BI，一个集数据采集、存储、分析和可视化于一体的交互式商业智能报表平台，以金融证券数据分析为例。",
        "id": 12,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 39,
        "text": "系统通过采集贵州茅台、五粮液、国泰君安、中芯国际等历史价格，结合多种分析模型，为用户提供多维度的数据洞察：",
        "id": 13,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 38,
        "text": "·交互式分析：用户可通过自然语言查询获取柱状图、折线图等可视化结果，快速掌握股票走势、成交量等关键指标。",
        "id": 14,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 15,
        "text": "·实时新闻查询：通过自然语言，了解股票当前的热点新闻",
        "id": 15,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "智能预测模型：",
        "id": 16,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 15,
        "text": "ARIMA趋势预测：为企业投资决策提供未来价格走势参考",
        "id": 17,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 17,
        "text": "BoII带异常检测：识别超买超卖点，辅助风险控制",
        "id": 18,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 4,
        "length_tokens": 17,
        "text": "Prophet周期性分析：发现潜在季节性规律，优化交易策略",
        "id": 19,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "数据采集",
        "id": 20,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 45,
        "text": "帮我编写Python，使用tushare，获取贵州茅台、五粮液、国泰君安、中芯国际的历史价格，从2020-01-01到今天，保存到.xlsx中",
        "id": 21,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 30,
        "text": "我会帮你创建一个Python脚本来获取这些股票的历史数据。首先，我们需要创建一个新的Python文件来实现这个功能。",
        "id": 22,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "让我先创建一个新的Python文件：",
        "id": 23,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "stock_data.py (new) $^ { + 5 9 }$ . ",
        "id": 24,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 97,
        "text": "import tushare as ts  \nimport pandas as pd  \nfrom datetime import datetime  \nimport os  \n#设置tushare token  \n#注意：使用前需要先注册tushare账号并获取token  \nts.set_token('your_token_here'） # 请替换为你  \npro $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ts.pro_api()  \n#定义股票代码列表  \nstock_codes $\\mathbf { \\sigma } = \\mathbf { \\",
        "id": 25,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 41,
        "text": "列表  \nstock_codes $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {'贵州茅台'：'600519.SH''五粮液'：'000858.SZ'",
        "id": 26,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "这里需要替换你的api key",
        "id": 27,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 103,
        "text": "stock_data.py >$\\smash { \\boldsymbol { \\mathsf { 1 } } _ { \\perp \\perp } } \\setminus \\mathbf { \\Phi }$ import tushare as ts2 import pandas as pd3 from datetime import datetime4 import os56 # 设置tushare token7 #注意：使用前需要先注册tushare账号并获取token8 ts.set_token('your_token_here') # 请替换为你的token9 pro = ts.pro_a",
        "id": 28,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 136,
        "text": "n('your_token_here') # 请替换为你的token9 pro = ts.pro_api()1011 #定义股票代码列表  \n（20 $1 2 \\textrm { ‰}$ stock_codes $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {13 '贵州茅台'：'600519.SH'，14 '五粮液'：'000858.SZ'15 '国泰君安'：'601211.SH'，16 '中芯国际'：'688981.SH'17 }1819 # 获取当前日期20 end_date $\\mathbf { \\sigma } = \\mathbf { \\sigm",
        "id": 29,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 102,
        "text": "期20 end_date $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ datetime.now().strftime('%Y%m%d')2122 #创建DataFrame列表用于存储所有股票数据23 all_stocks_data =[]2425 #获取每只股票的数据  \n26√for stock_name，stock_code in stock_codes.items():27 try:28 # 获取日线数据29< df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pro.daily(ts_code=stock_",
        "id": 30,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "a } = \\mathbf { \\sigma }$ pro.daily(ts_code=stock_code,30 start_date='20200101'31 end_date=end_date)",
        "id": 31,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "数据采集 (Tushare使用)",
        "id": 32,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 6,
        "length_tokens": 121,
        "text": "Tushare是一个免费、开源的Python 财经数据接口库，主要用于获取国内金融市场的数据。  \n·数据丰富：涵盖股票、指数、基金、期货、期权、外汇、宏观经济等多种金融数据。  \n·免费可用：基础数据免费，部分高频或深度数据需注册或付费。  \n·接口简单：通过Python 调用，返回 Pandas 的 DataFrame格式，方便数据处理。  \n·支持多种数据源：整合了交易所、财经网站等公开数据。",
        "id": 33,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 34,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "数据采集",
        "id": 35,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 36,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 7,
        "length_tokens": 39,
        "text": "运行Python，可以得到stock_history_data.xlsx我们可以看到tushare保存的历史价格结构：stock_name,ts_code,trade_date,open,high,low,closevol,amount",
        "id": 37,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 7,
        "length_tokens": 34,
        "text": "=>需要按照trade_date从小到大排序$\\Rightarrow$ 生成.sql，创建MySQL数据表=>将数据导入到MySQL数据表中",
        "id": 38,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 8,
        "length_tokens": 3,
        "text": "数据采集",
        "id": 39,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 8,
        "length_tokens": 10,
        "text": "将数据按照trade_date从小到大排序",
        "id": 40,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 8,
        "length_tokens": 27,
        "text": "查看生成的stock_history_data.xlsx的前5行数据，生成对应的MysQL建表语句写入到.sql",
        "id": 41,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 8,
        "length_tokens": 101,
        "text": "CREATE TABLE stock_history_data（id INT AUTO_INCREMENT PRIMARY KEY COMMENT ‘自增主键'stock_name VARCHAR(20） NOT NULL COMMENT‘股票名称',ts_cOde VARCHAR(20）NOT NULL COMMENT‘股票代码‘,trade_date DATE NOT NULL COMMENT '交易日期'open DECIMAL（15,2）COMMENT‘开盘价'high DECIMAL（15,2）COMMENT‘最高价'loW DECIMAL（15,2） COMMENT '最低价‘cl",
        "id": 42,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 8,
        "length_tokens": 113,
        "text": "15,2）COMMENT‘最高价'loW DECIMAL（15,2） COMMENT '最低价‘close DECIMAL(15,2） COMMENT '收盘价'Vol DECIMAL（20,2）COMMENT‘成交量'amount DECIMAL（20,2）COMMENT‘成交额'UNIQUE KEY uniq_stock_date (ts_code， trade_date)  \n）ENGINE $\\ c =$ InnoDB DEFAULT CHARSET $\\ c =$ utf8mb4 COMMENT $\\dot { \\mathbf { \\eta } } = \\mathbf { \\eta ",
        "id": 43,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 8,
        "length_tokens": 28,
        "text": "MMENT $\\dot { \\mathbf { \\eta } } = \\mathbf { \\eta }$ '股票历史价格数据表'；",
        "id": 44,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "数据采集",
        "id": 45,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 51,
        "text": "将建表语句stock_history_data.sql导入到MySQL中，运行后可以看到响应的数据表这里可以根据自己的情况，修改数据表名称，比如改成stock_price然后将stock_history_data.xlsx导入到对应的数据表中",
        "id": 46,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "导入向导 ",
        "id": 47,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 48,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 25,
        "text": "我们已收集向导导入数据时所需的全部信息。点击[开始]按钮进行导入。",
        "id": 49,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 45,
        "text": "表 1  \n已处理: 5,133  \n错误: 5,133  \n已添加: 0  \n已更新: 0  \n已删除: 0  \n时间： 00:01.58",
        "id": 50,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 105,
        "text": "[IMP] Import start   \n[IMP] Import type - Excel file   \n[IMP] Import from -D:\\推荐系统\\知乎\\24-项目实战:交互式BI报表\\CASE-股票数据查询   \n\\stock_history_data.xlsx   \n[IMP] Import data [stock_price]   \n[ERR] 1292 - Incorrect date value: '0000-00-00' for column 'trade_date' at row 1   \n[ERR] INSERT INTO 'stock'.'stock_pri",
        "id": 51,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 137,
        "text": "' at row 1   \n[ERR] INSERT INTO 'stock'.'stock_price' ('stock_name','ts_code),'trade_date',open'，'high','low',   \nclose',vol, am0unt) VALUES (贵州茅台','600519.SH''0000-00-00',1128, 1145.06, 1116, 1130,   \n148099.16, 16696837.095),(国泰君安', 601211.SH','000-00-00', 18.8, 18.95, 18.6, 18.67, 579913.83,   \n1",
        "id": 52,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 137,
        "text": "-00-00', 18.8, 18.95, 18.6, 18.67, 579913.83,   \n1088983.756),(五粮液', 000858.SZ','0000-00-00', 132, 133.5, 129.59, 132.08, 306674.39,4038536.854),(   \n国寿君安' '601211 cu' '0000 00 00' 18 66 18 9 18 62 18 83 388806 18 730101 035)/'中州艺台 ",
        "id": 53,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 9,
        "length_tokens": 39,
        "text": "导入数据时发生错误，可以看到是因为trade_date没有解析正确。这里建议将trade_date类型调整为varchar(10)即用字符串方式替换原有的DATE类型",
        "id": 54,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 10,
        "length_tokens": 3,
        "text": "数据采集",
        "id": 55,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 10,
        "length_tokens": 26,
        "text": "删除掉原有的stock_price数据表，然后用更新的建表语句进行创建，并导入stock_history_data.xlsx",
        "id": 56,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 10,
        "length_tokens": 103,
        "text": "CREATE TABLE stock_price （id INT AUTO_INCREMENT PRIMARY KEY COMMENT‘自增主键'stock_name VARCHAR(20）NOT NULL COMMENT‘股票名称',ts_cOde VARCHAR(20） NOT NULL COMMENT‘股票代码‘,trade_date VARCHAR(10） NOT NULL COMMENT‘交易日期'open DECIMAL（15,2） COMMENT '开盘价'high DECIMAL（15,2） COMMENT '最高价'loW DECIMAL（15,2）COMMENT‘最低价‘，",
        "id": 57,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 10,
        "length_tokens": 79,
        "text": "（15,2） COMMENT '最高价'loW DECIMAL（15,2）COMMENT‘最低价‘，close DECIMAL(15,2） COMMENT '收盘价'，vol DECIMAL（20,2）COMMENT‘成交量',amount DECIMAL（20,2）COMMENT‘成交额'UNIQUE KEY uniq_stock_date (ts_code， trade_date)",
        "id": 58,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 10,
        "length_tokens": 71,
        "text": "）ENGINE $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ InnoDB DEFAULT CHARSET $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ utf8mb4 COMMENT $\\dot { \\mathbf { \\eta } } = \\mathbf { \\eta }$ '股票历史价格数据表'；",
        "id": 59,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 61,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 62,
        "text": "TO DO：使用之前能正确运行的assistant代码，比如asistant_ticket_bot-3.py，然后改写为现在的股票查询assistant@assistant_ticket_bot-3.py基于stock_history_data.sql改写成 股票查询助手，这里MysQL的database=stock，编写新的 .py",
        "id": 62,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 63,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 112,
        "text": "import pymysqlimport pandas as pd  \n2 ..ery_assistant.py (new) +57 · ×#数据库连接配置  \nimport pymysql DB_CONFIG $= \\left\\{ \\begin{array} { r l r l } \\end{array} \\right.$ （20  \nimport pandas as pd 'hst': '1ocalhost', 'host'：'localhost'， # 数据库主机地址 #数据库主机，请根据实际情况修改'password'：'your_password'，# 数据库密码，请根据实际情况修改",
        "id": 64,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 113,
        "text": "实际情况修改'password'：'your_password'，# 数据库密码，请根据实际情况修改  \n#数据库连接配置 'database'：'stock'， # 数据库名'charset':'utf8mb4'  \nDB_CONFIG $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {'host'：'localhost'， # 数据库主机地址'user':'root', # 数据库用户名，请根 class StockQueryAssistant: # 查询助手主类'password'：'your_password'， # 数据库密码 <'database",
        "id": 65,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 106,
        "text": "助手主类'password'：'your_password'， # 数据库密码 <'database'：'stock'， # 数据库名 def __init__(self，db_config):self.conn $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pymysql.connect(\\*\\*db_config)'charset': 'utf8mb4'夕<def query_by_stock_name(self, stock_name):111  \n# 查询助手主类 根据股票名称查询所有历史价格数据11  \nclass StockouervAssis",
        "id": 66,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 99,
        "text": " 查询助手主类 根据股票名称查询所有历史价格数据11  \nclass StockouervAssistant: sql $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"SELECT $^ *$ FROM stock_price WHERE stock_name $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ %s ORDER Bdf $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_sql(sql，self.conn，params $\\mathbf { \\Sigma } = \\mathb",
        "id": 67,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 26,
        "text": "(sql，self.conn，params $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ [stock_name])return df",
        "id": 68,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 11,
        "length_tokens": 16,
        "text": "有些参数配置还要检查下，替换为自己的MySQL信息",
        "id": 69,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 70,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 36,
        "text": "@stock_query_assistant.py需要实现的方式和 $@$ assistant_ticket_bot-3.py完全一样，即采用qwen-agent的方式，需要替换system_prompt里面的sql",
        "id": 71,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 63,
        "text": "你的需求是:将 stock_query_assistant.py 改造成和 assistant_ticket_bot-3.py 一样的 qwen-agent方式，system_prompt 里描述 stock_price 表结构和字段，SQL执行工具要能自动可视化，并且支持终端和WebUI两种交互模式。",
        "id": 72,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "下面是主要改造点：",
        "id": 73,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 93,
        "text": "1.system_prompt需描述 stock_price 表结构和字段 (用你实际的表结构和注释)。  \n2.exc_sql工具的SQL执行要连接你的阿里云MySQL，数据库为 stock，表为 stock_price 。  \n3.终端和 WebUl 入口与 assistant_ticket_bot-3.py 保持一致。  \n4.代码结构、可视化、函数注册等全部仿照 assistant_ticket_bot-3.py o",
        "id": 74,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 20,
        "text": "我将为你生成新的 stock_query_assistant.py，完全仿照上述风格。",
        "id": 75,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 64,
        "text": "# $\\scriptstyle = = = = = = = = =$ 股票查询助手 system prompt 和函数描述 $\\scriptstyle = = = = = = = = =$ system_prompt $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"\"\"我是股票查询助手，以下是关于股票历史价格表 stock_price",
        "id": 76,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "股票历史价格表",
        "id": 77,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 98,
        "text": "CREATE TABLE stock_price（id INT AUTO_INCREMENT PRIMARY KEY COMMENT '自增主键'stock_name VARCHAR(20） NOT NULL COMMENT ‘股票名称',ts_COde VARCHAR（20） NOT NULL COMMENT '股票代码'，trade_date VARCHAR(10） NOT NULL COMMENT '交易日期'，open DECIMAL（15,2）COMMENT '开盘价'high DECIMAL（15,2） COMMENT '最高价'low DECIMAL（15,2）COMMENT '",
        "id": 78,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 119,
        "text": "IMAL（15,2） COMMENT '最高价'low DECIMAL（15,2）COMMENT '最低价'，close DECIMAL（15,2）COMMENT‘收盘价',volDECIMAL（20,2）COMMENT‘成交量'，amount DECIMAL（20,2）COMMENT'成交额'，UNIQUE KEY uniq_stock_date (ts_code，trade_date)  \n）；我将回答用户关于股票历史价格的相关问题。  \n每当 exc_sql 工具返回 markdown 表格和图片时，你必须原样输出工具返回的全部内\"",
        "id": 79,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 80,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 36,
        "text": "functions_desc = [ { \"name\":\"exc_sql\", \"description\"：\"对于生成的sQL，进行sQL查询\" \"parameters\":{ \"type\":\"object\" ",
        "id": 81,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 12,
        "length_tokens": 13,
        "text": "检查实现的代码需要确认是否为qwen-agent框架",
        "id": 82,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 83,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "设置开场白问题：",
        "id": 84,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 48,
        "text": "·查询2024年全年贵州茅台的收盘价走势·统计2024年4月国泰君安的日均成交量对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 85,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "查询2024年全年贵州茅台的收盘价走势",
        "id": 86,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 11,
        "text": ">Start calling tool \"exc_sq\\*.. ",
        "id": 87,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 88,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 17,
        "text": "以下是2024年全年贵州茅台的收盘价走势数据：",
        "id": 89,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 90,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 91,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 13,
        "length_tokens": 25,
        "text": "Thinking: 图表默认是用柱状图实现的 当数据量大的时候 没法完全显示 如何修改？",
        "id": 92,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 93,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 73,
        "text": "在 ExcSQLTool中的calI中自动对提取到的数据df进行了可视化 (柱状图)  \n但如果len(df)较大，需要自动采用折线图进行呈现。且横坐标可以做一些筛选，比如选取10个点  \n改写的代码，写入到 stock_query_assistant-2.py",
        "id": 94,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "...assistant-2.py (new) +199 ",
        "id": 95,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 61,
        "text": "import os   \nimport asyncio   \nfrom typing import Optional   \nimport dashscope   \nfrom qwen_agent.agents import Assistant   \nfrom qwen_agent.gui import WebuI   \nimport pandas as pd   \nfrom sqlalchemy import create_engine   \nfrom qwen_agent.tools.base import BaseTool,   \nimport matplotlib.pyplot as p",
        "id": 96,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 27,
        "text": " import BaseTool,   \nimport matplotlib.pyplot as plt   \nimport io   \nimport base64   \nimport time   \nimport numpv as np ",
        "id": 97,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 13,
        "text": "#如果数据点较多，自动采样10个点",
        "id": 98,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 109,
        "text": "if len(df_sql) > 20: idx $\\mathbf { \\tau } = \\mathbf { \\tau }$ np.linspace(0，len(df_sql）- 1，10，dtype $\\mathbf { \\tau } = \\mathbf { \\tau }$ int) X = x.iloc[idx] df_plot $\\mathbf { \\tau } = \\mathbf { \\tau }$ df_sql.iloc[idx] chart_type $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'line'   \nelse: df_plot $\\ma",
        "id": 99,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 102,
        "text": "} = \\mathbf { \\tau }$ 'line'   \nelse: df_plot $\\mathbf { \\tau } = \\mathbf { \\tau }$ df_sql chart_type $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'bar'   \nplt.figure(figsize $\\ c =$ (10，6))   \nfor y_col in y_cols: if chart_type $\\scriptstyle = =$ 'bar' : plt.bar(df_plot[x_col]，df_plot[y_col]，label $\\ c =$",
        "id": 100,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 14,
        "length_tokens": 85,
        "text": "lt.bar(df_plot[x_col]，df_plot[y_col]，label $\\ c =$ str(y_col)) else: plt.plot(df_plot[x_col]，df_plot[y_col]，marken $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'o'，label   \nplt.xlabel(x_col)   \nplt.ylabel('数值')   \nplt.title('股票数据统计')   \nplt.legend() ",
        "id": 101,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 15,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 102,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 103,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 15,
        "length_tokens": 34,
        "text": "Thinking：如果assistant只是将历史数据展示，可以让AI对数据进行总结，回复给用户，方便用户了解这个查询结果的整体情况，如何实现？",
        "id": 104,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 105,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "l、完善system_prompt，添加：当我查询到数据的时候，可以对这个数据进行简单的总结。",
        "id": 106,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 39,
        "text": "2、在exc_sql工具回复的时候，添加df的describe描述在exc_sql工具回复的时候，添加df的describe描述，即df.describe()，这样方便Al进行总结回复给用户",
        "id": 107,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 108,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 101,
        "text": "...query_assistant-2.py +3 -1 \\* × try: df = pd.read_sql(sql_input，engi md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df.head(10).to_markdown(ind desc_md $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.describe().to_markd #自动创建目录 save_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(os.path. os.makedi",
        "id": 109,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 97,
        "text": " \\mathbf { \\tau }$ os.path.join(os.path. os.makedirs(save_dir，exist_ok=Tl 3 hidden lines generate_smart_chart_png(df，savi img_path $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ os.path.join('image_sl img_md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ f'![图表]({img_path})' return f\"{md}\\n\\n{img_md}' return ",
        "id": 110,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 37,
        "text": "表]({img_path})' return f\"{md}\\n\\n{img_md}' return f\"{md}\\n\\n{desc_md}\\n\\n{i excent Fxce ",
        "id": 111,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 96,
        "text": "desc_md $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.describe().to_markdown() #自动创建目录 save_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(os.path.dirname(__f: os.makedirs(save_dir，exist_ok $\\ c =$ True) filename $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ f'stock_{int(time.time()\\*1000)}.l save_pa",
        "id": 112,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 101,
        "text": "igma }$ f'stock_{int(time.time()\\*1000)}.l save_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(save_dir，filename #智能选择可视化方式 generate_smart_chart_png(df，save_path) img_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join('image_show'，filen: img_md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$",
        "id": 113,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 16,
        "length_tokens": 80,
        "text": ": img_md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ f'![图表]({img_path}）' return f\"{md}\\n\\n{img_md}\" return f\"{md}\\n\\n{desc_md}\\n\\n{img_md}' except Exception as e: return f\"SQL执行或可视化出错：{str(e)}\" ",
        "id": 114,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 115,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 14,
        "text": "查询2024年全年贵州茅台的收盘价走势",
        "id": 116,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 16,
        "text": ">Start calling tool \"exc_sq.\"...   \n→ Finished tool calling. ",
        "id": 117,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 19,
        "text": "查询结果显示，2024年全年贵州茅台的收盘价走势如下：",
        "id": 118,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 119,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 120,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 121,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 37,
        "text": "从以上数据可以看出，贵州茅台在2024年的股价整体呈现波动趋势。如果您需要更详细的分析或图表，请告诉我！",
        "id": 122,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 17,
        "length_tokens": 16,
        "text": "可根据自己的情况，进行system_prompt的调整，指导AI回复哪些内容",
        "id": 123,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 124,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 14,
        "text": "TODO：测试更多的测试用例，查看assistant回复的情况",
        "id": 125,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 15,
        "text": "统计2024年4月国泰君安的日均成交量",
        "id": 126,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 14,
        "text": ">Start calling tool \"exc_sq.\".. → Finished tool calling ",
        "id": 127,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 23,
        "text": "统计结果显示，2024年4月国泰君安的日均成交量为345,812。",
        "id": 128,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 129,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "无可视化数据",
        "id": 130,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 35,
        "text": "从以上数据可以看出，2024年4月国泰君安的日均成交量为345,812。如果需要进一步分析，请随时告诉我！",
        "id": 131,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 18,
        "length_tokens": 21,
        "text": "通过测试发现：当结果只有一行的时候，不需要进行统计信息，以及可视化图表",
        "id": 132,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "查询历史价格",
        "id": 133,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "当结果只有一行的时候，不需要进行统计信息，也不需要可视化图表",
        "id": 134,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 102,
        "text": "stock_query_assistant-2.py +3√ 口 try: df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_sql(sql_input，engil md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df.head(10).to_markdown(ind if len(df) $\\scriptstyle \\mathbf { \\mu = } \\mathbf { \\mu _ { 1 } }$ return md desc_md $\\mathbf { \\tau } = \\mathbf { ",
        "id": 135,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 30,
        "text": "$ return md desc_md $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.describe().to_markd # 自动创建目录 ",
        "id": 136,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 32,
        "text": "已完成优化：现在当SQL查询结果只有一行时，exc_sql工具只返回表格，不再返回统计信息和可视化图片。",
        "id": 137,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "如需进一步细化逻辑或自定义返回内容，欢迎随时告知！",
        "id": 138,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 139,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 140,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 17,
        "text": "对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 141,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 17,
        "text": "对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 142,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 10,
        "text": "> Start calling tool \"exc_sq.\\*. ",
        "id": 143,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "→Finished tool calling. ",
        "id": 144,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 19,
        "text": "以下是2024年中芯国际和贵州茅台的涨跌幅数据：",
        "id": 145,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 146,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 2,
        "text": "统计信息",
        "id": 147,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 148,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 149,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 34,
        "text": "从数据可以看出，中芯国际和贵州茅台在2024年的涨跌幅情况。如果需要进一步分析或特定日期的数据，请告诉我！",
        "id": 150,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 20,
        "length_tokens": 19,
        "text": "Thinking: 从这里你能看出什么问题？ 如何进行思考和改进？",
        "id": 151,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 152,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 19,
        "text": "Thinking: 从这里你能看出什么问题？ 如何进行思考和改进？",
        "id": 153,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 143,
        "text": "1）数据只展示了前10行 $\\Rightarrow$ 导致AI分析是对1月2日和1月8日进  \n行的涨跌幅对比分析  \n2）统计信息和图表这里可以忽略在ExcSQLTool中的call中的md会提取df的前10行，这里可以改成提取df的前5行+df的后5行，这样可以让Ai看到更完整的信息另外可以args中传入一个参数为是否需要可视化，这样让AI大模型可以自主判断，传入这个参数  \n当不需要进行可视化的时候，后面的describe()和可视化都不需要进行",
        "id": 154,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 155,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 112,
        "text": "try: df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_sql(sql_input，engine) md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df.head(10).to_markdown(index $\\ c =$ False) # 前5行 $^ { \\cdot } +$ 后5行拼接展示 if len(df) > 10: md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.concat([df.head(5)，df.tail(5)]).to_",
        "id": 156,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 104,
        "text": "{ \\sigma }$ pd.concat([df.head(5)，df.tail(5)]).to_mar else: md $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df.to_markdown(index $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False) # 只返回表格 if len(df) == 1: return md need_visualize $\\mathbf { \\tau } = \\mathbf { \\tau }$ args.get('need_visualize'，True) if no",
        "id": 157,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 21,
        "length_tokens": 25,
        "text": "bf { \\tau }$ args.get('need_visualize'，True) if not need_visualize: return md ",
        "id": 158,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 22,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 159,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 22,
        "length_tokens": 29,
        "text": "完成后需要检查下代码逻辑，比如这里虽然设置了need_visualize的参数判断，但是在工具的parameters中并没有该参数",
        "id": 160,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 22,
        "length_tokens": 38,
        "text": "在 ExcSQLTool的parameters增加need_visualize,默认是显示为True。这里说明下如果是对比分析，设置为False，不需要让大模型进行可视化",
        "id": 161,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 22,
        "length_tokens": 91,
        "text": "parameters $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [{ 'name':'sql_input' 'type':'string' 'description'：'生成的sQL语句' 'required': True   \n}，   \n{ 'name':'need_visualize' 'type':'boolean' 'description'：‘是否需要可视化和统计信息，默认True。如果是对比分析 'required': False, 'default': True ",
        "id": 162,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 163,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 17,
        "text": "对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 164,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 165,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 71,
        "text": "{\"sql_input\": \"SELECT stock_name,trade_date, (close - open)/open \\*100AS price_change_percent FROM stock_price WHERE trade_date BETWEEN '2024-01-01' AND '2024-12-31' AND stock_name IN ('中芯国际','贵州茅台');\",\"need_visualize\":false} ",
        "id": 166,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 6,
        "text": "√Finished tool calling. ",
        "id": 167,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "√Start calling tool \"exc_sql\".. ",
        "id": 168,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 60,
        "text": "根据2024年中芯国际和贵州茅台的每日涨跌幅数据，我们可以看到它们在不同日期的表现。为了更清晰地对比这两只股票的整体表现，以下是对它们在2024年的涨跌幅进行统计分析：",
        "id": 169,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 18,
        "text": "如果您需要更详细的统计信息或可视化图表，请告诉我！",
        "id": 170,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "涨跌幅统计 ",
        "id": 171,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "·中芯国际 ",
        "id": 172,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 72,
        "text": "○最高涨幅： $2 . 7 8 4 6 8 \\%$ (2024-12-30)$0$ 最低跌幅： $- 4 . 4 2 4 2 4 \\%$ (2024-12-31)○平均涨跌幅：需要进一步计算。",
        "id": 173,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 174,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "·贵州茅台",
        "id": 175,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 74,
        "text": "○最高涨幅： $0 . 7 6 6 7 5 5 \\%$ (2024-01-03)$0$ 最低跌幅： $- 1 . 7 4 8 6 9 \\%$ (2024-01-02)○平均涨跌幅：需要进一步计算。",
        "id": 176,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 23,
        "length_tokens": 28,
        "text": "df已经改成了显示前5行和后5行，但是2024年涨跌幅计算并不正确，如何完善？",
        "id": 177,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 178,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 33,
        "text": "利用qwen-agent的知识库能力，可以作为上下文补充，即给大模型提供Tips或相关的示例说明编写 faq.txt 如下:",
        "id": 179,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 17,
        "text": "Q1：对比2000年股票A和股票B的涨跌幅",
        "id": 180,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "A1: ",
        "id": 181,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 139,
        "text": "我需要先找到股票A在2000年第一天和最后一天的价格，再找到股票B在2000年第一天和最后一天的价格，  \n然后计算股票A的涨跌幅 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (最后一天价格-第一天价格)/第一天价格 $* 1 0 0 \\%$ 同样计算股票B的涨跌幅 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (最后一天价格-第一天价格)/第一天价格 $* 1 0 0 \\%$ 然后对比这两只股票的涨跌幅。",
        "id": 182,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 3,
        "text": "try: ",
        "id": 183,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 99,
        "text": "bot $\\mathbf { \\tau } = \\mathbf { \\tau }$ Assistant( 1lm $\\mid =$ llm_cfg, name $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '股票查询助手' description $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '股票历史价格查询与分析'， system_message $\\mathbf { \\tau } = \\mathbf { \\tau }$ system_prompt, function_list $\\ c =$ ['exc_sql'",
        "id": 184,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 46,
        "text": "}$ system_prompt, function_list $\\ c =$ ['exc_sql'], files $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['./faq.txt']   \n）   \nprint(\"助手初始化成功！\")   \nreturn bot ",
        "id": 185,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 24,
        "length_tokens": 28,
        "text": "然后在Assistant注册时候，添加上files $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['./faq.txt'] ",
        "id": 186,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 187,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 17,
        "text": "对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 188,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 10,
        "text": "> Start calling tool \"exc_sq.\".. ",
        "id": 189,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 6,
        "text": "? Finished tool calling. ",
        "id": 190,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 23,
        "text": "根据提供的数据，以下是2024年中芯国际和贵州茅台的涨跌幅分析：",
        "id": 191,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "中芯国际",
        "id": 192,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 33,
        "text": "·2024年1月2日：收盘价为52.96  \n·2024年12月31日：收盘价为49.5",
        "id": 193,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "涨跌幅计算：",
        "id": 194,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 61,
        "text": "涨跌幅 $= \\frac { 4 9 . 5 - 5 2 . 9 6 } { 5 2 . 9 6 } \\times 1 0 0 \\% \\approx - 6 . 5 3 \\%$ ",
        "id": 195,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "贵州茅台",
        "id": 196,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 31,
        "text": "·2024年1月1日：收盘价为1530  \n·2024年12月31日：收盘价为1524",
        "id": 197,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "涨跌幅计算：",
        "id": 198,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "对比结果",
        "id": 199,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 50,
        "text": "·中芯国际在2024年的涨跌幅为 $- 6 . 5 3 \\%$ ·贵州茅台在2024年的涨跌幅为 $- 0 . 3 9 \\%$ ",
        "id": 200,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 23,
        "text": "从结果来看，中芯国际在2024年的表现不如贵州茅台，跌幅更大。",
        "id": 201,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 27,
        "text": "计算逻辑对了，但是结果不正确，原因是什么？可以观察下这里展示的df $\\Rightarrow$ 如何完善？",
        "id": 202,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 203,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 26,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 204,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 26,
        "length_tokens": 6,
        "text": "完善 faq.txt 如下：",
        "id": 205,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 26,
        "length_tokens": 17,
        "text": "Q1：对比2000年股票A和股票B的涨跌幅",
        "id": 206,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 26,
        "length_tokens": 4,
        "text": "A1: ",
        "id": 207,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 26,
        "length_tokens": 139,
        "text": "我需要先找到股票A在2000年第一天和最后一天的价格，再找到股票B在2000年第一天和最后一天的价格，  \n然后计算股票A的涨跌幅 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (最后一天价格-第一天价格)/第一天价格 $* 1 0 0 \\%$ 同样计算股票B的涨跌幅 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (最后一天价格-第一天价格)/第一天价格 $* 1 0 0 \\%$ 然后对比这两只股票的涨跌幅。",
        "id": 208,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 26,
        "length_tokens": 28,
        "text": "查询股票撰写sQL的时候，需要按照trade_date升序排序，这样可以看到不同股票在同一天的价格对比",
        "id": 209,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 210,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 17,
        "text": "对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 211,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 10,
        "text": "> Start calling tool \"exc_sq.\".. ",
        "id": 212,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 6,
        "text": "? Finished tool calling. ",
        "id": 213,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 23,
        "text": "根据提供的数据，以下是2024年中芯国际和贵州茅台的涨跌幅分析：",
        "id": 214,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 3,
        "text": "中芯国际",
        "id": 215,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 33,
        "text": "·2024年1月2日：收盘价为52.96  \n·2024年12月31日：收盘价为49.5",
        "id": 216,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "涨跌幅计算：",
        "id": 217,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 61,
        "text": "涨跌幅 $= \\frac { 4 9 . 5 - 5 2 . 9 6 } { 5 2 . 9 6 } \\times 1 0 0 \\% \\approx - 6 . 5 3 \\%$ ",
        "id": 218,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "贵州茅台",
        "id": 219,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 31,
        "text": "·2024年1月1日：收盘价为1530  \n·2024年12月31日：收盘价为1524",
        "id": 220,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "涨跌幅计算：",
        "id": 221,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 3,
        "text": "对比结果",
        "id": 222,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 50,
        "text": "·中芯国际在2024年的涨跌幅为 $- 6 . 5 3 \\%$ ·贵州茅台在2024年的涨跌幅为 $- 0 . 3 9 \\%$ ",
        "id": 223,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 23,
        "text": "从结果来看，中芯国际在2024年的表现不如贵州茅台，跌幅更大。",
        "id": 224,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 27,
        "text": "计算逻辑对了，但是结果不正确，原因是什么？可以观察下这里展示的df $\\Rightarrow$ 如何完善？",
        "id": 225,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 226,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 227,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 17,
        "text": "对比2024年中芯国际和贵州茅台的涨跌幅",
        "id": 228,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": ">Start calling tool\"exc_sql\".. ",
        "id": 229,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 230,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 23,
        "text": "根据提供的数据，以下是2024年中芯国际和贵州茅台的涨跌幅计算：",
        "id": 231,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 3,
        "text": "中芯国际",
        "id": 232,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 56,
        "text": "·2024年1月2日收盘价：52.96  \n·2024年12月31日收盘价：94.62  \n涨跌幅:(94.62-52.96)/52.96\\*100%\\~78.67%",
        "id": 233,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "贵州茅台",
        "id": 234,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 73,
        "text": "·2024年1月2日收盘价：1685.01  \n·2024年12月31日收盘价：1524  \n·涨跌幅：（1524-1685.01)/1685.01 $\\star 1 0 0 \\% \\approx - 9 . 5 6 \\%$ ",
        "id": 235,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 3,
        "text": "对比分析",
        "id": 236,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 60,
        "text": "·中芯国际在2024年表现出显著的上涨趋势，涨幅约为 $78 . 6 7 \\text{‰}$ ·贵州茅台则略有下跌，跌幅约为 $9 . 5 6 \\text{‰}$ ",
        "id": 237,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 18,
        "text": "从整体来看，中芯国际在2024年的表现优于贵州茅台。",
        "id": 238,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 239,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 28,
        "length_tokens": 20,
        "text": "可以看到完善后的faq.txt，显示的两支股票的涨幅对比是正确的",
        "id": 240,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "热点新闻 ",
        "id": 241,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 10,
        "text": "Thinking: 如何给Assistant配置热点新闻能力？",
        "id": 242,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 35,
        "text": "可以使用bing-cn-mcp-server 或 tavily  \n在modelscopeMCP广场中找到 Bing中文搜索服务或 tavily  \n这里推荐使用：tavily",
        "id": 243,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "通过SSEURL连接服务",
        "id": 244,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 245,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 246,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 29,
        "length_tokens": 26,
        "text": "我们发现modelscope提供的tavily-mcp通过SSE方式返回结果不对因此需要使用npx方式调用",
        "id": 247,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "热点新闻 ",
        "id": 248,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 15,
        "text": "获取tavily api key https://app.tavily.com/home ",
        "id": 249,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "API Keys ",
        "id": 250,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 21,
        "text": "The key is used toauthenticate yourrequests to the ResearchAPI.Tolearnmore,see the documentation page ",
        "id": 251,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 252,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 122,
        "text": "# MCP 工具配置   \ntools $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [{ \"mcpServers\":{ # \"tavily-mcp\":{ # \"type\":\"sse\", # \"url\": \"https://mcp.api-inference.modelscope.net #} \"tavily-mcp\":{ \"command\":\"npx\", \"args\":[\"-y\",\"tavily-mcp@0.1.4\"], \"env\":{ \"TAVILY_API_KEY\": \"tvly-dev-1LqPBC/l.H }， \"disabled\": False",
        "id": 253,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 69,
        "text": "PI_KEY\": \"tvly-dev-1LqPBC/l.H }， \"disabled\": False, \"autoApprove\":[] } # \"bing-cn-mcp-server\":{ # \"type\":\"sse\", # \"url\": \"https://mcp.api-inference.modelscope.cn/ #}   \n}， 'exc_sql'] ",
        "id": 254,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 7,
        "text": "贵州茅台最近新闻 ",
        "id": 255,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 22,
        "text": ">Start calling tool \"tavily-mcp-tavily-search\"...   \n√ Finished tool calling. ",
        "id": 256,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "Detailed Results: ",
        "id": 257,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 191,
        "text": "Title:贵州茅台(Sh600519)值得关注的是最近茅台开瓶率明显上升，零售端购买热情增长，黄牛因流动性集中抛售，但经...-雪球  \nURL:https://xueqiu.c0m/1055241569/339166138  \nContent:贵州茅台(sh600519)值得关注的是最近茅台开瓶率明显上升，零售端购买热情增长，黄牛因流动性集中抛售，但经销商稳定。其他白酒企业产品市场关注度和声音变小，茅台关注度上升。.“是近期新闻媒体市场调查的报道，大家可以去搜！  \nTitle:大跌后关注茅台触底信号，食品饮料ETF天弘（159736）早盘逆势上涨_腾讯新闻  \nURL: https://",
        "id": 258,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 170,
        "text": "台触底信号，食品饮料ETF天弘（159736）早盘逆势上涨_腾讯新闻  \nURL: https://news.qq.com/rain/a/20250618A03JFZ00  \nContent:成分股中，贵州茅台更是从5月份高点1645元一度跌至1401.18元，期间累计跌幅约 $15 \\text{‰}$   \n消息面上，白酒板块处于承压阶段，飞天茅台价格持续走低Title:飞天茅台线上售价跌破1850元大关-澎湃新闻  \nURL:https://m.thepaper.cn/newsDetail_forward30992664  \nContent:面对今年来价格下行压力，贵州茅台已悄然采取行动。",
        "id": 259,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 93,
        "text": "forward30992664  \nContent:面对今年来价格下行压力，贵州茅台已悄然采取行动。肖竹青向澎湃新闻透露，其于4月中下旬了解到，目前贵州茅台全国42家直营店停止销售 $5 0 0 \\mathrm { m l }$ 飞天茅台，仅提供公斤装、100ml小瓶装、精品茅台及生肖酒。",
        "id": 260,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 261,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 262,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 30,
        "length_tokens": 51,
        "text": "Title:飞天茅台电商促销价跌破1850元：经销商称线下影响有限高端白酒如何破局？_贵州茅台(600519)股吧_东方财富网股吧",
        "id": 263,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "打卡：股票查询助手",
        "id": 264,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "打造股票查询助手，包括：",
        "id": 265,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 27,
        "text": "股票历史价格的查询 (折线图、柱状图呈现)  \n多支股票的对比分析  \n热点新闻",
        "id": 266,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 14,
        "text": "查询2024年全年贵州茅台的收盘价走势",
        "id": 267,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 10,
        "text": ">Start calling tool \"exc_sq.\".. ",
        "id": 268,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "→Finished tool calling. ",
        "id": 269,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 15,
        "text": "2024年全年贵州茅台的收盘价走势如下：",
        "id": 270,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 25,
        "text": "·2024年1月2日：1685.01  \n·2024年12月31日：1524",
        "id": 271,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 37,
        "text": "从数据来看，贵州茅台在2024年的整体趋势是略有下跌。尽管期间有波动，但最终收盘价低于年初水平。",
        "id": 272,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "走势分析：",
        "id": 273,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 1,
        "text": "部",
        "id": 274,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 50,
        "text": "·最高点：1770 (具体日期未提供)·最低点：1261 (具体日期未提供)·平均收盘价：1569.6·标准差：116.15 (表明价格波动较大)",
        "id": 275,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 276,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 31,
        "length_tokens": 32,
        "text": "该图表展示了贵州茅台在2024年的收盘价走势，可以更直观地观察其价格变化趋势和波动情况。",
        "id": 277,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 278,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 32,
        "length_tokens": 63,
        "text": "ARIMA（自回归积分滑动平均模型）是经典的时间序列预测方法：结合趋势（AR）、差分（I）和噪声（MA)建模，适合非平稳序列（如股价），通过差分消除非平稳性。",
        "id": 279,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 32,
        "length_tokens": 36,
        "text": "ARIMA的局限：假设线性关系，难以捕捉股价的非线性特征 (如突发事件、市场情绪) ",
        "id": 280,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 32,
        "length_tokens": 33,
        "text": "注意事项：股价受外部因素（政策、新闻）影响大，纯ARIMA预测需谨慎，需结合基本面和市场分析。",
        "id": 281,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 282,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 283,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 117,
        "text": "我想使用ARIMA，对未来N天的股票价格进行预测，编写工具arima_stock传入股票的ts_code，以及预测的天数n，这里ts_code是必填预测的时候需要先从远端阿里云MySQL中获取该股票的数据，获取截止到今天的前一年的历史价格，然后使用ARIMA进行建模（5,1,5），并对未来n天的价格进行预测在@stock_query_assistant-2.py的基础上进行编写，写入到 stock_query_assistant-3.py",
        "id": 284,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 10,
        "text": "stock_query_assistant-3.py +313 ",
        "id": 285,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 61,
        "text": "import os   \nimport asyncio   \nfrom typing import Optional   \nimport dashscope   \nfrom qwen_agent.agents import Assistant   \nfrom qwen_agent.gui import WebuI   \nimport pandas as pd   \nfrom sqlalchemy import create_engine   \nfrom qwen_agent.tools.base import BaseTool，register_t   \nimport matplotlib.p",
        "id": 286,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 30,
        "text": " import BaseTool，register_t   \nimport matplotlib.pyplot as plt   \nimport io   \nimport base64   \nimport time   \nimbort numpv as np ",
        "id": 287,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "ARIMA股票预测工具已为你设计好，主要功能如下：",
        "id": 288,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 115,
        "text": "· 工具名：arima_stock·参数：ts_code (必填，股票代码)，n (必填，预测天数)·实现逻辑:  \n1.自动从阿里云MySQL获取该股票近一年历史收盘价（截止到今天前一天)。  \n2.用ARIMA(5,1,5)进行建模。  \n3.预测未来n天的收盘价，返回预测表格和预测折线图。  \n4.若历史数据不足30天，自动提示无法建模。",
        "id": 289,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 24,
        "text": "你可以直接在stock_query_assistant-3.py 中使用该工具，支持WebUI和终端模式。",
        "id": 290,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 33,
        "length_tokens": 31,
        "text": "如需进一步自定义ARIMA参数、支持多股票批量预测、或增加更多可视化细节，欢迎随时告知！",
        "id": 291,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 292,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 13,
        "text": "预测贵州茅台未来7天的收盘价 ",
        "id": 293,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 10,
        "text": "V Start calling tool \"arima_stock\".. ",
        "id": 294,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 17,
        "text": "{\"ts_c0de\": \"600519.SH\",\"n\": 7} ",
        "id": 295,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 296,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 297,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 298,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "Thinking：有什么问题，如何进行调整？",
        "id": 299,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 300,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 35,
        "length_tokens": 31,
        "text": "arima_stock得到了预测图，但是横坐标太密了，可以根据df的长度进行判断，选择其中的一些点进行显示即可。",
        "id": 301,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 302,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 303,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 36,
        "length_tokens": 11,
        "text": "在faq.txt中添加趋势预测回复示例：",
        "id": 304,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 36,
        "length_tokens": 45,
        "text": "Q2:预测xxx股票未来×天的价格  \nA2 :  \n我需要使用arima_stock进行预测，然后回复用户，这里要对股票的未来价格进行解释，比如后续价格是怎样的。",
        "id": 305,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 36,
        "length_tokens": 82,
        "text": "1、对files内容进行更新，需要删除workspace，然后再运行，会更新workspace的缓存2、可以在 C:\\Users\\cheny\\AppData\\Roaming\\Python\\Python311\\site-packages\\qwen_agent 中对Assistant类添加代码，了解ragprompt的拼接过程，以便更精确的控制3、如果files 影响力弱，可以在 system_prompt中进行添加",
        "id": 306,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 307,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "预测贵州茅台未来7天的收盘价 ",
        "id": 308,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": ">Start calling tool \"arima_stock\". ",
        "id": 309,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "→Finished tool calling. ",
        "id": 310,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 29,
        "text": "根据ARIMA模型的预测，贵州茅台（股票代码：600519.SH）未来7天的收盘价预测如下：",
        "id": 311,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 312,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 42,
        "text": "从预测结果来看，贵州茅台的收盘价在未来7天内预计将呈现逐步上升的趋势。价格将持续走高，但涨幅逐渐减缓。",
        "id": 313,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 314,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 315,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 38,
        "length_tokens": 12,
        "text": "Thinking: 如何了解到你的Assistant类的源代码在哪里？",
        "id": 316,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 38,
        "length_tokens": 85,
        "text": "} Go to Definition F12 try: Go to Declaration bot = Assista Go to Type Definition llm=llm_C Go to References Shift+F12 name $\\mathbf { \\tau } = \\mathbf { \\tau }$ '股票 Add Symbol to Current Chat descripti Add Symbol to New Chat assistant.py X = faq.txt V 获取股票 ;ite-packages C:\\Users\\cheny\\AppData\\Roami",
        "id": 317,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 38,
        "length_tokens": 41,
        "text": " V 获取股票 ;ite-packages C:\\Users\\cheny\\AppData\\Roaming\\Python\\Python311\\siteand c packages\\qwen_agent\\agents\\assistant.py (preview ) ",
        "id": 318,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 319,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 23,
        "text": "TO DO：找到本地的assistant.py， 可以添加过程打印代码 了解ragprompt的拼接过程",
        "id": 320,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 94,
        "text": "100 def _run(self,   \n101 messages: List[Message],   \n102 lang: Literal['en'，'zh'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'en'   \n103 knowledge: str $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ：   \n104 \\*\\*kwargs） -> Iterator[List[Message]]:   \n105 \"Q&A with RAG and tool use abilities.   \n106   \n10",
        "id": 321,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 75,
        "text": "\"Q&A with RAG and tool use abilities.   \n106   \n107 Args:   \n108 knowledge: If an external knowledge string is provided,   \n109 it will be used directly without retrieving information from files in messages.   \n110   \n111 ⅡⅡⅡ   \n112   \n113 new_messages $\\mathbf { \\tau } = \\mathbf { \\tau }$ self._pre",
        "id": 322,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 100,
        "text": "es $\\mathbf { \\tau } = \\mathbf { \\tau }$ self._prepend_knowledge_prompt(messages $\\vdots =$ messages，lang $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ lang，knowledge $\\ c =$ knowled   \n114 # $\\scriptstyle = = = = = = = = =$ 以下为调试打印，方便用户查看拼接后的完整prompt $\\scriptstyle = = = = = = = = =$   \n115 print $",
        "id": 323,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 108,
        "text": "pt $\\scriptstyle = = = = = = = = =$   \n115 print $\\ \" \\setminus \\neg \\neg \\ . . = \\ . . = \\ . . = = = = = = = = = = =$ 拼接后的完整promptsystem prompt部分□ $\\scriptstyle \\mathbf { \\lambda } = = = = = = = = = = = = = = = = = = = = = = = = =$   \n116 for msg in new_messages:   \n117 if msg.role $\\scriptstyle = ",
        "id": 324,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 104,
        "text": " new_messages:   \n117 if msg.role $\\scriptstyle = =$ SYSTEM:   \n118 print(msg.content)   \n119 print( $\" = = = = = = = = = = = = = = = = =$ END system prompt $\\scriptstyle \\mathbf { \\lambda } = = = = = = = = = = = = = = = = = = = = = ( { \\mathsf { n } } ^ { \\textsf { m } } )$ （204号   \n120 break   \n12",
        "id": 325,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 39,
        "length_tokens": 70,
        "text": " } ^ { \\textsf { m } } )$ （204号   \n120 break   \n121 $\\scriptstyle = = = = = = = = =$ 结束打印 $\\scriptstyle = = = = = = = =$   \n122 return super()._run(message $s =$ new_messages， lang=lang， \\*\\*kwargs) ",
        "id": 326,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 3,
        "text": "趋势预测 ",
        "id": 327,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "再次运行bot的时候，可以看到ragprompt拼接的结果",
        "id": 328,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 38,
        "text": "拼接后的完整prompt（system prompt部分） 三我是股票查询助手，以下是关于股票历史价格表stock_price 的字段，我可能会编写对应的SQL，对数据进",
        "id": 329,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 2,
        "text": "行查询",
        "id": 330,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "-股票历史价格表",
        "id": 331,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "CREATE TABLE stock_price （",
        "id": 332,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 105,
        "text": "id INT AUTO_INCREMENT PRIMARY KEY COMMENT‘自增主键‘stock_name VARCHAR（20） NOT NULL COMMENT'股票名称',ts_COde VARCHAR（20） NOT NULL COMMENT‘股票代码',trade_date VARCHAR(10） NOT NULL COMMENT '交易日期',open DECIMAL（15,2）COMMENT‘开盘价'high DECIMAL（15,2）COMMENT‘最高价'loW DECIMAL（15,2）COMMENT‘最低价'，close DECIMAL（15,2）COMMENT‘",
        "id": 333,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 67,
        "text": "IMAL（15,2）COMMENT‘最低价'，close DECIMAL（15,2）COMMENT‘收盘价'vol DECIMAL（20,2）COMMENT‘成交量'，amount DECIMAL（20,2）COMMENT‘成交额',UNIQUE KEY uniq_stock_date (ts_code， trade_date)）；",
        "id": 334,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "我将回答用户关于股票历史价格的相关问题。",
        "id": 335,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 49,
        "text": "每当 exc_sql 工具返回 markdown 表格和图片时，你必须原样输出工具返回的全部内容（包括图片markdown），不要只总结表格，也不要省略图片。这样用户才能直接看到表格和图片。",
        "id": 336,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 37,
        "text": "如果是预测未来价格，需要对未来的价格进行详细的解释说明，比如价格将持续走高，或价格将相对平稳，或价格将持续走低。",
        "id": 337,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "# 知识库",
        "id": 338,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "## 来自[文件](faq.txt）的内容:",
        "id": 339,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 340,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 17,
        "text": "Q1：对比2000年股票A和股票B的涨跌幅",
        "id": 341,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "A1: ",
        "id": 342,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 139,
        "text": "我需要先找到股票A在2000年第一天和最后一天的价格，再找到股票B在2000年第一天和最后一天的价格，  \n然后计算股票A的涨跌幅 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ （最后一天价格－ 第一天价格）／ 第一天价格 \\*100%  \n同样计算股票B的涨跌幅 $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ （最后一天价格－第一天价格）／第一天价格 $^ *$ （204号 $1 0 0 \\%$   \n然后对比这两只股票的涨跌幅。",
        "id": 343,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 41,
        "text": "查询股票撰写SQL的时候，需要按照 trade_date 升序排序，这样可以看到不同股票在同一天的价格对比。trade_date的格式类似：2024-01-01",
        "id": 344,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "Q2：预测×XX股票未来×天的价格",
        "id": 345,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "A2: ",
        "id": 346,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 29,
        "text": "我需要使用arima_stock进行预测，然后回复用户，这里要对股票的未来价格进行解释，比如后续价格是怎样的。",
        "id": 347,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 348,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 7,
        "text": "打卡：股票趋势预测 ",
        "id": 349,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 2,
        "text": "善 ",
        "id": 350,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 15,
        "text": "开发股票趋势预测，在股票查询助手的基础上增加趋势预测：",
        "id": 351,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 20,
        "text": "·时间序列方法，比如ARIMA对未来一段时间的某支股票价格进行预测",
        "id": 352,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "预测贵州茅台未来7天的收盘价 ",
        "id": 353,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 16,
        "text": "→Start calling tool \"arima_stock..   \n> Finished tool calling. ",
        "id": 354,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 29,
        "text": "根据ARIMA模型的预测，贵州茅台（股票代码：600519.SH）未来7天的收盘价预测如下：",
        "id": 355,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 356,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 42,
        "text": "从预测结果来看，贵州茅台的收盘价在未来7天内预计将呈现逐步上升的趋势。价格将持续走高，但涨幅逐渐减缓。",
        "id": 357,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 358,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 359,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 360,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 43,
        "length_tokens": 10,
        "text": "布林带 (Bollinger Bands) :",
        "id": 361,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 43,
        "length_tokens": 72,
        "text": "由约翰·布林格在1980年代开发的一种技术分析工具，用于衡量价格波动性、识别超买/超卖状态。  \n它基于统计学中的标准差（o）和移动平均线（MA），广泛应用于股票、外汇、加密货币等金融市场。",
        "id": 362,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 363,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 364,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 14,
        "text": "Thinking: 布林带的构成是怎样的？ ",
        "id": 365,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 9,
        "text": "布林带由三条线组成：",
        "id": 366,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 23,
        "text": "中轨（Middle Band）：通常为20日简单移动平均线（SMA），代表中期趋势。",
        "id": 367,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 30,
        "text": "中轨 $\\mathrm { \\Delta = \\mathsf { S M A _ { 2 0 } } }$ (收盘价）",
        "id": 368,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 30,
        "text": "上轨（Upper Band）：中轨 $+ 2$ 倍标准差（2o），反映价格波动的上限。",
        "id": 369,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 28,
        "text": "上轨 $= \\mathrm { S M A _ { 2 0 } + 2 \\times }$ 标准差20",
        "id": 370,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 26,
        "text": "下轨（Lower Band）：中轨-2倍标准差（2o），反映价格波动的下限。",
        "id": 371,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 37,
        "text": "下轨 ${ \\bf \\tau } = \\mathrm { S M A _ { 2 0 } - 2 \\bf \\tau \\times }$ 标准差20",
        "id": 372,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 44,
        "length_tokens": 45,
        "text": "说明：默认使用20日周期 $+ 2 \\sigma$ ，但可根据交易风格调整（如短线交易可能用10日 $+ 1 . 5 0 \\AA$ ）：",
        "id": 373,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 374,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 45,
        "length_tokens": 10,
        "text": "Thinking: 布林带的作用是什么？",
        "id": 375,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 45,
        "length_tokens": 8,
        "text": "(1）衡量波动性",
        "id": 376,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 45,
        "length_tokens": 61,
        "text": "带宽（Bandwidth）收窄：标准差变小 $$ 波动性降低，可能预示盘整或即将突破(如\"布林带收缩\"后的大行情）。  \n带宽扩大：标准差变大 $$ 波动性增强，趋势可能加速。",
        "id": 377,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 45,
        "length_tokens": 54,
        "text": "(2）识别超买/超卖价格触及上轨：可能超买 （但强势趋势中可能持续贴近上轨）。价格触及下轨：可能超卖 （但下跌趋势中可能持续贴近下轨）。",
        "id": 378,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 45,
        "length_tokens": 53,
        "text": "(3）趋势判断  \n价格沿上轨运行 $$ 强势上涨趋势  \n价格沿下轨运行 $\\mid $ 强势下跌趋势。  \n价格穿越中轨 $\\mid $ 可能趋势反转 （需结合成交量等确认）",
        "id": 379,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 46,
        "length_tokens": 4,
        "text": "生产中的SPC",
        "id": 380,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "生产中的SPC分析",
        "id": 381,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "SPC分析 （Statistical Process Control)",
        "id": 382,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 42,
        "text": "·统计过程控制，对生产过程进行分析，及时发现系统性因素出现的潜在问题，达到控制质量的目的·使用条件：只要问题用数字表示，就可以采用SPC分析",
        "id": 383,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 3,
        "text": "实施阶段：",
        "id": 384,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 55,
        "text": "1）分析阶段  \n确保生产是在各要素无异常的情况下进行  \n用生产过程收集的数据计算控制界限，做成分析用控  \n制图，检验生产过程是否处于统计稳态，过程能力是  \n否足够",
        "id": 385,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "2）监控阶段",
        "id": 386,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 47,
        "text": "使用控制图进行监控  \n生产过程的数据及时绘制到控制上，控制图中点的波动情况可以显示出过程受控或失控，如果发现失控，需要找到原因，尽快消除影响",
        "id": 387,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 388,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 47,
        "length_tokens": 17,
        "text": "UCL: Upper Control Limit CL: Control Line LCL: Lower Control Limit ",
        "id": 389,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "生产中的SPC分析",
        "id": 390,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 48,
        "length_tokens": 24,
        "text": "Thinking: 假设你开了一家面包店，对于生产的质量管控如何使用SPC分析？",
        "id": 391,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 48,
        "length_tokens": 49,
        "text": "1）量产前  \n在面包店试营业期，对面包进行抽样试吃，用于确定烤箱、配方、  \n烘烤温度、时间等是否做出美味的面包",
        "id": 392,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "2）量产后",
        "id": 393,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 48,
        "length_tokens": 53,
        "text": "对每天做的面包进行抽样试吃，用于确定设备的过程控制是否发生异常，一旦发现控制图的异常（基于1个或多个准则），可以采取措施进行纠正，避免后续的生产发生质量问题",
        "id": 394,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 395,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "SPC控制图判异准则",
        "id": 396,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 49,
        "length_tokens": 8,
        "text": "控制图判断异常的准则：",
        "id": 397,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 49,
        "length_tokens": 179,
        "text": "1）1个点子落在A区以外（1点界外）  \n2）连续9点落在中心线同一侧（9点单边）UCL  \n3）连续6点递增或递减（6连串）  \n4）连续14点中相邻点子总是上下交替（14升降）CL  \n5）连续3点中有2点落在中心线同一侧B区以外（2/3A）  \n6）连续5点中有4点落在中心线同一侧c区以外（4/5B）LCL  \n7）连续15点落在中心线同两侧c区之内（15C）  \n8）连续8点落在中心线两侧且无1点在C区中（8缺C）",
        "id": 398,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 399,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 8,
        "text": "SPC控制图判异准则",
        "id": 400,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 18,
        "text": "1）1个点子落在A区以外 （1点界外）",
        "id": 401,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 18,
        "text": "2）连续9点落在中心线同一侧（9点单边）",
        "id": 402,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 403,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 2,
        "text": "CL ",
        "id": 404,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 3,
        "text": "UCL ",
        "id": 405,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 406,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 51,
        "length_tokens": 8,
        "text": "SPC控制图判异准则",
        "id": 407,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 51,
        "length_tokens": 15,
        "text": "3）连续6点递增或递减 （6连串）",
        "id": 408,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 409,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 51,
        "length_tokens": 20,
        "text": "4）连续14点中相邻点子总是上下交替 （14升降）",
        "id": 410,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 411,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "SPC控制图判异准则",
        "id": 412,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 52,
        "length_tokens": 53,
        "text": "5）连续3点中有2点落在中心线同一侧B区以外（2/3A） 6）连续5点中有4点落在中心线同一侧c区以外（4/5B）",
        "id": 413,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 52,
        "length_tokens": 3,
        "text": "UCL ",
        "id": 414,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 52,
        "length_tokens": 2,
        "text": "CL ",
        "id": 415,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 416,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 417,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 53,
        "length_tokens": 8,
        "text": "SPC控制图判异准则",
        "id": 418,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 53,
        "length_tokens": 20,
        "text": "7）连续15点落在中心线同两侧c区之内 （15C）",
        "id": 419,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 420,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 53,
        "length_tokens": 24,
        "text": "8）连续8点落在中心线两侧且无1点在C区中（8缺C）",
        "id": 421,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 422,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 53,
        "length_tokens": 44,
        "text": "SPC原则：在质量控制中，通常使用3o作为异常阈值（涵盖99.7%的正态分布数据），而2o（约95%覆盖）用于预警。",
        "id": 423,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 424,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 121,
        "text": "我想对某支股票的异常点进行检测，使用boII布林带，用使用20日周期 $+ 2 \\sigma$ 进行检测，默认检测过去1年的超买和超卖日期。  \n也可以让用户自定义范围，检测这段时间的超买和超卖点  \n编写boll_detection工具。这里应该也要先从远端阿里云MySQL中获取该股票的数据，然后再进行检测。在@stock_query_assstant-3.py的基础上进行编写，写入到 stock_query_assistant-4.py",
        "id": 425,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 19,
        "text": "stock_query_assistant-4.py $+ 2 6 9 \\vee$ ",
        "id": 426,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 62,
        "text": "import os   \nimport asyncio   \nfrom typing import Optional   \nimport dashscope   \nfrom qwen_agent.agents import Assistant   \nfrom qwen_agent.gui import WebuI   \nimport pandas as pd   \nfrom sqlalchemy import create_engine   \nfrom qwen_agent.tools.base import BaseTool，register_tool   \nimport matplotli",
        "id": 427,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 88,
        "text": " import BaseTool，register_tool   \nimport matplotlib.pyplot as plt   \nimport io   \nimport base64   \nimport time   \nimport numpv as np   \n\"name\":\"boll_detection\"   \n\"description\"：\"对指定股票(ts_code)的收盘价进行布林带异常点检测，默认检测过去1年，也   \n\"parameters\":{ \"type\":\"object\", \"properties\":{ \"ts_code\":{ \"type\":\"string\", \"de",
        "id": 428,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 92,
        "text": "\", \"properties\":{ \"ts_code\":{ \"type\":\"string\", \"description\"：\"股票代码，必填\" \"start_date\":{ \"type\":\"string\", \"description\"：\"检测起始日期，格式YYYY-MM-DD，选填\" }， \"end_date\":{ \"type\":\"string\", \"description\"：\"检测结束日期，格式YYYY-MM-DD，选填\" Y }， \"required\":[\"ts_code\"]   \nL ",
        "id": 429,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 430,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 431,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 12,
        "text": "检测贵州茅台近一年超买超卖点",
        "id": 432,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 10,
        "text": "VStart calling tool \"boll_detection\" . ",
        "id": 433,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 32,
        "text": "{\"ts_code\": \"600519.SH\",\"start_date\": \"2023-04-07\",\"end_date\": \"2024-04-07\"} ",
        "id": 434,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 435,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 436,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 437,
        "type": "table",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 56,
        "length_tokens": 4,
        "text": "股票价格异常检测",
        "id": 438,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 439,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 57,
        "length_tokens": 8,
        "text": "打卡： 股票异常点检测 ",
        "id": 440,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 57,
        "length_tokens": 15,
        "text": "开发股票异常点检测，比如识别超买和超卖点：",
        "id": 441,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 57,
        "length_tokens": 41,
        "text": "·可以使用bol带检测方法，设置 $M A 2 0 + 1 - 2 0$ ，也可以根据实际情况进行调整，比如 MA10 +/-1.5o",
        "id": 442,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 443,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 58,
        "length_tokens": 11,
        "text": "Project：沪市指数预测 (Prophet) ",
        "id": 444,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 445,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 59,
        "length_tokens": 8,
        "text": "Facebookprophet的突变点分析",
        "id": 446,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 447,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 59,
        "length_tokens": 104,
        "text": "Prophet的突变点机制能自动适应趋势变化，非常适合业务场景中突发事件的建模。传统ARIMA模型，假设趋势是平滑变化的，无法灵活处理突发性趋势转折。Prophet的解决方案：通过突变点检测，Prophet将时间序列分段建模，每段的趋势斜率可以独立调整。例如：产品销量因营销活动突然增长。或者经济指标因政策调整骤降。",
        "id": 448,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 3,
        "text": "周期性分析",
        "id": 449,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 36,
        "text": "我想用prophet，对某支股票进行周期性分析，分析trend,weekly,yearly的情况，并通过prophet进行可视化，呈现给用户",
        "id": 450,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 48,
        "text": "编写prophet_analysis，股票周期性分析工具，这里应该也要先从远端阿里云MysQL中获取该股票的数据，然后默认检测过去1年的规律，用户也可以指定分析的时间范围。",
        "id": 451,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 26,
        "text": "在@stock_query_assistant-4.py的基础上进行编写，写入到 stock_query_assistant-5.py",
        "id": 452,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 85,
        "text": "stock_query_assistant-5.py (new) +78 · X   \nfrom prophet import Prophet   \n# exc_sql，arima_stock，boll_detection工具同前   \n@register_tool('prophet_analysis')   \nclass ProphetAnalysisTool(BaseTool): description $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '对指定股票(ts_code)的收盘价进行Prophet. parameters $\\mathbf { ",
        "id": 453,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 89,
        "text": "指定股票(ts_code)的收盘价进行Prophet. parameters $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [ { 'name':'ts_code' 'type':'string' 'description'：'股票代码，必填'， 'required': True   \n# prophet_analysis工具   \n@register_tool('prophet_analysis')   \nclass ProphetAnalysisTool(BaseTool): description $\\mathbf { \\sigma } = \\mat",
        "id": 454,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 104,
        "text": "(BaseTool): description $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '对指定股票(ts_code)的收盘价进行Prophet周期性分析，分解trend、 parameters $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [ { 'name':'ts_code' 'type':'string', 'description'：‘股票代码，必填'， 'required':True }， { 'name':'start_date', 'type':'string', 'description'：‘分",
        "id": 455,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 71,
        "text": "e':'start_date', 'type':'string', 'description'：‘分析起始日期，格式YYYY-MM-DD，选填‘ 'required'：False }， { 'name'：'end_date', 'type':'string' 'description'：'分析结束日期，格式YYYY-MM-DD，选填', 'required':False ",
        "id": 456,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 457,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 3,
        "text": "周期性分析",
        "id": 458,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 10,
        "text": "分析贵州茅台近一年周期性规律",
        "id": 459,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 11,
        "text": "VStart calling tool \"prophet_analysis\" .. ",
        "id": 460,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 33,
        "text": "{\"ts_code\": \"600519.SH\", \"start_date\": \"2023-04-07\",\"end_date\": \"2024-04-07\"} ",
        "id": 461,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 6,
        "text": "√ Finished tool calling. ",
        "id": 462,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 13,
        "text": "Prophet周期性分解（趋势、周、年)：",
        "id": 463,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 464,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 465,
        "type": "image",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 62,
        "length_tokens": 6,
        "text": "打卡：股票分析助手",
        "id": 466,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 62,
        "length_tokens": 9,
        "text": "开发完整的股票分析助手，提供：",
        "id": 467,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 62,
        "length_tokens": 102,
        "text": "·特定股票的数据查询，可以基于某个时间段的范围  \n·计算某个指标，比如MACD等，并绘制曲线识别超买超卖点，比如基于BoII布林带识别周期性的规律，比如使用prophet进行分析对未来N天价格进行预测，比如使用ARIMA,prophet等  \n·提供股票的新闻资讯，比如使用tavily MCP  \n·提供股票的基本面分析，比如提供投研报告，作为files知识库",
        "id": 468,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 62,
        "length_tokens": 46,
        "text": "通过交互式BI，让大模型与专业模型进行深度结合。大模型：与用户交互，理解用户的问题并回答专业模型：提供建模，对未来进行预测，识别突变点等",
        "id": 469,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 62,
        "length_tokens": 2,
        "text": "善 ",
        "id": 470,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 63,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 471,
        "type": "text",
        "file_name": "24.1-项目实战：交互式BI报表"
      },
      {
        "page": 1,
        "length_tokens": 13,
        "text": "项目实战：AI运营助手（百万客群经营）",
        "id": 0,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 2,
        "length_tokens": 7,
        "text": "项目实战：AI运营助手",
        "id": 2,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 2,
        "length_tokens": 65,
        "text": "·搭建可视化大屏  \n·分类模型 （高价值客户预测）  \n逻辑回归，决策树  \nXGBoost/LightGBM  \n聚类分析 （客户分群）  \n·关联分析 （产品组合推荐）  \n·时间序列分析 (资产变动预测)",
        "id": 3,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 4,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "Case：百万客群经营 ",
        "id": 5,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 3,
        "length_tokens": 58,
        "text": "银行零售客户经营项目，旨在通过整合客户基础信息、资产、行为等多维度数据，利用数据分析和智能算法，提升客户价值挖掘、精准营销和风险管理能力，助力银行实现客户资产增长和业务创新。",
        "id": 6,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 3,
        "length_tokens": 13,
        "text": "customer_base.csv：客户基础信息表，一个客户一条记录",
        "id": 8,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 3,
        "length_tokens": 16,
        "text": "customerbehaviorassets.csv：客户行为资产表，一个客户每月一条记录",
        "id": 9,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 10,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "TO DO: ",
        "id": 11,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 4,
        "length_tokens": 124,
        "text": "1、搭建可视化大屏开发  \n1）核心指标卡片，如：客户总数、总资产、  \n平均资产、活跃客户数、产品复购率等  \n2）客户结构与分布  \n3）客户资产与产品分析  \n4）客户行为与活跃度  \n5）风险与预警分析（如有相关字段）  \n2、分类算法（预测高价值客户）  \n3、聚类分析（客户分群）  \n4、关联分析（产品组合推荐）  \n5、时间序列分析（资产变动预测）",
        "id": 12,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 13,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "搭建可视化大屏 ",
        "id": 14,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 15,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 20,
        "text": "帮我编写Python，读取customer_base.csv 和customer behavior assets.csv的前5行数据",
        "id": 16,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "read_data.py >... ",
        "id": 17,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 100,
        "text": "1 import pandas as pd 2 3 # 读取 customer_base.csv 的前5行 4 try: 5 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv'，encoding='utf-8 6 except UnicodeDecodeError: 7 df_base $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_base.csv'，encoding $\\ c =$ 'gbk') 8 prin",
        "id": 18,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 98,
        "text": "'customer_base.csv'，encoding $\\ c =$ 'gbk') 8 print(\"customer_base.csv 前5行:\") 9 print(df_base.head(5)) 10 print(\"\\n\") 11 12 # 读取 customer_behavior_assets.csv 的前5行 13 try: 14 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en 15 except UnicodeDecodeError: 16",
        "id": 19,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 65,
        "text": "or_assets.csv'，en 15 except UnicodeDecodeError: 16 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en 17 print(\"customer_behavior_assets.csv 前5行:\") 18 print(df_assets.head(5)) ",
        "id": 20,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "customer_base.csv 前5行:",
        "id": 21,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 161,
        "text": "customer_id name create_time update_time   \n0 33c44545627f41e8ad113027340de3e9 王丹 2025-05-02 11:41:49 2025-05-02 11:41:49   \n1 f57cf98d475d43c1935c1bf752172c98 李旭 2025-05-02 11:41:49 2025-05-02 11:41:49   \n2 da305778800041efa0fd7eb45e8f6308 宋超 2025-05-02 11:41:49 2025-05-02 11:41:49   \n3 6a69b6b6242",
        "id": 22,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 124,
        "text": "5-02 11:41:49 2025-05-02 11:41:49   \n3 6a69b6b6242045668314bb75ab7052fe 刘璐 2025-05-02 11:41:49 2025-05-02 11:41:49   \n4 5bf2a6aa568e4a13938a1c333e7d12b4 丁婷婷 2025-05-02 11:41:49 2025-05-0211:41:49 ",
        "id": 23,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 14,
        "text": "[5 rows $\\times ~ 1 4$ columns] ",
        "id": 24,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 173,
        "text": "customer_behavior_assets.csv 前5行: id update_time 0 8fe13305424a49ce8d9f51c4c0342c64 2025-05-02 11:41:50 1 77dc3f8d602e4bc59abe7eff4b27d9cc 2025-05-02 11:41:50 2 d404f8fe3eb048e2bd2e23c21e3898bd 2025-05-02 11:41:50 3 0d44762d3ed04e27a672e8ecd7bf1e36 2025-05-02 11:41:50 4 7eb0e012b0534a278abb4ae36deb5",
        "id": 25,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 46,
        "text": "025-05-02 11:41:50 4 7eb0e012b0534a278abb4ae36deb56a3 2025-05-02 11:41:50 ",
        "id": 26,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 13,
        "text": "[5 rows $\\times 2 6$ columns] ",
        "id": 27,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 6,
        "length_tokens": 18,
        "text": "通过运行，可以让AI看到前5行的数据方便理解数据表的字段含义",
        "id": 28,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 29,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "编写项目说明.txt，方便Ai理解项目的作用",
        "id": 30,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 7,
        "length_tokens": 92,
        "text": "通过数据驱动精准营销，提升百万级客户转化率，降低营销成本与客户流失率。核心任务包括客户分层分析（资产/年龄/职业分布）、构建预测模型（ $\\mathsf { A U C } \\geq 0 . 8 5 \\rangle$ ）及分群策略（如高复购、中产家庭等群体），优化线上线下触达方式。",
        "id": 31,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "关键举措 ",
        "id": 32,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 7,
        "length_tokens": 98,
        "text": "1、数据分析：可视化资产分层、高潜力客户画像，分析行为与资产相关性。2、智能建模：预测百万级客户（SHAP解释关键因子），聚类分群并定制策略（如私募理财推荐给高收入客群）。3、精准营销：动态更新高潜力名单，结合APP弹窗、电话外呼等渠道，设定转化率监控与预警机制。",
        "id": 33,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 7,
        "length_tokens": 43,
        "text": "AI打造助手的过程，并非一帆风顺，可以将中间过程文档进行保存。比如：项目说明（类似需求文档），关键字段整理等，方便AI重构项目。",
        "id": 34,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 35,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 29,
        "text": "基于@项目说明.txt和这两个数据表的前5行数据，帮我理解这两张数据表的字段含义",
        "id": 36,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "、customer_base.csv 字段含义",
        "id": 37,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 9,
        "text": "、customer_behavior_assets.csv 字段含义",
        "id": 38,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 130,
        "text": "|字段名|含义说明| |字段名|含义说明|丨customer_id|客户唯一标识| |id|记录唯一标识|丨 name|客户姓名| |customer_id|客户唯一标识（与基础表关联）丨age|客户年龄| |total_assets|客户总资产|丨gender|客户性别| |deposit_balance丨存款余额丨丨occupation丨客户职业| | financial_balance丨理财余额|丨occupation_type｜职业类型（如专业人士、私营业主等）| | fund_balance丨基金余额|| monthly_income|月收入| linsurance_balance丨",
        "id": 39,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 138,
        "text": "nce丨基金余额|| monthly_income|月收入| linsurance_balance丨保险产品余额|lopen_account_date|开户日期| 丨asset_level|资产等级区间（如\"50-80万\"）||lifecycle_stage｜客户生命周期阶段（如新客户、成熟客户等）丨 |deposit_flag｜是否有存款产品（0/1）丨| marriage_status｜婚姻状况| |financial_flag丨是否有理财产品（O/1）||city_level|城市级别（如一线、二线城市）丨 | fund_flag丨是否有基金产品（0/1）丨丨branch_name丨所属",
        "id": 40,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 83,
        "text": "一线、二线城市）丨 | fund_flag丨是否有基金产品（0/1）丨丨branch_name丨所属银行网点名称| l insurance_flag丨是否有保险产品（0/1）丨丨create_time丨记录创建时间| 丨product_count|持有产品数量|丨update_time丨记录更新时间| | financial_repurchase_count|理财复购次数|",
        "id": 41,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 117,
        "text": "|credit_card_monthly_expense|信用卡月均消费|  \n[investment_monthly_count|月均投资次数|  \n丨app_login_count|手机银行登录次数|  \n|app_financial_view_time|手机银行理财浏览时长|  \n丨app_product_compare_count|手机银行产品对比次数|  \n[last_app_login_time|最近一次手机银行登录时间|  \n[last_contact_time|最近一次客户经理联系时间|  \n|contact_result|最近一次联系结果（如\"成功\"、“未接通\"等）|  \n[",
        "id": 42,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 62,
        "text": "系时间|  \n|contact_result|最近一次联系结果（如\"成功\"、“未接通\"等）|  \n[marketing_cool_period|营销冷静期|  \n|stat_month|统计月份|  \n|create_time|记录创建时间|  \n|update_time｜记录更新时间|",
        "id": 43,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 3,
        "text": "说明: ",
        "id": 44,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 55,
        "text": "·该表主要记录客户的资产、产品持有、行为偏好、线上活跃度、营销触达等动态信息。  \n·这些字段可用于资产分析、客户价值分层、行为建模、营销效果评估等场景。",
        "id": 45,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 8,
        "length_tokens": 21,
        "text": "让AI理解数据表的字段含义，也可以写入到.md中，方便后续使用",
        "id": 46,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 47,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 14,
        "text": "将字段含义写入到数据表字段含义.md ",
        "id": 48,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 49,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 24,
        "text": "Markdown格式是Ai最方便理解的格式数据表字段含义.md $>$ #数据表字段含义说明",
        "id": 50,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 51,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 122,
        "text": "1 #数据表字段含义说明23 ## customer_base.csv 字段含义45 字段名 含义说明67 customer_id 客户唯一标识8 name 客户姓名 19 age 客户年龄 1  \n10 gender 客户性别 1  \n11 occupation 客户职业 1  \n12 occupation_type 职业类型（如专业人士、私营业主等）「  \n13 monthly_income 月收入  \n14 open_account_date 开户日期 1  \n15 l lifecycle_stage 客户生命周期阶段（如新客户、成熟客户等）一  \n16 marriage_status ",
        "id": 52,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 9,
        "length_tokens": 112,
        "text": "_stage 客户生命周期阶段（如新客户、成熟客户等）一  \n16 marriage_status 婚姻状况 一  \n17 city_level 城市级别 (如一线、二线城市)  \n18 branch_name 所属银行网点名称 1  \n19 create_time 记录创建时间 1  \n20 update_time 记录更新时间 1  \n21  \n22 〉该表主要记录客户的基础信息，包括身份、职业、收入、开户、生命周期、婚姻、地域等，是客户画像的基础数据。",
        "id": 53,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 54,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 33,
        "text": "我想搭建可视化大屏，针对 $@$ 项目说明.txt以及当前的数据表，都有哪些图表可以展示，先说明思路即可",
        "id": 55,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "可视化大屏设计思路",
        "id": 56,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 37,
        "text": "总体目标：打造一个集\"客户全景透视\"、“行为特征洞察\"和\"营销效果追踪\"于一体的数据决策驾驶舱。",
        "id": 57,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 14,
        "text": "看板一：核心业务总览 (KPIDashboard) ",
        "id": 58,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 26,
        "text": "这个看板放在最显眼的位置，用于展示最核心的宏观指标，让管理者一目了然。",
        "id": 59,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "1.核心指标卡 (KPI Cards)",
        "id": 60,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 116,
        "text": "·客户总数：展示当前服务的总客户量。  \n·总资产管理规模 (AUM):total_assets 的总和，反映业务体量。  \n·户均资产：总资产／客户总数，衡量客户平均价值。  \n·高潜力客户占比：（需要先定义标准）例如，资产在50万以上的客户占比，直观反映优质客群规模。  \n·本月活跃客户数：app_login_count 〉0 的客户数，反映客户粘性。",
        "id": 61,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "看板二:客户画像分析 (Customer Portrait)",
        "id": 62,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 23,
        "text": "此看板旨在回答\"我们的客户是谁？“，进行客户分层，是精准营销的基础。",
        "id": 63,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "1.客户资产分层 (Bar Chart) ",
        "id": 64,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 47,
        "text": "·图表:使用 asset_level 字段创建条形图。  \n·目的：直观展示不同资产等级的客户数量分布，快速定位金字塔的顶端、腰部和底部客群。",
        "id": 65,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 13,
        "text": "2.客户人口属性分布 (Pie/Bar Charts)",
        "id": 66,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "·图表：",
        "id": 67,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 68,
        "text": "·年龄分布:使用age 字段创建直方图或分段条形图(如20-30岁，30-40岁)。  \n·职业分布:使用occupation_type 创建条形图，了解客户主要行业。  \n·城市级别:使用 city_level 创建饼图或条形图。",
        "id": 68,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 12,
        "text": "·目的：描绘出客户的整体社会画像。",
        "id": 69,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "3.客户生命周期分布 (Funnel Chart)",
        "id": 70,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 10,
        "length_tokens": 78,
        "text": "·图表:使用 1ifecycle_stage 创建漏斗图 (新客户 $\\phantom { 0 } { - > }$ 成长客户 ->成熟客户 $\\phantom { 0 } { - > }$ 忠诚客户)。  \n·目的：评估客户运营的健康度，看新增客户是否能有效转化为高价值的忠诚客户。",
        "id": 71,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 72,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 13,
        "text": "看板三：客户行为洞察 (Behavior Insight) ",
        "id": 73,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 22,
        "text": "此看板用于分析客户的行为偏好，回答\"客户喜欢什么？关心什么？\"",
        "id": 74,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 16,
        "text": "1.金融产品偏好分析 (Donut Chart/Radar Chart) ",
        "id": 75,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "·图表：",
        "id": 76,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 49,
        "text": "· 用 deposit_flag，financial_flag，fund_flag，insurance_flag的总和，制作环形图，看各类产品的渗透率。·用雷达图展示不同资产等级客户对不同产品的偏好度。",
        "id": 77,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 27,
        "text": "·目的：了解哪类产品最受欢迎，以及不同客群的产品偏好差异，用于交叉销售推荐。",
        "id": 78,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 17,
        "text": "2.APP 渠道活跃度分析 (Scatter Plot/Heatmap) ",
        "id": 79,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 5,
        "text": "·图表: ",
        "id": 80,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 58,
        "text": "· 以 app_login_count 为X轴，app_financial_view_time 为Y轴，制作散点图。  \n）用热力图或折线图展示一天/一周内 last_app_login_time 的分布，找到用户活跃的高峰时段。",
        "id": 81,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 22,
        "text": "·目的：识别高意向、高粘性的客户，并选择最佳的线上触达时间。",
        "id": 82,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "3.投资与消费能力 (Box Plot)",
        "id": 83,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 50,
        "text": "·图表:使用箱线图展示 credit_card_monthly_expense 和 financial_repurchase_count 的分布情况。  \n·目的：了解客户的消费能力和投资忠诚度，识别高消费、高复购群体。",
        "id": 84,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "看板四:营销成效追踪 (MarketingPerformance) ",
        "id": 85,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "此看板用于评估营销活动的效果，实现闭环。",
        "id": 86,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "1.营销触达效果分析 (Stacked Bar Chart) ",
        "id": 87,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 54,
        "text": "·图表:以 contact_result (成功/未接通等)为分类，展示不同营销活动（如果未来有此维度）或不同客群的触达成功率。·目的：评估营销渠道和话术的有效性。",
        "id": 88,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "核心交互功能",
        "id": 89,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 20,
        "text": "为了让大屏\"活\"起来，最重要的就是联动筛选功能。例如：",
        "id": 90,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 60,
        "text": "·在\"客户资产分层\"图表中点击\"高净值客户\"群体。  \n·整个大屏的其他图表（如职业分布、产品偏好、APP活跃度）都将自动刷新，只显示属于\"高净值客户\"的数据。",
        "id": 91,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 38,
        "text": "通过这种方式，您可以自由组合分析维度，深入洞察任意一个细分客群的全貌，为下一步的精准营销策略提供坚实的数据支持。",
        "id": 92,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 42,
        "text": "以上就是我的整体思路。如果您觉得这个方向可行，我们可以着手选择合适的工具 (如 Plotly，ECharts 等)，并开始编写代码实现第一个看板。",
        "id": 93,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "让AI输出看板规划，然后筛选适合的图表",
        "id": 94,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 95,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 35,
        "text": "帮我规划可视化大屏，选择适合的图表样式，整体图表数量不超过5个使用Flask $^ +$ Echarts",
        "id": 96,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 21,
        "text": "接下来，我将创建 app.py 文件。这个文件是 Flask 应用的核心，它会负责：",
        "id": 97,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 47,
        "text": "1.启动一个Web 服务。  \n2.读取和处理两份CSV数据。  \n3.创建API接口，为前端图表提供JSON数据。  \n现在，我将编写 app·py 的初始代码。",
        "id": 98,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "app.py +103 ",
        "id": 99,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 68,
        "text": "import pandas as pdfrom flask import Flask，jsonify，render_template# 解决 Pycharm 警告pd.set_option('display.max_columns'，None)pd.set_option('display.max_rows'，None)pd.set_option('display.width'，None)pd.set_option('display.max_colwidth'，None)",
        "id": 100,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 101,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 38,
        "text": "# 1．创建 Flask 应用app $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Flask(__name#2．读取和预处理数据def load data():",
        "id": 102,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 103,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 104,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 46,
        "text": "现在，我们需要创建前端页面。我将创建一个 templates 文件夹，并在其中放入 index.html 文件。这个HTML文件将负责布局和通过JavaScript调用后端API来渲染ECharts图表。",
        "id": 105,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 98,
        "text": "$\\Leftrightarrow$ index.html +208√ 点   \n<!DOCTYPE html>   \n<html lang=\"zh-CN\">   \n<head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width， initial-sc <title>客户数据洞察大屏</title> <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/ <style> body{ background-color: #0f1225;",
        "id": 106,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 44,
        "text": "3.3/dist/ <style> body{ background-color: #0f1225; color: #fff; font-family: 'Microsoft YaHei'，sans-serif; margin: 0: adding √ ",
        "id": 107,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "所有文件都已创建完毕！",
        "id": 108,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "我们已经完成了：",
        "id": 109,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 28,
        "text": "1.app·py：后端服务，提供数据接口。  \n2.templates/index.html:前端页面，用于展示大屏。",
        "id": 110,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 12,
        "length_tokens": 47,
        "text": "现在，您可以运行Flask应用来启动可视化大屏了。我将执行启动命令。服务启动后，请在浏览器中访问http://127.0.0.1:5000查看结果。",
        "id": 111,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 112,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 113,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 13,
        "length_tokens": 9,
        "text": "Thinking: 如何查看前端页面的问题？",
        "id": 114,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 115,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 10,
        "text": "Console中有报错，帮我查看 ",
        "id": 116,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 117,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 21,
        "text": "这里可以将echarts.min.js下载下来，新建文件夹static，并放到static文件夹下面",
        "id": 118,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "下载地址:",
        "id": 119,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 24,
        "text": "https://cdn.bootcdn.net/ajax/libs/echarts/5.4.3/echarts .min.js ",
        "id": 120,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "解决方案",
        "id": 121,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 23,
        "text": "方案一：本地引入Echarts（推荐，适合内网/无法访问外网环境)",
        "id": 122,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 5,
        "text": "1. 下载 Echarts",
        "id": 123,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 19,
        "text": "访问 Echarts官网 或 Echarts GitHub Releases。  \n下载 echarts.min.js 文件。",
        "id": 124,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 30,
        "text": "2.将 echarts.min.js 放到你的 Flask 项目 static 目录下· 路径建议: /static/echarts.min.js",
        "id": 125,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "3.修改 dashboard.html 引用方式",
        "id": 126,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 20,
        "text": "方案二：换用国内可访问的cDN (如bootcdn、unpkg等)",
        "id": 128,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 2,
        "text": "例如:",
        "id": 129,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 130,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 14,
        "length_tokens": 21,
        "text": "但如果你的网络环境对外网CDN都有限制，还是建议用本地方案。",
        "id": 131,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 132,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 15,
        "length_tokens": 20,
        "text": "这个漏斗图的逻辑关系不对吧，也帮我统计下这些人的数量。",
        "id": 133,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 134,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 135,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 16,
        "length_tokens": 16,
        "text": "去掉客户生命周期中的流失预警客户、流失客户的显示",
        "id": 136,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "分类算法（预测高价值客户）",
        "id": 138,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 9,
        "text": "高价值客户预测 （场景描述）",
        "id": 139,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 17,
        "text": "TO DO: 预测客户未来3个月资产提升至100万+的概率",
        "id": 140,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 109,
        "text": "场景1：高收入高活跃型客户资产跃升场景2：多产品持有型客户资产跃升场景3：年轻成长型客户资产跃升，客户当前资产为60万，月收入较高（如3万元以上），且近3个月手机银行活跃度高、理财复购频繁模型预测其未来3个月资产有望突破100万。业务动作：提前推送高端理财、专属客户经理服务，提升客户粘性。",
        "id": 141,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 142,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 143,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 144,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 75,
        "text": "·客户当前资产为70万，持有多种金融产品（如存款、理财、基金、保险均有涉猎），产品复购率高。模型预测其资产组合优化后，未来半年内资产有望突破100万。业务动作：定制产品组合推荐，推动交叉销售，助力客户资产快速增长。",
        "id": 145,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 18,
        "length_tokens": 60,
        "text": "客户年龄30岁左右，当前资产为50万，近半年收入持续增长，投资行为活跃（如月均投资次数高）模型预测未来一年资产有望突破100万。业务动作：为其提供成长激励、资产配置建议，提升客户粘性",
        "id": 146,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 7,
        "text": "高价值客户预测 建模流程",
        "id": 147,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 14,
        "text": "Thinking: 整个建模的流程是怎样的？ ",
        "id": 148,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 5,
        "text": "1.样本定义",
        "id": 149,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 48,
        "text": "设定目标变量（如：未来3个月资产是否达到100万 $^ +$ ， $\\scriptstyle 1 =$ 是， $0 =$ 否）。  \n通过历史数据回溯，构建训练样本。",
        "id": 150,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "2.数据准备与特征工程",
        "id": 151,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 116,
        "text": "整合客户基础信息、资产、产品、行为等数据。选择与高净值成长相关的特征（如：当前资产、月收入、产品持有数、理财复购次数、活跃度等）。  \n处理缺失值、异常值，进行特征编码和归一化（如有需要）。3.模型选择  \n选择合适的分类算法，进行模型训练。  \n4.模型训练与评估  \n评估模型效果（AUC、准确率、召回率等），调优参数。",
        "id": 152,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 153,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "逻辑回归 ",
        "id": 154,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 10,
        "text": "高价值客户预测 （逻辑回归）",
        "id": 155,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 53,
        "text": "帮我使用逻辑回归，预测客户未来3个月资产提升至100万 $^ +$ 的概率，输出逻辑回归的系数，帮进行可视化（可以看出系数正负的），编写新Python",
        "id": 156,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 10,
        "text": "logistic_regression_high_value.py>.. ",
        "id": 157,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 80,
        "text": "1 import pandas as pd 2 import numpy as np 3 from sklearn.linear_model import LogisticRegression 4 from sklearn.model_selection import train_test_split 5 import matplotlib.pyplot as plt 6 import seaborn as sns 7 8 # 读取数据 9 try:   \n10 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('custome",
        "id": 158,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 96,
        "text": " { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv'，encoding='utf-8   \n11 except Exception:   \n12 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv'，encoding $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'gbk')   \n13 try:   \n14 df_assets $\\mathbf { \\sigma } = \\mathbf { \\",
        "id": 159,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 90,
        "text": "   \n14 df_assets $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_behavior_assets.csv',en   \n15 except Exception:   \n16 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en   \n17   \n18 # 合并数据 (以customer_id为主键)   \n19 df $\\mathbf { \\sigma } = \\ma",
        "id": 160,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 112,
        "text": "customer_id为主键)   \n19 df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.merge(df_base，df_assets， $\\mathsf { o n } = \\mathsf { \\Gamma }$ customer_id'，how $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'inner   \n20   \n21 #构造标签：未来3个月资产是否提升至100万 $^ +$ （模拟，假设total_assets字   \n22 np.random.seed(42)   \n23 df['futu",
        "id": 161,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 81,
        "text": "al_assets字   \n22 np.random.seed(42)   \n23 df['future_total_assets'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['total_assets'] \\* np.random.uni   \n24 df['label'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ （df['future_total_assets'] $> =$ 1000000).astype(in ",
        "id": 162,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "模型评估结果：",
        "id": 163,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 16,
        "text": "准确率：0.9850  \nAUC: 0.9989",
        "id": 164,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 3,
        "text": "分类报告：",
        "id": 165,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "precision recall f1-score support ",
        "id": 166,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 40,
        "text": "0 0.9904 0.9918 0.9911 20221   \n1 0.9557 0.9484 0.9521 3779 ",
        "id": 167,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 168,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 22,
        "length_tokens": 10,
        "text": "高价值客户预测 （逻辑回归）",
        "id": 169,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 22,
        "length_tokens": 7,
        "text": "逻辑回归系数：",
        "id": 170,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 22,
        "length_tokens": 64,
        "text": "特征 系数   \n0 total_assets 0.000028   \n1 monthly_income 0.000027   \n2 product_count 0.511790   \n3 app_login_count -0.033238   \n4 financial_repurchase_count -1.239498   \n5investment_monthly_count 0.053447 ",
        "id": 171,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 172,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 22,
        "length_tokens": 12,
        "text": "Thinking:如何理解逻辑回归的系数？",
        "id": 173,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 10,
        "text": "高价值客户预测 逻辑回归）",
        "id": 174,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 64,
        "text": "帮我对逻辑回归系数进行解释（正负项），哪些客户未来3个月资产容易提升至100万 $^ +$ ，哪些客户未来3个月资产不容易提升至100万 $^ +$ ，以及后续决策建议，写入逻辑回归解释.md",
        "id": 175,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "#逻辑回归系数解释 ",
        "id": 176,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "##一、系数正负项含义 ",
        "id": 177,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 71,
        "text": "－逻辑回归系数为正，表示该特征越大，客户未来3个月资产提升至100万$^ +$ 的概率越高。  \n－逻辑回归系数为负，表示该特征越大，客户未来3个月资产提升至100万$^ +$ 的概率越低。",
        "id": 178,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "##二、特征影响解读",
        "id": 179,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 17,
        "text": "(以下为常见特征举例，具体以实际输出为准)",
        "id": 180,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 166,
        "text": "\\*\\*total_assets(总资产） $^ { * * }$ ：系数为正。当前资产越高，未来3个月突破100万的概率越大。\\*\\*monthly_income（月收入） $^ { * * }$ ：系数为正。月收入越高，资产增长潜力越大。\\*\\*product_count（产品持有数） $^ { * * }$ ：系数为正。持有产品越多，说明客户金融活跃度高，资产提升概率大。\\*\\*app_login_count（手机银行活跃度） $^ { * * }$ ：系数为正。活跃度高的客户更容易资产增长。\\*\\*financial_repurchase_count (理财复购次数） $^ { * *",
        "id": 181,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 81,
        "text": "长。\\*\\*financial_repurchase_count (理财复购次数） $^ { * * }$ ：系数为正。理财复购频繁，理财意识强，资产提升概率大。\\*\\*investment_monthly_count （月均投资次数） $^ { * * }$ ：系数为正。投资行为活跃，资产增长潜力大。",
        "id": 182,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 40,
        "text": "若某些特征系数为负，说明该特征越大，反而不利于资产提升（如某些高频交易但资产沉淀少的客户）。",
        "id": 183,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 7,
        "text": "##三、客户类型举例",
        "id": 184,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 15,
        "text": "### 容易提升至100万 $^ +$ 的客户：",
        "id": 185,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 58,
        "text": "－当前资产较高，月收入高，持有多种金融产品，手机银行活跃，理财复购和投资行为频繁。－这类客户具备较强的资产积累能力和金融活跃度，是重点挖掘对象。",
        "id": 186,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 14,
        "text": "### 不容易提升至100万 $^ +$ 的客户：",
        "id": 187,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 47,
        "text": "－当前资产较低，月收入不高，产品持有单一，手机银行不活跃，理财和投资行为少。  \n－这类客户短期内资产突破100万的概率较低。",
        "id": 188,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "##四、后续决策建议",
        "id": 189,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 156,
        "text": "1．\\*\\*重点关注高分客户\\*\\*：对模型预测概率高的客户，提前制定专属营销和服务方案，如高端理财推荐、专属客户经理等。  \n2．\\*\\*提升潜力客户活跃度\\*\\*：针对资产和收入有提升空间但活跃度不高的客户，推动其多元化产品体验和线上活跃。  \n3．\\*\\*持续跟踪模型效果\\*\\*：定期复盘模型预测与实际资产变化的吻合度，优化特征和策略。  \n4．\\*\\*差异化运营\\*\\*：对不同类型客户分层管理，提升整体客户资产规模和银行综合收益。",
        "id": 190,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 23,
        "length_tokens": 28,
        "text": "〉以上解释基于逻辑回归模型系数及业务理解，具体特征影响请结合实际输出结果进一步分析。",
        "id": 191,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "决策树 ",
        "id": 192,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "高价值客户预测 （决策树）",
        "id": 193,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 68,
        "text": "帮我使用决策树（depth $\\scriptstyle 1 = 4$ ），预测客户未来3个月资产是否能提升至100万 $^ +$ ，不需要对特征进行归一化处理，对决策树进行可视化（文本打印，以及可视化图片生成），编写新Python",
        "id": 194,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "decision_tree_high_value.py>. ",
        "id": 195,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 79,
        "text": "1 import pandas as pd 2 import numpy as np 3 from sklearn.tree import DecisionTreeClassifier，export_text 4 from sklearn.model_selection import train_test_split 5 import matplotlib.pyplot as plt 6 import warnings 7 8 warnings.filterwarnings('ignore'） # 忽略所有警告 9   \n10 # 读取数据   \n11 try:   \n12 df_base $",
        "id": 196,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 98,
        "text": "# 忽略所有警告 9   \n10 # 读取数据   \n11 try:   \n12 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv'，encoding='utf   \n13 except Exception:   \n14 df_base $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_base.csv'，encoding $\\ c =$ 'gbk   \n15 try:   \n16 df_assets $\\math",
        "id": 197,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 91,
        "text": "ing $\\ c =$ 'gbk   \n15 try:   \n16 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'   \n17 except Exception:   \n18 df_assets $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_behavior_assets.csv'   \n19   \n20 # 合并数据 (以customer_id为主键)   \n21 df $\\ma",
        "id": 198,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 114,
        "text": "  \n19   \n20 # 合并数据 (以customer_id为主键)   \n21 df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.merge(df_base，df_assets，on='customer_id'，how='inn   \n22   \n23 #构造标签：未来3个月资产是否提升至100万 $^ { \\cdot } +$ (模拟)   \n24 np.random.seed(42)   \n25 df['future_total_assets ${ \\mathrm { ~  ~ \\omega ~ } } _ { \\mathrm { ~ \\",
        "id": 199,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 25,
        "length_tokens": 100,
        "text": "s ${ \\mathrm { ~  ~ \\omega ~ } } _ { \\mathrm { ~ \\bf ~ J ~ } } = { \\mathrm { ~ \\bf ~ d } } + [ { \\mathrm { ~  ~ \\omega ~ } }$ 'total_assets'] \\* np.random.u   \n26 df['label'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ （df['future_total_assets'] $> =$ 1000000).astype( ",
        "id": 200,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "高价值客户预测 （决策树）",
        "id": 201,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 122,
        "text": "l--- total_assets <= 928004.16   \n|--- total_assets <= 861389.81 |--- total_assets $< = 8 4 1 0 8 1 . 9 1 \\$ |--- total_assets $< =$ 838906.69 1||--- weights: [78576.00, 0.00] class: 0 |--- total_assets $>$ 838906.69 ||-- weights:[49.00, 1.00] class: 0 l--- total_assets $>$ 841081.91 |--- total asse",
        "id": 202,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 126,
        "text": " 0 l--- total_assets $>$ 841081.91 |--- total assets $< =$ 841132.91 I|--- weights: [0.00, 2.00] class: 1 --- total_assets $>$ 841132.91 I|--- weights: [465.00,48.00] class: 0 |--- total_assets $>$ 861389.81 l--- total_assets $< = 8 8 4 9 0 9 . 6 6$ |--- total_assets $< =$ 861721.16 I|--- weights: [",
        "id": 203,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 118,
        "text": "|--- total_assets $< =$ 861721.16 I|--- weights: [7.00,8.00] class: 1 l--- total_assets $>$ 861721.16 l||--- weights: [508.00,137.00] class: 0 |--- total_assets $>$ 884909.66 |--- total_assets $< =$ 907509.34 I|--- weights: [401.00, 201.00] class: 0 l--- total_assets $>$ 907509.34 | |--- weights:[25",
        "id": 204,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 30,
        "text": "l--- total_assets $>$ 907509.34 | |--- weights:[259.00, 202.00] class: 0 ",
        "id": 205,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 118,
        "text": "l--- total assets $>$ 928004.16 |--- total assets <= 1013021.97 |--- total assets $< =$ 957857.47 |--- monthly income $< = 8 7 6 3 6 . 1 9$ I|--- weights: [297.00, 376.00] class: 1 |--- monthly income $>$ 87636.19 ||--- weights:[26.00, 10.00] class: 0 l--- total_assets $>$ 957857.47 --- total assets",
        "id": 206,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 135,
        "text": "0 l--- total_assets $>$ 957857.47 --- total assets $< = 9 8 4 9 0 9 . 7 8$ I|--- weights: [148.00,332.00] class: 1 --- total_assets $>$ 984909.78 I|--- weights:[112.00,433.00] class: 1 l--- total_assets $>$ 1013021.97 l--- total assets $< = 1 0 2 2 4 5 7 . 2 2$ |--- total_assets $< =$ 1022324.91 ||-",
        "id": 207,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 136,
        "text": " 5 7 . 2 2$ |--- total_assets $< =$ 1022324.91 ||--- weights:[26.00, 156.00] class: 1 l--- total assets $>$ 1022324.91 I| |--- weights: [2.00, 0.00] class: O l--- total_assets $>$ 1022457.22 |--- total_assets $< = 1 0 4 5 4 4 5 . 5 9$ I|--- weights: [20.00,372.00] class: 1 --- total assets $>$ 10454",
        "id": 208,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 26,
        "length_tokens": 42,
        "text": "[20.00,372.00] class: 1 --- total assets $>$ 1045445.59 ||--- weights:[1.00,12825.00] class: 1 ",
        "id": 209,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "高价值客户预测 （决策树）",
        "id": 210,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 106,
        "text": "total_assets_<= 928004.156   \ngini $\\mathbf { \\Psi } = \\mathbf { \\Psi }$ 0.265   \nsamples $\\mathbf { \\tau } = \\mathbf { \\tau }$ 96000   \nvalue $\\mathbf { \\tau } = \\mathbf { \\tau }$ [80897._15103]   \nclass $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未达标   \nTrue False   \ntotal_assets_ <= 861389.812 total_as",
        "id": 211,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 106,
        "text": "True False   \ntotal_assets_ <= 861389.812 total_assets <= 1013021.969   \ngini =0.015 gini =0.08   \nsamples = 80864 samples = 15136   \nvalue $\\mathbf { \\tau } = \\mathbf { \\tau }$ [80265, 599] value $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [632,,14504]   \nclass $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未",
        "id": 212,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 111,
        "text": "]   \nclass $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未达标 class = 达标   \ntotal_assets <= 841081.906 total_assets <= 884909.656 total_assets_<= 957857.469 total_assets <= 1022457.219   \ngini = 0.001 gini = 0.434 gini = 0.446 gini = 0.007   \nsamples = 79141 samples = 1723 samples = 1734 samples = 13402   \nv",
        "id": 213,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 113,
        "text": "samples = 1723 samples = 1734 samples = 13402   \nvalue $\\mathbf { \\tau } = \\mathbf { \\tau }$ [79090，_51] value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [1175,548] value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [583,1151] value $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [49，13353]   \nclass = 未达标 class=未达标 c",
        "id": 214,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 124,
        "text": " { \\sigma }$ [49，13353]   \nclass = 未达标 class=未达标 class=达标 class =达标   \ngini =0.0 gini =0.175 gini =0.343 gini=0.471 gini = 0.496 gini =0.379 gini = 0.258 gini = 0.003   \nsamples $\\mathbf { \\tau } = \\mathbf { \\tau }$ 78626 samples = 515 samples = 660 samples = 1063 samples = 709 samples = 1025 sample",
        "id": 215,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 106,
        "text": "samples = 1063 samples = 709 samples = 1025 samples = 184 samples = 13218   \nvalue $\\mathbf { \\tau } = \\mathbf { \\tau }$ [78625，_ value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [465,50] value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [515，145] value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [660，403 value $\\ma",
        "id": 216,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 117,
        "text": "f { \\tau } = \\mathbf { \\tau }$ [660，403 value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [323.0, 386. value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [260,765 value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [28,156] value = [21,_13197]   \nclass = 未达标 class = 未达标 class $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未达标 cl",
        "id": 217,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 118,
        "text": "class $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未达标 class=未达标 class =达标 class=达标 class = 达标 class =达标   \ngini =q gini =0. gini = gini = 0. gini gini = gini= gini =( gini = 0 gini= gini = gini =0 gini = 0.2 gini= gini = ( gini =0.0   \nsamples_ = samples_ samples samples samp le samples samples samples sa",
        "id": 218,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 84,
        "text": "samples samples samp le samples samples samples samples = samples samples samples: samples = samples samples samples = 12826   \nValue $\\mathbf { \\tau } = \\mathbf { \\tau }$ [785value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [49value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [value $\\mathbf { \\tau } = \\mathb",
        "id": 219,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 108,
        "text": "mathbf { \\tau }$ [value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [465value value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [508.value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [4qvalue=[25value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [29]value=_[2value=[14value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [11value $\\ma",
        "id": 220,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 108,
        "text": "\\mathbf { \\tau } = \\mathbf { \\tau }$ [11value $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [26,value $\\mathbf { \\tau } = \\mathbf { \\tau }$ value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [2value $\\mathbf { \\tau } = \\mathbf { \\tau }$ [1，,12825]   \nclass $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未class $\\mathbf ",
        "id": 221,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 100,
        "text": "thbf { \\tau } = \\mathbf { \\tau }$ 未class $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未 class class $\\mathbf { \\tau } = \\mathbf { \\tau }$ 未class class class $\\mathbf { \\tau } = \\mathbf { \\tau }$ class class $\\mathbf { \\tau } = \\mathbf { \\tau }$ class = class = class = class $\\mathbf { \\tau } = \\mathbf { \\t",
        "id": 222,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 27,
        "length_tokens": 28,
        "text": "s = class = class $\\mathbf { \\tau } = \\mathbf { \\tau }$ 达class class = class =达标 ",
        "id": 223,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "高价值客户预测 （决策树）",
        "id": 224,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 53,
        "text": "帮我对决策树进行解释，哪些客户未来3个月资产容易提升至100万 $^ +$ ，哪些客户未来3个月资产不容易提升至100万+，以及后续决策建议，写入决策树解释.md",
        "id": 225,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "#决策树模型解释 ",
        "id": 226,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "##一、决策树分裂逻辑说明 ",
        "id": 227,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 56,
        "text": "－决策树通过一系列特征（如总资产、月收入、产品数、活跃度等）的阈值分裂，将客户分为\"未来3个月资产能否提升至100万 $\\dot { + }$ \"的不同类别。",
        "id": 228,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 29,
        "text": "－ 每个分支节点代表一个特征的判断条件，叶节点给出最终预测结果（达标/未达标)。",
        "id": 229,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 18,
        "text": "## 二、 容易提升至100万 $^ +$ 的客户特征",
        "id": 230,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 98,
        "text": "当前总资产较高(如80万以上)，且月收入较高。  \n：持有多种金融产品（如理财、基金、保险等)，产品数较多。  \n：手机银行活跃度高，理财复购和投资行为频繁。  \n－在决策树路径中，若客户在多个关键特征上均超过分裂阈值，更容易被判定为未来3个月资产可突破100万。",
        "id": 231,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 16,
        "text": "##三、不容易提升至100万 $^ +$ 的客户特征",
        "id": 232,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 87,
        "text": "，当前总资产较低(如50万以下)，月收入不高。  \n，产品持有单一，金融活跃度低。  \n－手机银行不活跃，理财和投资行为较少。  \n－在决策树路径中，若客户在多个关键特征上低于分裂阈值，更容易被判定为未来3个月资产难以突破100万。",
        "id": 233,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "##四、后续决策建议",
        "id": 234,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 28,
        "length_tokens": 188,
        "text": "1．\\*\\*重点关注高潜力客户\\*\\*：针对模型预测为\"达标\"的客户，提前制定专属营销和服务方案，如高端理财推荐、专属客户经理等。  \n2．\\*\\*提升潜力客户活跃度\\*\\*：对资产和收入有提升空间但活跃度不高的客户，推动其多元化产品体验和线上活跃。  \n3．\\*\\*差异化运营\\*\\*：对不同类型客户分层管理，提升整体客户资产规模和银行综合收益。  \n4．\\*\\*持续优化模型\\*\\*：结合实际业务反馈，定期复盘和优化决策树模型，提高预测准确性。  \n〉以上解释基于决策树分裂逻辑及业务理解，具体特征阈值请结合实际模型输出进一步分析。",
        "id": 235,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "XGBoost/LightGBM ",
        "id": 236,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "高价值客户预测 （LightGBM）",
        "id": 237,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 44,
        "text": "帮我使用LightGBM，预测客户未来3个月资产是否能提升至100万 $^ +$ ，输出特征重要性排序（文本打印，以及可视化图片生成），编写新Python",
        "id": 238,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "lightgbm_high_value.py >.. ",
        "id": 239,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 82,
        "text": "1 import pandas as pd 2 import numpy as np 3 import lightgbm as lgb 4 from sklearn.model_selection import train_test_split 5 import matplotlib.pyplot as plt 6 import warnings 7 8 warnings.filterwarnings('ignore'） # 忽略所有警告 9   \n10 #设置matplotlib中文字体，防止乱码   \n11 import matplotlib   \n12 matplotlib.rcPara",
        "id": 240,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 88,
        "text": "乱码   \n11 import matplotlib   \n12 matplotlib.rcParams['font.sans-serif'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['SimHei']   \n13 matplotlib.rcParams['axes.unicode_minus'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False   \n14   \n15 # 读取数据   \n16 try:   \n17 df_base $\\mathbf { \\sigma } = \\mathbf { \\si",
        "id": 241,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 90,
        "text": "   \n17 df_base $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_base.csv'，encoding $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'utf-8   \n18 except Exception:   \n19 df_base $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_base.csv'，encoding $\\mathbf { \\sigma } = \\mathbf { ",
        "id": 242,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 90,
        "text": "ase.csv'，encoding $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'gbk')   \n20 try:   \n21 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en   \n22 except Exception:   \n23 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，e",
        "id": 243,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 30,
        "length_tokens": 15,
        "text": "au }$ pd.read_csv('customer_behavior_assets.csv'，en ",
        "id": 244,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 31,
        "length_tokens": 9,
        "text": "高价值客户预测 （LightGBM)",
        "id": 245,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "特征重要性排序：",
        "id": 246,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 31,
        "length_tokens": 40,
        "text": "monthly_income:1237   \ntotal assets: 575   \napp_login_count: 567   \nproduct count: 281   \ninvestment_monthly_count:189   \nfinancial_repurchase_count: 151 ",
        "id": 247,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 248,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "高价值客户预测 （LightGBM)",
        "id": 249,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 77,
        "text": "帮我对LightGBM特征重要性进行解释，能看出来哪些客户未来3个月资产能提升至100万 $^ +$ ，哪些客户未来3个月资产不能提升至100万 $^ +$ ，如果想基于LightGBM，想要得出有效的结论，还需要做什么？写入到LightGBM解释.md",
        "id": 250,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "#LightGBM特征重要性解释 ",
        "id": 251,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "## 一、 特征重要性含义",
        "id": 252,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 78,
        "text": "- LightGBM特征重要性反映了各输入特征在模型预测中的影响力，数值越高，说明该特征对预测\"未来3个月资产是否能提升至100万 $\\dot { + }$ \"的贡献越大。－通过特征重要性排序，可以识别哪些客户特征最能区分高价值客户。",
        "id": 253,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 20,
        "text": "## 二、 容易提升至100万 $\\dot { + }$ 的客户特征",
        "id": 254,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 56,
        "text": "- 如果模型中特征如\"total_assets（总资产）\"\"monthly_income（月收入）\"\"product_count（产品持有数）\"等重要性较高，且这些特征数值较大，则客户更容易在未来3个月资产突破100万。",
        "id": 255,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "- 例如:",
        "id": 256,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 41,
        "text": "－当前资产高、月收入高、持有多种金融产品、手机银行活跃、理财复购和投资行为频繁的客户，模型预测其资产提升概率大。",
        "id": 257,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 16,
        "text": "##三、不容易提升至100万 $^ +$ 的客户特征",
        "id": 258,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 42,
        "text": "－如果客户在重要特征上的数值较低（如总资产、月收入、产品数、活跃度等)，则模型预测其短期内资产难以突破100万。",
        "id": 259,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "- 例如:",
        "id": 260,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 32,
        "text": "－当前资产较低、收入不高、产品持有单一、金融活跃度低的客户，模型预测其资产提升概率小。",
        "id": 261,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 14,
        "text": "##四、如何基于LightGBM得出有效结论",
        "id": 262,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "1．\\*\\*特征工程\\*\\*: ",
        "id": 263,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 37,
        "text": "－深入分析和构造更具区分力的特征（如资产增长率、产品多样性指数、行为活跃度等)，提升模型解释力。",
        "id": 264,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "2．\\*\\*模型评估\\*\\*: ",
        "id": 265,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 25,
        "text": "－结合AUC、准确率、召回率等指标，评估模型预测效果，确保结论可靠。",
        "id": 266,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "3．\\*\\*业务验证\\*\\*：",
        "id": 267,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 22,
        "text": "－将模型预测结果与实际客户资产变动进行对比，验证模型的业务有效性。",
        "id": 268,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 13,
        "text": "4．\\*\\*可解释性分析\\*\\*：",
        "id": 269,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 20,
        "text": "-利用SHAP等方法进一步解释单个客户的预测结果，提升模型透明度。",
        "id": 270,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "5．\\*\\*持续优化\\*\\*; ",
        "id": 271,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 18,
        "text": "－定期更新数据和模型，结合业务反馈不断优化特征和算法。",
        "id": 272,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 32,
        "length_tokens": 28,
        "text": "〉以上解释基于LightGBM特征重要性及业务理解，具体特征影响请结合实际输出结果进一步分析。",
        "id": 273,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 33,
        "length_tokens": 9,
        "text": "高价值客户预测 （SHAP分析）",
        "id": 274,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 33,
        "length_tokens": 13,
        "text": "SHAP （SHapley Additive exPlanations） :",
        "id": 275,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 33,
        "length_tokens": 36,
        "text": "一种基于博弈论的模型可解释性方法，适用于任何分类模型，能量化每个特征对单个预测结果的贡献值。",
        "id": 276,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 277,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "高价值客户预测 （SHAP分析）",
        "id": 278,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 34,
        "length_tokens": 12,
        "text": "Thinking: SHAP在高价值客户预测中的作用？",
        "id": 279,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 34,
        "length_tokens": 22,
        "text": "1）全局解释：展示哪些特征整体上对“高价值客户”预测最重要！",
        "id": 280,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 34,
        "length_tokens": 55,
        "text": "2）局部解释：针对单个客户，解释其被预测为“未来3个月资产能否提升至100万 $\\mathrel { + } ^ { \\prime \\prime }$ 的原因，量化每个特征的正负影响。",
        "id": 281,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "高价值客户预测 （SHAP分析）",
        "id": 282,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 35,
        "length_tokens": 97,
        "text": "帮我使用SHAP分析，进行全局解释（识别哪些特征整体上对“高价值客户”预测最重要）和局部解释（针对单个客户，解释其被预测为“未来3个月资产能否提升至100万 $\\mathrel { + } ^ { \\prime \\prime }$ 的原因，量化每个特征的正负影响），基于@lightgbm_high_value.py 编写新的Python代码",
        "id": 283,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 35,
        "length_tokens": 88,
        "text": "shap_lightgbm_high_value.py>.. 1 import pandas as pd 2 import numpy as np 3 importlightgbm aslgb 4 fromsklearn.model_selection import train_test_split 5 import shap 6 import matplotlib.pyplot as plt 7 import warnings 8 9 warnings.filterwarnings('ignore'）#忽略所有警告   \n10   \n11 #设置matplotlib中文字体，防止乱码   \n",
        "id": 284,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 35,
        "length_tokens": 96,
        "text": "re'）#忽略所有警告   \n10   \n11 #设置matplotlib中文字体，防止乱码   \n12 import matplotlib   \n13 matplotlib.rcParams['font.sans-serif'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['SimHei']   \n14 matplotlib.rcParams['axes.unicode_minus'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False   \n15   \n16 #读取数据   \n17 try:   \n18 ",
        "id": 285,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 35,
        "length_tokens": 93,
        "text": "sigma }$ False   \n15   \n16 #读取数据   \n17 try:   \n18 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv',encoding $\\mathbf { \\tau } = \\mathbf { \\tau }$ utf-8   \n19 except Exception:   \n20 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv',encoding='g",
        "id": 286,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 35,
        "length_tokens": 82,
        "text": "tau }$ pd.read_csv('customer_base.csv',encoding='gbk')   \n21 try:   \n22 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv',en   \n23 except Exception:   \n24 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv',en ",
        "id": 287,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "高价值客户预测 （SHAP分析）",
        "id": 288,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 36,
        "length_tokens": 74,
        "text": "全局SHAP特征重要性均值（按绝对值排序）：   \ntotal assets: 5.7488   \nmonthly_income: 0.0177   \napp_login_count: O.0098   \nproduct_count: 0.0064   \ninvestment_monthly_count: O.0061   \nfinancial_repurchase_count: O.0038 ",
        "id": 289,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 291,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "高价值客户预测 （SHAP分析）",
        "id": 292,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 37,
        "length_tokens": 140,
        "text": "单客户（测试集第0个）SHAP值及特征贡献： total_assets:SHAP值 $\\scriptstyle = .$ -3.5239,特征值=331459.84 monthly_income:SHAP值 $\\scriptstyle = .$ -0.0023,特征值=20567.13 product_count:SHAP值=0.0015,特征值 $= 2 . 0$ app_login_count:SHAP值 $\\scriptstyle =$ -0.0037,特征值 $\\cdot = 5 . 0$ financial_repurchase_count:SHAP值=0.0oo5,特征值 $\\lv",
        "id": 293,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 37,
        "length_tokens": 57,
        "text": "$ financial_repurchase_count:SHAP值=0.0oo5,特征值 $\\lvert = 1 . 0$ investment_monthly_count:SHAP值=0.0006,特征值 $_ { = 0 . 0 }$ ",
        "id": 294,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "高价值客户预测 （SHAP分析）",
        "id": 295,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 9,
        "text": "#LightGBM-SHAP分析解释",
        "id": 296,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "##一、全局特征重要性解读",
        "id": 297,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 13,
        "text": "根据SHAP全局特征重要性均值排序：",
        "id": 298,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 99,
        "text": "－ \\*\\*total_assets（总资产）\\*\\* 重要性远高于其他特征，是影响客户未来3个月资产能否提升至100万 $^ +$ 的核心因素。  \n- 其他特征 （如 monthly_income、app_login_count、  \nproduct_count、 investment_monthly_count、  \nfinancial_repurchase_count）重要性较低，说明在当前模型和数据下，客户的当前总资产对预测结果起决定性作用。",
        "id": 299,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "## 二、 单客户局部解释",
        "id": 300,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "以测试集第0个客户为例：",
        "id": 301,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 141,
        "text": "\\*\\*total_assets: SHAP值 $\\mathbf { \\lambda } =$ -3.5239，特征值 $\\mathop { \\mathbf { \\equiv } } _ { \\mathrm { \\bf { \\cdot } } } =$ 331459.84\\*\\*  \n－该客户当前总资产约33万，SHAP值为负，显著拉低其资产提升至100万+的概率。  \n\\*\\*monthly_income: SHAP值 $\\mathbf { \\lambda } =$ -0.0023，特征值 $\\mathbf { \\lambda } =$ 20567.13\\*\\*  \n－ 月收入约2万，SHA",
        "id": 302,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 141,
        "text": "\\mathbf { \\lambda } =$ 20567.13\\*\\*  \n－ 月收入约2万，SHAP值为负，略微降低预测概率。  \n\\*\\*product_count: SHAP值 $\\overline { = } \\pmb { \\theta }$ .0015，特征值 ${ \\phantom { - } } \\mathbf { { \\sigma } } = 2 \\ldots \\theta ^ { + * }$ （20  \n，持有2个产品，SHAP值为正，略微提升预测概率。  \n\\*\\*app_login_count: SHAP值 $\\mathbf { \\lambda } =$ -0.0037",
        "id": 303,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 140,
        "text": "login_count: SHAP值 $\\mathbf { \\lambda } =$ -0.0037，特征值 $= 5 . 0 * *$ （20  \n－手机银行活跃度一般，SHAP值为负，略微降低预测概率。  \n\\*\\*financial_repurchase_count: SHAP值 $\\Rightarrow \\pmb { \\theta }$ .0005，特征值 ${ \\bf \\varepsilon } = 1 . 0 ^ { * * }$ （204号-理财复购1次，SHAP值为正，影响极小。  \n\\*\\*investment_monthly_count: SHAP值 $\\Rightarro",
        "id": 304,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 79,
        "text": "  \n\\*\\*investment_monthly_count: SHAP值 $\\Rightarrow \\pmb { \\theta }$ .0006，特征值 ${ \\bf \\varepsilon } = { \\bf \\otimes } . { \\bf \\otimes } ^ { * * }$ （20－ 月均投资次数为0，SHAP值为正，影响极小。",
        "id": 305,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 23,
        "text": "整体来看，该客户因总资产较低，模型预测其未来3个月资产难以突破100万。",
        "id": 306,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 14,
        "text": "##三、哪些客户容易/不容易提升至100万+",
        "id": 307,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 94,
        "text": "－\\*\\*容易提升至100万 $\\dagger$ 的客户\\*\\*：当前总资产高 (如80万以上)，且其他特征（如月收入、产品数、活跃度等）较高。  \n－\\*\\*不容易提升至100万 $\\dagger$ 的客户\\*\\*：当前总资产较低(如50万以下)，即使其他特征较好，提升概率也有限。",
        "id": 308,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "##四、业务建议",
        "id": 309,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 38,
        "length_tokens": 172,
        "text": "1．\\*\\*重点关注高总资产客户\\*\\*：对当前资产已接近100万的客户，结合月收入、产品活跃度等特征，提前制定专属营销策略。  \n2．\\*\\*提升潜力客户资产\\*\\*：对资产尚未达标但收入较高、活跃度高的客户，推动其增加资产沉淀和产品多样化。  \n3．\\*\\*持续优化特征工程\\*\\*：尝试引入更多反映客户成长潜力的特征（如资产增长率、历史资产变动等)，提升模型区分力。  \n$>$ 以上分析基于当前SHAP运行结果和业务理解，具体结论建议结合实际业务场景和更多客户样本进一步验证。",
        "id": 310,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "聚类分析 （客户分群）",
        "id": 311,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 7,
        "text": "聚类分析 （客户分群",
        "id": 312,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 45,
        "text": "@课题说明.txt $@$ 数据表字段含义.md，我想使用聚类分析（客户分群）场景：将客户分为高复购、中产家庭、年轻高消费等群组。",
        "id": 313,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "帮我使用聚类算法，编写新的Python",
        "id": 314,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 74,
        "text": "1 import pandas as pd   \n2 import numpy as np   \n3 from sklearn.preprocessing import StandardScaler   \n4 from sklearn.cluster import KMeans   \n5 import matplotlib.pyplot as plt   \n6 import warnings   \n7   \n8 Warnings.filterwarnings('ignore') # 忽略所有警告   \n9   \n10 # 设置matplotlib中文字体，防止乱码   \n11 import m",
        "id": 315,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 90,
        "text": "   \n9   \n10 # 设置matplotlib中文字体，防止乱码   \n11 import matplotlib   \n12 matplotlib.rcParams['font.sans-serif'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['SimHei']   \n13 matplotlib.rcParams['axes.unicode_minus'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False   \n14   \n15 # 读取数据   \n16 try:   \n17 df_base $\\",
        "id": 316,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 97,
        "text": "lse   \n14   \n15 # 读取数据   \n16 try:   \n17 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv'，encoding $: = 1$ utf-8   \n18 except Exception:   \n19 df_base $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_base.csv'，encoding $\\mathbf { \\bar { \\rho } } = \\mathbf {",
        "id": 317,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 90,
        "text": "v'，encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ 'gbk')   \n20 try:   \n21 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en   \n22 except Exception:   \n23 df_assets $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_behavior_assets.csv",
        "id": 318,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 64,
        "text": "sigma }$ pd.read_csv('customer_behavior_assets.csv',en   \n24   \n25 # 合并数据 (以customer_id为主键)   \n26 df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.merge(df_base，df_assets，on='customer_id'，how='inner ",
        "id": 319,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 21,
        "text": "已为你编写好新的 Python 脚本 clustering_customer_segmentation.py，实现如下功能：",
        "id": 320,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 140,
        "text": "·自动选择典型特征（如年龄、月收入、总资产、产品数、活跃度、理财复购等）进行聚类分析。  \n·使用KMeans聚类算法，将客户分为3类（如高复购、中产家庭、年轻高消费等)。  \n·输出每个群组的客户数和特征均值，便于理解各群体特征。  \n·利用PCA降维并可视化聚类分布，图片保存为 customer_clusters.png  \n聚类结果保存为 customer_cluster_result.csv，便于后续业务分析。  \n·全程中文注释，保证无乱码。",
        "id": 321,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 40,
        "length_tokens": 37,
        "text": "你只需运行该脚本，即可获得分群结果和可视化。如需调整聚类数或进一步分析群组特征，欢迎随时告知！",
        "id": 322,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 41,
        "length_tokens": 7,
        "text": "聚类分析 （客户分群",
        "id": 323,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 41,
        "length_tokens": 110,
        "text": "各群组客户数：   \ncluster   \n0 27690   \n1 31258   \n2 61052   \nName: count, dtype: int64 各群组特征均值：   \nage monthly_income ... app_login_count financial_repurchase_count   \ncluster   \n0 49.412062 54058.819995 5.685121 1 34.811088 35999.339959 8.032088 2 47.223334 24330.886033 3.525683 ",
        "id": 324,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 325,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 326,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 7,
        "text": "聚类分析 （客户分群",
        "id": 327,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 32,
        "text": "帮我打印出来完整的特征均值，然后再做分析基于选择的特征，进行均值打印，主要是列没有显示全",
        "id": 328,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "clustering_customer_segmentation.py>.. ",
        "id": 329,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 79,
        "text": "1 import pandas as pd 2 import numpy as np 3 from sklearn.preprocessing import StandardScaler 4 from sklearn.cluster import KMeans 5 import matplotlib.pyplot as plt 6 import warnings 7 8 warnings.filterwarnings('ignore'）# 忽略所有警告 9   \n10 # 设置matplotlib中文字体，防止乱码   \n11 import matplotlib   \n12 matplotli",
        "id": 330,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 91,
        "text": "b中文字体，防止乱码   \n11 import matplotlib   \n12 matplotlib.rcParams['font.sans-serif'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['SimHei']   \n13 matplotlib.rcParams['axes.unicode_minus'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False   \n14   \n15 # 读取数据   \n16 try:   \n17 df_base $\\mathbf { \\tau } = \\mathbf",
        "id": 331,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 95,
        "text": "\n16 try:   \n17 df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv'，encoding='utf-8   \n18 except Exception:   \n19 df_base $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('customer_base.csv'，encoding $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'gbk')   \n20 try:   \n21 df_asset",
        "id": 332,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 79,
        "text": "\\mathbf { \\tau }$ 'gbk')   \n20 try:   \n21 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en   \n22 except Exception:   \n23 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en ",
        "id": 333,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 42,
        "length_tokens": 0,
        "text": "",
        "id": 334,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 8,
        "text": "聚类分析（客户分群）",
        "id": 335,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 53,
        "text": "帮我理解各群组特征均值，并说明这3个cluster分别代表什么特征？是属于高复购、中产家庭、年轻高消费等群组么？帮我理解并对聚类好的群体进行命名。",
        "id": 336,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "各群组特征均值解读",
        "id": 337,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "Cluster 0 ",
        "id": 338,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 128,
        "text": "·年龄：49.4岁 (最高)  \n·月收入：54058元 (最高)  \n总资产：132万 (最高)  \n，存款/理财/基金/保险余额：均为最高  \n·产品持有数：2.01 (最多)理财复购次数：0.57 (最多)  \n信用卡月均消费：15120元 (最高)手机银行活跃度：5.69(中等)  \n）理财浏览/产品对比：中等  \n·产品持有标志（如deposit_flag、financial_flag等)：均为最高",
        "id": 339,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 5,
        "text": "业务解读: ",
        "id": 340,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 49,
        "text": "这类客户年龄偏大，收入和资产都很高，金融产品持有丰富，理财复购和信用卡消费活跃，属于银行的高净值、成熟型客户，家庭资产和金融需求全面。",
        "id": 341,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "Cluster 1 ",
        "id": 342,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 107,
        "text": "·年龄：34.8岁 (最年轻)  \n月收入：35999元(中等)  \n总资产：33.7万(中等)  \n产品持有数：1.39（中等）理财复购次数：0.26 (中等)信用卡月均消费：10097元 (中等)手机银行活跃度：8.03 (最高）理财浏览/产品对比：最高  \n投资月均次数：0.38 (中等)",
        "id": 343,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 4,
        "text": "业务解读：",
        "id": 344,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 51,
        "text": "这类客户年轻，收入和资产中等，但手机银行活跃度、线上理财浏览和产品对比行为最为突出，说明他们是数字化程度高、金融行为活跃、消费能力较强的群体。",
        "id": 345,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 43,
        "length_tokens": 12,
        "text": "命名建议：年轻高活跃数字化客户群",
        "id": 346,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 8,
        "text": "聚类分析（客户分群）",
        "id": 347,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "Cluster 2 ",
        "id": 348,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 101,
        "text": "）年龄：47.2岁 (中等偏大)月收入：24330元 (最低)总资产：25.9万 (最低)产品持有数：1.33 (最少)理财复购次数：0.17 (最少)信用卡月均消费：6813元 (最低)手机银行活跃度：3.53 (最低)理财浏览/产品对比：最低投资月均次数：0.19 (最低)",
        "id": 349,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 5,
        "text": "业务解读: ",
        "id": 350,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 42,
        "text": "这类客户年龄偏大但收入和资产较低，产品持有和金融活跃度都较低，属于传统、保守型客户，金融需求有限，数字化程度低。",
        "id": 351,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 11,
        "text": "命名建议：传统保守型客户群 ",
        "id": 352,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 4,
        "text": "总结与命名",
        "id": 353,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 12,
        "text": "群组编号|主要特征|业务命名建议",
        "id": 354,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 0,
        "text": "",
        "id": 355,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 28,
        "text": "Cluster0|年龄大、收入高、资产高、产品多、理财活跃|高净值成熟家庭群体|",
        "id": 356,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 27,
        "text": "|Cluster1|年轻、活跃度高、线上行为突出、收入中等|年轻高活跃数字化客户群",
        "id": 357,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 25,
        "text": "|Cluster2|年龄偏大、收入低、资产低、活跃度低|传统保守型客户群",
        "id": 358,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 44,
        "length_tokens": 27,
        "text": "如需进一步细化群组特征、输出群组客户名单或做群组画像报告，欢迎继续提问！",
        "id": 359,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "关联分析 （产品组合推荐）",
        "id": 360,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 7,
        "text": "关联分析 （产品组合推荐）",
        "id": 361,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 46,
        "text": "@课题说明.txt $@$ 数据表字段含义.md，我想使用关联分析（产品组合推荐）比如场景：挖掘存款/理财/基金/保险的频繁组合模式。",
        "id": 362,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 11,
        "text": "帮我使用Apriori算法，编写新的Python",
        "id": 363,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 9,
        "text": "apriori_product_combination.py>. ",
        "id": 364,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 92,
        "text": "（20 ${ \\mathfrak { L } } \\sim$ import pandas as pd2 from mlxtend.frequent_patterns import apriori， association_rul3 import warnings45 Warnings.filterwarnings('ignore'） # 忽略所有警告67 # 读取数据8 try:9 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv',en  \n10 Vexcept ",
        "id": 365,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 90,
        "text": "sv('customer_behavior_assets.csv',en  \n10 Vexcept Exception:  \n11 df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv'，en  \n12  \n13 # 选择产品持有相关字段  \n14 product_cols $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['deposit_flag'，'financial_flag'，'fund_flag',  \n15 produc",
        "id": 366,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 101,
        "text": "it_flag'，'financial_flag'，'fund_flag',  \n15 product_cols $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [col for col in product_cols if col in df_asset  \n16  \n17 # 只保留产品持有标志 (1/0)，并去重  \n18 basket $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df_assets[product_cols].fillna(O).astype(int)  \n19 basket $\\mathbf ",
        "id": 367,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 30,
        "text": "_cols].fillna(O).astype(int)  \n19 basket $\\mathbf { \\tau } = \\mathbf { \\tau }$ basket.drop duplicates()",
        "id": 368,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 23,
        "text": "已为你编写好新的 Python 脚本 apriori_product_combination.py ，实现如下功能：",
        "id": 369,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 117,
        "text": "·读取客户产品持有标志(如存款、理财、基金、保险)。  \n·使用Apriori算法挖掘频繁产品组合 (如\"存款 $^ +$ 理财\"\"理财 $^ +$ 基金\"等)。  \n·自动输出频繁项集和关联规则 (包括支持度、置信度、提升度等)。  \n· 结果保存为 frequent_product_itemsets.csv 和 product_association_rules.csv，便于后续分析。  \n·全程中文注释，保证无乱码。",
        "id": 370,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 46,
        "length_tokens": 38,
        "text": "你只需运行该脚本，即可获得产品组合推荐的频繁模式和关联规则。如需调整支持度阈值或进一步分析，欢迎随时告知！",
        "id": 371,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 7,
        "text": "关联分析 （产品组合推荐）",
        "id": 372,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 109,
        "text": "support itemsets   \n0 0.5000 (deposit_flag)   \n1 0.5000 (financial_flag)   \n2 0.5000 (fund_flag)   \n3 0.5000 (insurance_flag)   \n4 0.2500 (deposit_flag， financial_flag)   \n5 0.2500 (deposit_flag， fund_flag)   \n6 0.2500 (deposit_flag， insurance_flag)   \n7 0.2500 (financial_flag， fund_flag)   \n8 0.250",
        "id": 373,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 98,
        "text": "  \n7 0.2500 (financial_flag， fund_flag)   \n8 0.2500 (financial_flag， insurance_flag)   \n9 0.2500 (insurance_flag， fund_flag)   \n10 0.1250 (deposit_flag，financial_flag，fund_flag)   \n11 0.1250 (deposit_flag， insurance_flag， financial_flag)   \n12 0.1250 (deposit_flag，insurance_flag， fund_flag)   \n13 0.",
        "id": 374,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 45,
        "text": " (deposit_flag，insurance_flag， fund_flag)   \n13 0.1250 (financial_flag， insurance_flag， fund_flag)   \n14 0.0625 (deposit_flag，insurance_flag， financial_flag,... ",
        "id": 375,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 20,
        "text": "Thinking: 查看输出的频繁项集， 以及产品关联规则，有什么问题么？",
        "id": 376,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "产品组合关联规则：",
        "id": 377,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 119,
        "text": "antecedents lift   \n0 (deposit_flag) 1.0   \n1 (financial_flag) 1.0   \n2 (deposit_flag) 1.0   \n3 (fund_flag) 1.0   \n4 (deposit_flag) 1.0   \n5 (insurance_flag) 1.0   \n6 (financial_flag) 1.0   \n7 (fund_flag) 1.0   \n8 (financial_flag) 1.0   \n9 (insurance_flag) 1.0   \n10 (insurance_flag) 1.0   \n11 (fund_",
        "id": 378,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 113,
        "text": "_flag) 1.0   \n10 (insurance_flag) 1.0   \n11 (fund_flag) 1.0   \n12 (deposit_flag， financial_flag) 1.0   \n13 (deposit_flag，fund_flag) 1.0   \n14 (financial_flag， fund_flag) 1.0   \n15 (deposit_flag) 1.0   \n16 (financial_flag) 1.0   \n17 (fund_flag) 1.0   \n18 (deposit_flag，insurance_flag) 1.0   \n19 (depos",
        "id": 379,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 47,
        "length_tokens": 96,
        "text": "\n18 (deposit_flag，insurance_flag) 1.0   \n19 (deposit_flag， financial_flag) 1.0   \n20 (insurance_flag， financial_flag) 1.0   \n21 (deposit_flag) 1.0   \n22 (insurance_flag) 1.0   \n23 (financial_flag) 1.0   \n24 (deposit_flag，insurance_flag) 1.0   \n25 (deposit_flag， fund_flag) 1.0 ",
        "id": 380,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "关联分析 （产品组合推荐）",
        "id": 381,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 26,
        "text": "这里的lift都为1，帮我对原数据进行分析，是不是原数据中不能找到有效的关联规则？",
        "id": 382,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 39,
        "text": "你的分析是正确的：lift全为1，说明在当前数据中，产品之间没有发现\"有意义的关联关系”，即没有比随机更强的组合推荐价值。",
        "id": 383,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 3,
        "text": "详细解释 ",
        "id": 384,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "1. lift 的含义",
        "id": 385,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 104,
        "text": "· lift $= 1$ ：表示前件和后件是独立的，A和B的同时出现概率等于它们各自出现概率的乘积，没有关联性。  \n· lift $>$ 1:A和B同时出现的概率高于独立出现的概率，有正向关联（推荐价值)。  \n· lift $< 1$ 1：A和B同时出现的概率低于独立出现的概率，有负向关联（互斥)。",
        "id": 386,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "2.你的数据结果",
        "id": 387,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 49,
        "text": "·所有频繁项集的lift都为1，说明\"持有存款的客户持有理财/基金/保险的概率，并不高于全体客户持有理财/基金/保险的概率\"。",
        "id": 388,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 26,
        "text": "当时数据模拟的时候， 没有考虑到关联规则的场景产品购买相对独立了，没有进行关联",
        "id": 389,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "2.你的数据结果",
        "id": 390,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 49,
        "text": "·所有频繁项集的lift都为1，说明\"持有存款的客户持有理财/基金/保险的概率，并不高于全体客户持有理财/基金/保险的概率\"。",
        "id": 391,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "这通常有两种原因：",
        "id": 392,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 61,
        "text": "1.产品持有之间完全独立，没有客户偏好某些产品组合。2.原始数据的产品持有分布非常均匀，比如每个客户都持有/不持有同样的产品，或者产品持有的分布是完全随机的。",
        "id": 393,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "3.数据分析建议",
        "id": 394,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 48,
        "length_tokens": 73,
        "text": "·检查原始数据的产品持有分布（如每个产品的持有比例、组合分布等)。  \n·检查是否有大量客户持有所有产品或都不持有产品，导致组合分布无差异。  \n·检查是否有数据预处理问题（如basket.drop_duplicates() 是否影响了分布)。",
        "id": 395,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 49,
        "length_tokens": 10,
        "text": "时间序列分析(资产变动预测)",
        "id": 396,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 50,
        "length_tokens": 10,
        "text": "时间序列分析 （资产变动预测）",
        "id": 397,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 50,
        "length_tokens": 48,
        "text": "@课题说明.txt $@$ 数据表字段含义.md，我想使用时间序列分析（资产变动预测）场景：预测客户未来季度AUM增长趋势。帮我使用ARIMA，编写新的Python",
        "id": 398,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 50,
        "length_tokens": 97,
        "text": "·使用ARIMA 模型预测客户未来季度AUM（总资产）增长趋势。  \n·脚本内演示为随机生成的季度资产序列，实际应用时请替换为真实客户的季度资产数据。  \n·自动输出历史趋势图（aum_history.png）和预测趋势图（aum_forecast.png)。  \n·控制台输出未来4个季度的资产预测值。  \n·全程中文注释，保证无乱码。",
        "id": 399,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 50,
        "length_tokens": 22,
        "text": "如需对接真实客户资产时间序列或批量预测多个客户，请随时告知！",
        "id": 400,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 51,
        "length_tokens": 10,
        "text": "时间序列分析 （资产变动预测）",
        "id": 401,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 51,
        "length_tokens": 69,
        "text": "未来4个季度AUM预测值：  \n2024-03-31 1.218434e+06  \n2024-06-30 1.264666e+06  \n2024-09-30 1.309756e+06  \n2024-12-31 1.353731e+06",
        "id": 402,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 403,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 51,
        "length_tokens": 32,
        "text": "Thinking：这里做的是整体客户未来季度的AUM趋势分析和预测，能否改成个体用户的AUM趋势分析与预测?",
        "id": 404,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "替换模拟数据",
        "id": 405,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 406,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 55,
        "text": "@logistic_regression_high_value.py @decision_tree_high_value.py @lightgbm_high_value.py @clustering_customer_segmentation.py @apriori_product_combination.py @arima_asset_trend.py 这里的数据都换成二组模拟数据.csv ",
        "id": 407,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 103,
        "text": "df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv',encoding $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'utf-8') df =pd.read_csv('二组模拟数据.csv'，encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ 'utf-8')   \nexcept Exception: df_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.re",
        "id": 408,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 89,
        "text": "f_base $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_base.csv',encoding $\\ O =$ 'gbk')   \ntry: df_assets $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('customer_behavior_assets.csv',encoding $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'utf-8')   \nexceptException: df_assets $\\mathbf {",
        "id": 409,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 88,
        "text": " 'utf-8')   \nexceptException: df_assets $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ pd.read_csv('customer_behavior_assets.csv',encoding $\\ O =$ 'gbk') df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_csv('二组模拟数据.csv'，encoding $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'gbk') ",
        "id": 410,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 46,
        "text": "#合并数据（以customer_id为主键） df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.merge(df_base，df_assets，on='customer_id'，how='inner') ",
        "id": 411,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 119,
        "text": "#数据准备   \n#将AUM（资产管理规模）作为主要特征   \ndf['total_assets'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['total_aum']#使用total_aum作为总资产   \n#从月均交易金额、月均登录次数等生成衍生特征   \ndf['monthly_income'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['monthly_transaction_amount' $] \\ast 0 . 3$ # 模拟月收入   \ndf['product_count'] $\\ma",
        "id": 412,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 108,
        "text": "$] \\ast 0 . 3$ # 模拟月收入   \ndf['product_count'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (df['deposit_balance']>0).astype(int) $^ +$ 1 (df['wealth_management_balance'] >0).astype(int) $^ +$ 八 (df['fund_balance'] >0).astype(int) $^ +$ / (df['insurance_balance'] > 0).astype(int)   \ndf['app_login_count'",
        "id": 413,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 85,
        "text": "balance'] > 0).astype(int)   \ndf['app_login_count'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['mobile_bank_login_count']   \ndf['financial_repurchase_count'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['monthly_transaction_count'] \\*(df['wealth_m   \ndf['investment_monthly_count'] $\\mathbf { \\sigm",
        "id": 414,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 48,
        "text": "  \ndf['investment_monthly_count'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['monthly_transaction_count']\\*((df['fund_bala RejectCtrl+NAccept Ctri+Shift+Y ",
        "id": 415,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 53,
        "length_tokens": 80,
        "text": "#构造标签：未来3个月资产是否提升至100万 $^ { + }$ （模拟，假设total_assets字段为当前资产，随机生成np.random.seed(42)df['future_total_assets'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['total_assets']\\* np.random.uniform(0.95，1.2，size",
        "id": 416,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 54,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 417,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 418,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 419,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 54,
        "length_tokens": 17,
        "text": "调整代码后，运行logistic_regression_high_value.py，得到更新的结果",
        "id": 420,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 55,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 421,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 55,
        "length_tokens": 9,
        "text": "决策树结构 （文本表示））",
        "id": 422,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 55,
        "length_tokens": 110,
        "text": "--- total assets $\\ L < =$ 927967.56   \n--- weights: [777.00, 0.00] class: 0   \nl--- total assets $>$ 927967.56   \nI|--- total_assets $\\ L < =$ 986557.41 --- investment monthly count $< = 2 . 4 8$ I|--- Weights:[0.00, 2.00] class: 1 |--- investment_monthly_count $>$ 2.48 I|--- financial_repurchase_c",
        "id": 423,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 55,
        "length_tokens": 101,
        "text": "onthly_count $>$ 2.48 I|--- financial_repurchase_count $< = 9 . 5 9$ Il--- weights:[2.00,O.00] class: O l--- financial_repurchase_count $>$ 9.59 I|--- weights: [0.00,1.00] class: 1 --- total assets $>$ 986557.41 | |--- weights: [0.00, 18.00] class: 1 ",
        "id": 424,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 425,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 55,
        "length_tokens": 15,
        "text": "调整代码后，运行decision_tree_high_value.py，得到更新的结果",
        "id": 426,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 56,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 427,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 56,
        "length_tokens": 46,
        "text": "特征重要性排序：   \ntotal assets: 417   \nmonthly_income:194   \nfinancial_repurchase_count:185   \napp_login_count: 117   \nproduct count: 0   \ninvestment_monthly_count: 0 ",
        "id": 428,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 429,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 56,
        "length_tokens": 16,
        "text": "调整代码后，运行lightgbm_high_value.py，得到更新的结果",
        "id": 430,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 57,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 431,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 432,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 433,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 57,
        "length_tokens": 16,
        "text": "调整代码后，运行clustering_customer_segmentation.py，得到更新的结果",
        "id": 434,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 435,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 436,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 58,
        "length_tokens": 17,
        "text": "调整代码后，运行apriori_product_combination.py，得到更新的结果",
        "id": 437,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 59,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 438,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 59,
        "length_tokens": 60,
        "text": "未来4个月AUM预测值：  \n2025-05-31 182389.513773  \n2025-06-30 182861.727655  \n2025-07-31 182841.587136  \n2025-08-31 182842.446155",
        "id": 439,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 440,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 59,
        "length_tokens": 16,
        "text": "调整代码后，运行arima_asset_trend.py，得到更新的结果",
        "id": 441,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 7,
        "text": "CASE：百万客群经营 ",
        "id": 442,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 14,
        "text": "@dashboard_app.py这里的数据都换成二组模拟数据.csv",
        "id": 443,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 42,
        "text": "客户总数 总资产 平均资产 活跃客户数 产品复购率1,000 187,582,003.984 187,582.004 1,000 39.60%",
        "id": 444,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 445,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 446,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 447,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 448,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 61,
        "length_tokens": 10,
        "text": "一个可视化大屏：dashboard_app.py",
        "id": 449,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 61,
        "length_tokens": 6,
        "text": "6个模型及分析结果",
        "id": 450,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 61,
        "length_tokens": 36,
        "text": "logistic_regression_high_value.py decision_tree_high_value.py lightgbm_high_value.py clustering_customer_segmentation.py apriori_product_combination.py arima_asset_trend.py ",
        "id": 451,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 61,
        "length_tokens": 8,
        "text": "不同维度的可视化分析",
        "id": 452,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 61,
        "length_tokens": 7,
        "text": "不同模型的洞察结果：",
        "id": 453,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 61,
        "length_tokens": 31,
        "text": "哪些客户未来3个月资产可以达到100万 $^ +$ 哪些客户未来3个月资产会低于100万后续的经营策略",
        "id": 454,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 62,
        "length_tokens": 18,
        "text": "Thinking: 能否结合大模型， 与可视化大屏进行互动？ ",
        "id": 455,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 62,
        "length_tokens": 4,
        "text": "数据分析问题：",
        "id": 456,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 62,
        "length_tokens": 132,
        "text": "·我行目前有多少客户？总资产管理规模是多少？  \n·客户的平均资产是多少？高净值客户的占比如何？  \n·客户年龄分布情况如何？哪个年龄段客户最多？  \n·不同客户等级（普通、潜力、临界、高净值）的分布情况怎样？  \n·客户在不同城市等级（一线、二线、三线）的分布如何？  \n·不同职业客户的产品偏好有什么差异？  \n·客户的网银登录次数和网点访问次数分布情况如何？  \n·年龄与手机银行使用频率有何关联？",
        "id": 457,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 17,
        "text": "Thinking: 能否结合大模型， 与6个预测模型进行互动？ ",
        "id": 458,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 5,
        "text": "模型洞察与预测",
        "id": 459,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 15,
        "text": "·客户\"CUST000172\"成为高价值客户的概率是多少？",
        "id": 460,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 10,
        "text": "，影响客户价值的最重要因素有哪些？",
        "id": 461,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 24,
        "text": "·基于客户\"CUST000116\"的现有产品持有情况，应该向其推荐什么产品？",
        "id": 462,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 16,
        "text": "·在高净值客户中，最常见的产品组合是什么？",
        "id": 463,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 19,
        "text": "·客户\"CUST000055\"的资产在未来可能呈现什么样的趋势？",
        "id": 464,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 63,
        "length_tokens": 20,
        "text": "·未来6个月内，可能出现资产下降的客户有哪些？如何提前进行干预？",
        "id": 465,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 64,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 466,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 65,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 467,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 65,
        "length_tokens": 12,
        "text": "TO DO: 使用AI大模型进行数据查询与分析",
        "id": 468,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 65,
        "length_tokens": 34,
        "text": "·数据表enterprise_credit_clients bank123:bank321@rmuf6z891lon6dxuqblqo.mysql.rds.aliyuncs.com:3306 ",
        "id": 469,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 65,
        "length_tokens": 0,
        "text": "",
        "id": 470,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 471,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 31,
        "text": "@assistant_tiket_bot-3.py基于这个，改成对公授信客户助手，对应的建表语句也需要替换",
        "id": 472,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 106,
        "text": "CREATE TABLE customer_data ( customer_id VARCHAR(1O) PRIMARY KEY COMMENT'客户编号 gender CHAR(1) COMMENT'性别: M-男,F-女', age INT COMMENT'年龄', Occupation VARCHAR(2O) COMMENT'职业', marital_status VARCHAR(1O) COMMENT'婚姻状况:已婚、未   \n婚、离异'， city_levelVARCHAR(1O) COMMENT'城市等级:一线、二线、   \n三线'， account_open_date VARCH",
        "id": 473,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 106,
        "text": "OMMENT'城市等级:一线、二线、   \n三线'， account_open_date VARCHAR(1O) COMMENT'开户 日期', total_aum DECIMAL(18,2) COMMENT'总资产管理规模', deposit_balanceDECIMAL(18,2) COMMENT'存款余额', wealth_management_balance DECIMAL(18, 2) COMMENT'理财余额', fund_balance DECIMAL(18,2) COMMENT'基金余额', insurance_balance DECIMAL(18,2) COMMENT'保险余",
        "id": 474,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 97,
        "text": "基金余额', insurance_balance DECIMAL(18,2) COMMENT'保险余额', deposit_balance_monthly_avg DECIMAL(18,2) COMMENT'存款月均余额', wealth_management_balance_monthly_avg DECIMAL(18, 2) COMMENT '   \n理财月均余额, fund_balance_monthly_avg DECIMAL(18,2) COMMENT'基金月均余额', insurance_balance_monthly_avg DECIMAL(18,2) COMMENT'保险月均余",
        "id": 475,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 92,
        "text": "ce_balance_monthly_avg DECIMAL(18,2) COMMENT'保险月均余   \n额， monthly_transaction_count DECIMAL(10,2) COMMENT'月均交易次数', monthly_transaction_amount DECIMAL(18,2) COMMENT'月均交易金额', last_transaction_date VARCHAR(1O) COMMENT'最近交易日期', mobile_bank_login_count INTCOMMENT'手机银行登录次数', branch_visit_count INTCOMMENT'网",
        "id": 476,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 37,
        "text": "COMMENT'手机银行登录次数', branch_visit_count INTCOMMENT'网点访问次数', last_mobile_login VARCHAR(1O) COMMENT'最近手机银行登录日期', ",
        "id": 477,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 66,
        "length_tokens": 0,
        "text": "",
        "id": 478,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 67,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 479,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 67,
        "length_tokens": 102,
        "text": "last_branch_visitVARCHAR(1O) COMMENT'最近网点访问日期',customer_tierVARCHAR(1O)COMMENT'客户等级:普通、潜力、临界、高净值')ENGINE $= |$ InnoDB DEFAULT CHARSET $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ utf8mb4COMMENT $\\mathbf { \\bar { \\rho } } = \\mathbf { \\bar { \\rho } }$ 银行客户数据表;",
        "id": 480,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 67,
        "length_tokens": 5,
        "text": "--创建索引 ",
        "id": 481,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 67,
        "length_tokens": 64,
        "text": "CREATE INDEX idx_customer_tier ON customer_data(customer_tier);   \nCREATE INDEX idx_age ON customer_data(age);   \nCREATE INDEX idx_total_aum ON customer_data(total_aum);   \nCREATE INDEX idx_occupation ON customer_data(occupation);   \nCREATE INDEX idx_city_level ON customer_data(city_level);   \nCREAT",
        "id": 482,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 67,
        "length_tokens": 73,
        "text": "_city_level ON customer_data(city_level);   \nCREATE INDEX idx_account_open_date ON customer_data(account_open_date); CREATE INDEX idx_last_transaction_date ON customer_data(last_transaction_date); $\\scriptstyle = = { \\frac { } { } }$   \n用户是bank123密码bank321，数据库是bank2   \n使用qwen-agent，编写新的python ",
        "id": 483,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 484,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 7,
        "text": "16 # 解决中文显示问题",
        "id": 485,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 76,
        "text": "L7 plt.rcParams['font.sans-serif'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['SimHei'，'Microsoft YaHei'，'SimSun'，'ArialL8 plt.rcParams['axes.unicode_minus'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False# 解决负号显示问题",
        "id": 486,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 6,
        "text": "#定义资源文件根目录",
        "id": 487,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 30,
        "text": "1 ROOT_RESOURCE $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(os.path.dirname(__file_)，'resource')",
        "id": 488,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 5,
        "text": "# 配置 DashScope",
        "id": 489,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 68,
        "text": "dashscope.api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.getenv('DASHSCOPE_API_KEY'，‘'） # 从环境变量获取 API Keydashscope.timeout $\\mathbf { \\tau } = \\mathbf { \\tau }$ 30＃ 设置超时时间为 30 秒",
        "id": 490,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 72,
        "text": "# $\\scriptstyle = = = = = = = = =$ 百万客群经营助手 system prompt 和函数描述 $\\scriptstyle = = = = = = =$ system_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"\"\"我是百万客群经营助手，以下是关于银行客户数据表相关的字段，我可能会编",
        "id": 491,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "银行客户数据表",
        "id": 492,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 107,
        "text": "CREATE TABLE customer_data(customer_id VARCHAR(10） PRIMARY KEY COMMENT '客户编号',gender CHAR(1）COMMENT‘性别：M-男，F-女',age INT COMMENT‘年龄',Occupation VARCHAR（20）COMMENT‘职业'，marital_status VARCHAR(10）COMMENT‘婚姻状况：已婚、未婚、离异'，city_level VARCHAR(10）COMMENT‘城市等级：一线、二线、三线'，account_open_date VARCHAR(10）COMMENT '开户",
        "id": 493,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 85,
        "text": "一线、二线、三线'，account_open_date VARCHAR(10）COMMENT '开户日期'，total_aum DECIMAL（18，2）COMMENT‘总资产管理规模'.deposit_balance DECIMAL(18，2）COMMENT‘存款余额'wealth_management_balance DECIMAL(18，2）COMMENT‘理财余额',fund_balance DECIMAL(18，2）COMMENT‘基金余额',",
        "id": 494,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 7,
        "text": "文银行客户数据查询与分析",
        "id": 495,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 1,
        "text": "插件",
        "id": 496,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 0,
        "text": "",
        "id": 497,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "三推荐对话",
        "id": 498,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 68,
        "length_tokens": 0,
        "text": "",
        "id": 499,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 500,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 13,
        "text": "我行目前有多少客户？总资产管理规模是多少？",
        "id": 501,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 10,
        "text": "√Start calling tool \"exc_sq.\".. ",
        "id": 502,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 29,
        "text": "{\"sql_input\": \"SELECT COUNT(\\*) AS total_customers, SUM(total_aum) AS total_aum FROM customer_data;\"} ",
        "id": 503,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 5,
        "text": "√ Finished tool calling ",
        "id": 504,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 505,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 0,
        "text": "",
        "id": 506,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 69,
        "length_tokens": 48,
        "text": "目前我行共有1000名客户，总资产管理规模为 $1 . 8 7 5 8 2 \\mathsf { e } + 0 8 \\mathsf { _ { o } }$ ",
        "id": 507,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 508,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 15,
        "text": "客户的平均资产是多少？高净值客户的占比如何？",
        "id": 509,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 11,
        "text": "√Start calling tool \"exc_sq.\\*.. ",
        "id": 510,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 71,
        "text": "{\"sql_input\": \"SELECT AVG(total_aum) AS average_aum, (COUNT(CASE WHEN customer_tier $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ 高净值'THEN1 END)/ COUNT(\\*)) $\\star 1 0 0$ AS high_net_worth_percentage FROM customer_data;\"} ",
        "id": 511,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 5,
        "text": "√Finished tool calling ",
        "id": 512,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 513,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 0,
        "text": "",
        "id": 514,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 70,
        "length_tokens": 25,
        "text": "客户的平均资产为187,582元，高净值客户的占比为 $2 \\text{‰}$ ",
        "id": 515,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 516,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 13,
        "text": "客户年龄分布情况如何？哪个年龄段客户最多？",
        "id": 517,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 9,
        "text": "Start calling tool \"exc_sq.\".. ",
        "id": 518,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 10,
        "text": "Finished tool calling客户年龄分布情况如下：",
        "id": 519,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 520,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 39,
        "text": "30岁以下：133人30-45岁:358人46-60岁:338人）60岁以上：171人其中，30-45岁年龄段的客户最多。",
        "id": 521,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 522,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 11,
        "text": "√Start calling tool \"exc_sql\\*\". ",
        "id": 523,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 106,
        "text": "{\"sql_input\":\"SELECT\\n CASE\\n WHEN age $< 3 0$ THEN'30岁以 下'\\n WHENage BETWEEN30 AND 45 THEN'30-45岁'\\n WHEN age BETWEEN 46 AND 60 THEN'46-60岁'\\n ELSE'60岁 以上'\\n END AS age_group\\n COUNT(\\*) AS customer_count\\nFROM customer_data\\nGROUP BY age_group\\nORDER BY FIELD(age_group,'30岁以下','30-45岁', '46-60岁','",
        "id": 524,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 27,
        "text": "ER BY FIELD(age_group,'30岁以下','30-45岁', '46-60岁','60岁以上\");\"} ",
        "id": 525,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 526,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 71,
        "length_tokens": 0,
        "text": "",
        "id": 527,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 528,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 20,
        "text": "不同客户等级（普通、潜力、临界、高净值）的分布情况怎样？",
        "id": 529,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 9,
        "text": "Start calling tool \"exc_sq.\".. ",
        "id": 530,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 531,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 9,
        "text": "不同客户等级的分布情况如下：",
        "id": 532,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 41,
        "text": "普通客户：928人·潜力客户：40人·临界客户：12人）高净值客户：20人柱状图展示了各个客户等级的数量分布。",
        "id": 533,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 0,
        "text": "",
        "id": 534,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 10,
        "text": "√Start calling tool \"exc_sq.\"... ",
        "id": 535,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 31,
        "text": "{\"sql_input\": \"SELECT\\n customer_tier,\\n COUNT(\\*)AS customer_count\\nFROMcustomer_data\\nGROUPBY customer_tier;\"} ",
        "id": 536,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 6,
        "text": "√ Finished tool calling. ",
        "id": 537,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 0,
        "text": "",
        "id": 538,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 72,
        "length_tokens": 0,
        "text": "",
        "id": 539,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 540,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 18,
        "text": "客户在不同城市等级（一线、二线、三线）的分布如何？",
        "id": 541,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 9,
        "text": "Start calling tool \"exc_sq.\".. ",
        "id": 542,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 4,
        "text": "Finished tool calling ",
        "id": 543,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 11,
        "text": "客户在不同城市等级的分布情况如下：",
        "id": 544,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 18,
        "text": "·一线：296人·二线：408人·三线：296人",
        "id": 545,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 15,
        "text": "柱状图展示了各个城市等级的客户数量分布。",
        "id": 546,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 28,
        "text": "{\"sql_input\": \"SELECT\\n city_level\\n COUNT(\\*) AS customer_count\\nFROM customer_data\\nGROUP BY city_level;\"} ",
        "id": 547,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 6,
        "text": "√Finished tool calling. ",
        "id": 548,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 0,
        "text": "",
        "id": 549,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 73,
        "length_tokens": 0,
        "text": "",
        "id": 550,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 551,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 11,
        "text": "不同职业客户的产品偏好有什么差异？",
        "id": 552,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 9,
        "text": "> Start calling tool \"exc_sql.\". ",
        "id": 553,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 9,
        "text": "√Start calling tool \"exc_sql\".. ",
        "id": 554,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 6,
        "text": "→ Finished tool calling. ",
        "id": 555,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 37,
        "text": "不同职业的客户在产品持有情况上均保持一致，所有职业的客户都持有存款、理财、基金和保险产品。具体分布如下：",
        "id": 556,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 49,
        "text": "·互联网从业者：139人  \n·企业高管：107人  \n·公务员：134人  \n·其他：189人  \n·医生：105人  \n·教师：104人  \n·私营业主：222人",
        "id": 557,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 16,
        "text": "柱状图展示了不同职业客户的各类产品持有情况。",
        "id": 558,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 83,
        "text": "{\"sql_input\": \"SELECT\\n occupation,\\n COUNT(CASE WHEN deposit_balance $> 0$ THEN 1 END) AS deposit_customers,n COUNT(CASE WHEN wealth_management_balance $> 0$ THEN 1 END)AS wealth_management_customers,\\n COUNT(CASE WHEN fund_balance $> 0$ THEN 1 END) AS fund_customers,n COUNT(CASEWHEN insurance_bala",
        "id": 559,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 36,
        "text": " AS fund_customers,n COUNT(CASEWHEN insurance_balance $> 0$ THEN 1 END) AS insurance_customers\\nFROM customer_data\\nGROUP BY occupation;\"} ",
        "id": 560,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 0,
        "text": "",
        "id": 561,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 74,
        "length_tokens": 0,
        "text": "",
        "id": 562,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 563,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 16,
        "text": "客户的网银登录次数和网点访问次数分布情况如何？",
        "id": 564,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 10,
        "text": "》 Start calling tool \"exc_sq.\".. ",
        "id": 565,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 5,
        "text": "Finished tool calling. ",
        "id": 566,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 16,
        "text": "客户的网银登录次数和网点访问次数分布情况如下：",
        "id": 567,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 171,
        "text": "·网银登录次数6，网点访问次数0：11人·网银登录次数16，网点访问次数0：38人·网银登录次数6，网点访问次数2：8人·网银登录次数17，网点访问次数3：2人·网银登录次数13，网点访问次数0：67人·网银登录次数7，网点访问次数0：22人·网银登录次数11，网点访问次数0：49人·网银登录次数22，网点访问次数0：12人·网银登录次数17，网点访问次数1：12人·网银登录次数10，网点访问次数1：23人柱状图展示了不同网银登录次数和网点访问次数的客户分布情况。",
        "id": 568,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 0,
        "text": "",
        "id": 569,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 11,
        "text": "√Start calling tool \"exc_sql.\\*.. ",
        "id": 570,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 42,
        "text": "{\"sql_input\": \"SELECT\\n mobile_bank_login_count,\\n branch_visit_count,\\n COUNT(\\*) AS customer_count\\nFROM customer_data\\nGROUP BY mobile_bank_login_count, branch_visit_count;\"} ",
        "id": 571,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 5,
        "text": "√Finished tool calling ",
        "id": 572,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 75,
        "length_tokens": 0,
        "text": "",
        "id": 573,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 574,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 11,
        "text": "年龄与手机银行使用频率有何关联？",
        "id": 575,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 14,
        "text": "Start calling tool \"exc_sq.\"..   \nFinished tool calling. ",
        "id": 576,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 27,
        "text": "从数据可以看出，不同年龄段的客户在手机银行使用频率（即登录次数）上存在差异：",
        "id": 577,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 96,
        "text": "·30岁以下：平均登录次数为16.41次·30-45岁：平均登录次数为13.53次·46-60岁：平均登录次数为11.43次·60岁以上：平均登录次数为9.63次柱状图展示了各年龄段的平均手机银行登录次数。可以看出，年轻客户的手机银行使用频率较高，而年长客户的使用频率相对较低。",
        "id": 578,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 0,
        "text": "",
        "id": 579,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 11,
        "text": "√ Start calling tool \"exc_sql.\\*.. ",
        "id": 580,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 97,
        "text": "{\"sql_input\":\"SELECT\\n CASE\\n WHEN age $< 3 0$ THEN '30岁以 下'\\n WHEN age BETWEEN30 AND 45 THEN'30-45岁'\\n WHENage BETWEEN46 AND 60 THEN'46-60岁'\\n ELSE'60岁 以上'\\n END AS age_group\\n AVG(mobile_bank_login_count) AS avg_mobile_login_count\\nFROM customer_data\\nGROUP BY age_group\\nORDER BYFIELD(age_group,'3",
        "id": 581,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 34,
        "text": "ta\\nGROUP BY age_group\\nORDER BYFIELD(age_group,'30岁以下','30-45岁', '46-60岁','60岁以上\");\"} ",
        "id": 582,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 0,
        "text": "",
        "id": 583,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 76,
        "length_tokens": 0,
        "text": "",
        "id": 584,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 4,
        "text": "AI大模型结合",
        "id": 585,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 12,
        "text": "多少客户在过去三个月内没有任何交易行为？",
        "id": 586,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 10,
        "text": "√ Start caling tool \"exc_sql\".. ",
        "id": 587,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 41,
        "text": "{\"sql_input\": \"SELECT COUNT(\\*) AS inactive_customer_count FROMcustomer_data WHERE last_transaction_date $\\angle \\cdot \\angle$ DATE_SUB(CURDATE(), INTERVAL3MONTH);\"} ",
        "id": 588,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 6,
        "text": "√ Finished tool calling. ",
        "id": 589,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 0,
        "text": "",
        "id": 590,
        "type": "table",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 0,
        "text": "",
        "id": 591,
        "type": "image",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 77,
        "length_tokens": 15,
        "text": "过去三个月内没有任何交易行为的客户数量为82人。",
        "id": 592,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 78,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 593,
        "type": "text",
        "file_name": "25.1-项目实战：AI运营助手"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "项目实战：AI搜索类应用",
        "id": 0,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "项目实战： AI搜索类应用",
        "id": 2,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "AI搜索类应用",
        "id": 3,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 12,
        "text": "Version1：对于多文件快速进行检索和回答",
        "id": 4,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 12,
        "text": "Version2：海量文件快速索引（ES)",
        "id": 5,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 44,
        "text": "基于Qwen-Agent的最佳实践 CASE：长对话检索与问答 CASE：多文档并行问答 CASE: 多智能体问答 CASE：多智能体协作路由 ",
        "id": 6,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 9,
        "text": "Version3：添加向量检索功能",
        "id": 7,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 14,
        "text": "Version4：添加外部数据源 (AI搜索MCP)",
        "id": 8,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 2,
        "length_tokens": 7,
        "text": "Version5:界面美化",
        "id": 9,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "CASE：AI搜索类应用",
        "id": 10,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 3,
        "length_tokens": 14,
        "text": "Thinking: 企业对AI搜索问答的需求是怎样的？",
        "id": 11,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 3,
        "length_tokens": 103,
        "text": "·给客服提供AI辅助，客服团队往往有 $2 0 0 +$ 人，需要响应及时，首个token回复一般在3-5秒内·数据源分散，文档多，通常会有 $1 0 0 +$ ，甚至更多的文档。大部分文档是关于产品介绍，活动规则，常见问题等·针对互联网企业，文档数量会非常巨大，比如上亿的文档，并且需要及时检索",
        "id": 12,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 3,
        "length_tokens": 14,
        "text": "Thinking: 企业中RAG上线的要求一般是怎样的？",
        "id": 13,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 3,
        "length_tokens": 11,
        "text": "速度快：3-5秒内开始出结果",
        "id": 14,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 3,
        "length_tokens": 20,
        "text": "准确率高：客服辅助准确率要求99.9%以上，可以不回答，但是不能出错",
        "id": 15,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 4,
        "length_tokens": 12,
        "text": "Version1:对于多文件快速进行检索和回答",
        "id": 16,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 6,
        "text": "CASE：AI搜索类应用",
        "id": 17,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 15,
        "text": "TO DO: 使用Qwen-Agent搭建多文件搜索问答应用",
        "id": 18,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 16,
        "text": "Step1，跑通之前的代码qwen-agent-multi-files.py ",
        "id": 19,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 98,
        "text": "59 tools $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ['my_image_gen'，'code_interpreter'] #‘code_interpi  \n60 import os  \n61 # 获取文件夹下所有文件  \n62 file_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join('./'，'docs')  \n63 files $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ []  \n64 if os.path.exists(file_dir",
        "id": 20,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 100,
        "text": "hbf { \\sigma }$ []  \n64 if os.path.exists(file_dir):  \n65 # 遍历目录下的所有文件  \n66 for file in os.listdir(file_dir):  \n67 file_path $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ os.path.join(file_dir，file)  \n68 if os.path.isfile(file_path): # 确保是文件而不是目录  \n69 files.append(file_path)  \n70 print('files='，files)  ",
        "id": 21,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 95,
        "text": "les.append(file_path)  \n70 print('files='，files)  \n71  \n72 bot $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Assistant(llm $\\ c =$ llm_cfg,  \n73 system_message $\\ O =$ system_instruction,  \n74 function_list $\\ c =$ tools,  \n75 files $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ files)  \n76  \n77 # 步骤 4：作为聊天机",
        "id": 22,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 80,
        "text": " \\mathbf { \\sigma }$ files)  \n76  \n77 # 步骤 4：作为聊天机器人运行智能体。  \n78 messages $\\mathbf { \\tau } = \\mathbf { \\tau }$ [］# 这里储存聊天历史。  \n79 query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"介绍下雇主责任险\"",
        "id": 23,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 42,
        "text": "雇主责任险是一种为企业设计的保险产品，旨在转移企业在雇佣员工过程中可能面临的法律责任和经济风险。险的主要内容和特点：",
        "id": 24,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 26,
        "text": "### 1．\\*\\*保障范围 $^ { * * }$ 雇主责任险主要保障以下方面：",
        "id": 25,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 132,
        "text": "-\\*\\*死亡赔偿金\\*\\*：员工因工作原因身故，企业需支付的赔偿。  \n-\\*\\*伤残赔偿金\\*\\*：员工因工作原因伤残，企业需支付的赔偿。  \n-\\*\\*医疗费用\\*\\*：员工因工作原因受伤或患职业病产生的医疗费用。  \n\\*\\*误工费用 $^ { * * }$ ：员工因伤暂时无法工作，企业需支付的工资补偿。  \n－ \\*\\*法律诉讼费\\*\\*：因工伤纠纷产生的法律费用。",
        "id": 27,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "### 2．\\*\\*适用对象 $^ { * * }$ ",
        "id": 28,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 42,
        "text": "－任何有用工需求的单位，包括企业、个体工商户等。  \n－覆盖正式员工、临时工、学徒工等（无需正式劳动合同，事实劳动关系即可）。",
        "id": 29,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "### 3．\\*\\*产品亮点 $^ { * * }$ ",
        "id": 30,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 105,
        "text": "-\\*\\*风险转移\\*\\*：将企业对员工的责任风险转嫁给保险公司。  \n-\\*\\*税前列支\\*\\*：保费可计入企业成本，减少25%的企业所得税。  \n\\*\\*减少纠纷\\*\\*：快速理赔，降低工伤纠纷。  \n-\\*\\*灵活定制 $^ { * * }$ ：可根据企业需求选择不同版本（如A款、B款、94款）。",
        "id": 31,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 38,
        "text": "### 4．\\*\\*与其他保险的区别 $^ { * * }$ - \\*\\*vs 团体意外险 $^ { * * }$ ：",
        "id": 32,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 33,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 92,
        "text": "－雇主责任险从法律角度保障企业，意外险仅是员工福利。－雇主责任险涵盖误工费和职业病，意外险不涵盖。- \\*\\*vs 工伤保险 $^ { * * }$ ：-工伤保险无法覆盖全部费用（如一次性就业补助金）。－雇主责任险理赔更快捷，不影响企业安全记录。",
        "id": 34,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 22,
        "text": "### 5． $^ { * * }$ 理赔案例 $^ { * * }$ ",
        "id": 35,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 5,
        "length_tokens": 24,
        "text": "-\\*\\*案例1\\*\\*：员工上班途中车祸身故，获赔30万元。",
        "id": 36,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "CASE：AI搜索类应用",
        "id": 37,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 43,
        "text": "Step2，在qwen-agent-multi-files.py 的基础上，添加GUI@qwen-agent-multi-files.py 参考 $@$ assistant_ticket_bot-3.py添加gui模式，编写新的 .py",
        "id": 38,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 119,
        "text": "149 def app_gui():150 \"\"图形界面模式，提供 Web 图形界面\"\"\"  \n2qwen-agent-multi-files-gui.py $+ 1 7 7 - 1 \\ √$ □ 151 try:print(\"正在启动 Web 界面..\")  \nimport pprint 153 # 初始化助手  \nimport urllib.parse 154 bot $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ init_agent_service()  \nimport json5 155 # 配置聊天界面，列举3个典型门票查询问题  \nfrom q",
        "id": 40,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 97,
        "text": "  \nimport json5 155 # 配置聊天界面，列举3个典型门票查询问题  \nfrom qwen_agent.agents import Assistant 156 chatbot_config $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {  \nfrom qwen_agent.tools.base import BaseTool， register_tool 157 'prompt.suggestions':[  \nimport os 158 '画一只在写代码的猫',  \nfrom qwen_agent.gui import WebUI 15",
        "id": 41,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 146,
        "text": "'画一只在写代码的猫',  \nfrom qwen_agent.gui import WebUI 159 '介绍下雇主责任险'，160 ‘帮我画一个宇宙飞船，然后把它变成黑白的‘161 ]  \n#步1（）：名为yimage_gen”自定具 101814 print \"Web界面准备就绪，正在启动服务……\"） }  \nclass MyImageGen(BaseTool): 165 WebUI(# ‘description’ 用干告诉智能体该工具的功能。 166 bot,AI绘画 (图像生) 专 输入文本描述，返回基于文本信息绘 167 chatbot_config $\\mathbf { \\sigm",
        "id": 42,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 6,
        "length_tokens": 68,
        "text": "文本描述，返回基于文本信息绘 167 chatbot_config $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ chatbot_config168 ).run()169 except Exception as e:170 print(f\"启动 Web 界面失败：{str(e)}\")171 print(\"请检查网络连接和 API Key 配置\")",
        "id": 43,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "CASE：AI搜索类应用",
        "id": 44,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 45,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 46,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 79,
        "text": "雇主责任险是一种为企业设计的保险产品，旨在为企业提供保障，以应对员工在工作期间发生意外事故或罹患职业病时可能产生的经济赔偿责任。这种保险可以帮助企业将潜在的雇员风险转嫁给保险公司，从而降低企业的用工风险和减少工伤纠纷。",
        "id": 47,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "以下是雇主责任险的一些关键特点：",
        "id": 48,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "1.保障范围：",
        "id": 49,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 58,
        "text": "$0$ 死亡赔偿金  \n$0$ 伤残赔偿金  \n$0$ 医疗费用  \n$0$ 误工费用 (部分计划可能不包括)  \n$0$ 法律诉讼费 (部分计划可能不包括)",
        "id": 50,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 2,
        "text": "中user",
        "id": 51,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "2.其他亮点：",
        "id": 52,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 78,
        "text": "$0$ 雇主可以将对员工的风险责任转嫁给保险公司。  \n。有助于降低企业用工风险。  \n$0$ 减少工伤纠纷。  \n$0$ 提高员工福利保障。  \n$0$ 某些情况下，保费可以在税前列支，从而减轻企业税务负担。",
        "id": 53,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "3.不同版本的区别：",
        "id": 54,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 110,
        "text": "$0$ A款:根据《工伤保险条例》的规定，涵盖因工作而遭受的意外伤害或职业病导致的伤、残或死亡。$0$ B款:从《工伤保险条例》中摘录的部分工伤情形，涵盖因此类情形导致的伤、残或死亡。$0$ 94款:覆盖因工作而遭受的意外伤害或职业病导致的伤、残或死亡，根据雇员工资总额进行",
        "id": 55,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 2,
        "text": "女None",
        "id": 56,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 1,
        "text": "插件",
        "id": 57,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "I'm a helpful assistant. ",
        "id": 58,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "my_image_gen code_interpreter ",
        "id": 59,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "三推荐对话",
        "id": 60,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 61,
        "type": "table",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 8,
        "length_tokens": 12,
        "text": "RAG的三级架构 (Qwen-Agent) ",
        "id": 62,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 9,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 63,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 9,
        "length_tokens": 27,
        "text": "Qwen-Agent构建的智能体包含三个复杂度级别，每一层都建立在前一层的基础上：",
        "id": 64,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "·级别一：检索 ",
        "id": 65,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 9,
        "length_tokens": 80,
        "text": "处理100万字上下文的一种朴素方法是采用RAG。RAG将上下文分割成较短的块，每块不超过512个字，然后仅保留最相关的块在8k字的上下文中。挑战在于如何精准定位最相关的块。经过多次尝试，我们提出了一种基于关键词的解决方案：",
        "id": 66,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 67,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 68,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 54,
        "text": "步骤1: 指导聊天模型将用户查询中的指令与非指令信息分开例如，将用户查询\"回答时请用2000字详尽阐述，我的问题是，自行车是什么时候发明的？请用英文回复。“",
        "id": 69,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 70,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 35,
        "text": "转化为{\"信息\":[\"自行车是什么时候发明的\"],\"指令\":[\"回答时 用2000字\",\"尽量详尽\",\"用英文回复\"}} ",
        "id": 71,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 65,
        "text": "步骤2：要求聊天模型从查询的信息部分推导出多语言关键词。 例如，短语\"自行车是什么时候发明的\"会转换为{\"关键词_英文 \":[\"bicycles\",\"invented\",\"when\"],\"关键词_中文\":[\"自行车\",\"发 明\",\"时间\"]}。 ",
        "id": 72,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 29,
        "text": "步骤3：运用BM25这一传统的基于关键词的检索方法，找出与提取关键词最相关的块。",
        "id": 73,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 74,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 75,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 8,
        "text": "级别二：分块阅读 ",
        "id": 76,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 40,
        "text": "直接RAG检索很快，但常在相关块与用户查询关键词重叠程度不足时失效 $\\Rightarrow$ 导致这些相关的块未被检索到。",
        "id": 77,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 32,
        "text": "尽管理论上向量检索可以缓解这一问题，但实际上效果有限。为了解决这个局限，我们采用了一种暴力策略：",
        "id": 78,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 51,
        "text": "步骤1：对于每个512字块，让聊天模型评估其与用户查询的相关性，如果认为不相关则输出\"无\",如果相关则输出相关句子。这些块会被并行处理以避免长时间等待。",
        "id": 79,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 50,
        "text": "步骤2：取那些非\"无\"的输出（即相关句子），用它们作为搜索查询词，通过BM25检索出最相关的块（总的检索结果长度控制在8k上下文限制内）。",
        "id": 80,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 30,
        "text": "步骤3：最后，基于检索到的上下文生成最终答案，这一步骤的实现方式与通常的RAG相同。",
        "id": 81,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 82,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 83,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "级别三：逐步推理",
        "id": 84,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 12,
        "length_tokens": 189,
        "text": "在基于文档的问题回答中，一个典型的挑战是多跳推理。  \n例如，考虑回答问题：“与第五交响曲创作于同一世纪的交通工具是什么？”  \n模型首先需要确定子问题的答案，“第五交响曲是在哪个世纪创作的？”即19世纪。然后，它才可以意识到包含“自行车于19世纪发明”的信息块实际上与原始问题相关的。  \nFunctionCall智能体或ReAct智能体是经典的解决方案，它们内置了问题分解和逐步推理的能力。因此，我们将前述级别二的智能体（Lv2-智能体）封装为一个工具，由工具调用智能体（Lv3-智能体）调用。  \n工具调用智能体进行多跳推理的流程如下：  \n向Lv3-智能体提出一个问题  \nwhile (Lv",
        "id": 85,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 12,
        "length_tokens": 107,
        "text": " \n工具调用智能体进行多跳推理的流程如下：  \n向Lv3-智能体提出一个问题  \nwhile (Lv3-智能体无法根据其记忆回答问题){Lv3-智能体提出一个新的子问题待解答。Lv3-智能体向Lv2-智能体提问这个子问题。将Lv2-智能体的回应添加到Lv3-智能体的记忆中，  \n（  \nLv3-智能体提供原始问题的最终答案。",
        "id": 86,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 87,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 13,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 88,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 13,
        "length_tokens": 103,
        "text": "例如，Lv3-智能体最初向Lv2-智能体提出子问题：“贝多芬的第五交响曲是在哪个世纪创作的？”收到“19世纪”的回复后，Lv3-智能体提出新的子问题：“19世纪期间发明了什么交通工具？”通过整合Lv2-智能体的所有反馈，Lv3-智能体便能够回答原始问题：“与第五交响曲创作于同一世纪的交通工具是什么？”",
        "id": 89,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 13,
        "length_tokens": 73,
        "text": "Ask the 1st sub-question \"In which century was the Fifth Symphony composed\" Long Docs of Ask the 2nd sub-question \"What vehicle was invented during the 19th century?\" 1M tokens User Query: \"What vehicle was invented in Level-3 Agent Level-2 Agent the same century as the Fifth (Multi-Hop Reasoning) (",
        "id": 90,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 13,
        "length_tokens": 74,
        "text": " same century as the Fifth (Multi-Hop Reasoning) (Read All Chunks Parallelly) Symphony was composed?\" Answer the 1st sub-question:“The 19th century.\" Final Response: \"Bicycles were invented Give the final response Answer the 2nd sub-question: \"Bicycles.\" in the same century.\" once allsub-questions a",
        "id": 91,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 13,
        "length_tokens": 16,
        "text": "es.\" in the same century.\" once allsub-questions are answered. ",
        "id": 92,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "Qwen-Agent中的检索实现",
        "id": 93,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 55,
        "text": "@qwen-agent-multi-files.py理解这里的RAG实现过程，调用的qwen_agent工具，先将文档拆分成小块，存放到workspace中的tools目录下，帮我查找在qwen_agent中的具体实现代码在哪里",
        "id": 94,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 57,
        "text": "好的，我理解您的问题。您想知道 qwen-agent 框架在实现 RAG (检索增强生成)时，具体是如何处理您传入的文档的，特别是文档是如何被拆分、存储以及具体代码实现的位置。",
        "id": 95,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 21,
        "text": "根据您提供的 qwen-agent-multi-files.py 代码，我们可以定位到关键的入口：",
        "id": 96,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "好的，搜索结果已经出来了。",
        "id": 97,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 61,
        "text": "正如我们所料，qwen_agent/agents/assistant.py 是核心文件，但它继承了更底层的能力。Assistant 类的初始化方法__init_调用了其父类 FnCallAgent 的 __init_ 方法，并将 files 和 rag_cfg参数传递了过去。",
        "id": 98,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 47,
        "text": "这里的 files 参数就是RAG 知识库的来源。Assistant 类在初始化时会接收这些文件，并进行一系列处理，最终构建出一个 retriever对象，用于在运行时进行检索。",
        "id": 99,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 30,
        "text": "通过定位分析，可以看到关键实现在于：qwen_agent/memory/memory.py，它加载了两个工具：retrieval 和 doc_parser。",
        "id": 100,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 57,
        "text": "真正的RAG处理逻辑并不在Assistant 类本身，而是在它所依赖的self.mem (Memory)对象中。从 Assistant 的 _run 和 _prepend_knowledge_prompt 方法中可以看到，它通过调用 self.mem.run(）来获取知识 (knowledge)。",
        "id": 101,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 46,
        "text": "您猜测的\"将文档拆分成小块，存放到workspace中的tools目录下\"这个流程，非常接近 qwen-agent 的实际做法。这个过程由框架在内部自动完成。",
        "id": 102,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 29,
        "text": "这说明，处理文档、分块、存储和检索的核心代码位于 qwen_agent的Memory 模块中。",
        "id": 103,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 29,
        "text": "为了找到具体的实现代码，我将首先在代码库中搜索Assistant 类的定义，从而找到它处理files参数的逻辑。",
        "id": 104,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 14,
        "length_tokens": 55,
        "text": "现在，我将深入 qwen_agent/memory/memory.py 文件，来查找具体的实现。我将阅读这个文件，重点关注它如何初始化、处理传入的文件、如何进行文本分割（chunking）以及使用了哪些检索方法。",
        "id": 105,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "Qwen-Agent中的检索实现",
        "id": 106,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 15,
        "length_tokens": 54,
        "text": "当用户在初始化Asistant对象时传入files 参数，RAG流程便被激活。整个过程的核心并非在Assistant类中直接实现，而是委托给了其内部的 self.mem（一个Memory 类的实例）来处理。",
        "id": 107,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "Memory类在初始化时，会默认加载两个关键工具：",
        "id": 108,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 15,
        "length_tokens": 20,
        "text": "·retrieval：负责接收用户查询，并从文档中检索最相关的信息。",
        "id": 109,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 15,
        "length_tokens": 19,
        "text": "·doc_parser：负责解析不同格式的文档，并将其内容进行切分。",
        "id": 110,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "Qwen-Agent中的检索实现",
        "id": 111,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 14,
        "text": "关键步骤1. 文档解析与分块(Chunking)",
        "id": 112,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 19,
        "text": "这是RAG的基础，将大型文档转化为易于检索的小单元",
        "id": 113,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "·触发点：当retrieval工具需要进行信息检索时，它首先需要获取文档内容。",
        "id": 114,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 27,
        "text": "核心实现：文档解析与分块的逻辑主要封装在qwen_agent/tools/simple_doc_parser.py 文件中。",
        "id": 115,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "工作流程：",
        "id": 116,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 13,
        "text": "1.retrieval工具调用doc_parser工具来处理文件.",
        "id": 117,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 27,
        "text": "2.doc_parser会根据文件扩展名（如.pdf,.docx,.txt等）自动选择合适的内部解析器",
        "id": 118,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 43,
        "text": "3.选定的解析器读取文件内容，并根据parser_page_size 参数(可在rag_cfg中配置，默认值为 500 字符)将文本切分成多个文本块(chunks)。",
        "id": 119,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 16,
        "length_tokens": 43,
        "text": "4.每一个文本块都被构造成一个标准的Python 字典，格式通常为{'page_content':'.,'metadata.: {.}},其中 metadata包含了源文件名、页码等信息。",
        "id": 120,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "Qwen-Agent中的检索实现",
        "id": 121,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 11,
        "text": "关键步骤2. 文档块的存储 ",
        "id": 122,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 22,
        "text": "关于分块后数据的存放位置，qwen-agent的默认实现有其特殊之处。",
        "id": 123,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 52,
        "text": "·存储方式：框架并不会将分块后的文档持久化存储到磁盘上的workspace/tools 目录中。workspace 目录更多是为code_interpreter这类需要读写临时文件的工具准备的。",
        "id": 124,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "工作流程：",
        "id": 125,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 23,
        "text": "1.doc_parser解析完所有文档后，会返回一个包含所有文本块的列表（Listof Dictionaries），",
        "id": 126,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 19,
        "text": "2.这个列表是 临时的， 并且完全存储在内存中",
        "id": 127,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 17,
        "length_tokens": 35,
        "text": "3.它的生命周期仅限于当前的这一次请求。当retrieval工具需要检索时，它会直接遍历这个内存中的列表来完成操作。",
        "id": 128,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "Qwen-Agent中的检索实现",
        "id": 129,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 18,
        "length_tokens": 11,
        "text": "关键步骤3.检索(Retrieval) ",
        "id": 130,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 18,
        "length_tokens": 15,
        "text": "这是RAG的核心步骤，即根据用户问题找到最相关的知识",
        "id": 131,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 18,
        "length_tokens": 54,
        "text": "·触发点：在Memory类的_run方法中，会调用 self.function_map['retrieval'].cal()来启动检索过程。  \n·核心实现：检索算法的逻辑主要位于qwen_agent/tools/retrieval.py 文件中。",
        "id": 132,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 18,
        "length_tokens": 3,
        "text": "工作流程：",
        "id": 133,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 18,
        "length_tokens": 131,
        "text": "1．retrieval工具首先通过doc_parser获取所有文档在内存中的分块列表。  \n2.接着，它会根据rag_searchers配置项来决定使用哪种搜索方法。默认配置包括：-keyword_search:使用经典的BM25 算法，计算用户查询和每个文本块之间的相关度得分。-front_page_search:优先检索文档的起始部分。  \n3．retrieval工具执行搜索，对所有文本块进行打分和排序。  \n4.最后，它将得分最高的若干个文本块作为最终的检索结果返回。",
        "id": 134,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 19,
        "length_tokens": 10,
        "text": "Summary (Qwen-Agent中的检索实现)",
        "id": 135,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "Qwen-Agent中的检索实现：",
        "id": 136,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 19,
        "length_tokens": 61,
        "text": "·文档拆分代码:qwen_agent/tools/simple_doc_parser.py  \n·检索逻辑代码:qwen_agent/tools/retrieval.py  \n·数据存储位置：内存中。数据是临时的，仅为单次查询服务，不会被持久化到workspace目录。",
        "id": 137,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 19,
        "length_tokens": 47,
        "text": "通过这种\"解析即用\"的内存式处理流程，qwen-agent实现了一个轻量级且高效的RAG系统，无需依赖外部的向量数据库或持久化存储。",
        "id": 138,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "Version2: 海量文件快速索引 (ES)",
        "id": 139,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 3,
        "text": "Elasticsearch使用",
        "id": 140,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "Elasticsearch (简称ES）: ",
        "id": 141,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 78,
        "text": "一个开源的高扩展的分布式全文检索引擎，可以免费使用。由于ES是基于Java开发的，所以在安装时需要先安装Java环境，且Java版本通常需要1.8以上。不过从Elasticsearch7.0开始，其安装包中包含了一个相匹配的OpenJDK版本，因此可以不单独安装Java",
        "id": 142,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "1.下载Elasticsearch ",
        "id": 143,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "https://www.elastic.co/cn/downloads/elasticsearch ",
        "id": 144,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 44,
        "text": "Elasticsearch 是一个Java 程序，因此系统上必须安装Java。检查Java是否安装成功：打开命令行工具(cmd),输入java-version，如果能看到版本号 $\\Rightarrow$ 说明安装成功",
        "id": 145,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "Download and unzip Elasticsearch ",
        "id": 146,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "Choose platform: ",
        "id": 147,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 2,
        "text": "Windows ",
        "id": 148,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 2,
        "text": "Windows ",
        "id": 149,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "sha ↓ asc ",
        "id": 150,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 3,
        "text": "Elasticsearch使用",
        "id": 151,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "2.运行 Elasticsearch",
        "id": 152,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 22,
        "text": "Step1.运行启动脚本：进入bin文件夹，双击运行elasticsearch.bat文件。",
        "id": 153,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 57,
        "text": "Step2.观察启动过程：此时会弹出一个命令行窗口，开始打印启动日志。首次启动会生成一些配置和安全设置，包括一个elastic超级用户的密码（你需要将这个密码保存下来 $\\Rightarrow$ 后面会用到)",
        "id": 154,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 76,
        "text": "4.\\*\\*验证是否成功\\*\\*：等待启动完成后（日志不再滚动），打开浏览器访问https://localhost:9200。浏览器会提示您输入用户名和密码。输入用户名elastic和您刚刚保存的密码。如果能看到一个包含版本信息的 JSON 响应，说明 Elasticsearch 已成功在您的Windows上运行。",
        "id": 155,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 156,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 22,
        "length_tokens": 15,
        "text": "说明：关闭elasticsearch.bat的运行窗口就会关闭ES服务",
        "id": 157,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 3,
        "text": "Elasticsearch使用",
        "id": 158,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "Thinking: 如果不知道用户名，密码怎么办？",
        "id": 159,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 10,
        "text": "curl -k https://localhost:9200 ",
        "id": 160,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 85,
        "text": "{eror\":\"oe\":\"ty\":\"suritexcepti\"\"reo\":\"msinguthnticaticredentialsfoqst\"\"ad\": Authenticate\":[\"Basic realm $\\ c =$ \\\"security\\\",charset=\\\"UTF-8\\\"\"Bearerr $\\ c = \\stackrel { \\cdot } { }$ \\\"security\\\"\",\"ApiKey\"}],\"type\":\"security_exception\",\"reason\":\"ms authentication credentials for REST request [/l\",\"h",
        "id": 161,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 71,
        "text": "uthentication credentials for REST request [/l\",\"header\":{\"WWW-Authenticate\":[\"Basic realm $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ \\\"security\\\",charset=\\\"UTF-8\\\"\",\"Bearer realm $\\ c = \\ c ^ { \\prime }$ \\\"security\\\"\",\"ApiKey\"!},\"stats\":01} ",
        "id": 162,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 163,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 20,
        "text": "Elasticsearch返回了一个401错误，表示请求缺少认证凭证，需要进行身份验证。",
        "id": 164,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "重置密码:bin/elasticsearch-reset-password -u elastic ",
        "id": 165,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 23,
        "length_tokens": 63,
        "text": "warning: ignoring JAVA_HoME=D:\\\\Program Files\\\\Java\\\\jdk-22; using bundled JDK This tool will reset the password of the [elastic] user to an autogenerated value. The password will be printed in the consolel   \nPlease confirm that you would like to continue [y/N]y ",
        "id": 166,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 3,
        "text": "Elasticsearch使用",
        "id": 167,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "Thinking：如何在Python中使用ES?",
        "id": 168,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 29,
        "text": "好的，我明白了。我将为您编写一个Python 脚本，该脚本会完成您指定的五个步骤：",
        "id": 169,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "1.连接到您本地的Elasticsearch服务。",
        "id": 170,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "2.创建一个新的索引 (如果已存在则会重建)。",
        "id": 171,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 24,
        "text": "3.读取 docs文件夹下的所有文档，并将它们的内容添加到ES索引中。",
        "id": 172,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 30,
        "text": "Step1，安装es工具包  \npip install elasticsearch  \nStep2，编写python-es，完成文档的索引和检索",
        "id": 173,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 25,
        "text": "4.使用您提供的查询语句\"工伤保险和雇主险有什么区别？“执行搜索。",
        "id": 174,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "5.在命令行中打印出搜索结果。",
        "id": 175,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 44,
        "text": "首先，为了能读取 docs 文件夹下的各种文档 (特别是PDF文件)，我们需要安装一个额外的库 pypdf 。  \n我将为您生成安装这个库的命令。",
        "id": 176,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 18,
        "text": "docs文件夹里面有很多平安雇主险的文档，帮我",
        "id": 177,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "pip install pypdf ",
        "id": 178,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 2,
        "text": "Output ",
        "id": 179,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 119,
        "text": "1）连接到ES  \n2)创建一个索引  \n3）索引文档 (添加这些数据)  \n4）执行搜索  \nsearch query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"工伤保险和雇主险有什么区别？\"  \n5）显示搜索结果  \n编写.pyindex_and_search_docs.py $+ 1 2 4 √$   \nimport os  \nfrom elasticsearch import Elasticsearch  \nfrom pypdf import PdfReader  \nimport warnings  \n# 忽略来自 pypdf 的特定用户警告",
        "id": 180,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 80,
        "text": "PdfReader  \nimport warnings  \n# 忽略来自 pypdf 的特定用户警告  \nwarnings.filterwarnings(\"ignore\",category=Userwarning，module $\\ L =$ 'pypdf')  \ndef index_and_search_documents():1 =连接到ES，索引docs文件夹下的文档，并执行搜索。11 111--- 1. 连接到 Elasticsearch -Y",
        "id": 181,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 182,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "Elasticsearch使用",
        "id": 183,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 33,
        "text": "$\\scriptstyle { \\vec { \\mathfrak { e } } }$ index_and_search_docs.py $> \\otimes$ index_and_search_documents ",
        "id": 184,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 91,
        "text": "1 import os2 from elasticsearch import Elasticsearch3 from pypdf import PdfReader4 import warnings56 # 忽略来自 pypdf 的特定用户警告7 warnings.filterwarnings(\"ignore\"， category $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ UserWarning，module $\\mathbf { \\tau } = \\mathbf { \\tau }$ ' pypdf89公10 def index_and_sea",
        "id": 185,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 111,
        "text": "= \\mathbf { \\tau }$ ' pypdf89公10 def index_and_search_documents():1112 连接到ES，索引docs文件夹下的文档，并执行搜索。1314 # --- 1.连接到 Elasticsearch15 # 请确保将\"YOUR_ELASTIC_PASSWORD\" 替换为您的真实密码16 try:17 client $\\mathbf { \\tau } = \\mathbf { \\tau }$ Elasticsearch(18 \"https://localhost:9200\"， # 1.使用 https19 basic_auth $\\ c =$",
        "id": 186,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 106,
        "text": "localhost:9200\"， # 1.使用 https19 basic_auth $\\ c =$ (\"elastic\"，\"euqPcOlHrmW18rtaS-3P\"),20 verify_certs $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ False # 2．忽略SSL证书验证 (等同于 curl -k)2122 if not client.ping():23 print(\"无法连接到 Elasticsearch，请检查服务是否正在运行以及密24 return25 print(\"成功连接到 Elasticsearch!\")",
        "id": 187,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "incorrect startxref pointer(1) ",
        "id": 188,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 25,
        "text": "-成功索引文档：平安境内紧急医疗救援服务条款.pdf（ID：11）",
        "id": 189,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 88,
        "text": "D:\\Appataocal\\Programs\\Pyton\\Python3\\isite-paages\\uriconnectionool.py06:InseureReqetWar ning:Unverified HTPSrequestisbeing madetohost'localhost'.Addingcertificateverificationisstrongly dvised.See:https://urllib3.readthedocs.io/en/1.26.×/advanced-usage.html#ssl-warnings warnings.warn( ",
        "id": 190,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 23,
        "text": "-成功索引文档：平安附加疾病身故保险条款.pdf（ID：12）",
        "id": 191,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "所有文档索引完成！",
        "id": 192,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 87,
        "text": "D:Appataoal\\Programs\\Python\\Pyton3ibite-pacagesurbconnectipool.py06:InsecureReqstWar ning:Unverified HTPSrequestisbeingmadetohostlocalhost'.Addingcertificateverificationisstronglya dvised.See:https://urllib3.readthedocs.io/en/1.26.×/advanced-usage.html#ssl-warnings warnings.warn( ",
        "id": 193,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 21,
        "text": "正在执行搜索，查询语句：‘工伤保险和雇主险有什么区别？‘",
        "id": 194,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 90,
        "text": "D:AppDataocal\\Programs\\Python\\Python31ib\\site-packages\\urib\\connectinpool.py061:InsecureRequstWar ning:Unverified HTPSrequestisbeing madetohost‘localhost.Addingcertificateverificationisstronglya dvised.See:https://urllib3.readthedocs.io/en/1.26.×/advanced-usage.html#ssl-warnings warnings.warn( ",
        "id": 195,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 26,
        "text": "---搜索结果-----结果1---来源文件：2-雇主责任险.txt相关度得分：10.10",
        "id": 196,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 197,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 198,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 199,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 152,
        "text": "内容预览：【雇主责任险】Q1雇员意外事故给企业造成的损害有多大？甚至可能让一家公司倒闭！！员工出外勤不幸遇到车祸被撞高位截瘫公司赔偿近一百万抽干公司流动资金无力维持生产走破产程序..Q2雇主责任险的保障范围和其他亮点1.保障只要有用工需求的单位，都可以购买雇主责任险。2.保障范围：死亡赔偿金伤残赔偿金医疗费用误工费用（c款不赔）法律诉讼费（c款不赔）3.其他亮点...",
        "id": 200,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 23,
        "text": "-结果2-来源文件：4-雇主安心保.txt相关度得分：9.16",
        "id": 201,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 154,
        "text": "内容预览：【雇主安心保】Q1什么是雇主安心保？工伤保险也能很简单一个小老板的心声.·工伤保险待遇纠纷数占社会保险纠纷71.90%·工伤事故处理不好，很有可能让一家小型企业倒闭！我最大的希望就是手下这群工人，每天都能平平安安的。无论是谁出了事故，都赔不起啊！雇主安心保，真正从雇主权益角度出发！·投保免核、灵活定制，你担心的风险，全部由它买单！Q2雇主安心保的赔偿范围雇主安心保.",
        "id": 202,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "使用ES可以快速得到检索结果",
        "id": 203,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 3,
        "text": "索引管理",
        "id": 204,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 66,
        "text": "index_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"pingan_employer_insurance\" if client.indices.exists(index $\\ c =$ index_name): print(f\"索引'{index_name}'已存在，正在删除i旧索引...\") client.indices.delete(index $\\ c =$ index_name) ",
        "id": 205,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 21,
        "text": "print(f\"正在创建新索引'{index_name}'...\")client.indices.create(index=index_name)",
        "id": 206,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 36,
        "text": "定义索引名:index_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"pingan_employer_insurance\"删除旧索引(如果存在)：",
        "id": 207,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 22,
        "text": "- client.indices.exists(...):检查名为 pingan_employer_insurance的索引是否已经存在。",
        "id": 208,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 42,
        "text": "-client.indices.delete(..):如果存在，则将其删除目的：确保每次运行脚本都是在一个全新的、干净的索引上进行操作，避免了旧数据的干扰。",
        "id": 209,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 210,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 26,
        "length_tokens": 22,
        "text": "创建新索引l:client.indices.create(index=index_name)，创建一个新的、空的索引。",
        "id": 211,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 10,
        "text": "读取、 解析并索引文档 ",
        "id": 212,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 92,
        "text": "docs_folder $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'docs'   \n?   \nprint(\"\\n正在从'docs'文件夹读取并索引文档...\")   \ndoc_id_counter $= 1$   \nfor filename in os.listdir(docs_folder):   \n\" if content.strip(): client.index( index=index_name, d $\\ c =$ doc_id_counter, document={ \"file_name\": filename, \"content\": conte",
        "id": 213,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 47,
        "text": "document={ \"file_name\": filename, \"content\": content } ） print(f\" -成功索引|文档: {filename} (ID: {doc_id_counter})\") doc_id_counter $+ = 1$ ",
        "id": 214,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 36,
        "text": "#... #强制刷新索引，确保数据立即可搜 client.indices.refresh(index $\\mathop { \\left. \\sum \\right.} $ index_name) ",
        "id": 215,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 18,
        "text": "遍历文件:使用os.listdir()遍历docs文件夹下的所有项目。",
        "id": 216,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "文件类型判断：",
        "id": 217,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 31,
        "text": "-通过 filename.lower().endswith('.pdf')和.txt来判断文件类型。对于不支持的类型，会打印一条消息并跳过。",
        "id": 218,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "内容提取：",
        "id": 219,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 37,
        "text": "\\*\\*PDF文件\\*\\*:使用PdfReader 打开 PDF，逐页提取文本。  \n\\*\\*TXT文件\\*\\*:直接读取整个文件的内容。",
        "id": 220,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 6,
        "text": "发送到Elasticsearch: ",
        "id": 221,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 82,
        "text": "client.index(...):对于提取到内容的文件， 将其发送到ES。-index $\\circleddash$ index_name:指定要存入哪个索引。-id=doc_id_counter:为每条记录分配一个从1开始递增的ID。- document $: = \\{ \\ldots \\}$ ：这是要存入的实际数据，一个包含文件名",
        "id": 222,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "和提取内容的JSON对象。",
        "id": 223,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 27,
        "length_tokens": 33,
        "text": "刷新索引l:client.indices.refresh(index=index_name)，这是一个重要操作。在ES中，新写入的数据需要\"刷新\"后才能被搜索到。",
        "id": 224,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 3,
        "text": "执行搜索 ",
        "id": 225,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 106,
        "text": "search_query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"工伤保险和雇主险有什么区别？\"  \nprint(f\"\\n正在执行搜索，查询语句:'{search_query}\")  \nresponse $\\mathbf { \\tau } = \\mathbf { \\tau }$ client.search(index $\\ c =$ index_name,query={\"match\": {\"content\": {\"query\": search_query,\"operator\":\"and\" #使用and 操作符，要求所有词都  \n出现，更精确}}},",
        "id": 226,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 47,
        "text": "ry,\"operator\":\"and\" #使用and 操作符，要求所有词都  \n出现，更精确}}},$\\mathsf { s i z e } = 3$ #返回最相关的3个结果  \n）",
        "id": 227,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 37,
        "text": "定义查询:search_query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"工伤保险和雇主险有什么区别？\"构建搜索请求：",
        "id": 228,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 49,
        "text": "- client.search(...)- query={\"match\": {\"content\":..}}:使用了 Elasticsearch 中最常见的match查询。它会对查询字符串进行分词，然后在content字段中查找包含这些分词的文档。",
        "id": 229,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 49,
        "text": "-\"operator\":\"and\":要求文档必须\\*\\*同时包含\\*\\*查询分词后的大部分重要词语(如\"工伤保险\"和\"雇主险\"），这让搜索结果更精确。",
        "id": 230,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 28,
        "length_tokens": 25,
        "text": "1 $\\mathsf { s i z e } = 3$ ：指定最多返回3条最相关的结果。",
        "id": 231,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "显示搜索结果 ",
        "id": 232,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 50,
        "text": "print(\"\\n---搜索结果 ---\")   \nhits $\\mathbf { \\tau } = \\mathbf { \\tau }$ response['hits']['hits']   \nif not hits: print(\"没有找到匹配的文档。\")   \nelse: ",
        "id": 233,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 111,
        "text": "for i, hit in enumerate(hits): print(f\"\\n--结果 $\\{ 1 + 1 \\} \\cdots ^ { 1 1 } )$ （2号 print(f\"来源文件: {hit['_source']['file_name']}\") print(f\"相关度得分: {hit['_score']:.2f}\") content_preview $\\mathbf { \\tau } = \\mathbf { \\tau }$ hit['_source']['content'].strip().replace('\\n',' ') print(f\"内容预览: {content_previ",
        "id": 234,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 23,
        "text": "p().replace('\\n',' ') print(f\"内容预览: {content_preview[:200]...\") ",
        "id": 235,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 34,
        "text": "解析响应：ES的返回结果是一个复杂的JSON结构，脚本通过response['hits']['hits']来提取包含所有匹配文档的列表",
        "id": 236,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 15,
        "text": "遍历结果：循环遍历每个匹配项 (hit)。",
        "id": 237,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 3,
        "text": "打印信息：",
        "id": 238,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 29,
        "length_tokens": 50,
        "text": "：hit['_source']['file_name']:打印文档的来源文件名。hit['_score']:打印由ES计算出的相关度得分。- hit['_source']['content'][:200]:打印文档内容的前 200 个字符",
        "id": 239,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "Elasticsearch使用",
        "id": 240,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 30,
        "length_tokens": 22,
        "text": "Thinking：这个搜索结果是以文档为单位么？相关度得分是如何计算的？",
        "id": 241,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 30,
        "length_tokens": 105,
        "text": "是的，因为索引逻辑是：遍历docs文件夹，它将每一个文件（例如2-雇主责任险.txt）的全部内容读取出来，作为一个整体，存入了 Elasticsearch 的一个\"文档（Document）\"中。当执行搜索时，Elasticsearch会去检查您的查询语句（\"工伤保险和雇主险有什么区别？\"）和哪条记录的content字段最匹配。如果找到了，它返回的就是那条完整的记录。",
        "id": 242,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 30,
        "length_tokens": 20,
        "text": "Thinking: 如果希望结果更精确 比如直接返回最相关的段落 如何实现？",
        "id": 243,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 30,
        "length_tokens": 65,
        "text": "不再将整个文件存为一个ES文档，而是先把文件切分成段落，然后将段落作为一个独立的ES文档存入索引中，并附上它所属的源文件名  \n$\\Rightarrow$ 搜索结果就能精确到段落级别。",
        "id": 244,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "BM25得分计算",
        "id": 245,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 13,
        "text": "Thinking: ES的相关度得分是如何计算的？",
        "id": 246,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 37,
        "text": "这个得分是 Elasticsearch 的核心功能，使用的BM25算法（Best Match 25)可以将其理解为一个综合打分机制，主要考虑以下三个因素：",
        "id": 247,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 10,
        "text": "·词频 (Term Frequency - TF) ",
        "id": 248,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 30,
        "text": "含义：查询词（如\"工伤保险\"、“雇主险\"）在文档内容中出现了多少次？ ",
        "id": 249,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 39,
        "text": "原则：出现次数越多，得分越高。一个反复提到\"雇主险\"的文档，显然比只提一次的文档更相关。",
        "id": 250,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 14,
        "text": "，逆文档频率 (Inverse Document Frequency - IDF)",
        "id": 251,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 21,
        "text": "含义：您的查询词在所有文档中是常见词还是稀有词？",
        "id": 252,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 31,
        "length_tokens": 83,
        "text": "原则：词越稀有，权重越高。例如，在保险文档库中，“保险\"这个词几乎每个文档都有，所以它的权重很低；而\"高空坠物责任\"这种词可能只在少数文档中出现，它的权重就很高。如果您的查询命中了稀有词，得分会大幅提升。",
        "id": 253,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 32,
        "length_tokens": 5,
        "text": "BM25得分计算",
        "id": 254,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "字段长度归一化 (Field-Length Norm）",
        "id": 255,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 32,
        "length_tokens": 14,
        "text": "含义：匹配到的查询词所在字段的长度。",
        "id": 256,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 32,
        "length_tokens": 11,
        "text": "原则：字段越短，得分越高。",
        "id": 257,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 32,
        "length_tokens": 41,
        "text": "在一个很短的文档中找到\"雇主险”，比在一个五千字的文档中找到\"雇主险\"，更能凸显这个词的重要性。",
        "id": 258,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 33,
        "length_tokens": 5,
        "text": "Elasticsearch的搜索过程",
        "id": 259,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 33,
        "length_tokens": 22,
        "text": "当我们搜索“工伤保险和雇主险有什么区别？\"时，Elasticsearch会：",
        "id": 260,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 33,
        "length_tokens": 112,
        "text": "1.分析查询，提取出“工伤保险\"、“雇主险\"、“区别\"等关键词。  \n2．遍历索引中的每一个文档。  \n3．对每个文档，综合TF、IDF和字段长度三大因素，为每个关键词计算一个分数。  \n4.将所有关键词的分数合并，得出一个最终的_score。  \n这就是为什么_score是一个浮点数，它精确地反映了文档与查询之间复杂的关联程度",
        "id": 261,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 33,
        "length_tokens": 115,
        "text": "Elasticsearch可以处理的文档数量取决于多个因素，包括集群的硬件配置、索引配置、分片数量以及数据模型等。单个索引中文档数量的上限为2,147,483,519。对于上亿级别的文档，Elasticsearch也能够处理，但性能可能会受到硬件资源和配置的影响。在性能方面，Elasticsearch单机的检索性能在0.005\\~5.6秒之间，可满足 $9 5 \\% +$ 的业务场景",
        "id": 262,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 34,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 263,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 34,
        "length_tokens": 29,
        "text": "C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages> (python interpreter目录下）",
        "id": 264,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 34,
        "length_tokens": 13,
        "text": "将初版代码保存到ai-bot-1.py ",
        "id": 265,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 34,
        "length_tokens": 59,
        "text": "找到Python环境中的qwen_agent安装包，比如C:\\Users\\cheny\\AppData\\Roaming\\Python\\Python311\\site-packages\\qwen_agent，复制到当前目录下 $\\Rightarrow$ 方便后续调整，不影响到原有的qwen-agent工具",
        "id": 266,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 34,
        "length_tokens": 119,
        "text": "@ai_bot-1.py这里的files是多个文件，会通过Asstant中的 memory.py （qwen_agent/memory/memory.py）加载两个工具：retrieval 和 doc_parser。  \nretrieval：负责接收用户查询，并从文档中检索最相关的信息。  \ndoc_parser：负责解析不同格式的文档，并将其内容进行切分。  \n===  \n文档拆分代码:qwen_agent/tools/simple_doc_parser.py  \n检索逻辑代码:qwen_agent/tools/retrieval.py  \n===  \n我想改成用elasticsearch来",
        "id": 267,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 34,
        "length_tokens": 103,
        "text": "ent/tools/retrieval.py  \n===  \n我想改成用elasticsearch来进行文档片段chunks的索引和管理，提升检索性能。帮我扩展qwen_agent文件夹中的代码，新增该功能实现，放到qwen_agent对应的文件夹下面即可。  \n然后让Assistant中的memory，有一个选项是可以用es来实现检索和管理  \n如果要改写ai_bot-1.py，可以写入到新的ai_bot-3.py",
        "id": 268,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 269,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 18,
        "text": "Let's start with Step 1: Creating the core elasticsearch_searcher.py file. ",
        "id": 270,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 75,
        "text": "elasticsearch_searcher.py $+ 1 2 6 \\ √$   \n# qwen_agent/searcher/elasticsearch_searcher.py   \nimport os   \nfrom typing import List，Dict   \nfrom elasticsearch import Elasticsearch，helpers   \n#忽略不必要的警告   \nimport warnings   \nwarnings.filterwarnings(\"ignore\", category=Futurewarning)   \ntry: from elastic",
        "id": 271,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 46,
        "text": "ore\", category=Futurewarning)   \ntry: from elasticsearch.exceptions import ConnectionError， NotFoundErro   \nexcept ImportError: from urllib3.exceptions import ReadTimeoutError as ConnectionError from elasticsearch.exceptions import NotFoundError ",
        "id": 272,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 24,
        "text": "在qwen_agent工具箱中，会创建一个searcher的文件夹，放入了elasticsearch_searcher.py",
        "id": 273,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 20,
        "text": "es_retrieval.py $+ 6 8 \\vee$ e # e 归 ",
        "id": 274,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 275,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 71,
        "text": "# qwen_agent/tools/es_retrieval.pyimport jsonfrom typing import Dict， Listfrom qwen_agent.tools.base import BaseToolfrom qwen_agent.tools.doc_parser import DocParserfrom qwen_agent.searcher.elasticsearch_searcher import ElasticsearchSeclass ESRetrievalTool(BaseTool):  \n1一个使用 Elasticsearch 作为后端的检索工具。",
        "id": 276,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 107,
        "text": "alTool(BaseTool):  \n1一个使用 Elasticsearch 作为后端的检索工具。它协调文档解析、分块、索引和搜索的整个流程。  \n1Iname $\\underline { { \\underline { { \\mathbf { \\Pi } } } } } = \\mathbf { \\Pi }$ 'retrieval' # 保持名称为'retrieval' 以便在 Memorv 中进行替换descr pt O 索引的文档中检索与用户查询相关的内容",
        "id": 277,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 35,
        "length_tokens": 20,
        "text": "在qwen_agent工具箱中的tools文件夹下面，会放入一个es_retrieval.py",
        "id": 278,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 279,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 36,
        "length_tokens": 78,
        "text": "memory.py $+ 2 6 - 7 \\times$ 口 ai_bot-3.py +76 √   \nfrom qwen_agent.tools import BaseTool # ai_bot-3.py   \nfrom qwen_agent.tools.simple_doc_parser import PARSER_SUPPORTED_FILE_T import os   \nfrom qwen_agent.utils.utils import extract_files_from_messages, extrac import asyncio   \nfrom qwen_agent.tool",
        "id": 280,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 36,
        "length_tokens": 73,
        "text": "ges, extrac import asyncio   \nfrom qwen_agent.tools.es_retrieval import ESRetrievalTool from typing import Optional from qwen_agent.agents import Assistant from qwen_agent.gui import WebuI   \nclass Memory(Agent): 28 hidden lines def init_agent_service(): if not llm: \"\"\"初始化具备 Elasticsearch RAG 能力的助手服",
        "id": 281,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 36,
        "length_tokens": 95,
        "text": "e(): if not llm: \"\"\"初始化具备 Elasticsearch RAG 能力的助手服务\"\"\" # There is no suitable model available for keygen self.rag_keygen_strategy $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'none' # 步骤 1：LLM 配置 ，新增：根据配置选择 RAG 后端 11m_cfg =1 : 'awen-max, 'model server': 'dashscopev ",
        "id": 282,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 36,
        "length_tokens": 22,
        "text": "调整了原有memory.py的实现逻辑，对应文件 qwen_agent/memory/memory.py ",
        "id": 283,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 36,
        "length_tokens": 19,
        "text": "创建了ai_bot-3.py实现了将files进行es索引和管理的功能",
        "id": 284,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 285,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 18,
        "text": "Thinking: 运行ai-bot-3.py的时候报错 如何进行修复？",
        "id": 286,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 46,
        "text": "等待了很长的时间，最后还是没有检索到。帮我写一个额外的测试文件，就是单独测试下es检索回复，比如针对这个用户输入的问题：介绍下雇主责任险",
        "id": 287,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 108,
        "text": "好的，我完全理解您的需求。经过多次调试后，应用仍然没有按预期工作，这确实令人沮丧。创建一个独立的、最小化的测试脚本来专门测试Elasticsearch的索引和检索功能，是目前最直接、最有效的调试方法。这可以帮助我们彻底排除干扰，看看问题究竟是在我们自建的ES工具链中，还是在qwen-agent 框架与工具的交互中。",
        "id": 288,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 21,
        "text": "我将为您创建一个新的测试文件 test_es_retrieval.py。这个脚本会：",
        "id": 289,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 76,
        "text": "1.直接实例化我们创建的 ESRetrievalTool。  \n2.模拟框架的行为，调用该工具的 cal1 方法。  \n3.传入您指定的查询\"介绍下雇主责任险\"和docs目录下的  \n所有文件。  \n4.清晰地打印出整个过程的日志和最终的检索结果。",
        "id": 290,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 16,
        "text": "test_es_retrieval.py $+ 9 5 \\ v$ ",
        "id": 291,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 92,
        "text": "# test_es_retrieval.py  \nimport os  \nimport json  \nimport logging  \nfrom qwen_agent.tools.es_retrieval import ESRetriev  \n#设置日志，方便观察详细过程  \nlogging.basicConfig(level $\\ O =$ logging.INFO， format $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ '%(a  \ndef test_retrieval():111一个独立的测试函数，用于验证ESRetrievalTool 的索引",
        "id": 292,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 37,
        "length_tokens": 35,
        "text": "t_retrieval():111一个独立的测试函数，用于验证ESRetrievalTool 的索引111print(\"--- 开始独立测试 Elasticsearch 检索工具",
        "id": 293,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 294,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 108,
        "text": "9 √ def test_retrieval():  \n10 \"\"\"独立测试 Elasticsearch 检索工具的功能。  \n11 print(\"--- 开始独立测试 Elasticsearch 检索工具 ---\")  \n12  \n13 # --- 步骤1：准备输入参数  \n14 query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"介绍下雇主责任险\"  \n15 docs_folder $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'docs'  \n16 files_to_process $\\mathbf { ",
        "id": 295,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 120,
        "text": "\\sigma }$ 'docs'  \n16 files_to_process $\\mathbf { \\tau } = \\mathbf { \\tau }$ [os.path.join(docs_folder，f） for f in os.list  \n17  \n18 print(\"\\n--- 步骤 1:准备输入参数 ---\")  \n19 print(f\"查询语句：{query}\")  \n20 print(f\"待处理文件数:{len(files_to_process)}\")  \n21  \n22 # 准备工具的配置  \n23 # 确保‘es’ 配置部分与您的 Elasticsearch 实例匹配  ",
        "id": 296,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 124,
        "text": "准备工具的配置  \n23 # 确保‘es’ 配置部分与您的 Elasticsearch 实例匹配  \n24< tool_cfg =_{  \n25 'es': [  \n26 'host'：'https://localhost'，# 或者您的 ES 主机  \n27 'port': 9200,  \n28 'index_name':'my_insurance_docs_index_test'，# 使用专用的  \n29 #如果您的 Elasticsearch 开启了认证，请取消下面的注释并填写正  \n30 'user':'elastic'  \n31 'password':'euqPcOlHrmW18rt",
        "id": 297,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 31,
        "text": " 'user':'elastic'  \n31 'password':'euqPcOlHrmW18rtaS-3P',  \n32 广  \n33 }",
        "id": 298,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 121,
        "text": "2025-06-220:31:47619-qwen_agent.searcher.elasticsearch_searcher-INFO-在Elasticsearch中发现13个已 存在的文档块。   \n2025-06-2220:31:47,619-qwen_agent.searcher.elasticsearch_searcher-INFO-筛选出0个新块需要索引。 2025-06-2220:31:47,619-qwen_agent.searcher.elasticsearch_searcher-INFO-所有文件内容均已在Elasticsearc 中建立索引，无需更新。   \n2025-0",
        "id": 299,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 110,
        "text": "r-INFO-所有文件内容均已在Elasticsearc 中建立索引，无需更新。   \n2025-06-2220:31:47620-qwenagent.searcher.elasticsearch_searcher-INFO-正在使用查询语句在Elasticsearc 中搜索：介绍下雇主责任险   \nD:AppData\\Local\\Programs\\Python\\Python31\\ibsite-packages\\urllib3connectionpool.py1061:InsecureReqest rning:Unverified HTTPSrequestisbeingmadetohostlo",
        "id": 300,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 88,
        "text": "t rning:Unverified HTTPSrequestisbeingmadetohostlocalhost.Addingcertificateverificationisstrongl advised.See:https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings   \nwarnings.warn(   \n2025-06-2220:31:47633-elastictransport.transport-INFO-POShttps://localhost:9200/myinsurancedocs ",
        "id": 301,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 66,
        "text": "rt-INFO-POShttps://localhost:9200/myinsurancedocs ndex_test/_search [status:200 duration:0.013s]   \n2025-06-2220:31:47,634-qwen_agent.searcher.elasticsearch_searcher-INFO-搜索完成，找到3个结果。 ",
        "id": 302,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 22,
        "text": "--步骤3：解析并展示检索结果成功从Elasticsearch检索到3条相关内容：",
        "id": 303,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 31,
        "text": "# 实例化工具 retrieval_tool $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ESRetrievalTool(cfg=tool_cfg) ",
        "id": 304,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 55,
        "text": "--结果1--  \n来源：docs\\平安境内紧急医疗救援服务条款.pdf  \n得分：7.47124  \n内容预览：中国平安财产保险股份有限公司  \n平安境内紧急医疗救援服务条款",
        "id": 305,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 2,
        "text": "总则",
        "id": 306,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 132,
        "text": "第一条本救援服务条款须附加于意外伤害保险合同（以下简称“主保险合同\"）。主保  \n险合同所附条款、投保单、保险单、保险凭证以及批单等，凡与服务条款相关者，均为本服  \n务条款的构成部分。凡涉及本服务的约定，均应采用书面形式。  \n若主保险合同与本服务条款互有冲突，则以本服务条款为准。本服务条款未尽事宜，以主保险合同的条款规定为准。救援服务内容",
        "id": 307,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 54,
        "text": "第二条在主保险合同保险期间内，如果被保险人在中华人民共和国境内（不含港澳台地区，以下简称“境内\"）且非其境内常住地（以下简称“非常住地”）遭受主保险合同约定的",
        "id": 308,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 44,
        "text": "--结果2-  \n来源：docs\\3-平安企业团体综合意外险.txt  \n得分：4.624165  \n内容预览：【平安企业团体综合意外险】",
        "id": 309,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 38,
        "length_tokens": 15,
        "text": "通过多次调试，跑通了test_es_retrieval.py",
        "id": 310,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 311,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 50,
        "text": "TO DO: 确保实现的es_retrieval.py和retrieval.py的代码逻辑一致@retrieval.py是不是把所有匹配的都返回了？@es_retrieval.py匹配上的返回了多少？",
        "id": 312,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 313,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 22,
        "text": "这是一个非常好的问题，它触及了两个检索工具在返回结果数量上的核心差异。",
        "id": 314,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "我来为您分别解答：",
        "id": 315,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 17,
        "text": "1.@retrieval.py (默认内存检索)返回多少结果? ",
        "id": 316,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 120,
        "text": "答案：默认情况下，它不会返回所有匹配的结果，而是有一个上限。  \n这个工具的设计是可组合的，它将实际的搜索工作委托给一个或多个\"子检索器\"。默认情况下，它使用的是 HybridSearch (混合搜索)，这个混合搜索又调用了 keyword_search (关键词搜索)和 front_page_search (首页搜索)等。  \n问题的关键在于 keyword_search 这个子检索器。我需要查看它的源代码来确定限制。  \n我先来查找 keyword_search.py 这个文件。",
        "id": 317,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 5,
        "text": "Q Searched files ",
        "id": 318,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 33,
        "text": "好的，文件找到了。现在我来读取 qwen_agent/tools/search_tools/keyword_search.py 的内容，看看它是如何限制返回结果数量的。",
        "id": 319,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 2,
        "text": "结论",
        "id": 320,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 39,
        "length_tokens": 115,
        "text": "1.@retrieval.py(默认):不，它不返回所有匹配的结果。它会根据一个 max_ref_token 的上限（默认为 20000）来截取最相关的文档块，直到累积的token总数接近这个上限为止。它旨在返回一个能在LLM上下文中容纳的、最精华的部分。  \n2.@es_retrieval.py (我们的):它默认返回3个最匹配的结果。这个数量是硬编码在 ElasticsearchSearcher 中的。",
        "id": 321,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 322,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 27,
        "text": "@es_retrieval.py返回的上限能否参考@retrieval.py这里的max_ref_token逻辑是一样的",
        "id": 323,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 14,
        "text": "第一步：改造索引逻辑，存入Token数量",
        "id": 324,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 34,
        "text": "我将修改 qwen_agent/searcher/elasticsearch_searcher.py ，在 index_files 方法中，将 chunk['token'] 添加到要索引的 _source 中。",
        "id": 325,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "elasticsearch_searcher.py +3 -1 v ",
        "id": 326,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 70,
        "text": "\"_id\":chunk['id'], _source\":{ \"content\": chunk['content'], \"source\": chunk['metadata']['so \"source\": chunk['metadata']['so \"token\": chunk.get('token'，0) } for chunk in new_chunks] except Exception as e: logger.error(f\"Elasticsearch 搜索失败： return [] ",
        "id": 327,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 13,
        "text": "第二步：改造搜索逻辑，使用max_ref_token",
        "id": 328,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 26,
        "text": "接下来，我将修改同一个文件（elasticsearch_searcher.py）中的 search 方法。这个改动会比较大:",
        "id": 329,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 90,
        "text": "·函数签名将从 search(self，query:str，k: int $= 3$ ）变为 search(self，query: str,max_ref_token: int)。·它会向ES 请求一批较多的候选结果 (比如100 个)。·然后，它会在本地循环这些结果，累加每个块的token数量，直到达到 max_ref_token 的上限，最后返回被选中的结果。",
        "id": 330,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 96,
        "text": "elasticsearch_searcher.py +24-5√return new_chunksdef search(self,query: str，k: int $= 3$ ） $$ lis\"\"\"在 Elasticsearch 中执行搜索并返回前 k 个结def search(self，query: str，max_ref_token: int11111在 Elasticsearch 中执行搜索，并根据 max_ref_t1 1if not self.client:logger.error(\"Elasticsearch 客户端不可用return []logger.info(f\"正在使用查询",
        "id": 331,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 66,
        "text": "\"Elasticsearch 客户端不可用return []logger.info(f\"正在使用查询语句在Elasticsearc第三步:改造 ESRetrievalTool，传递 max_ref_token现在，我们只需要让 ESRetrievalTool 能够读取 max_ref_token配置，并在调用search方法时把它传递过去。",
        "id": 332,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 333,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "这将分为两小步：",
        "id": 334,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 65,
        "text": "1.在 __init__ 中，像默认的 Retrieval 工具一样，从配置中读取 max_ref_token 。  \n2.在 call 方法中，将 self.max_ref_token 传递给 self.searcher.search()。  \n我现在就对 qwen_agent/tools/es_retrieval.py 进行修  \n改。",
        "id": 335,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "es_retrieval.py +4 -1√ ",
        "id": 336,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 72,
        "text": "from qwen_agent.tools.doc_parser import DocParser from qwen_agent.utils.utils import print_traceback from qwen_agent.searcher.elasticsearch_searcher imp from qwen_agent.settings import DEFAULT_MAX_REF_TOK class ESRetrievalTool(BaseTool): I1 I1 I1 17 hidden lines def__init__(self，cfg:dict $\\mathbf { ",
        "id": 337,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 95,
        "text": "hidden lines def__init__(self，cfg:dict $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ None) : super().__init__(cfg) self.cfg $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ cfg or {} self.max_ref_token $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ self.cfg.get('max_ref #初始化ES 搜索器，它内部会管理文档解析 searcher lastirsearch",
        "id": 338,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 26,
        "text": "ax_ref #初始化ES 搜索器，它内部会管理文档解析 searcher lastirsearchSearchen(cfg=s ",
        "id": 339,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 340,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 341,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 342,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 343,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 2,
        "text": "user ",
        "id": 344,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 50,
        "text": "雇主责任险是一种为企业提供风险保障的保险产品，主要针对企业员工在工作期间因意外事故或职业病导致的伤残或死亡。以下是关于雇主责任险的一些关键点：",
        "id": 345,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 5,
        "text": "1.保障范围：",
        "id": 346,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 54,
        "text": "○死亡赔偿金  \n$0$ 伤残赔偿金  \n$0$ 医疗费用  \n$0$ 误工费用 (某些版本不包括)  \n$0$ 法律诉讼费 (某些版本不包括)",
        "id": 347,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "2.其他亮点：",
        "id": 348,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 136,
        "text": "$0$ 雇主责任转嫁给保险公司：从雇主权益角度出发，帮助企业转移对员工的风险责任。  \n$0$ 降低企业用工风险：通过保险机制减轻企业在面临员工伤害时的经济负担。  \n$0$ 减少工伤纠纷：有助于更平稳地处理与员工之间的工伤争议。  \n$0$ 提高员工保障福利：为员工提供额外的安全感和保障。  \n$0$ 税前列支：相关保费可以在计算企业所得税前扣除。",
        "id": 349,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 93,
        "text": "3.案例说明：有工厂老板为其员工购买人身意外伤害保险，但当发生员工生产过程中不幸身亡的情况时，家属仍然向雇主索赔高额赔偿。这表明单独的人身意外伤害保险不足以完全覆盖雇主的责任风险，因此需要专门的雇主责任险来进一步保护企业免受此类损失的影响。",
        "id": 350,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 67,
        "text": "4.理赔流程：可以通过线上或线下两种方式进行理赔申请。线上流程主要包括登录平安企业宝APP、上传所需资料等步骤；而线下则需拨打95511进行报案，并按指示准备相关材料提交给保险公司以完成理赔过程。",
        "id": 351,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 41,
        "length_tokens": 39,
        "text": "综上所述，雇主责任险是企业为自身及其员工提供的一种重要的安全保障措施，尤其适合那些希望有效管理劳动风险的企业使用。",
        "id": 352,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "Qwen-Agent + ES ",
        "id": 353,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "雇主责任险和工伤保险有什么主要区别？",
        "id": 354,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "雇主责任险和工伤保险有什么主要区别？",
        "id": 355,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 18,
        "text": "雇主责任险与工伤保险的主要区别体现在以下几个方面：",
        "id": 356,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "1.法律依据：",
        "id": 357,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 47,
        "text": "$0$ 工伤保险是根据国家法律法规要求必须为员工投保的，具有强制性。  \n$0$ 雇主责任险则属于商业保险范畴，由企业自主选择是否购买。",
        "id": 358,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "2.保障范围：",
        "id": 359,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 94,
        "text": "工伤保险基金可以承担大部分的工伤保险待遇，但仍有部分需要用人单位自身承担，例如停工留薪期间的工资福利待遇 (误工费)，以及五到十级伤残的一次性伤残就业补助金。  \n○雇主责任险除了涵盖工伤保险的部分责任外，还可以承保职业性疾病、误工费用等，并且理赔程序相对简单快捷。",
        "id": 360,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "3.对企业的额外价值：",
        "id": 361,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 86,
        "text": "○企业申领工伤保险金的次数可能反映该单位的劳动安全状况，从而可能招致相应的行政处罚。而雇主责任险赔偿与劳动安全记录无关。  \n$0$ 投保雇主责任险有助于降低企业的用工风险，减少因工伤导致的纠纷，并可作为企业对员工的一种福利形式存在。",
        "id": 362,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 42,
        "length_tokens": 57,
        "text": "综上所述，虽然工伤保险能够提供基本的工伤保障，但为了更全面地覆盖潜在风险并减轻企业负担，许多企业会选择同时投保雇主责任险来补充工伤保险未能覆盖的部分。",
        "id": 363,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "Version3：添加向量检索功能",
        "id": 364,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 44,
        "length_tokens": 6,
        "text": "Qwen3-embedding使用",
        "id": 365,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 44,
        "length_tokens": 53,
        "text": "Qwen3-Embedding是阿里巴巴推出的开源文本嵌入模型，基于Qwen3架构优化，支持多语言、长文本和高精度语义理解，适用于检索、排序等任务。",
        "id": 366,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 44,
        "length_tokens": 5,
        "text": "1.核心能力：",
        "id": 367,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 44,
        "length_tokens": 69,
        "text": "·多语言支持：覆盖119种语言，在MTEB多语言榜单排名第一（70.58分）。  \n·长文本处理：支持32K上下文，适合文档分析等场景。  \n·灵活维度：可输出32-4096维向量，适配不同计算需求。",
        "id": 368,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 44,
        "length_tokens": 35,
        "text": "2.应用场景：包括跨语言搜索、代码检索、金融文档分类等，尤其适合需要高精度语义匹配的任务。",
        "id": 369,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 44,
        "length_tokens": 40,
        "text": "3.开源与部署提供0.6B/4B/8B版本，已在Hugging Face和ModelScope开源，支持阿里云API快速集成。",
        "id": 370,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "Qwen3-embedding使用",
        "id": 371,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 95,
        "text": "#text-embedding-v4: 属于Qwen3-Embedding系列  \nimport os  \nfrom openai import OpenAl  \nclient $\\mathbf { \\tau } = \\mathbf { \\tau }$ OpenAI(api_key=Os.getenv(\"DASHSCOPE_API_KEY\"),base_url $\\ c =$ \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  \n）  \ncompletion $\\mathbf { \\tau } = \\mathbf { \\tau }$ cli",
        "id": 372,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 126,
        "text": "mpletion $\\mathbf { \\tau } = \\mathbf { \\tau }$ client.embeddings.create(mode $\\equiv$ 'text-embedding-v4\"input $\\mathbf { \\lambda } = \\mathbf { \\lambda } ^ { \\prime }$ 衣服的质量杠杠的，很漂亮，不枉我等了这么久啊，喜欢，  \n以后还来这里买，dimensiol $\\scriptstyle \\mathtt { 7 s } = 1 0 2 4$ ，#指定向量维度encoding_format $= ^ { \\mathsf { \\Ga",
        "id": 373,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 40,
        "text": " 2 4$ ，#指定向量维度encoding_format $= ^ { \\mathsf { \\Gamma } }$ \"float\"  \n）  \nprint(completion.model_dump_json())",
        "id": 374,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 122,
        "text": "{\"data\":[{\"embedding\":[0.00954423751682043,-   \n0.11166470497846603,0.0002610872033983469,-   \n0.04448245093226433,0.018730206415057182,-   \n0.013019428588449955,0.015362495556473732,-   \n0.0032817272003740072,-   \n0.0013390234671533108,0.12496358901262283,0.047090634   \n70363617,-0.0361419916152954",
        "id": 375,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 126,
        "text": "262283,0.047090634   \n70363617,-0.03614199161529541,0.027127988636493683,-   \n0.03147018700838089,0.0708509162068367,-   \n0.07320114970207214,-0.038635529577732086,-   \n0.08036649227142334,-0.04929756000638008,-   \n0.03321853280067444,0.023817600682377815,0.0557463690   \n6385422,0.028919324278831482",
        "id": 376,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 126,
        "text": "77815,0.0557463690   \n6385422,0.028919324278831482,-0.0031061763875186443,-   \n0.027844524011015892,0.03485222905874252,-   \n0.01501855906099081,-0.05649156495928764,-   \n0.008290302008390427,0.06265375763177872,-   \n0.024706102907657623,0.0066888476721942425,-   \n0.042590800672769547,-   \n0.0092003",
        "id": 377,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 109,
        "text": "721942425,-   \n0.042590800672769547,-   \n0.00920030102133751,0.04737725108861923,0.01987666264   \n1763687,-0.016265328973531723,0.029979795217514038,0   \n],\"index\":0,\"object\":\"embedding\"}],\"model\":\"text-embedding  \nv4\",\"object\":\"list\",\"usage\":{\"prompt_tokens\":23,\"total_tokens\"   \n:23},\"id\":\"d5a4fc86",
        "id": 378,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 45,
        "length_tokens": 39,
        "text": "t_tokens\":23,\"total_tokens\"   \n:23},\"id\":\"d5a4fc86-bb71-9bc9-9858-9d382e532117\"} ",
        "id": 379,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 6,
        "text": "Qwen3-embedding使用",
        "id": 380,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 49,
        "text": "@index_and_search_docs.py我想改成基于embedding向量的召回，这里可以用text-embedding-v4 参考  \n@qwen3-embedding.py  \n帮我写入到 index_and_search_docs-embedding.py",
        "id": 381,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 22,
        "text": "...ch_docs-embedding.py (new) $+ 1 7 0 \\cdot$ ",
        "id": 382,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 79,
        "text": "import os  \nimport warnings  \nfrom elasticsearch import Elasticsearch  \nfrom pypdf import PdfReader  \nfrom openai import OpenAI  \n# 忽略来自 pypdf 的特定用户警告  \nwarnings.filterwarnings(\"ignore\"，category $\\mathbf { \\sigma } =$ UserWarn  \ndef get_embedding(text: str，client: OpenAI) -> lis\"\"\"使用 Dashscope 的 tex",
        "id": 383,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 34,
        "text": "t: str，client: OpenAI) -> lis\"\"\"使用 Dashscope 的 text-embedding-v4 模型为文本try:# 确保文本不为空",
        "id": 384,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 98,
        "text": "1 import os 2 import warnings 3 from elasticsearch import Elasticsearch 4 from pypdf import PdfReader 5 from openai import OpenAI 6 warnings.filterwarnings(\"ignore\") 7 8 9 def get_embedding(text:str，client:OpenAI）->list: 10 \"\"\"使用 Dashscope 的 text-embedding-v4 模型为文本生成向量。 11 11 try: 12 # 确保文本不为空 13 if",
        "id": 385,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 110,
        "text": "edding-v4 模型为文本生成向量。 11 11 try: 12 # 确保文本不为空 13 if not text.strip(): 14 return [] 15 16 response $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ client.embeddings.create( 17 model=\"text-embedding-v4\", 18 input=text, 19 dimensions=1024， # Qwen3-Embedding 系列支持的维度 20 encoding_format=\"float\" 21 ） 22 return re",
        "id": 386,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 46,
        "length_tokens": 66,
        "text": "支持的维度 20 encoding_format=\"float\" 21 ） 22 return response.data[0].embedding 23 except Exception as e: 24 print(f\" - 获取 embedding 时出错：{e}\") 25 return[] 26 27 灯 28 def index_and_search_documents_with_embedding(): ",
        "id": 387,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "Qwen3-embedding使用",
        "id": 388,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 21,
        "text": "成功连接到Elasticsearch!正在创建新索引‘pingan_employer_insurance_embedding'..",
        "id": 389,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 226,
        "text": "正在从‘docs’文件夹读取、生成向量并索引文档...－成功索引文档：1-平安商业综合责任保险（亚马逊）.txt（ID：1)－成功索引文档：2-雇主责任险.txt（ID：2)－成功索引文档：3-平安企业团体综合意外险.txt（ID：3)－成功索引文档：4-雇主安心保.txt（ID：4)－成功索引文档：5-施工保.txt(ID：5)－成功索引文档：6-财产一切险.txt（ID：6)－成功索引文档：7-平安装修保.txt（ID：7)－成功索引文档：平安产险交通出行意外伤害保险（互联网版）产品说明.pdf（ID：8)－成功索引文档：平安产险交通工具意外伤害保险（互联网版）条款.pdf（ID：9)  ",
        "id": 390,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 136,
        "text": "df（ID：8)－成功索引文档：平安产险交通工具意外伤害保险（互联网版）条款.pdf（ID：9)  \n- 获取 embedding 时出错:Error code: 400 - {'error': {'code':'InvalidParameter'，'param': None，'message':  \n'Range of input length should be [1， 8192]'，'type':'InvalidParameter'}，‘id':'495e534a-86e8-9e18-914a-4d22(  \nacba0fd'，'request_id': '495e534a-86e8-9",
        "id": 391,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 148,
        "text": "4a-4d22(  \nacba0fd'，'request_id': '495e534a-86e8-9e18-914a-4d220acba0fd'}－跳过无法生成向量的文档：平安企业团体综合意外险(互联网版)适用条款.pdf－跳过空文件：平安商业综合责任保险（亚马逊）.pdf－成功索引文档：平安境内紧急医疗救援服务条款.pdf（ID：10)  \nincorrect startxref pointer(1)－ 成功索引文档：平安附加疾病身故保险条款.pdf (ID：11)",
        "id": 392,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 23,
        "text": "正在执行向量搜索，查询语句：‘工伤保险和雇主险有什么区别？‘",
        "id": 393,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 35,
        "text": "--向量搜索结果--结果1-  \n来源文件：2-雇主责任险.txt  \n相关度得分 (cosine similarity):0.8491",
        "id": 394,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 47,
        "length_tokens": 56,
        "text": "运行报错，因为文档长度超过了8192。这里可以引入chunk_text函数：增加了文本分块函数，它能将任意长度的文本，切分成长度为4000字符、并有200字符重叠的文本块列表。",
        "id": 395,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "Qwen3-embedding使用",
        "id": 396,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 111,
        "text": "30def chunk_text(text:str，chunk_size:int $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 4000，overlap:   \n31 \"\"\"将长文本切分成带有重叠的块。 111   \n32 if len(text) $< =$ chunk_size:   \n33 return [text]   \n34   \n35 chunks $= [ ]$ （2号   \n36 start $= 0$   \n37 while start $\\angle \\cdot$ len(text）:   \n38 end $\\mathbf { \\tau",
        "id": 397,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 91,
        "text": "\\angle \\cdot$ len(text）:   \n38 end $\\mathbf { \\tau } = \\mathbf { \\tau }$ start $^ +$ chunk_size   \n39 chunks.append(text[start:end])   \n40 start $+ =$ chunk_size-overlap   \n41 return chunks   \n42   \n43   \n交   \n44 defindex_and_search_documents_with_embedding():   \n45 \"   \n46 连接到Es，使用embedding对文档进行索引，",
        "id": 398,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 112,
        "text": "bedding():   \n45 \"   \n46 连接到Es，使用embedding对文档进行索引，并执行向量搜索。   \n47 11   \n48 #---1.初始化客户端   \n49 #a.Elasticsearch 客户端   \n50 try:   \n51 es_client $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Elasticsearch(   \n52 \"https://localhost:9200\"   \n53 basic_auth=(\"elastic\" \"euqPc0lHrmW18rtaS-3P\")   \n54 verify_certs ",
        "id": 399,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 40,
        "text": "astic\" \"euqPc0lHrmW18rtaS-3P\")   \n54 verify_certs $\\ c =$ False   \n55   \n56 if not es_client.ping(): ",
        "id": 400,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 41,
        "text": "成功连接到Elasticsearch!索引‘pingan_employer_insurance_embedding'已存在，正在删除旧索引...正在创建新索引‘pingan_employer_insurance_embedding'...",
        "id": 401,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 21,
        "text": "正在从‘docs’文件夹读取、分块、生成向量并索引文档...",
        "id": 402,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 221,
        "text": "-文件‘1-平安商业综合责任保险（亚马逊）.txt'被切分成1 个块。文件 ‘2-雇主责任险.txt'被切分成 1 个块。  \n-文件'3-平安企业团体综合意外险.txt'被切分成1 个块。：文件‘4-雇主安心保.txt'被切分成1 个块。：文件‘5-施工保.txt'被切分成 1 个块。  \n- 文件'6-财产一切险.txt'被切分成 1个块。：文件‘7-平安装修保.txt'被切分成 1 个块。  \n- 文件‘平安产险交通出行意外伤害保险（互联网版）产品说明.pdf'被切分成1个块。  \n- 文件‘平安产险交通工具意外伤害保险（互联网版）条款.pdf'被切分成3个块。  \n-文件‘平安企业团体",
        "id": 403,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 117,
        "text": "件‘平安产险交通工具意外伤害保险（互联网版）条款.pdf'被切分成3个块。  \n-文件‘平安企业团体综合意外险(互联网版)适用条款.pdf'被切分成 4 个块。  \n－跳过空文件：平安商业综合责任保险（亚马逊）.pdf  \n- 文件‘平安境内紧急医疗救援服务条款.pdf'被切分成 2 个块。  \nncorrect startxref pointer(1)",
        "id": 404,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 24,
        "text": "－ 文件‘平安附加疾病身故保险条款.pdf'被切分成 1 个块。",
        "id": 405,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 23,
        "text": "正在执行向量搜索，查询语句：‘工伤保险和雇主险有什么区别？‘",
        "id": 406,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "--向量搜索结果--- ",
        "id": 407,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 48,
        "length_tokens": 191,
        "text": "--结果1-  \n来源文件：2-雇主责任险.txt  \n相关度得分(cosine similarity)：0.8496  \n内容预览：【雇主责任险】Q1雇员意外事故给企业造成的损害有多大？甚至可能让一家公司倒闭！！员工出外勤不幸遇到  \n车祸被撞高位截瘫_公司赔偿近一百万抽干公司流动资金无力维持生产走破产程序..，Q2雇主责任险的保障范围和其他亮  \n点1．保障 只要有用工需求的单位，都可以购买雇主责任险。2．保障范围：死亡赔偿金 伤残赔偿金 医疗费用 误工费用（c款不赔）法律诉讼费（c款不赔）3。其他亮点...",
        "id": 408,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 49,
        "length_tokens": 14,
        "text": "Version4: 添加外部数据源(AI搜索MCP)",
        "id": 409,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 50,
        "length_tokens": 14,
        "text": "Version4: 添加外部数据源 (AI搜索MCP)",
        "id": 410,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 50,
        "length_tokens": 26,
        "text": "找到之前成功运行Al搜索McP的代码，比如 stock_query_assistant-3.py，拷贝到当前项目中",
        "id": 411,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 50,
        "length_tokens": 107,
        "text": "# MCP 工具配置   \ntools $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [{ \"mcpServers\":{ tavily-mcp\":{ \"command\":\"npx\" \"args\": [\"-y\",\"tavily-mcp@0.1.4\"], \"env\":{ \"TAVILY_API_KEY\": \"tvly-dev-1lnHIPIL-m }， \"disabled\": False, \"autoApprove\":[] } }   \n}，'exc_sql'，'arima_stock'] ",
        "id": 412,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 14,
        "text": "Version4: 添加外部数据源 (AI搜索MCP)",
        "id": 413,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 63,
        "text": "@ai_bot-3.py 添加 tavily-mcp，参考 @stock_query_assistant-3.py 这里的tavily-mcp工具添加，这样让bot回答问题的时候，除了使用rag_cfg，还可以看到网络上的tavily-mcp数据，写入到ai_bot-4.py",
        "id": 414,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 85,
        "text": "ai_bot-4.py +96 √ 口 >  \n# ai_bot-4.py  \nimport os  \nimport asyncio  \nfrom typing import Optional  \nfrom qwen_agent.agents import Assistant  \nfrom qwen_agent.gui import WebUI  \nimport warnings  \nwarnings.filterwarnings(\"ignore\")  \ndef init_agent_service():\"\"初始化具备 Elasticsearch RAG 和网络# 步骤 1： LLM 配置11",
        "id": 415,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 27,
        "text": "ce():\"\"初始化具备 Elasticsearch RAG 和网络# 步骤 1： LLM 配置11m ctg",
        "id": 416,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 117,
        "text": "ai_bot-4.py >init_agent_service10 def init_agent_service():41 # MCP 工具配置 － 新增 tavily-mcp42 tools_cfg = [{43 \"mcpServers\":{44 \"tavily-mcp\":{45 \"command\":\"npx\"；46 \"args\":[\"-y\",\"tavily-mcp@0.1.4\"],47 \"env\":{48 \"TAVILY_API_KEY\": OS.getenv('TAVILY_API_KEY'，\"tvly49 }，50 \"disabled\": False,51 \"autoApprove\":",
        "id": 417,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 103,
        "text": "'，\"tvly49 }，50 \"disabled\": False,51 \"autoApprove\":[]52 553 }54 }]5556 # 获取文件夹下所有文件57 file_dir $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ os.path.join(os.path.dirname(__file__)，'docs')58 files $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ []59 $\\mathrm { i } \\mathsf { f }$ os.path.exists(file_dir):60 for ",
        "id": 418,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 51,
        "length_tokens": 48,
        "text": " } \\mathsf { f }$ os.path.exists(file_dir):60 for file in os.listdir(file_dir):61 file_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(file_dir，file)",
        "id": 419,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 14,
        "text": "Version4: 添加外部数据源 (AI搜索MCP)",
        "id": 420,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "施工保主要适用于哪些场景？",
        "id": 421,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "搜索AI新闻 ",
        "id": 422,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "施工保主要适用于哪些场景？",
        "id": 423,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 3,
        "text": "击 user ",
        "id": 424,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "搜索AI新闻 ",
        "id": 425,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 2,
        "text": "中user",
        "id": 426,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 9,
        "text": "施工保主要适用于以下场景：",
        "id": 427,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 83,
        "text": "1.工程自身：在施工过程中，由于自然灾害或意外事故造成的工程自身财产损失。  \n2.三者责任：因施工过程中发生的意外事故导致周边第三者的人身伤亡或财产损失责任。  \n3.员工意外：施工人员因意外事故导致的人身伤亡所造成的医疗费用支出。",
        "id": 428,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 2,
        "text": "A ",
        "id": 429,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 27,
        "text": "这些保障涵盖了施工过程中可能遇到的主要风险，确保了工程、第三方以及施工人员的安全和权益",
        "id": 430,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 431,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 16,
        "text": ">Start calling tool \"tavily-mcp-tavily-search\".. ",
        "id": 432,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 6,
        "text": "■Finished tool calling. ",
        "id": 433,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 10,
        "text": "以下是近期关于AI的一些新闻摘要：",
        "id": 434,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 18,
        "text": "1.Duolingo转向\"Al优先\"公司引发争议：",
        "id": 435,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 66,
        "text": "$0$ Duolingo计划使用生成式AI自动化一些任务，减少非员工承包商的使用。这引发了公众对公司品牌的负面看法。尽管公司强调AI不会取代其员工，但这种转变仍然引起了担忧。$0$ 详细内容",
        "id": 436,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 15,
        "text": "2.AI检测脑肿瘤准确率达到97%：",
        "id": 437,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 52,
        "text": "○Robovision Healthcare和荷兰癌症研究所（NKl）联合开发了一种名为BrainMets Al的解决方案，能够以前所未有的精度检测脑转移性疾病。  \n$0$ 详细内容",
        "id": 438,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 12,
        "text": "3.Meta在作者版权诉讼中胜诉：",
        "id": 439,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 54,
        "text": "$0$ 美国地方法院法官VinceChhabria裁定，作者未能提供足够证据证明Meta的Al会稀释他们的作品市场，因此Meta的行为在美国版权法下是合法的。  \n○详细内容",
        "id": 440,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 6,
        "text": "4.Meta加强AI团队：",
        "id": 441,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 37,
        "text": "$0$ Meta从OpenAl聘请了多位研究人员，包括Trapit Bansal等，以增强其在AI领域的研究力量。$0$ 详细内容",
        "id": 442,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 17,
        "text": "5.两党法案旨在阻止中国AI进入联邦机构：",
        "id": 443,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 52,
        "length_tokens": 28,
        "text": "。一项新的立法提案旨在阻止中国的人工智能系统进入美国联邦机构，以确保美国在全球AI竞",
        "id": 444,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 53,
        "length_tokens": 7,
        "text": "Version5：界面美化",
        "id": 445,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 3,
        "text": "Gradio使用",
        "id": 446,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 7,
        "text": "Thinking：什么是Gradio?",
        "id": 447,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 59,
        "text": "Gradio 是一个开源的Python库，用于快速搭建交互式Web 界面。开发者无需掌握复杂的前端技术（如HTML、CSS、JavaScript），可在几分钟内生成可分享的、美观易用的演示页面。",
        "id": 448,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 36,
        "text": "·极简开发：几行代码即可定义组件（文本框、图像上传、音频、视频等），并自动渲染为Web 界面。",
        "id": 449,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 35,
        "text": "·多模态支持：原生支持文本、图像、音频、视频、文件等多种输入/输出类型，适配各类AI模型。",
        "id": 450,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 24,
        "text": "，一键分享：通过share=True参数可生成公开链接，方便团队协作、客户演示或教学。",
        "id": 451,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 25,
        "text": "高可定制性：提供Blocks API自定义布局，支持CSS样式调整，满足个性化需求。",
        "id": 452,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 54,
        "length_tokens": 41,
        "text": "·与主流框架无缝集成：兼容 PyTorch、TensorFlow、Hugging Face Transformers等，可用于 Stable DiffusionWebUI、LLaMa Factory 等热门项目",
        "id": 453,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 3,
        "text": "Gradio使用",
        "id": 454,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 11,
        "text": "Thinking: 什么是Gradio 的 Blocks APl ?",
        "id": 455,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 30,
        "text": "Gradio 的 Blocks API是Gradio提供的低级布局API，它允许开发者像\"搭积木\"一样自由组合UI组件。",
        "id": 456,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 26,
        "text": "上下文管理：用withgr.Blocks()asdemo:包裹所有组件，形成可自定义的页面结构",
        "id": 457,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 3,
        "text": "布局组件:",
        "id": 458,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 8,
        "text": "Row：水平排列子组件. ",
        "id": 459,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 12,
        "text": "Column：垂直排列子组件 （默认行为）。",
        "id": 460,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 17,
        "text": "·Tab：创建多标签页界面，每个标签页独立布局。",
        "id": 461,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 15,
        "text": "：Accordion：可折叠面板，隐藏/展开内容。",
        "id": 462,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 22,
        "text": "·Group：将相关组件打包为逻辑组，便于样式统一或事件绑定。",
        "id": 463,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 55,
        "length_tokens": 28,
        "text": "灵活性：可嵌套布局组件（如Row内嵌Column），实现复杂网格或分栏效果",
        "id": 464,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 56,
        "length_tokens": 99,
        "text": "import gradio as gr   \nwith gr.Blocks() as demo: with gr.Row(): #水平行 with gr.Column(): # 左侧列 input_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ gr.Textbox(label $| = |$ \"输入\") submit_btn $\\mathbf { \\tau } = \\mathbf { \\tau }$ gr.Button(\"提交\") with gr.Column(): # 右侧列 output_text $\\mathbf { \\tau } = \\mathb",
        "id": 465,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 56,
        "length_tokens": 67,
        "text": "mn(): # 右侧列 output_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ gr.Textbox(labe $| = |$ \"输出\") submit_btn.click(fn=lambda x: f\"你输入了: {x}\",inputs $\\ c =$ input_text,outputs $\\ c =$ output_text) ",
        "id": 466,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 56,
        "length_tokens": 4,
        "text": "demo.launch() ",
        "id": 467,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 7,
        "text": "Version5：界面美化",
        "id": 468,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 29,
        "text": "在@ai_bot-4.py的基础上完善gradio界面，参考这个截屏。写入到ai_bot-5.py",
        "id": 469,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 90,
        "text": "ai_bot-5.py $+ 7 1 - 6 8 \\ √$   \nfrom qwen_agent.agents import Assistant   \nimport warnings   \nimport gradio as gr   \nimport time   \nwarnings.filterwarnings(\"ignore\") 12 hidden lines # 步骤 2：RAG 配置 － 激活并配置 Elasti rag_cfg = { \"rag_backend\":\"elasticsearch\" \"rag_backend\": \"elasticsearch\" ",
        "id": 470,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 96,
        "text": "ai_bot-5.py> main >on_suggestion_click  \n107 def main():  \n108 \"\"\"启动自定义的 Gradio Web 图形界面\"\"\"  \n109  \n110 custom_css $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 11  \n111 body { font-family:'Arial'，sans-serif；background-color: #F7F8FA;  \n112 ·gradio-container { max-width: 100% !important； background-colo",
        "id": 471,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 93,
        "text": "iner { max-width: 100% !important； background-color: #  \n113 #sidebar { background-color: #FFFFFF；padding: 20px； border-right:  \n114 #logo { display: flex; align-items: center； margin-bottom: 30px；}  \n115 #logo-img { width: 40px; height: 40px; margin-right: 10px; border-r  \n116 #logo-text { font-siz",
        "id": 472,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 100,
        "text": "-right: 10px; border-r  \n116 #logo-text { font-size: 24px； font-weight: bold； color: #333；}  \n117 .sidebar-btn{  \n118 display:block；width： $1 0 0 \\%$ ；text-align:left；padding:12px 15  \n119 border: none; background: none; font-size: 16px; margin-bottom:  \n120 cursor: pointer；border-radius: 8px; color",
        "id": 473,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 97,
        "text": "m:  \n120 cursor: pointer；border-radius: 8px; color: #374151;  \n121 +  \n122 .sidebar-btn.active，.sidebar-btn:hover { background-color: #F3F4F6  \n123 #main-chat { padding:20px; background-color: #F7F8FA；}  \n124 #chat-header { text-align: center; margin-top: 8%; margin-bottom: 4  \n125 #chat-header-titl",
        "id": 474,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 93,
        "text": "-top: 8%; margin-bottom: 4  \n125 #chat-header-title { font-size: 48px; font-weight: 500； color: #333  \n126 #chat-header-subtitle { font-size:16px; color: #6B7280；margin-top  \n127 #chatbot { box-shadow: none； border: none； background-color: transp  \n128 .message-bubble-user { background: #DBEAFE !imp",
        "id": 475,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 92,
        "text": "28 .message-bubble-user { background: #DBEAFE !important； color: #1E40  \n129 .message-bubble-bot { background:#FFFFFF !important；color: #37415  \n130 .suggestion-row { margin-top: 20px; display: flex; justify-content:  \n131 .suggestion-btn{  \n132 background-color: #FFFFFF； border: 1px solid #E5E7EB； ",
        "id": 476,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 57,
        "length_tokens": 59,
        "text": "ground-color: #FFFFFF； border: 1px solid #E5E7EB； padding:  \n133 border-radius: 18px; cursor: pointer; color: #374151； font-size  \n134 transition: all 0.2s ease-in-out;  \n135 }",
        "id": 477,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "Version5：界面美化",
        "id": 478,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 2,
        "text": "、搜索",
        "id": 479,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 2,
        "text": "知识库",
        "id": 480,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 5,
        "text": "用提问发现世界",
        "id": 481,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 21,
        "text": "输入你的问题，或使用「@快捷引用」对知乎答主、知识库进行提问",
        "id": 482,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 1,
        "text": "收藏",
        "id": 483,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 3,
        "text": "Chatbot ",
        "id": 484,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 1,
        "text": "回",
        "id": 485,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 1,
        "text": "历史",
        "id": 486,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 487,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 60,
        "text": "雇主责任险是一种为企业提供保障的保险产品，主要目的是在员工因工作原因遭受意外伤害或罹患职业病时，将企业的赔偿责任转嫁给保险公司。以下是雇主责任险的一些关键点：",
        "id": 488,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 5,
        "text": "1.保障范围：",
        "id": 489,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 45,
        "text": "。死亡赔偿金  \n。 伤残赔偿金  \n。 医疗费用  \n。 误工费用 (某些版本不包括)  \n。法律诉讼费 (某些版本不包括)",
        "id": 490,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 6,
        "text": "2.其他亮点：",
        "id": 491,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 69,
        "text": "。雇主责任转嫁：从雇主权益角度出发，转嫁企业对员工的风险责任。  \n。降低企业用工风险：减少工伤纠纷，提高员工保障福利。  \n。税前列支：保费可以在计算企业所得税前扣除，节省税收。",
        "id": 492,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 7,
        "text": "3.不同版本的区别：",
        "id": 493,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 49,
        "text": "。A款：涵盖因工作而遭受意外事故或罹患职业病所致伤、残或死亡的情况。  \n。B款：涵盖《工伤保险条例》中部分工伤情形。",
        "id": 494,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 58,
        "length_tokens": 4,
        "text": "输入你的问题..",
        "id": 495,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 59,
        "length_tokens": 7,
        "text": "Version5：界面美化",
        "id": 496,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 59,
        "length_tokens": 113,
        "text": "@ai_bot-5.py左侧导航应用的LOGO使用项目中的logo.png  \ncss可以单独用文件保存，结构清晰  \n目前知识库管理、收藏、历史功能暂未实现，可以点击图标的时候，提示暂未实现，敬请期待另外提问后，回答结果是一次性的显示到页面上，需要改成stream逐字的方式，体验会更好。之前使用qwen-agent默认是可以实现stream显示的。  \nqwen-agent的源代码也在项目中的qwen_agent中",
        "id": 497,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 59,
        "length_tokens": 12,
        "text": "以上这些编写新代码，到ai_bot-6.py",
        "id": 498,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 7,
        "text": "Version5：界面美化",
        "id": 499,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 0,
        "text": "",
        "id": 500,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 5,
        "text": "用提问发现世界",
        "id": 501,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 21,
        "text": "输入你的问题，或使用「@快捷引用」对知乎答主、知识库进行提问",
        "id": 502,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 3,
        "text": "Chatbot ",
        "id": 503,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 504,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 48,
        "text": "雇主责任险是一种为企业提供保障的保险产品，主要针对企业在用工过程中可能面临的员工意外伤害或职业病风险。以下是雇主责任险的一些关键点：",
        "id": 505,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 5,
        "text": "1.保障范围：",
        "id": 506,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 45,
        "text": "。死亡赔偿金  \n。 伤残赔偿金  \n。 医疗费用  \n。 误工费用 (某些版本不包括)  \n。法律诉讼费 (某些版本不包括)",
        "id": 507,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 6,
        "text": "2.其他亮点：",
        "id": 508,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 100,
        "text": "。转嫁企业风险：将企业的雇主责任转嫁给保险公司，降低企业对员工的风险责任。  \n。减少工伤纠纷：通过保险理赔，减少因工伤导致的法律纠纷。  \n。提高员工保障福利：为员工提供额外的保障，增加员工的安全感和满意度。  \n。税前列支：部分费用可以在计算企业所得税时进行扣除，节省企业开支。",
        "id": 509,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 7,
        "text": "3.不同版本的区别：",
        "id": 510,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 60,
        "length_tokens": 39,
        "text": "。A款：覆盖因工作而遭受意外事故或罹患职业病所致伤、残或死亡，并依据《工伤保险条例》的规定进行赔偿。",
        "id": 511,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 61,
        "length_tokens": 7,
        "text": "打卡：AI搜索类应用",
        "id": 512,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 61,
        "length_tokens": 7,
        "text": "搭建AI搜索类应用：",
        "id": 513,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 61,
        "length_tokens": 71,
        "text": "采用BM25算法，进行关键词匹配，召回候选chunk  \n文档数量不多的时候，可以用qwen-agent自带的retrieval  \n文档数量多的时候，打造自己的es_retrieval，支持海量文档快速召回  \n添加外部搜索源，比如 tavily-mcp  \n·美化界面",
        "id": 514,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 61,
        "length_tokens": 0,
        "text": "",
        "id": 515,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 62,
        "length_tokens": 11,
        "text": "CASE: 长对话检索与问答 ",
        "id": 516,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 63,
        "length_tokens": 11,
        "text": "CASE: 长对话检索与问答 ",
        "id": 517,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 63,
        "length_tokens": 11,
        "text": "CASE: 长对话检索与问答 ",
        "id": 518,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 63,
        "length_tokens": 137,
        "text": "利用Qwen Agent中的 DialogueRetrievalAgent实现长对话检索与问答  \nStep1，定义智能体  \n通过‘DialogueRetrievalAgent'实例化对话检索型智能体，配置大模型参数。  \nStep2，构造长文本场景  \n·构造一个包含大量无关内容和一个关键信息的长文本，模拟真实场景下的\"噪声干扰\"。·用户问题和长文本一同作为消息输入。  \nStep3，智能体推理与检索  \n智能体自动分析用户问题，从长文本中检索出关键信息并作答。",
        "id": 519,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 11,
        "text": "CASE: 长对话检索与问答 ",
        "id": 520,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 49,
        "text": "DialogueRetrievalAgent使用from qwen_agent.agents import DialogueRetrievalAgent#实例化 Agentbot $\\mathbf { \\tau } = \\mathbf { \\tau }$ DialogueRetrievalAgent(llm={'model': 'qwen-max'})",
        "id": 521,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 0,
        "text": "",
        "id": 522,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 137,
        "text": "# 构造超长对话或文本  \nlong_text $\\mathbf { \\epsilon } = \\mathbf { \\epsilon } ^ { \\prime }$ ，'.join(['这是干扰内容 $\\mathsf { I } \\mathsf { \\Pi } ^ { * } \\mathsf { 1 0 0 0 + } \\mathsf { I } ^ { \\prime }$ 小明的爸爸叫大头 $\\because I + [ ^ { \\prime }$ 这是干扰内容 $\\mathrm { 1 } \\mathrm { 1 } ^ { \\ast } \\mathrm { 1 } 0 0 0 \\math",
        "id": 523,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 67,
        "text": "\\mathrm { 1 } ^ { \\ast } \\mathrm { 1 } 0 0 0 \\mathrm { ) }$   \nmessages $\\mathbf { \\tau } = \\mathbf { \\tau }$ [{'role':'user','content': f'小明爸爸叫什么？ \\n{long_text}'}]",
        "id": 524,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 10,
        "text": "DialogueRetrievalAgent的适用场景：",
        "id": 525,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 47,
        "text": "超长对话、超长文本的问答场景。  \n用户输入内容极长，普通LLM无法直接处理时。需要将长对话内容分片存储、检索，再进行问答。",
        "id": 526,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 64,
        "length_tokens": 18,
        "text": "#推理 for response in bot.run(messages): print('bot response:', response) ",
        "id": 527,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 11,
        "text": "CASE: 长对话检索与问答 ",
        "id": 528,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 3,
        "text": "运行结果：",
        "id": 529,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 121,
        "text": "2025-05-2713:07:34,303- memory.py -116- INFO-{\"keywords_zh\":[\"小明\"，\"爸爸\"，\"叫\"]，\"keywords_en\":[\"Xiaoming ，\"father\"，\"name\"]，\"text\"：\"小明爸爸叫什么？\"}   \n2025-05-2713:07:35,556- simple_doc_parser.py-413-INFO-Start parsing workspacedialogue_history_20250527_130 731.txt...   \n2025-05-2713:07:35,562-simple_doc_pars",
        "id": 530,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 102,
        "text": "1.txt...   \n2025-05-2713:07:35,562-simple_doc_parser.py-461-INF0-Finished parsing workspacedialogue_history_20250527 130731.txt. Time spent: 0.005738258361816406 seconds.   \n2025-05-2713:07:35,564-doc_parser.py-108-INFo-Start chunking workspacedialogue_history_20250527_130731.tx t (dialogue_history_",
        "id": 531,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 106,
        "text": "ue_history_20250527_130731.tx t (dialogue_history__20250527_130731.txt.)...   \n2025-05-2713:07:35,565-doc_parser.py-126-INF0-Finishedchunking workspace\\dialogue_history_20250527_130731 .txt (dialogue_history__20250527_130731.txt). Time spent: 0.0 seconds.   \n2025-05-27 13:07:35,567 - base_search.py ",
        "id": 532,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 108,
        "text": "onds.   \n2025-05-27 13:07:35,567 - base_search.py - 56 - INFO - all tokens: 8007   \n2025-05-27 13:07:35,568 - base_search.py - 59 - INFO - use full ref   \nbot response:[{'role':'assistant'，'content':'小'，'reasoning_content':\",'extra': {'model_service_info':{'sta tus_code': <HTTPStatus.0K: 200>， 'requ",
        "id": 533,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 113,
        "text": "info':{'sta tus_code': <HTTPStatus.0K: 200>， 'request_id': 'b6f524bb-ca42-930c-a892-e26a02c8621e'， 'code':' 'message':' ，'。 utput':{'text': None,'choices':[{'finish_reason':'nul'，'messge': {}}],'finish_reason': None}，'usage':{'inp ut_tokens': 8095，'output_tokens': 1}}}}]   \nbot response:[{'role':'as",
        "id": 534,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 111,
        "text": "utput_tokens': 1}}}}]   \nbot response:[{'role':'asistant'，\"content':'小明的'，'reasoning_content':\"'，'extra': {'model_service_info':{ 'status_ode':<HTTPStatus.OK:200>，'request_id':'b6f524bb-ca42-930c-a892-e26a02c8621e'，'code':''，'message': 'output':{'text': None，'choices':[{'finish_reason':'nul'，'messag",
        "id": 535,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 102,
        "text": "t': None，'choices':[{'finish_reason':'nul'，'message': {}],'finish_reason': None}，'usage':{ 'input_tokens': 8095，'output_tokens': 3}}}}]   \nbot response:[{'role':'assistant'，'content':'小明的爸爸叫大头。‘，'reasoning_content':' ，'extra': {'model_serv ice_info': {'status_code': <HTTPStatus.0K:200>，'request_id':",
        "id": 536,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 103,
        "text": " {'status_code': <HTTPStatus.0K:200>，'request_id':'b6f524bb-ca42-930c-a892-e26a02c8621e'，'code':' message': 'output': {'text': None，'choices': [{'finish_reason': 'null','message': {}],'finish_reason': None} 'usage': {'input_tokens': 8095，'output_tokens': 8}}}}]   \nbot response:[{'role':'assistant'，'",
        "id": 537,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 110,
        "text": "ns': 8}}}}]   \nbot response:[{'role':'assistant'，'content':'小明的爸爸叫大头。‘，'reasoning_content':''，'extra':{'model_serv ice_info': {'status_code': <HTTPStatus.0K: 200>，'request_id': 'bf524bb-ca42-930c-a892-e26a02c8621e'，'code': message': 'output': {'text': None，'choices': [{'finish_reason': 'stop','messg",
        "id": 538,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 100,
        "text": ": None，'choices': [{'finish_reason': 'stop','messge': {}],'finish_reason': None} 'usage': {'input_tokens': 8095，'output_tokens': 8}}}}]   \nbot response:[{'role':'assistant'，'content':'小明的爸爸叫大头。‘，'reasoning_content': 'extra': {'model_serv ice_info': {'status_code': <HTTPStatus.0K: 200>，'request_id': ",
        "id": 539,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 65,
        "length_tokens": 93,
        "text": "'status_code': <HTTPStatus.0K: 200>，'request_id': 'b6f524bb-ca42-930c-a892-e26a02c8621e','code':' message': 'output': {'text': None，'choices': [{'finish_reason':'stop','message': {}}],'finish_reason': None} 'usage':{'input_tokens': 8095，'output_tokens': 8}}}}] ",
        "id": 540,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 66,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 541,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 67,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 542,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 67,
        "length_tokens": 0,
        "text": "",
        "id": 543,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 67,
        "length_tokens": 179,
        "text": "CASE：多文档开行问谷  \n利用 Qwen Agent 框架中的 ParallelDocQA 实现多文档/大文档的并行问答与内容检索Step1，定义智能体  \n通过ParalleIDocQA实例化文档问答型智能体，配置大模型参数。  \nStep2，构造多模态输入场景  \n·用户输入既可以包含文本问题，也可以包含文件（如PDF、Word、PPT、TXT、HTML等）。·支持多种文件类型，适合复杂的知识检索和问答场景。  \nStep3，智能体并行检索与问答  \n·智能体自动对输入的每个文件并行进行内容检索和问答。  \n·支持RAG增强（二次精确关键词召回），提升答案准确率。",
        "id": 544,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 545,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 4,
        "text": "ParallelDocQA 使用",
        "id": 546,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 114,
        "text": "from qwen_agent.agents.doc_qa import ParallelDocQA   \n# 实例化 Agent   \nbot $\\mathbf { \\tau } = \\mathbf { \\tau }$ ParallelDocQA(llm={'model': 'qwen2.5-72b-instruct','generate_cfg':   \n$\\{ \\mathsf { m a x \\_ r e t r i e s ^ { \\prime } : 1 0 } \\} \\}$   \n# 构造带文件的消息   \nmessages = [ ru 'role': 'user', 'cont",
        "id": 547,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 52,
        "text": " 构造带文件的消息   \nmessages = [ ru 'role': 'user', 'content': [ {'text':'介绍实验方法'}, {'file': 'https://arxiv.0rg/pdf/2310.08560.pdf'), ] } ",
        "id": 548,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 18,
        "text": "#推理 for rsp in bot.run(messages): print('bot response:', rsp) ",
        "id": 549,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 11,
        "text": "ParalleIDocQA的适用场景：",
        "id": 550,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 68,
        "length_tokens": 58,
        "text": "支持多文档、多格式（PDF/Word/PPT/TXT/HTML）并行检索与问答。适合大体量文档、复杂结构材料的高效问答。需要并行处理、RAG召回、自动摘要等场景。",
        "id": 551,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 552,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 5,
        "text": "模型的效果如何？",
        "id": 553,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 9,
        "text": "DQWEN TECHNICAL REPORT.pdf ",
        "id": 554,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 122,
        "text": "2025-05-2713:16:46829-simpledocparser.py-461INFOFinishedparsingC:\\UserschenyAppDataocal\\Tempga dio2d9764a0e128993adde1fd8467b05c80c50abc9481929821846c634c5871bQWEN_TECHNCALREPORT.pdf.Timespent:5.847546 815872192 seconds.   \n2025-05-2713:16:4637-docparser.py08INFtartunkingC:\\Users\\chenAppDataocaTepgr",
        "id": 555,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 135,
        "text": "rser.py08INFtartunkingC:\\Users\\chenAppDataocaTepgradio2d976 64a0e128993adde1fd8467b05c80c50ab7c94810929821846c634c5871b\\QWEN_TECHNICAL_REPORT.pdf（QWEN_TECHNICAL_REPORT.pdf）.. 2025-05-2713:16:4644-docparser.py26NFOFnishedunkingC:\\UserschenAppDataocaTempgradiod 97664a0e128993adde1fd8467b05c80c50ab7c94",
        "id": 556,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 128,
        "text": "mpgradiod 97664a0e128993adde1fd8467b05c80c50ab7c94810929821846c634c5871b\\QWEN_TECHNICAL_REPORT.pdf（QWEN_TECHNICAL_REPOR.pdf) Time spent:0.006867170333862305 seconds.   \n2025-05-2713:16:46,847-parallel_doc_qa.py-200-INFO-Parallel Member Num:68   \n2025-05-2713:20:49,464-parallel_doc_qa.py-210INFo-Fini",
        "id": 557,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 119,
        "text": "-05-2713:20:49,464-parallel_doc_qa.py-210INFo-FinishedparallelexecTimespent:2426156198978424se conds.   \n2025-05-2713:20:51,615-parallel_doc_qa.py-113-INFO-{\"keywords_zh\"：[\"实验方法\",\"方法\"]，\"keywords_en\"：[\"e xperimentalmethod\",\"method\"]}   \n2025-05-27:20:529sipldocparser.py411FReadparsedC:\\Users\\chenyApa",
        "id": 558,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 135,
        "text": "529sipldocparser.py411FReadparsedC:\\Users\\chenyApataoca\\epgadi d97664a0e128993adde1fd8467b05c80c50ab7c94810929821846c634c5871b\\QWEN_TECHNICAL_REPORT.pdffromcache.   \n2025-05-2713:20:52640doparserpy-08-INFO-StartunkingC:\\Users\\chenyAppDataocalTempgradio\\2d976 64a0e128993adde1fd8467b05c80c50ab7c948109",
        "id": 559,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 141,
        "text": "io\\2d976 64a0e128993adde1fd8467b05c80c50ab7c94810929821846c634c5871bQWEN_TECHNICAL_REPOR.pdf（QWEN_TECHNICAL_REPOR.df）. 2025-05-273:20：568docarser.py26FnshedkingCUserhenApataocaTegadid 97664a0e128993adde1fd8467b5c80c50abc94810929821846c634c5871bQWEN_TECHNICAL_REPORT.pdf（QWEN_TECHNICAL_REPORTpdf） Time",
        "id": 560,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 93,
        "text": "ECHNICAL_REPORT.pdf（QWEN_TECHNICAL_REPORTpdf） Timespent:0.03987622261047363 seconds.   \n2025-05-2713:20:52,685-base_search.py-56-INFO-alltokens:70893   \nBuilding prefixdict from thedefault dictionary..   \nLoadingmodel fromcacheC:\\Users\\cheny\\AppData\\Local\\Temp\\jieba.cache   \nLoadingmodel cost0.482se",
        "id": 561,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 28,
        "text": "Local\\Temp\\jieba.cache   \nLoadingmodel cost0.482seconds.   \nPrefixdict hasbeenbuiltsuccessfully. ",
        "id": 562,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 8,
        "text": "实验方法主要包括以下几个方面：",
        "id": 563,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 4,
        "text": "1.数据：",
        "id": 564,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 89,
        "text": "$0$ 数据集的设计确保了数据的多样性和广泛性，涵盖了多种类型、领域和任务。数据集包括公共网络文档、百科全书、书籍、代码等，并且是多语言的，主要包含英语和中文。$0$ 数据集的大小对开发强大的大型语言模型至关重要。最终词汇表的大小约为152K。",
        "id": 565,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 8,
        "text": "2.模型设计与扩展：",
        "id": 566,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 94,
        "text": "○模型架构方面，选择了SwiGLU作为激活函数，这是一种结合了Swish和GatedLinearUnit(GLU)的激活函数。实验表明，基于GLU的激活函数通常优于其他基线选项，如GeLU。  \n$0$ 模型的上下文长度进行了扩展，以支持更长的文本理解和生成。训练时使用了2048的上下文长度。",
        "id": 567,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 4,
        "text": "3.训练：",
        "id": 568,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 137,
        "text": "$0$ 训练采用了标准的自回归语言建模方法，即根据前文预测下一个词。$0$ 使用了AdamW优化器进行预训练优化，设置超参数为 $\\beta \\uparrow = 0 . 9$ ， $\\beta 2 = 0 . 9 5$ ， $\\epsilon = 1 0 \\ – 8 _ { \\circ }$ $0$ 学习率采用余弦学习率调度，并设置了每个模型大小的峰值学习率。$0$ 所有模型均使用BFloat16混合精度进行训练，以提高训练稳定性。",
        "id": 569,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 5,
        "text": "4.评估：",
        "id": 570,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 97,
        "text": "○通过一系列基准测试评估模型的零样本和少样本学习能力，包括MMLU、C-Eval、GSM8K、MATH、HumanEval、MBPP和BBH等。  \n$0$ 与最新的开源基础模型进行比较，如LLaMA、LLaMA2、MPT、Falcon、Baichuan2、ChatGLM2、InternLM、XVERSE和StableBeluga2。",
        "id": 571,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 69,
        "length_tokens": 18,
        "text": "这些方法确保了QWEN模型在多个基准测试中的优越性能。",
        "id": 572,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 573,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 3,
        "text": "介绍实验方法",
        "id": 574,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 9,
        "text": "DQWEN TECHNICAL REPORT.pdf ",
        "id": 575,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 128,
        "text": "2025-05-27 13:26:10,435 - parallel_doc_qa.py - 180 - INFO - user_question: 模型的效果如何   \n2025-05-27 13:26:10,439 - doc_parser.py - 93 - INF0 - Read chunked C:\\Users\\cheny\\AppDat:   \nocal\\Temp\\gradio\\2d97664a0e128993adde1fd8467b05c80c50ab7c94810929821846c634c5871b\\QWEN_Tl   \nNICAL_REPORT.pdf from cache.",
        "id": 576,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 115,
        "text": "c634c5871b\\QWEN_Tl   \nNICAL_REPORT.pdf from cache.   \n2025-05-27 13:26:10,441 - parallel_doc_qa.py - 200 - INFO -Parallel Member_Num: 68   \n2025-05-27 13:26:28,925 - parallel_doc_qa.py - 210 - INFO - Finished parallel_exec. Time   \nent: 18.48313570022583 seconds.   \n2025-05-27 13:26:33,928 - paralle",
        "id": 577,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 140,
        "text": "2583 seconds.   \n2025-05-27 13:26:33,928 - parallel_doc_qa.py - 113 - INFO -   \n！ \"keywords_zh\"：[\"模型\"，\"效果\"，\"性能\"，\"基准测试\"，\"QWEN\"，\"GPT-4\"，\"LLaMA2\"，\"CODE-QI ，\"MATH-QWEN-CHAT\"，\"RLHF\"，\"SFT\"，\"准确率\"，\"数据集\"，\"评估\"，\"对比\"], \"keywords_en\":[\"model\"，\"effectiveness\"，\"performance\"，\"benchmark\"，\"QWEN\"，\"GPT-4\",   \nLaMA2\"，\"C",
        "id": 578,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 58,
        "text": "formance\"，\"benchmark\"，\"QWEN\"，\"GPT-4\",   \nLaMA2\"，\"CODE-QWEN\"，\"MATH-QWEN-CHAT\"， \"RLHF\"，\"SFT\"， \"accuracy\",\"dataset\"，\"evaluation'   \n\"comparison\"]   \n} ",
        "id": 579,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 123,
        "text": "2025-05-27 13:26:33,934 - doc_parser.py - 93 - INFO - Read chunked C:\\Users\\cheny\\AppDat: ocal\\Temp\\gradio\\2d97664a0e128993adde1fd8467b05c80c50ab7c94810929821846c634c5871b\\QWEN_Tl NICAL_REPORT.pdf from cache. 2025-05-27 13:26:33,935 - base_search.py - 56 - INFO - all tokens: 70893 ",
        "id": 580,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 35,
        "text": "68个chunk说明分块粒度较细。18.5秒是所有chunk并行问答的总耗时（包括模型推理、IO等）。",
        "id": 581,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 17,
        "text": "QWEN模型的效果非常显著，具体表现在以下几个方面：",
        "id": 582,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 6,
        "text": "1.基础语言模型：",
        "id": 583,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 59,
        "text": "○QWEN基础语言模型经过大量数据训练，包括多达3万亿个token的文本和代码，涵盖了广泛的领域。这些模型在多个下游任务中表现出色，甚至在某些任务上超越了更大规模的模型。",
        "id": 584,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 6,
        "text": "2.对话模型：",
        "id": 585,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 91,
        "text": "$0$ QWEN-CHAT模型经过精心微调，使用了监督微调 (SFT）和强化学习与人类反馈（RLHF)等技术。基准测试显示，SFT模型表现优异，而RLHF模型能够生成更符合人类偏好的响应。通过人类评价，RLHF模型在复杂任务上的表现非常有竞争力，尽管仍略逊于GPT-4。",
        "id": 586,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 5,
        "text": "3.编码模型：",
        "id": 587,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 61,
        "text": "○专门的编码模型CODE-QWEN及其对话版本CODE-QWEN-CHAT在代码理解、生成、调试和解释方面表现出色。在HumanEval、MBPP和HumanEvalPack等基准测试中，这些模型展示了高水平的专业能力。",
        "id": 588,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 5,
        "text": "4.数学模型：",
        "id": 589,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 38,
        "text": "○数学模型MATH-QWEN-CHAT在处理数学问题时表现出色，尽管与专有模型相比仍有差距，但明显优于开源模型。",
        "id": 590,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 7,
        "text": "5.工具使用和代理：",
        "id": 591,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 52,
        "text": "$0$ QWEN模型在工具选择和输入方面表现出色，尤其是在识别查询与可用工具的相关性方面。随着模型规模的增加，准确率逐渐提高，但在某些情况下，性能提升有限。",
        "id": 592,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 70,
        "length_tokens": 25,
        "text": "总体而言，QWEN系列模型在多个领域和任务中表现出色，具有很强的竞争力。",
        "id": 593,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 594,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 6,
        "text": "ParallelDocQA核心流程：",
        "id": 595,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 8,
        "text": "Step1.文件解析与分块",
        "id": 596,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 64,
        "text": "·_get_files(messages)：提取用户消息中的所有有效文件（支持 PDF/Word/PPT/TXT/HTML等）。·_parse_and_chunk_files(messages)：对每个有效文件进行解析，并按设定chunk size（如1000 tokens）分块，形成多个文档片段。",
        "id": 597,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 10,
        "text": "Step2.并行分片问答 ",
        "id": 598,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 12,
        "text": "主流程_run(messages, lang,\\*\\*kwargs) :",
        "id": 599,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 71,
        "length_tokens": 80,
        "text": "·提取用户问题（user_question）。  \n·对所有文档分块，生成每个chunk的QA任务（data）。  \n·通过parallel_exec 并行调用_ask_member_agent，对每个chunk 进行独立问答。  \n·多轮重试机制，过滤无效/空响应。  \n·汇总所有chunk的有效回答（member_res）。",
        "id": 600,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 72,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 601,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 72,
        "length_tokens": 8,
        "text": "Step3.检索与摘要 ",
        "id": 602,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 72,
        "length_tokens": 11,
        "text": "_retrieve_according_to_member_responses(...): ",
        "id": 603,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 72,
        "length_tokens": 77,
        "text": "·对所有chunk 的回答进行关键词生成（GenKeyword），构造检索query。  \n·调用retrieval工具，对原始文档再次检索，召回最相关内容。  \n·格式化为知识片段，供后续摘要。  \nself.summary_agent.run(..)：汇总检索到的内容，调用摘要 Agent 生成最终答案。",
        "id": 604,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 72,
        "length_tokens": 11,
        "text": "ParalleIDocQA的并行处理机制：",
        "id": 605,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 72,
        "length_tokens": 65,
        "text": "·采用parallel_exec 对每个文档chunk 并行分发 QA 任务，大幅提升处理效率。  \n·每个chunk 独立调用 ParallelDocQAMember 进行问答，互不影响。  \n·支持多轮重试，自动过滤无效响应，保证结果质量。",
        "id": 606,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 73,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 607,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 73,
        "length_tokens": 120,
        "text": "Thinking: Parallel Member Num $\\scriptstyle 1 = 6 8$ 是每一个chunk，都要经过一次LLM进行回答么？  \n是的，ParallelMember Num:68 表示：文档被分成了68个分片（chunk）。  \n每个分片 都会独立调用一次LLM（即 68次LLM问答），每次问答的内容是“用户问题 $^ +$ 当前分片的内容”。这些68次问答是并行进行的（通过parallel_exec），大大提升了处理速度。",
        "id": 608,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 74,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 609,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 74,
        "length_tokens": 9,
        "text": "ParalleIDocQA具体执行流程：",
        "id": 610,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 74,
        "length_tokens": 196,
        "text": "Step1，分片并行问答  \n每个chunk 由_ask_member_agent 调用 LLM 进行独立问答，得到 68个回答结果。Step2，结果收集与过滤  \n收集所有分片的回答，过滤掉无效或空响应，只保留有用的答案片段。  \nStep3，结果汇总与检索  \n将所有有效分片的回答拼接、汇总，作为“member_res\"。  \n后续还会用这些回答生成检索关键词，再对原始文档做一次更精准的检索（RAG召回）。Step4，最终摘要  \n最后将检索到的内容交给摘要Agent，生成最终的综合答案。每个分片一次LLM问答，全部并行，总数等于分片数。  \n所有分片的结果会被汇总、过滤、再进一步检索和摘",
        "id": 611,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 74,
        "length_tokens": 45,
        "text": "个分片一次LLM问答，全部并行，总数等于分片数。  \n所有分片的结果会被汇总、过滤、再进一步检索和摘要，最终输出给用户。",
        "id": 612,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 74,
        "length_tokens": 0,
        "text": "",
        "id": 613,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 10,
        "text": "CASE：多文档并行问答 ",
        "id": 614,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 16,
        "text": "Thinking: ParalleIDocQA相比于传统DocQA的优势是什么？",
        "id": 615,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 13,
        "text": "1.并行分片问答提升召回覆盖率",
        "id": 616,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 113,
        "text": "传统的文档问答/RAG流程，通常是先检索少量相关片段，再让大模型生成答案。如果检索阶段召回不充分，后续LLM回答就会受限于有限的上下文，导致结果不全或不精准。  \nparalel_doc_qa会将文档分成大量小片段，对每个片段都独立发起一次 LLM问答（并行处理），极大提升了召回的覆盖面，不会遗漏文档中的重要信息。",
        "id": 617,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 12,
        "text": "2.多轮过滤与再检索提升精准度",
        "id": 618,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 83,
        "text": "并行问答后，系统会过滤无效/空响应，只保留有用的答案片段。  \n然后会用这些片段生成更精准的检索关键词，对原始文档再次检索（RAG召回），进一步提升召回的准确性。  \n最后还会用摘要Agent对召回内容进行综合归纳，输出更高质量的答案。",
        "id": 619,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 14,
        "text": "3.适合大文档/多文档/复杂结构",
        "id": 620,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 75,
        "length_tokens": 30,
        "text": "这种机制特别适合大体量、多格式、结构复杂的文档，能保证信息不遗漏，且结果更全面、精准。",
        "id": 621,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 76,
        "length_tokens": 8,
        "text": "CASE：多智能体问答 ",
        "id": 622,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 77,
        "length_tokens": 8,
        "text": "CASE: 多智能体问答 ",
        "id": 623,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 77,
        "length_tokens": 8,
        "text": "CASE: 多智能体问答 ",
        "id": 624,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 77,
        "length_tokens": 115,
        "text": "利用QwenAgent实现多智能体协作与 $@$ mention（ $@$ 提及）功能  \nStep1，定义多智能体  \n包含代码解释器（ReActChat）、文档问答（BasicDocQA）、通用助手（Assistant）三类智能体。Step2，初始化服务  \n通过init_agent_service 返回智能体列表。  \nStep3，多智能体协作  \n·用户输入被解析后，自动路由到对应的智能体进行处理。  \n·支持多轮对话和多智能体并存。",
        "id": 625,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 78,
        "length_tokens": 4,
        "text": "ReActChat 使用",
        "id": 626,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 78,
        "length_tokens": 4,
        "text": "ReActChat使用",
        "id": 627,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 78,
        "length_tokens": 115,
        "text": "from qwen_agent.agents import ReActChat  \nreact_chat_agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ ReActChat($1 1 m = \\{ { \\mathsf { m o d e l } } : { \\mathsf { q w e n } } { \\mathsf { - m a x } } ^ { \\prime } \\} ,$ name $\\mathbf { \\eta } = \\mathbf { \\eta } ^ { \\prime }$ 代码解释器',description $= ^ { \\pri",
        "id": 628,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 78,
        "length_tokens": 67,
        "text": "eta } ^ { \\prime }$ 代码解释器',description $= ^ { \\prime }$ 代码解释器，可用于执行Python代码。‘,system_message $= ^ { \\mathsf { \\Gamma } }$ you are a programming expert...'function_list $\\ c =$ ['code_interpreter'],  \n）",
        "id": 629,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 78,
        "length_tokens": 9,
        "text": "ReActChat的适用场景：",
        "id": 630,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 78,
        "length_tokens": 48,
        "text": "适用于需要工具调用+推理 场景，如代码解释、数据分析等。  \n支持function_list配置（如code_interpreter）可自动调用外部工具  \n支持 system_message指定智能体角色和风格。",
        "id": 631,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 79,
        "length_tokens": 4,
        "text": "BasicDocQA 使用",
        "id": 632,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 79,
        "length_tokens": 4,
        "text": "BasicDocQA使用",
        "id": 633,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 79,
        "length_tokens": 116,
        "text": "from qwen_agent.agents.doc_qa import BasicDocQA   \ndoc_qa_agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ BasicDocQA( $1 1 m = \\{ { \\mathsf { m o d e l } } : { \\mathsf { q w e n } } { \\mathsf { - m a x } } ^ { \\prime } \\} ,$ name $\\mathbf { \\eta } = \\mathbf { \\eta } ^ { \\prime }$ 文档问答', description $\\ma",
        "id": 634,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 79,
        "length_tokens": 53,
        "text": "hbf { \\eta } ^ { \\prime }$ 文档问答', description $\\mathbf { \\mu } = \\mathbf { \\vec { \\sigma } }$ 根据用户输入的问题和文档，从文档中找到答案,   \n） ",
        "id": 635,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 79,
        "length_tokens": 9,
        "text": "BasicDocQA的适用场景：",
        "id": 636,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 79,
        "length_tokens": 22,
        "text": "适用于文档问答场景，支持根据用户问题和上传文档自动检索答案。",
        "id": 637,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 8,
        "text": "CASE: 多智能体问答 ",
        "id": 638,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 6,
        "text": "多智能体初始化与注册",
        "id": 639,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 102,
        "text": "def init_agent_service(): Illm_cfg $\\mathbf { \\tau } = \\mathbf { \\tau }$ {'model': 'qwen-max'} react_chat_agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ ReActChat( IIm=llm_cfg, name $\\bullet ^ { \\prime }$ 代码解释器, description $\\mathbf { \\mu } = \\mathbf { \\ \" }$ 代码解释器，可用于执行Python代码。‘ system_message $\\math",
        "id": 640,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 58,
        "text": "\\ \" }$ 代码解释器，可用于执行Python代码。‘ system_message $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ you are a programming expert, skilled in   \nwriting code to solve mathematical problems and data analysis   \nproblems.', ",
        "id": 641,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 32,
        "text": "function_list $\\mathop { \\bf { \\phi } } = \\mathop { \\bf { \\phi } }$ ['code_interpreter'],）",
        "id": 642,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 109,
        "text": "doc_qa_agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ BasicDocQA( IIm=llm_cfg, name $\\bullet ^ { \\prime }$ 文档问答', description $\\mathbf { \\mu } = \\mathbf { \\vec { \\sigma } }$ 根据用户输入的问题和文档，从文档中找到答案', ） assistant_agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ Assistant(llm=llm_cfg, name $\\mathbf { \\alpha } =",
        "id": 643,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 57,
        "text": " Assistant(llm=llm_cfg, name $\\mathbf { \\alpha } = \\mathbf { \\alpha } ^ { \\prime }$ 小助理', description $\\ c =$ \"I'm a helpful assistant\") return [react_chat_agent, doc_qa_agent, assistant_agent] ",
        "id": 644,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 80,
        "length_tokens": 18,
        "text": "统一初始化多种类型智能体，便于后续协作和路由。",
        "id": 645,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 8,
        "text": "CASE: 多智能体问答 ",
        "id": 646,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 18,
        "text": "$@$ 代码解释器 $2 \\times 1 0 = ?$ ",
        "id": 647,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 43,
        "text": "Thought:我们需要计算2的10次方。这可以通过使用Python的指数运算符（ $^ { * * }$ ）来完成。Action: code_interpreter  \nAction Input:  \npy",
        "id": 648,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 10,
        "text": "Calculate 2 to the power of 10 ",
        "id": 649,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 17,
        "text": "result $= 2 ^ { \\star \\star }$ 10 result ",
        "id": 650,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 6,
        "text": "Observation: execute_result: ",
        "id": 651,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 3,
        "text": "1024 ",
        "id": 652,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 33,
        "text": "Thought:我得到了最终的答案FinalAnswer:2的10次方等于 $1 0 2 4 _ { \\circ }$ ",
        "id": 653,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 81,
        "length_tokens": 0,
        "text": "",
        "id": 654,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 82,
        "length_tokens": 8,
        "text": "CASE: 多智能体问答 ",
        "id": 655,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 82,
        "length_tokens": 13,
        "text": "@文档问答这篇论文解决了什么问题？",
        "id": 656,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 82,
        "length_tokens": 9,
        "text": "QWEN TECHNICAL REPORT.pdf ",
        "id": 657,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 82,
        "length_tokens": 140,
        "text": "这篇论文介绍了QWEN，这是阿里巴巴集团开发的一系列大型语言模型中的第一个。QWEN是一个全面的语言模型系列，包括具有不同参数数量的不同模型。它包括基础的预训练语言模型QWEN，以及通过人类对齐技术进行微调的聊天模型QWEN-CHAT。这些模型在众多下游任务中表现出色，并且特别地，使用从人类反馈中学习的强化学习 (RLHF）训练的聊天模型在复杂任务 (如使用代码解释器)上表现出令人印象深刻的表现，甚至可以与更大的模型相媲美。",
        "id": 658,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 82,
        "length_tokens": 83,
        "text": "此外，还开发了专门针对编码和数学问题的模型CODE-QWEN、CODE-QWEN-CHAT和 MATH-QWEN-CHAT，它们在比较基准数据集上的表现优于开源模型，并且略逊于专有模型。这篇论文也解决了大型语言模型的可重复性、可控性和服务提供商的可访问性等问题。",
        "id": 659,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 82,
        "length_tokens": 0,
        "text": "",
        "id": 660,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 83,
        "length_tokens": 8,
        "text": "CASE: 多智能体问答 ",
        "id": 661,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 83,
        "length_tokens": 6,
        "text": "@小助理你好！",
        "id": 662,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 83,
        "length_tokens": 4,
        "text": "女小助理",
        "id": 663,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 83,
        "length_tokens": 23,
        "text": "你好！有什么我可以帮助你的吗？如果你有任何问题或需要了解更多信息，请告诉我。",
        "id": 664,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 83,
        "length_tokens": 0,
        "text": "",
        "id": 665,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 83,
        "length_tokens": 12,
        "text": "可以通过@mention切换不同的智能体进行回答",
        "id": 666,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 2,
        "text": "Assistant 使用",
        "id": 667,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 2,
        "text": "Assistant 使用",
        "id": 668,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 70,
        "text": "from qwen_agent.agents.assistant import Assistant   \nassistant_agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ Assistant(llm=llm_cfg, name $\\bullet ^ { \\prime }$ 小助理',description $= ^ { \\mathsf { 1 } }$ \"I'm a helpful   \nassistant\") ",
        "id": 669,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 3,
        "text": "Assistant 定义",
        "id": 670,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 3,
        "text": "Assistant( ",
        "id": 671,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 95,
        "text": "function_list: Optional[List[Union[str, Dict, BaseTool]]] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ None，#工具/函数列表 IIm: Optional[Union[Dict, BaseChatModel]] $\\mathbf { \\tau } = \\mathbf { \\tau }$ None, # LLM配置或实例 system_message: Optional[str] $\\mathbf { \\tau } = \\mathbf { \\tau }$ DEFAULT_SYSTEM_MESSAG",
        "id": 672,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 105,
        "text": "{ \\tau } = \\mathbf { \\tau }$ DEFAULT_SYSTEM_MESSAGE, # 系统提示词 name: Optional[str] $\\mathbf { \\tau } = \\mathbf { \\tau }$ None, # 智能体名称 description: Optional[str] $\\mathbf { \\tau } = \\mathbf { \\tau }$ None, # 智能体描述 files: Optional[List[str]] $\\mathbf { \\tau } = \\mathbf { \\tau }$ None, #关联知识文件 rag_cfg: ",
        "id": 673,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 45,
        "text": "\\tau } = \\mathbf { \\tau }$ None, #关联知识文件 rag_cfg: Optional[Dict] $\\mathbf { \\tau } = \\mathbf { \\tau }$ None # RAG相关配置 ",
        "id": 674,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 47,
        "text": "Assistant是 Qwen-Agent中通用性极强的智能体，集成了RAG能力和工具调用（工具调用）能力，适用于大多数问答、知识检索、工具调用等场景。",
        "id": 675,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 84,
        "length_tokens": 68,
        "text": "支持外部知识检索（RAG），可结合上传文档、知识库等进行问答。  \n支持函数/工具调用，具备插件式扩展能力。可自定义系统提示词、名称、描述、知识文件等。  \n继承自FnCalIAgent，具备其全部能力。",
        "id": 676,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 85,
        "length_tokens": 5,
        "text": "rag_cfg参数详解",
        "id": 677,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 85,
        "length_tokens": 5,
        "text": "rag_cfg参数详解",
        "id": 678,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 85,
        "length_tokens": 26,
        "text": "用于控制RAG相关的高级行为，影响知识检索的分片、召回、关键词生成等细节。",
        "id": 679,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 85,
        "length_tokens": 136,
        "text": "·max_ref_token：int，检索时单次最大参考 token数，决定召回内容的窗口大小。默认 20000。  \n·parser_page_size：int，文档分片时每片最大token 数，影响分片粒度。默认 500。  \n·rag_keygen_strategy：str，检索关键词生成策略，可选：-GenKeyword：直接生成关键词（默认）- SplitQueryThenGenKeyword：先拆分问题再生成关键词- GenKeywordWithKnowledge：结合\"问题内容 $^ +$ 参考资料词表\"进行关键词生成  \n- rag_searchers：list，检索子策略列表",
        "id": 680,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 85,
        "length_tokens": 42,
        "text": "^ +$ 参考资料词表\"进行关键词生成  \n- rag_searchers：list，检索子策略列表，如['keyword_search','front_page_search']’，支持多种召回融合。",
        "id": 681,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 86,
        "length_tokens": 5,
        "text": "rag_cfg参数详解",
        "id": 682,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 86,
        "length_tokens": 5,
        "text": "rag_cfg配置示例",
        "id": 683,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 86,
        "length_tokens": 130,
        "text": "rag_cfg = {'max_ref_token': 4000，# 单次最大召回 token 数'parser_page_size':500，#分片粒度'rag_keygen_strategy': 'SplitQueryThenGenKeyword'，# 关键词生成策略'rag_searchers':['keyword_search','front_page_search'] # 检索方式  \n}通过rag_cfg可以灵活调整 RAG 检索的窗口、分片、关键词生成和召回方式，适配不同规模和类型的知识库。  \n比如大文档可调大parser_page_size，召回更长上下文；多策略融合可提升召",
        "id": 684,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 86,
        "length_tokens": 53,
        "text": "的知识库。  \n比如大文档可调大parser_page_size，召回更长上下文；多策略融合可提升召回覆盖率。  \n若不指定rag_cfg，则采用默认配置，适合大多数通用场景。",
        "id": 685,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 86,
        "length_tokens": 0,
        "text": "",
        "id": 686,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 87,
        "length_tokens": 10,
        "text": "CASE: 多智能体协作路由 ",
        "id": 687,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 88,
        "length_tokens": 10,
        "text": "CASE: 多智能体协作路由 ",
        "id": 688,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 88,
        "length_tokens": 10,
        "text": "CASE: 多智能体协作路由 ",
        "id": 689,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 88,
        "length_tokens": 45,
        "text": "利用 Qwen Agent框架中的 Router 实现多智能体协作与自动路由，支持文本、图片、文件等多模态输入，自动分发给最合适的子智能体处理。",
        "id": 690,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 88,
        "length_tokens": 8,
        "text": "Step1，定义多智能体 ",
        "id": 691,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 88,
        "length_tokens": 67,
        "text": "包含多模态助手（Assistant，支持图片理解）、工具助手（ReActChat，支持画图和代码解释）等Step2，初始化Router 路由器  \n通过Router聚合多个子智能体，自动根据输入内容分发任务。  \nStep3，自动路由与多智能体协作",
        "id": 692,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 88,
        "length_tokens": 33,
        "text": "·用户输入后，Router自动判断最合适的子智能体进行处理·支持多轮对话和多模态内容的智能分发。",
        "id": 693,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 2,
        "text": "Router 使用",
        "id": 694,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 2,
        "text": "Router 使用",
        "id": 695,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 6,
        "text": "def init_agent_service(): ",
        "id": 696,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 140,
        "text": "#配置大模型 ${ \\| \\mathsf { m \\_ c f g } = \\{ ^ { \\prime } { \\mathsf { m o d e } } ^ { \\prime } : { ^ { \\prime } \\mathsf { q w e n } } { \\mathsf { - } } { \\mathsf { m a x } } ^ { \\prime } \\} }$ $n _ { - } \\mathrm { c f g \\_ v l } = \\{ \" m o d e ^ { 1 } : \" q w e n - v 1 - m a x ^ { 1 } \\}$ tools $\\mathbf",
        "id": 697,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 44,
        "text": "\" q w e n - v 1 - m a x ^ { 1 } \\}$ tools $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['image_gen','code_interpreter'] ",
        "id": 698,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 95,
        "text": "#定义多模态助手bot_vl $\\mathbf { \\tau } = \\mathbf { \\tau }$ Assistant(llm=llm_cfg_vl, name $\\mathbf { \\eta } = \\mathbf { \\eta } ^ { \\prime }$ 多模态助手',description $\\mathbf { \\partial } \\mathbf { \\mathbf { \\Xi } } = \\mathbf { \\Xi } ^ { \\prime }$ 可以理解图像内容。\")",
        "id": 699,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 29,
        "text": "# 定义工具助手bot_tool $= { \\mathsf { R e A } }$ ctChat(Ilm=llm_cfg,",
        "id": 700,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 59,
        "text": "name $\\mathbf { \\eta } = \\mathbf { \\eta } ^ { \\prime }$ 工具助手,description $\\mathbf { \\mu } = \\mathbf { \\ \" }$ 可以使用画图工具和运行代码来解决问题'function_list $\\ c =$ tools,）",
        "id": 701,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 89,
        "length_tokens": 48,
        "text": "#定义路由器   \nbot $\\mathbf { \\tau } = \\mathbf { \\tau }$ Router( IIm=llm_cfg, agents $\\ c =$ [bot_vl,bot_tool]   \n1   \nreturn bot ",
        "id": 702,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 10,
        "text": "CASE: 多智能体协作路由 ",
        "id": 703,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 7,
        "text": "帮我解释下这张图片",
        "id": 704,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 0,
        "text": "",
        "id": 705,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 22,
        "text": "这张图片展示了一位女性和一只狗在海滩上的温馨互动场景。",
        "id": 706,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 4,
        "text": "1.背景环境",
        "id": 707,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 66,
        "text": "·地点：图片拍摄于一个海滩上，沙滩细腻，海浪轻轻拍打着岸边。  \n·时间：从光线来看，这可能是日落时分，阳光柔和，给整个画面增添了一种温暖的氛围。",
        "id": 708,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 5,
        "text": "2.人物与动物",
        "id": 709,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 97,
        "text": "·女性：她坐在沙滩上，穿着格子衬衫和深色裤子，显得休闲而放松。她的表情非常开心，正在与狗进行互动。  \n·狗：这是一只金毛犬，戴着彩色的项圈，看起来非常友好和温顺。它正用前爪轻轻地触碰女性的手，仿佛在\"握手\"。",
        "id": 710,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 6,
        "text": "3.互动细节 ",
        "id": 711,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 78,
        "text": "·动作：狗用前爪与女性的手相触，这种动作通常表示友好和信任。女性则微笑着回应，显示出她对狗的喜爱和享受这一刻的心情。  \n·情感：整个场景充满了温馨和欢乐，展现了人与宠物之间的深厚感情。",
        "id": 712,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 7,
        "text": "4.整体氛围 ",
        "id": 713,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 58,
        "text": "·温暖：夕阳的光线洒在沙滩上，给人一种温暖和宁静的感觉。  \n·和谐：人与自然、人与宠物之间的和谐共处，体现了生活的美好和简单快乐。",
        "id": 714,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 90,
        "length_tokens": 37,
        "text": "这张图片不仅展示了美丽的自然风光，更传递了人与动物之间真挚的情感交流，令人感到温馨和愉悦。",
        "id": 715,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 10,
        "text": "CASE: 多智能体协作路由 ",
        "id": 716,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 16,
        "text": "帮我画一个小女孩和小狗在沙滩上玩的照片",
        "id": 717,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 4,
        "text": "Call:工具助手",
        "id": 718,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 4,
        "text": "多模态助手",
        "id": 719,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 30,
        "text": "Thought:我需要使用image_gen工具来生成一张根据描述的小女孩和小狗在沙滩上玩耍的图片。",
        "id": 720,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 4,
        "text": "Action:image_gen ",
        "id": 721,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 30,
        "text": "ActionInput:{prompt\":\"alitlegirdapupplaigothachiththunsetinthbckgroundcatingwardjful atmosphere\"} ",
        "id": 722,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 7,
        "text": "Observation:{\"image_url\": ",
        "id": 723,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 90,
        "text": "\"https://imagepolinationsai/prompt/a%20litle%20grl%20and%20a%20puppy%20playig%20on%20the%20beach%2C%20with%20th e%20sunset%20in%20the%20background%2C%20creating%20a%20warm%20and%20joyful%20atmosphere\"} ",
        "id": 724,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 69,
        "text": "Thought:我已获得了一张根据描述生成的小女孩和小狗在沙滩上玩耍的图片。  \nFinal Answer:这是根据您的描述生成的小女孩和小狗在沙滩上玩耍的照片，背景是日落，营造出一种温暖而欢乐的氛围。",
        "id": 725,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 91,
        "length_tokens": 0,
        "text": "",
        "id": 726,
        "type": "image",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 92,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 727,
        "type": "text",
        "file_name": "26.1-项目实战：AI搜索类应用"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "AI编程工具安装",
        "id": 0,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 16,
        "text": "推荐使用AI驱动的IDE，比如Cursor或者TraeCursor编辑器：",
        "id": 1,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 6,
        "text": "https://cursor.com/ ",
        "id": 2,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 20,
        "text": "Trae编辑器(The Real Al Engineer) : https://www.trae.com.cn/ ",
        "id": 3,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 90,
        "text": "AI代码编辑器 旨在让你获得超凡的生产力， CurSOr 是使用AI 编写代码的最佳方式。 出 下载WINDOWS 所有下载 日□口   \n@mod.rs CHAT COMPOSER   \nImplement the cleanup function for the tranport stack. Do not make the upgrade mod.rs   \nlisteners optional. Could you make it easier to switch certificates in the transport listeners?   \nAccet xEmiajec uc",
        "id": 4,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 73,
        "text": "s in the transport listeners?   \nAccet xEmiajec uctions...oxK   \npub(crate) struct TransportStack Illhelpmodifythe code tomake certificateswitchingmoreflexible.Themain 14:ListenerEndpoint, changes willbe toenhance the TlsAccepttrait and modify how certificates tls:Option<Arc<Acceptor>>, are handled ",
        "id": 5,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 72,
        "text": "rtificates tls:Option<Arc<Acceptor>>, are handled in the TlsSettings.Here are the key changes: sem the-od cessforgraceful parad #icfg(unix)) DCopy DApply upgrade_listeners:Option<ListenFds> upgrade_listeners:ListenFds APIs to customize things Like certificate during TLSser ",
        "id": 6,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 22,
        "text": "Cursor或TraeAl编辑器选择一个安装即可，下载与操作系统匹配的版本，并安装",
        "id": 7,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 9,
        "text": "Cursor在使用一定阶段后会收费，",
        "id": 8,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 11,
        "text": "Trae目前全免费，但成熟度不如Cursor",
        "id": 9,
        "type": "text",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 0,
        "text": "",
        "id": 10,
        "type": "image",
        "file_name": "3.0【课前准备】AI编程工具安装"
      },
      {
        "page": 1,
        "length_tokens": 3,
        "text": "Cursor编程",
        "id": 0,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "Cursor编程",
        "id": 2,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 2,
        "length_tokens": 31,
        "text": "什么是Cursor Rules  \nCursor的主要功能  \nCASE：多张Excel报表处理  \nCASE: 疫情实时监控  \nTrae使用",
        "id": 3,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "Cursor编程",
        "id": 4,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "Cursor编辑器:",
        "id": 5,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "https://cursor.com/ ",
        "id": 6,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 32,
        "text": "Cursor是基于VSCode开发的Ai代码编辑器，提供智能代码补全、代码生成、代码修改、代码搜索和代码解释等。",
        "id": 7,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 35,
        "text": "与其他工具不同，Cursor将AI辅助编码直接融入到编辑器的核心功能中，比如curosr可以理解整个工程的代码，同时修改多个文件。",
        "id": 8,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 13,
        "text": "可以通过.cursorrules文件定制Al的行为。",
        "id": 9,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 86,
        "text": "AI代码编辑器 旨在让你获得超凡的生产力， CursoI是使用AI编写代码的最佳方式。 田 下载WINDOWS 所有下载 口口   \nmod.rs CHAT COMPOSER   \nImplement the cleanup functionfor the tranport stack.Do not make the upgrade mod.rs Current File   \nlistenersoptional. Could you make it easier to switch certificates in the transport listeners?   \nAccept Reje",
        "id": 10,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 68,
        "text": "ficates in the transport listeners?   \nAccept Reje Follow-up instructions... ♀KK   \npub(crate) struct TransportStack{ I'llhelpmodify the code tomakecertificate switchingmore flexible.Themain 14:ListenerEndpoint, changeswillbetoenhance theTlsAccept traitandmodifyhowcertificates tls:Option<Arc<Accepto",
        "id": 11,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 78,
        "text": "aitandmodifyhowcertificates tls:Option<Arc<Acceptor>>, arehandledinthe TlsSettings.Here are thekeychanges: //listeners sent fron the old process for graceful upgrade #[cfg（unix）] mod.rs A5 Copy >Apply upgrade_listeners:Option<ListenFds> upgrade_listeners:ListenFds, existing code ///TheAPIstocustomiz",
        "id": 12,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 3,
        "length_tokens": 25,
        "text": "ners:ListenFds, existing code ///TheAPIstocustomizethings customize things Like certificate during TLS ser ",
        "id": 13,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "Cursor Rules ",
        "id": 14,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "Thinking:什么是Cursor Rules? ",
        "id": 15,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 19,
        "text": "CursorRules帮助你定制AI行为，让它符合你的编码风格和项目需求。",
        "id": 16,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "Cursor提供两种类型的规则：",
        "id": 17,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "全局规则",
        "id": 18,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 42,
        "text": "在Cursor设置的\"通用 $\" > \" A 1$ 规则\"中配置。规则适用于你的所有项目，适合设置个人编码偏好和保持AI行为的一致性。",
        "id": 19,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 17,
        "text": "#在Cursor设置 $> \\mathsf { A l }$ 规则中",
        "id": 20,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 36,
        "text": "-所有新代码使用TypeScript  \n·遵循代码整洁之道  \n- 优先使用async/await而不是回调  \n-编写完善的错误处理",
        "id": 21,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 2,
        "text": "项目规则",
        "id": 22,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 53,
        "text": "以.mdc格式存储在.cursor/rules目录中的项目特定规则。这些规则帮助AI理解你的代码库并遵循项目规范。通过Cursor设置 $>$ 通用 $>$ 项目规则来添加。它们会与你的代码库",
        "id": 23,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 24,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "Cursor Rules ",
        "id": 25,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 2,
        "text": "项目规则",
        "id": 26,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 51,
        "text": "仅对特定项目生效，通常存储在项目根目录的.cursorrules文件中。这些规则帮助AI理解你的代码库并遵循项目规范通过Cursor设置 $>$ 通用 $>$ 项目规则来添加。",
        "id": 27,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 9,
        "text": "# 文件模式:\\*.tsx,\\*.ts",
        "id": 28,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 22,
        "text": "## React 规范  \n-使用函数组件  \n-实现完整的prop 类型-遵循React最佳实践",
        "id": 29,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "Project Rules ",
        "id": 30,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 37,
        "text": "Project-specific rules that help the Al understand your codebase and follow your project's conventions. They can be automatically included or fetched by an agent. These are synced with your codebase. ",
        "id": 31,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 16,
        "text": "No project rules found. Click the + button to add a new rule. ",
        "id": 32,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "Include .cursorrules file ",
        "id": 33,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 20,
        "text": "Ifoff,wewillnotincludeany.cursorrulesfilesinyourRulesforAl. ",
        "id": 34,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "+ Add new rule ",
        "id": 35,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 15,
        "text": "##样式- 使用Tailwind CSS-遵循团队样式指南",
        "id": 36,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 14,
        "text": "@file ../tsconfig.json @file ../tailwind.config.js ",
        "id": 37,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 5,
        "length_tokens": 83,
        "text": "项目规则优先级高于全局规则：如果项目中存在.cursorrules文件，则项目规则会覆盖全局规则。  \n全局规则：适合设置通用的编码规范、安全策略或个人偏好，确保所有项目保持一致。  \n项目规则：适合针对特定项目的个性化需求，例如特定技术栈、文件结构或安全要求。",
        "id": 38,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "Cursor编程",
        "id": 39,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 6,
        "length_tokens": 5,
        "text": "Cursor的主要功能：",
        "id": 40,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 6,
        "length_tokens": 32,
        "text": "· Composer/Agent $( \\mathsf { C m d } + \\mathsf { I } ) \\Rightarrow$ 现已升级为Agent模式",
        "id": 41,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 6,
        "length_tokens": 79,
        "text": "允许同时编辑多个文件，并根据高级指令生成完整的应用程序，突破了单行和单文件编辑的限制。它能够理解项目结构上下文，并进行交互式代码优化。Composer字面意思是作曲家，在Cursor中，它可以帮助你快速生成代码，如同自动驾驶，只需要告诉它你要做什么，它就可以帮你完成。",
        "id": 42,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 6,
        "length_tokens": 50,
        "text": "·聊天功能（ $( \\mathsf { C m d } + \\mathsf { L } )$ 用于针对更宽泛的代码问题进行对话，支持多轮对话，解答更广泛的编程问题",
        "id": 43,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 6,
        "length_tokens": 31,
        "text": "·提示框功能 $( \\mathsf { C m d } + \\mathsf { K } )$ 用于生成或修改局部的代码",
        "id": 44,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "Cursor编程",
        "id": 45,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "Tab功能:",
        "id": 46,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 7,
        "length_tokens": 47,
        "text": "相比GitHubCopilot等辅助开发工具，Cursor的优势在于它的代码编辑能力，不仅可以插入代码，而且可以对现有的代码进行修改，这也是cursor在官方文档中多次强调的",
        "id": 47,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 7,
        "length_tokens": 26,
        "text": "GitHub Copilot can insert text at your cursor position.It cannot edit the code around your cursororremovetext. ",
        "id": 48,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 7,
        "length_tokens": 12,
        "text": "Cursor can insert text at your cursor,and much more: ",
        "id": 49,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "Multi-characteredits ",
        "id": 50,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "CASE: 多张Excel报表处理",
        "id": 51,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "CASE: 多张Excel报表处理",
        "id": 52,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 11,
        "text": "TO DO: 两张Excel报表合并 ",
        "id": 53,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 31,
        "text": "比如将员工基本信息表与员工绩效表合并，比如在主表基础上，添加员工2024年第4季度的绩效评分",
        "id": 54,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 56,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "员工基本信息表.xlsx",
        "id": 57,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "员工绩效表.xlsx ",
        "id": 58,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 10,
        "length_tokens": 2,
        "text": "Cursor使用",
        "id": 59,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "Step1，使用cursor，打开对应的文件夹",
        "id": 60,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "https://www.cursor.com/cn ",
        "id": 61,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 10,
        "length_tokens": 22,
        "text": "1）下载对应的版本，然后打开本地的项目文件夹  \n2）配置python编译环境",
        "id": 62,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 63,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 64,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "Cursor使用",
        "id": 65,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "Cursor辅助AI编程提供了三个主要功能：",
        "id": 66,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 11,
        "length_tokens": 55,
        "text": "跨文件编辑 (Cmd/Ctrl + I)AI帮你创建代码、修改代码聊天功能 (Cmd/Ctrl + L)与AI交流方案，解释逻辑提示框功能(Cmd/Ctrl + K)向AI提问，让它执行特定功能",
        "id": 67,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 11,
        "length_tokens": 62,
        "text": "Cursor具有文件管理的更高权限，可以看到文件夹下所有的文件，并进行编辑/创建  \n可以对项自做背景说明，比如放到文件夹，或者 Notepads中  \n跨文件编辑功能（Composer) 可实现多文件协同修改，适合复杂项目开发。",
        "id": 68,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "Cursor中的DeepSeek配置",
        "id": 69,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 12,
        "length_tokens": 114,
        "text": "点击File $\\Rightarrow$ Preferences $\\Rightarrow$ Cursor Settings中  \n的Models  \n添加模型Add Models，创建deepseek-r1和  \ndeepseek-v3  \n因为这个需要调用第三方的API，所以打开  \n下方的OpenAIAPI Key，并进行相应设置：  \nOverride OpenAl Base URL:  \nhttp://chatapi.littlewheat.com/v1  \nyour OpenAl Key:  \nsk-  \nQ2gN9CgZOz9jrzjCCHkijalkUyaXpHS6xssmmk",
        "id": 70,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 12,
        "length_tokens": 38,
        "text": "ey:  \nsk-  \nQ2gN9CgZOz9jrzjCCHkijalkUyaXpHS6xssmmkl  \n327kkib0G",
        "id": 71,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 72,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "CASE: 多张Excel报表处理",
        "id": 73,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 33,
        "text": "Step2，读取两张数据表的字段含义编写Python，打开员工基本信息表.xlsx和员工绩效表.xlsx，查看对应的字段",
        "id": 74,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 75,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 92,
        "text": "# -\\*- coding: utf-8 - Accept Ctrl+Shift+Y Reject Ctrl+N   \nimport pandas as pd   \n#安装依赖库 (如果尚未安装)   \n#!pip install openpyxl pandas   \nQodo Gen: Options | Test this function |   \ndef read_excel_columns(file_path): \"\"\"读取Excel文件并返回列名\"\"\" try: df = pd.read_excel(file_path，engine='openpyxl') return df.co",
        "id": 76,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 91,
        "text": "ad_excel(file_path，engine='openpyxl') return df.columns.tolist() except Exception as e: print(f\"读取文件{file_path}时出错:{e}\") return []   \n#读取员工基本信息表   \nbasic_info_columns = read_excel_columns(\"员工基本信息表.xlsx\")   \nprint(\"员工基本信息表字段：\")   \nprint('\\n'.join(basic_info_columns))   \n#读取员工绩效表   \nperformance_column",
        "id": 77,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 47,
        "text": "c_info_columns))   \n#读取员工绩效表   \nperformance_columns = read_excel_columns(\"员工绩效表.xlsx\")   \nprint(\"\\n员工绩效表字段:\")   \nprint('\\n'.join(performance_columns)) ",
        "id": 78,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "<think> ",
        "id": 79,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 59,
        "text": "好的，我现在需要帮用户编写Python代码来打开两个Excel文件，查看它们的字段。首先，我得确定用户的需求是什么。他们可能想合并这两个表，或者进行数据分析，但当前的任务只是查看字段，所以不需要做进一步的处理。",
        "id": 80,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 64,
        "text": "接下来，我需要考虑使用哪个库来处理Excel文件。常用的有pandas，因为它可以方便地读取Excel并展示数据结构。用户可能没有安装所需的库，所以代码中应该包含安装openpyxi和pandas的指令，因为这两个是处理xlsx文件必需...",
        "id": 81,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "点击Accept File，并运行Python",
        "id": 82,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "CASE: 多张Excel报表处理",
        "id": 83,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "运行后可以看到数据表的字段",
        "id": 84,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 38,
        "text": "员工基本信息表字段：  \n员工ID  \n姓名  \n性别  \n部门  \n入职日期  \n员工绩效表字段：  \n员工ID  \n年度  \n季度  \n绩效评分",
        "id": 85,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 86,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 9,
        "text": "Step3，合并两张数据表",
        "id": 87,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 32,
        "text": "帮我将这两张Excel合并，即在员工基本信息表.xlsx的基础上，增加该员工2024年第4季度的绩效评分",
        "id": 88,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "Lines 13-24 Terminal X ",
        "id": 89,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 32,
        "text": "帮我将这两张Excel合并，即在员工基本信息表.xlsx的基础上，增加该员工2024年第4季度的绩效评分",
        "id": 90,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "vdeepseek-r1 normal submit ",
        "id": 91,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 92,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 14,
        "length_tokens": 27,
        "text": "需要将Terminal输出的字段选中，Ai既可以看到这些字段含义，然后下指令将数据表进行合并",
        "id": 93,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "CASE: 多张Excel报表处理",
        "id": 94,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 88,
        "text": "merge_employee_data.py > merge_employee_data # -\\*- coding: utf-8 -\\*. / import pandas as pd 3 from datetime import datetime 4 Qodo Gen: Options | Test this function | 5 def merge_employee_data(): 6 try: #读取原始数据 8 basic_df = pd.read_excel(\"员工基本信息表.xlsx\"，engine='openpyxl') 9 performance_df = pd.read_",
        "id": 95,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 113,
        "text": "sx\"，engine='openpyxl') 9 performance_df = pd.read_excel(\"员工绩效表.xlsx\"，engine='openpyxl')   \n10   \n11 #过滤2024年第4季度绩效数据   \n12 q4_2024 = performance_df[(performance_df['年度'] == 2024）&   \n13 (performance_df['季度'] == 4)]   \n14   \n15 #合并数据 (左连接以保留所有员工)   \n16 merged_df = pd.merge(   \n17 basic_df,   \n18 q4_2",
        "id": 96,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 130,
        "text": "6 merged_df = pd.merge(   \n17 basic_df,   \n18 q4_2024[['员工ID'，'绩效评分']]，# 只保留需要的字段   \n19 on='员工ID'   \n20 how='left'   \n21   \n22   \n23 #处理空值并重命名列   \n24 merged_df['绩效评分']= merged_df['绩效评分'].fillna('暂无数据')   \n25 merged_df.rename(columns={'绩效评分'：'2024Q4绩效评分'}，inplace=True)   \n26   \n27 #生成带时间戳的文件名   \n28 t",
        "id": 97,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 54,
        "text": "评分'}，inplace=True)   \n26   \n27 #生成带时间戳的文件名   \n28 timestamp = datetime.now().strftime(\"%Y%m%d%H%M\")   \n29 output_file = f\"员工信息综合表_{timestamp}.xlsx\" ",
        "id": 98,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 13,
        "text": "DeepSeek-R1中间生成的代码，用于执行任务",
        "id": 99,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 100,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "运行后，得到了合并结果",
        "id": 101,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 24,
        "text": "Thinking：不会Python，是否可以做复杂的Excel报表处理？需要自己手写vlookup函数么？",
        "id": 102,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 15,
        "length_tokens": 33,
        "text": "不需要限制DeepSeek使用的工具，业务人员可以从需求和结果上进行把控，如果想要了解DeepSeek处理过程，可以和它进行交流",
        "id": 103,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 104,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 105,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 106,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 17,
        "length_tokens": 78,
        "text": "数据表data.xlsx，原始数据见 https://github.com/cystanford/dashboard_epidemic  \n整合了疫情的关键指标数据，适用于疫情可视化大屏展示及数据分析。  \n数据表记录了香港各区每日疫情变化情况，包含确诊、康复、死亡等核心指标，以及区域风险评估结果。TO DO :",
        "id": 107,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 17,
        "length_tokens": 49,
        "text": "1）确诊病例数：每日新增与累计确诊数据  \n2）地理分布图：各区域疫情分布及热点区域标识  \n3）趋势分析图：病例增长趋势、增长率变化图表",
        "id": 108,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 109,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 110,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 111,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 112,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 113,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 22,
        "text": "编写Python，查看香港各区疫情数据_20250322.xlsx的字段和前20行数据",
        "id": 114,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 19,
        "text": "文件名：香港各区疫情数据_20250322.xlsx总行数：3240",
        "id": 115,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 3,
        "text": "字段列表：",
        "id": 116,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 70,
        "text": "1.报告日期  \n2.地区名称  \n3.新增确诊  \n4.累计确诊  \n5.现存确诊  \n6.新增康复  \n7.累计康复  \n8.新增死亡  \n9.累计死亡  \n10.发病率(每10万人)  \n11.人口  \n12.风险等级",
        "id": 117,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "前20行数据：",
        "id": 118,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 20,
        "length_tokens": 65,
        "text": "报告日期 地区名称 新增确诊 累计确诊 现存确诊 新增康复 累计康复 新增死亡 累计死亡 发病率(每10万人）人口风险等级02022-01-01中西区44400001.646091243000低风险",
        "id": 119,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 120,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 121,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 122,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "图表中的中文有乱码",
        "id": 123,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 124,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 125,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "我想创建可视化大屏，包括但不限于：",
        "id": 126,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 78,
        "text": "1）确诊病例数：每日新增与累计确诊数据  \n2）地理分布图：各区域疫情分布及热点区域标识  \n3）趋势分析图：病例增长趋势、增长率变化图表  \n===  \n帮我安排有哪些适合的图表，如何在一个可视化大屏上进行呈现，可以使用echarts",
        "id": 127,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 128,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 9,
        "text": "香港疫情可视化大屏设计方案",
        "id": 129,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 52,
        "text": "基于您的需求，我将设计一套完整的疫情可视化大屏，使用echarts实现。这个大屏将以直观、高效的方式展示香港疫情数据，包括确诊病例数据、地理分布和趋势分析。",
        "id": 130,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 131,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 23,
        "length_tokens": 16,
        "text": "这里使用 $c \\tan 1 + 2$ (Chat模式)",
        "id": 132,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 133,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "大屏总体布局",
        "id": 134,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 15,
        "text": "大屏采用分区块布局，可以分为以下几个主要部分：",
        "id": 135,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "顶部标题栏：显示\"香港疫情实时监控大屏\"及更新时间",
        "id": 136,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "中心区域：包含地图和主要图表",
        "id": 137,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "两侧辅助区域：显示关键指标和辅助图表",
        "id": 138,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "底部趋势区：展示长期趋势分析",
        "id": 139,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "具体图表规划 ",
        "id": 140,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 11,
        "text": "1.核心指标展示 (顶部卡片) ",
        "id": 141,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 18,
        "text": "今日新增确诊：数字展示 $+$ 与昨日对比的箭头指示",
        "id": 142,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "累计确诊总数：数字展示",
        "id": 143,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 7,
        "text": "当前活跃病例：数字展示",
        "id": 144,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "累计康复人数：数字展示 ",
        "id": 145,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "累计死亡人数：数字展示",
        "id": 146,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 24,
        "length_tokens": 14,
        "text": "重点关注区域：列出当日确诊人数最多的区域",
        "id": 147,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 148,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "2.地理分布图 (中心区域左侧）",
        "id": 149,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 6,
        "text": "香港地区热力图：",
        "id": 150,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 52,
        "text": "以香港地图为底图  \n根据各区确诊数据显示不同深浅的热力覆盖  \n鼠标悬停显示区域名称、累计确诊、新增确诊等详细信息  \n点击区域可查看该区域的详细数据面板",
        "id": 151,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 17,
        "text": "3.每日新增与累计确诊数据 (中心区域右侧上部)",
        "id": 152,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 11,
        "text": "双Y轴折线+柱状图: ",
        "id": 153,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 25,
        "length_tokens": 45,
        "text": "左Y轴：每日新增确诊 (柱状图)右Y轴：累计确诊 (折线图)X轴：日期 (最近30天)新增柱状图上添加7日移动平均线",
        "id": 154,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 155,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 26,
        "length_tokens": 14,
        "text": "4.各区域疫情对比 (右侧中部) ",
        "id": 156,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 26,
        "length_tokens": 6,
        "text": "横向柱状图：",
        "id": 157,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 26,
        "length_tokens": 44,
        "text": "按确诊数量从高到低排列各区域  \n不同风险等级用不同颜色表示  \n可切换显示\"累计确诊\"、\"新增确诊\"、\"每10万人口确诊率",
        "id": 158,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "5.趋势分析图 (底部)",
        "id": 159,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 26,
        "length_tokens": 69,
        "text": "增长率变化曲线图：  \n显示每日新增确诊的环比增长率  \n添加移动平均线平滑波动  \n设置0线，直观表示增长与下降  \n活跃病例趋势图：  \n展示当前活跃病例随时间变化的趋势  \n可与康复、死亡趋势叠加对比",
        "id": 160,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 161,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 13,
        "text": "6.风险预警看板 (右下角) ",
        "id": 162,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "风险等级分布饼图：",
        "id": 163,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 44,
        "text": "各区域按风险等级（高、中、低）分布  \n显示各风险等级区域数量及占比  \n关键指标预警：  \n高增长率区域列表  \n医疗资源紧张程度指示器",
        "id": 164,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "交互功能设计",
        "id": 165,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 63,
        "text": "时间选择器：可选择查看不同时间段的数据区域筛选器：可选择特定区域或多区域组合查看数据下钻：从总体视图点击进入详细信息指标对比：可选择不同指标进行对比分析数据导出：可导出图表或原始数据",
        "id": 166,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 27,
        "length_tokens": 2,
        "text": "0 ",
        "id": 167,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 168,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 26,
        "text": "帮我按照刚才的大屏设计，完成flask $^ +$ echarts的可视化大屏搭建",
        "id": 169,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 30,
        "text": "我将帮您创建一个基于Flask和ECharts的疫情可视化大屏。首先，让我了解一下项目文件结构。",
        "id": 170,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 23,
        "text": "Listed 12 items in current directory现在我需要查看现有的Excel数据处理代码，了解数据结构：",
        "id": 171,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 172,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "$\\textcircled{9}$ Read read_excel.py ",
        "id": 173,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 31,
        "text": "现在我将创建Flask项目结构和实现可视化大屏。我们将基于现有的数据处理函数来构建Web应用。",
        "id": 174,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "首先，创建必要的目录结构：",
        "id": 175,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 11,
        "text": "mkdir -p static/css static/js static/images templates ",
        "id": 176,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 44,
        "text": "PS D:\\企业培训\\香港医管局\\cASE-疫情实时监控-1> mkdir -p static/css static/js stamkdir：找不到接受实际参数\"static/js\"的位置形式参数。",
        "id": 177,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 48,
        "text": "所在位置 行:1 字符：1  \n$^ +$ mkdir -p static/css static/js static/images templates  \n$^ +$ $^ +$ CategoryInfo : InvalidArgument:(:） [mkdir],ParameterBindingE>",
        "id": 178,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 28,
        "length_tokens": 19,
        "text": "PSD:\\企业培训\\香港医管局\\CASE-疫情实时监控-1>",
        "id": 179,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 180,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 10,
        "text": "现在我们创建主要的Flask应用文件：",
        "id": 181,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 13,
        "text": "$+ 1 6 1 - 1 =$ ",
        "id": 182,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 183,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 9,
        "text": "接下来，让我们创建HTML模板文件:",
        "id": 184,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 101,
        "text": "<>index.html (new) $+ 9 2 - 1 \\cdot$ X  \n<!DOCTYPE html>  \n<html lang=\"zh-CN\">  \n<head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ device-width， initial-scale $\\scriptstyle = 1$ .0\"><title>香港疫情实时监控大屏</title><link rel=\"stylesheet\" href=\"{{ url_",
        "id": 185,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 29,
        "length_tokens": 84,
        "text": "实时监控大屏</title><link rel=\"stylesheet\" href=\"{{ url_for('static'，filename $\\because$ css/dashboard.<!-- 引入 ECharts --><script src=\"https://cdn.bootcdn.net/ajax/libs/echarts/5.3.3/echarts.min.j  \n</head>  \n<body><div class=\"dashboard-container\"><!--顶部标题栏 --><div class=\"header\">",
        "id": 186,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 187,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 8,
        "text": "现在，我们创建CSS样式文件:",
        "id": 188,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 95,
        "text": "# dashboard.css +183 -1 $v$   \n/\\*全局样式\\*/ margin: 0; padding: 0; box-sizing: border-box; font-family: \"Microsoft YaHei\"， \"PingFang SC\", \"Hiragino Sans GB\"， sans-sel   \nbody{ width: 100%; height: 100vh; overflow: hidden; background-color: #0f1c3a: color: #fff: ",
        "id": 189,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 19,
        "text": "接下来，创建JavaScript文件，实现各个图表的数据加载和渲染:",
        "id": 190,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 93,
        "text": "Js dashboard.js (new) $+ 6 6 8 - 1 =$ ×   \n//初始化所有图表   \ndocument.addEventListener('DoMContentLoaded'， function() { /／获取数据并初始化所有图表 Promise.all([ fetch('/api/daily_data').then(res $\\Rightarrow$ res.json()), fetch('/api/region_data').then(res $\\Rightarrow$ res.json()), fetch('/api/summary').then(res $\\",
        "id": 191,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 81,
        "text": "ow$ res.json()), fetch('/api/summary').then(res $\\Rightarrow$ res.json()) ]).then(([dailyData，regionData， summaryData]) $\\Rightarrow$ { /／初始化各图表 initDailyTotalChart(dailyData); initAreaComparisonChart(regionData); initGrowthRateChart(dailyData); initActiveCasesChart(dailyData); initRiskLevelPie(summ",
        "id": 192,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 30,
        "length_tokens": 23,
        "text": "ActiveCasesChart(dailyData); initRiskLevelPie(summarvData. YegionData) : ",
        "id": 193,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 31,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 194,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 31,
        "length_tokens": 18,
        "text": "python app.py runserver http://127.0.0.1:5000 ",
        "id": 195,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 196,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 32,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 197,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 32,
        "length_tokens": 24,
        "text": "大屏可以更长一些，现在右侧的很多图表都重叠到一起了，需要合理化布局",
        "id": 198,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 32,
        "length_tokens": 42,
        "text": "我看到了大屏布局问题，右侧图表确实存在重叠。我将修改CSS样式，优化大屏布局，让所有图表能够合理显示而不重叠。",
        "id": 199,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 200,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 32,
        "length_tokens": 22,
        "text": "我还需要修改HTML模板，调整风险区域部分的布局，以确保与CSS变更保持一致：",
        "id": 201,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 202,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 203,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 204,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 205,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 206,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 35,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 207,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 35,
        "length_tokens": 16,
        "text": "香港地图没有显示出来， 能否帮我找到香港的Echarts地图",
        "id": 208,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 209,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 35,
        "length_tokens": 48,
        "text": "我注意到目前的代码中使用了简化的点数据来模拟香港地图，而不是真正的地理数据，导致香港地图未能正确显示。我来帮你实现一个真实的香港地图可视化。",
        "id": 210,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 211,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 47,
        "text": "根据我的搜索结果，我发现可以使用阿里云DataV.GeoAtlas来获取香港地图的GeoJSON数据，这个工具非常适合ECharts使用。我将获取香港地图数据并帮你实现地图可视化。",
        "id": 212,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 34,
        "text": "$\\textcircled{5}$ Searched web for\"阿里云 DataV.GeoAtlas 香港地图 GeoJSON\" \"阿里云 DataV.GeoAtlas 香港..",
        "id": 213,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 40,
        "text": "根据搜索结果，我发现可以从阿里云DataV.GeoAtlas获取香港地图的GeoJSON数据。现在我会直接访问DataV.GeoAtlas网站查找香港的GeoJSON数据：",
        "id": 214,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 73,
        "text": "$\\textcircled{5}$ Confirm search for \"https://datav.aliyun.com/tools/atlas/#&lat $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 22.5&lng $=$ 114.0&zoom $^ { = 9 }$ 香 港地图\" $\\bigcirc$ Auto-search Cancel Continue ",
        "id": 215,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 39,
        "text": "让我创建一个完整的解决方案来显示香港地图。我将使用从阿里云DataV.GeoAtlas获取的香港GeoJSON数据，这是实现香港地图可视化的最佳方式。",
        "id": 216,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 13,
        "text": "{} hongkong.json (new) +311 -1 · ",
        "id": 217,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 218,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 17,
        "text": "现在我将更新JavaScript代码，将香港地图添加到我们的应用程序中：",
        "id": 219,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 19,
        "text": "Jsdashboard.js $+ 1 3 2 - 2 2 =$ ",
        "id": 220,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "X√> ",
        "id": 221,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 222,
        "type": "table",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 223,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 224,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 225,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 38,
        "length_tokens": 27,
        "text": "地图形状是有了，能否放到地图上更好看一些。现在就是一些地理区域的方块",
        "id": 226,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 38,
        "length_tokens": 25,
        "text": "我将优化香港地图的样式，让它看起来更加自然和美观，而不是简单的方块区域。",
        "id": 227,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 228,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 229,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 38,
        "length_tokens": 18,
        "text": "Cursor不一定每次都能得到满意的结果，还需要精细的调修",
        "id": 230,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 231,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 39,
        "length_tokens": 51,
        "text": "帮我查看香港地图的呈现，现在出现了两个重复的地图，都可以拖动了。另外样式上，可以参考百度地图，或者有中国地图的区域背景，因为现在没有后面的区域背景，看不出来完整的地图样式",
        "id": 232,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 39,
        "length_tokens": 4,
        "text": "修改内容说明：",
        "id": 233,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 39,
        "length_tokens": 149,
        "text": "1.移除了重复显示地图的geo配置，这是导致出现两个地图的原因。  \n2.增加了地图的背景色，设置为蓝色系 (类似百度地图的风格)，使地图看起来更有空间感。  \n3.添加了 layoutCenter 和 layoutSize 属性，确保地图居中并适当放大。  \n4.增加了 aspectScale 属性调整地图的长宽比。  \n5.在默认状态下显示地区名称标签，提高可识别性。  \n6.使用更自然的颜色渐变和边界样式，增强地图的美观度。  \n这些修改应该能使香港地图看起来更加完整和美观，并解决双重显示的问题。",
        "id": 234,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 39,
        "length_tokens": 36,
        "text": "使用 $c _ { t r 1 + L }$ （chat模式）更适合精细的调修，AI不会一上来就进入到修改模式",
        "id": 235,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 236,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 237,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "Thinking：地图的问题如何进行调整？",
        "id": 238,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 239,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 52,
        "text": "地区之间有很多空隙，比如元朗区和荃湾区，另外大埔区和沙田区有重叠的区域了。帮我查看地图的数据，中间很多没有相连，空隙太大了。",
        "id": 240,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 57,
        "text": "我注意到了香港地图显示的问题，地区之间确实存在较大空隙，且有些区域如大埔区和沙田区出现了重叠。这是因为当前使用的GeoJSON数据精度不够或坐标点可能存在问题。",
        "id": 241,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 11,
        "text": "让我分析一下香港地图数据并提供解决方案：",
        "id": 242,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 10,
        "text": "1.现有GeoJSON数据问题分析：",
        "id": 243,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 87,
        "text": "·空隙问题：当前数据中各区域的边界点可能不够密集，导致渲染时出现空隙·重叠问题：大埔区和沙田区的坐标点可能存在错误，导致两个区域在地图上重合·整体精度：目前使用的简化坐标可能过于简化，无法准确表示香港复杂的地理形状",
        "id": 244,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 5,
        "text": "2.解决方案：",
        "id": 245,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 50,
        "text": "我建议获取更高精度的香港地图GeoJSON数据。我可以帮你修改当前的 hongkong.json 文件，增加更多坐标点来填补区域间的空隙。下面是几个关键区域需要优化的部分：",
        "id": 246,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 41,
        "length_tokens": 17,
        "text": "很多细节需要精细的调整，有时候还会导致新的错误发生。",
        "id": 247,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 8,
        "text": "CASE: 疫情实时监控",
        "id": 248,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 52,
        "text": "地区之间有很多空隙，比如元朗区和荃湾区，另外大埔区和沙田区有重叠的区域了。帮我查看地图的数据，中间很多没有相连，空隙太大了。",
        "id": 249,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 57,
        "text": "我注意到了香港地图显示的问题，地区之间确实存在较大空隙，且有些区域如大埔区和沙田区出现了重叠。这是因为当前使用的GeoJSON数据精度不够或坐标点可能存在问题。",
        "id": 250,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 11,
        "text": "让我分析一下香港地图数据并提供解决方案：",
        "id": 251,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "1.现有GeoJSON数据问题分析：",
        "id": 252,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 87,
        "text": "·空隙问题：当前数据中各区域的边界点可能不够密集，导致渲染时出现空隙·重叠问题：大埔区和沙田区的坐标点可能存在错误，导致两个区域在地图上重合·整体精度：目前使用的简化坐标可能过于简化，无法准确表示香港复杂的地理形状",
        "id": 253,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "2.解决方案：",
        "id": 254,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 50,
        "text": "我建议获取更高精度的香港地图GeoJSON数据。我可以帮你修改当前的 hongkong.json 文件，增加更多坐标点来填补区域间的空隙。下面是几个关键区域需要优化的部分：",
        "id": 255,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 42,
        "length_tokens": 17,
        "text": "很多细节需要精细的调整，有时候还会导致新的错误发生。",
        "id": 256,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 43,
        "length_tokens": 9,
        "text": "打卡：疫情实时监控大屏",
        "id": 257,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 43,
        "length_tokens": 21,
        "text": "使用data.xlsx搭建疫情实时监控大屏，可以使用Flask $^ +$ Echarts",
        "id": 258,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 43,
        "length_tokens": 79,
        "text": "1.核心指标展示 (顶部卡片)  \n2.地理分布图 (中心区域左侧）  \n3.每日新增与累计确诊数据 (中心区域右侧上部)  \n4.各区域疫情对比 (右侧中部)  \n5.趋势分析图 (底部)  \n6.风险预警看板 (右下角)",
        "id": 259,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 260,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 44,
        "length_tokens": 3,
        "text": "Trae使用",
        "id": 261,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 3,
        "text": "Trae使用",
        "id": 262,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 20,
        "text": "Trae编辑器(The Real Al Engineer) : https://www.trae.com.cn/ ",
        "id": 263,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 16,
        "text": "字节推出的一款AI驱动的集成开发环境，特点：",
        "id": 264,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 33,
        "text": "Builder模式：Trae的亮点，它会自主拆解需求并自动完成多轮编码任务，从想法描述到功能实现一气呵成。",
        "id": 265,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 23,
        "text": "多模态支持：开发者可以上传图像，Trae能够理解图像内容并生成相关代码",
        "id": 266,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 31,
        "text": "免费使用： 目前Trae提供免费访问，包括内置的Doubao-1.5-pro, DeepSeek-R1, DeepSeek-V3",
        "id": 267,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 268,
        "type": "image",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 46,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 269,
        "type": "text",
        "file_name": "3.1-Cursor编程"
      },
      {
        "page": 1,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 0,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 2,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 1,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "CASE：病床使用情况",
        "id": 2,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 2,
        "length_tokens": 61,
        "text": "数据表hospital_bed_usage_data.xlsx，具体见:https:/github.com/cystanford/dashboard_hospital_bed_usage数据表记录了香港各医院病床使用情况，包科室、病房、总病床数、占用病床数等核心指标。TO DO :",
        "id": 3,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 2,
        "length_tokens": 56,
        "text": "1）占用率：各医院及科室病床使用率图表  \n2）空闲病床数：实时显示空闲病床数量及分布  \n3）病床分布图：不同科室和区域的病床分布情况",
        "id": 4,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 5,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 6,
        "type": "table",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 7,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "table",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "hospital_bed_usage_data.xlsx ",
        "id": 9,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 5,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 10,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 5,
        "length_tokens": 19,
        "text": "编写Python，查看hospital_bed_usage_data.xlsx的字段和前2o行数据",
        "id": 11,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "$\\scriptstyle = = { \\frac { } { } }$ 数据字段名称 $\\scriptstyle = = { \\frac { } { } }$ ",
        "id": 12,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 5,
        "length_tokens": 62,
        "text": "1. hospital_id   \n2.hospital_name   \n3.hospital_district   \n4.department_id   \n5.department_name   \n6.ward_id   \n7.ward_name   \n8.total beds   \n9.occupied_beds   \n10.available beds   \n11.occupancy_rate   \n12. timestamp   \n13.special_status ",
        "id": 13,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 5,
        "length_tokens": 41,
        "text": "$\\scriptstyle = = { \\frac { } { } }$ 前20行数据 $\\scriptstyle = = { \\frac { } { } }$ hospital_id hospital_name hospital_district .. ",
        "id": 14,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 15,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 13,
        "text": "帮我计算：各医院及科室病床使用率",
        "id": 16,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 39,
        "text": "$\\scriptstyle = = { \\frac { } { } }$ 各医院及科室病床使用率 $\\scriptstyle = = { \\frac { } { } }$ ",
        "id": 17,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 172,
        "text": "hospital_name department_name occupancy_rate 计算病床使用率   \n0 东区尤德夫人那打素医院 儿科 91.618351 92.03   \n1 东区尤德夫人那打素医院 内科 98.858079 99.88   \n2 东区尤德夫人那打素医院 外科 83.877139 83.40   \n3 东区尤德夫人那打素医院 妇产科 78.405726 78.75   \n4 东区尤德夫人那打素医院 康复科 84.391907 84.63   \n233 葛量洪医院 老年科 96.179615 96.66   \n234 葛量洪医院 耳鼻喉科 72.270305 73.3",
        "id": 18,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 94,
        "text": "科 96.179615 96.66   \n234 葛量洪医院 耳鼻喉科 72.270305 73.38   \n235 葛量洪医院 肿瘤科 94.620336 95.55   \n236 葛量洪医院 重症监护科 84.437119 84.63   \n237 葛量洪医院 骨科 91.043842 91.33 ",
        "id": 19,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 44,
        "text": "[238 rows x 4 columns]$\\scriptstyle = = { \\frac { } { } }$ 各医院病床使用率 $\\scriptstyle = = { \\frac { } { } }$ ",
        "id": 20,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 21,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 160,
        "text": "hospital_name occupied_beds total_beds 病床使用率  \n0 东区尤德夫人那打素医院 128125 147598 86.81  \n1 九龙医院 58059 69184 83.92  \n2 伊利沙伯医院 123603 146531 84.35  \n3 北区医院 52736 69048 76.38  \n4 博爱医院 53719 70033 76.71  \n5 基督教联合医院 57444 68433 83.94  \n6 大埔那打素医院 53172 68731 77.36  \n7 威尔斯亲王医院 113419 147919 76.68  \n8 屯门医院 93625 ",
        "id": 22,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 6,
        "length_tokens": 115,
        "text": "36  \n7 威尔斯亲王医院 113419 147919 76.68  \n8 屯门医院 93625 122455 76.46  \n9 广华医院 103504 123235 83.99  \n10 律敦治医院 106683 122417 87.15  \n11 玛丽医院 129366 148135 87.33  \n12 玛嘉烈医院 59213 70645 83.82  \n13 葛量洪医院 59624 68731 86.75",
        "id": 23,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 24,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 26,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 27,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 28,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 8,
        "length_tokens": 21,
        "text": "Thinking: 如何完成可视化大屏， 实现更多维度的可视化分析？",
        "id": 29,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 30,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "图表中的中文有乱码",
        "id": 31,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 33,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 10,
        "length_tokens": 13,
        "text": "我想创建可视化大屏，包括但不限于：",
        "id": 34,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 10,
        "length_tokens": 107,
        "text": "1）占用率：各医院及科室病床使用率图表  \n2）空闲病床数：实时显示空闲病床数量及分布  \n3）病床分布图：不同科室和区域的病床分布情况  \n==3  \n帮我安排有哪些适合的图表，整体数量要少（不超过5个，不需要地图）如何在一个可视化大屏上进行呈现，  \n可以使用flask $^ +$ echarts",
        "id": 35,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 10,
        "length_tokens": 37,
        "text": "我会帮您设计一个简洁的医院病床使用情况可视化大屏，使用Flask和ECharts来展示。以下是建议的设计方案：...",
        "id": 36,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 37,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 38,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "大屏搭建出来了，但",
        "id": 39,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 40,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 41,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 42,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 44,
        "type": "table",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 45,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 20,
        "text": "图表加载时间太慢，应该是后台在计算，如何提升图表显示的效率",
        "id": 46,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 15,
        "text": "为了提升图表显示效率，我会从以下几个方面优化代码：",
        "id": 47,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 37,
        "text": "1.使用数据缓存机制减少重复计算  \n2.优化数据聚合和过滤逻辑  \n3.减少不必要的数据传输  \n4.延迟加载图表",
        "id": 48,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "app.py +182 -122",
        "id": 49,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 29,
        "text": "from flask import Flask，render_template，jsonify   \nimport pandas as pd   \nimport json   \nimport time   \nfrom functools import lru_cache ",
        "id": 50,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 22,
        "text": "app $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Flask(__name#读取Excel数据",
        "id": 51,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 52,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 13,
        "length_tokens": 33,
        "text": "def load_data(): df $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ pd.read_excel('hospital_bed_usage_data.xlsx') return df ",
        "id": 53,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 54,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 55,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 56,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "现在还是显示速度很慢。.xlsx数据不会经常发生变化，最好提前计算出来，如果.xls×没有更新，就用之前的计算结果显示",
        "id": 57,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "没有提前生成或计算好么，还是一直在等待",
        "id": 58,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 15,
        "length_tokens": 45,
        "text": "还是第一次加载速度很慢，需要提前把需要的数据计算好（可以是另外一个python文件，将结果保存起来）。下载使用app.py的时候，如果计算结果的时间晚于.xlsx数据的时间，就可以直接使用",
        "id": 59,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 15,
        "length_tokens": 34,
        "text": "帮我查看为什么一直是加载中，数据没有显示出来。最开始的时候没有做加载中的过程，是可以显示出来数据的 (就是速度慢一些)",
        "id": 60,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "@app.py@index.html查看下代码，和加载中的逻辑，现在数据不都是提前计算好了么，应该可以直接调取之前计算好的结果",
        "id": 61,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 62,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 63,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 16,
        "length_tokens": 16,
        "text": "Cursor检索召回相关的代码片段并对app.py进行修改",
        "id": 64,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 65,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 31,
        "text": "还是在加载中，能否去掉加载中，直接将之前计算好的结果显示出来应该是放到了本地的某个文件中",
        "id": 66,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 19,
        "text": "根据我的修改，现在系统能够直接调取预计算的结果了。修改主要包括：",
        "id": 67,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 9,
        "text": "1.后端部分 (app.py)",
        "id": 68,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 42,
        "text": "·修改了API路由函数，让其在未找到数据时返回空数据结构而非\"加载中\"状态·优化了启动逻辑，应用启动时会立即加载缓存文件中的数据",
        "id": 69,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 9,
        "text": "2.前端部分 (index.html)",
        "id": 70,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 86,
        "text": "·隐藏了所有加载遮罩，默认不显示加载状态·简化了图表初始化流程，不再分批加载数据，而是一次性加载所有图表数据·新增了hideAllLoadingOverlays(）函数来隐藏所有加载提示·新增了loadAllChartData（）函数来同时加载所有图表数据·修改了状态检查函数，不再显示加载遮罩，只更新状态指示器",
        "id": 71,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 10,
        "text": "3.手动创建了预计算缓存文件",
        "id": 72,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 23,
        "text": "·在data_cache目录创建了data_cache.pkl和metadata.json文件·包含了所有需要的图表数据",
        "id": 73,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 44,
        "text": "现在当你访问应用时，会直接显示之前计算好的数据，不再显示\"加载中\"。即使数据正在计算或更新，用户界面也会显示已有的数据，提供更好的用户体验。",
        "id": 74,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 17,
        "length_tokens": 34,
        "text": "你可以通过浏览器访问http://127.0.0.1:5000来查看应用，所有图表应该能够立即显示，而不会出现加载状态",
        "id": 75,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "CASE: 病床使用情况",
        "id": 76,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 77,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 19,
        "length_tokens": 7,
        "text": "打卡：病床使用情况",
        "id": 78,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 19,
        "length_tokens": 25,
        "text": "使用hospital_bed_usage_data.xlsx搭建疫情实时监控大屏，可以使用Flask $^ +$ Echarts",
        "id": 79,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 19,
        "length_tokens": 56,
        "text": "1.占用率：各医院及科室病床使用率图表  \n2.空闲病床数：实时显示空闲病床数量及分布  \n3.病床分布图：不同科室和区域的病床分布情况",
        "id": 80,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 81,
        "type": "image",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 82,
        "type": "text",
        "file_name": "3.2【补充】CASE-病床使用情况"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "Cursor数据可视化与洞察",
        "id": 0,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "Cursor数据可视化与洞察",
        "id": 2,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 2,
        "length_tokens": 29,
        "text": "Python基础语法与AI   \n·机器学习七步法 CASE：客户续保预测   \n数据可视化   \n模型洞察 ",
        "id": 3,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "Python基础语法与AI ",
        "id": 4,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "Python是数据分析的首选语言",
        "id": 5,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "Thinking: 如何选择数据分析语言？",
        "id": 6,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "table",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 4,
        "length_tokens": 90,
        "text": "·Python是首选的数据分析语言  \n·在数据分析/数据科学领域中占有率 $70 \\%$   \n·有强大的生态（社区 $+$ 工具）  \n科学计算：Sklearn,Numpy, Pandas  \n人工智能：Tensorflow,PyTorch  \n网络爬虫： Scrapy, Request, BeautifulSoap  \n运筹优化：ortools,pulp  \nPython生态强大，代码简洁",
        "id": 8,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 4,
        "length_tokens": 22,
        "text": "相对其他语言Python更好上手，浙江高考将Python列为可选科目之一",
        "id": 9,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 5,
        "length_tokens": 11,
        "text": "学习Python可以从以下3个维度掌握",
        "id": 10,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 5,
        "length_tokens": 50,
        "text": "·基础语法  \n输入，输出，条件判断，循环语句，注释，引用包，函数定义  \n·数据结构  \n列表、元组、字典、集合  \n·常用分析工具  \nNumpy, Pandas",
        "id": 11,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 6,
        "length_tokens": 4,
        "text": "Python基础语法",
        "id": 12,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 6,
        "length_tokens": 67,
        "text": "·输入输出   \nname $\\mathbf { \\tau } = \\mathbf { \\tau }$ input(\"What's your name?\")   \n$\\mathsf { s u m } = 1 0 0 { + } 1 0 0$   \nprint ('hello',name)   \nprint ('sum',sum) ",
        "id": 13,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 7,
        "length_tokens": 4,
        "text": "Python基础语法",
        "id": 14,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 7,
        "length_tokens": 44,
        "text": "·条件判断if...else...   \nscore = 95   \nif score>= 90: print('Excellent')   \nelse: if score < 60: print('Fail') else: print('Good Job') ",
        "id": 15,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "Python基础语法",
        "id": 16,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 8,
        "length_tokens": 108,
        "text": "·循环语句for...in   \n$\\mathsf { s u m } = 0$   \nfor number in range(11): sum= sum $+$ number   \nprint(sum)   \n·循环语句while   \nsum=0   \nnumber $= 1$   \nwhile number $< 1 1$ ： sum $\\mathbf { \\tau } = \\mathbf { \\tau }$ sum +number number $\\mathbf { \\tau } = \\mathbf { \\tau }$ number + 1   \nprint(sum) ",
        "id": 17,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 4,
        "text": "Python基础语法",
        "id": 19,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 16,
        "text": "·注释 # -\\*- coding: utf-8 -\\* ",
        "id": 20,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 1,
        "text": "三",
        "id": 21,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 30,
        "text": "这是多行注释，用三个单引号这是多行注释，用三个单引号这是多行注释，用三个单引号",
        "id": 22,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 1,
        "text": "三",
        "id": 23,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 39,
        "text": "·引用模块/包：import  \n#引用一个或多个包  \nimport module_name1,module_name2  \n#导入包中指定模块  \nfrom package_name import moudule_nam",
        "id": 24,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 9,
        "length_tokens": 20,
        "text": "函数定义def def addone(score): return score + 1 print(addone(99)) ",
        "id": 25,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 10,
        "length_tokens": 3,
        "text": "Python数据结构",
        "id": 26,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 10,
        "length_tokens": 126,
        "text": "数据类型：列表、元组、字典、集合  \n列表：[]  \n$| | \\boldsymbol { \\mathsf { s t s } } = [ ^ { \\prime } \\mathsf { a } ^ { \\prime } , ^ { \\prime } \\mathsf { b } ^ { \\prime } , ^ { \\prime } \\mathsf { c } ^ { \\prime } ]$   \n·元组(tuple)  \ntuples $\\mathbf { \\tau } = \\mathbf { \\tau }$ ('tupleA','tupleB')  \n·字典{dictionary}  \nsc",
        "id": 27,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 10,
        "length_tokens": 121,
        "text": "\\tau }$ ('tupleA','tupleB')  \n·字典{dictionary}  \nscore $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {'guanyu':95,'zhangfei':96}  \n·集合：set  \n$\\mathsf { s } = \\mathsf { s e t } ( [ ^ { \\mathsf { \\prime } } \\mathsf { a } ^ { \\prime } , ^ { \\mathsf { \\prime } } \\mathsf { b } ^ { \\prime } , ^ { \\mathsf { \\pr",
        "id": 28,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 10,
        "length_tokens": 39,
        "text": "} } \\mathsf { b } ^ { \\prime } , ^ { \\mathsf { \\prime } } \\mathsf { c } ^ { \\prime } ] )$ ",
        "id": 29,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "Python数据结构 （列表）",
        "id": 31,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 11,
        "length_tokens": 2,
        "text": "#列表",
        "id": 32,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 11,
        "length_tokens": 49,
        "text": "lists $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['zhangfei','guanyu','liubei'] #列表中添加元素 lists.append('dianwei\") print(lists) print(len(lists)) ",
        "id": 33,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 34,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 11,
        "length_tokens": 14,
        "text": "#在指定位置添加元素lists.insert(O,'diaochan')",
        "id": 35,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 11,
        "length_tokens": 15,
        "text": "#删除末尾元素   \nlists.pop()   \nprint(lists) ",
        "id": 36,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "Thinking：什么是人工智能？",
        "id": 37,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 13,
        "length_tokens": 17,
        "text": "The theory and development of computer systems able to perform tasks normally requiring human intelligence. ",
        "id": 38,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "-- Oxford Dictionary ",
        "id": 39,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "Using data to solve problems. ",
        "id": 40,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 14,
        "length_tokens": 3,
        "text": "--cy ",
        "id": 41,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 15,
        "length_tokens": 6,
        "text": "Using data to solve problems ",
        "id": 42,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 43,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "AI的本质 ",
        "id": 44,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 37,
        "text": "AI就是利用数据，解决问题Using data to solve problemsTraining PredictionUsing data solve problems训练阶段：通过对数据的训练， 创建一个预测模型并对其进行微调",
        "id": 45,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 46,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 47,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": "模型生成：预测模型可以从这些数据背后找出答案来， 帮我们解决某个问题",
        "id": 48,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 20,
        "text": "预测阶段：通过测试集完成模型评估，从而了解模型在测试集中的有效性",
        "id": 49,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 16,
        "length_tokens": 12,
        "text": "过程中，预测模型会被不断改进和使用。",
        "id": 50,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 17,
        "length_tokens": 4,
        "text": "机器学习的步骤",
        "id": 51,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "·Thinking：如何预测房价？",
        "id": 52,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 18,
        "length_tokens": 6,
        "text": "机器学习的7个步骤",
        "id": 53,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 54,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "机器学习的步骤",
        "id": 55,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 19,
        "length_tokens": 8,
        "text": "·Thinking：如何预测房价？",
        "id": 56,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 57,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 58,
        "type": "table",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 20,
        "length_tokens": 5,
        "text": "机器学习的训练过程",
        "id": 59,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 20,
        "length_tokens": 8,
        "text": "·训练是机器学习的主要步骤",
        "id": 60,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 20,
        "length_tokens": 31,
        "text": "·针对预测房价这个例子，我们可以用简单的线性模型： $V = W ^ { \\ast } x + b$ ",
        "id": 61,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 62,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "机器学习的训练过程",
        "id": 63,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 21,
        "length_tokens": 58,
        "text": "·在机器学习中，我们有很多特征，基于这些特征，我们需要训练在Model中的权重w  \n·这些特征值构成的矩阵，称之为权重矩阵weights  \n·同时，还存在偏差，称之为biases",
        "id": 64,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 65,
        "type": "table",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 21,
        "length_tokens": 51,
        "text": "$$\nf ( x ) = w _ { 1 } x _ { 1 } + w _ { 2 } x _ { 2 } + . . . + w _ { d } x _ { d } + b\n$$",
        "id": 66,
        "type": "equation",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 21,
        "length_tokens": 25,
        "text": "$$\nf ( x ) = \\mathbf { w } ^ { T } \\mathbf { x } + b\n$$",
        "id": 67,
        "type": "equation",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 22,
        "length_tokens": 5,
        "text": "机器学习的训练过程",
        "id": 68,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 22,
        "length_tokens": 28,
        "text": "·机器学习的过程，就是在搜索空间中对W和B进行搜索的过程，使得模型的准确率达到某个标准",
        "id": 69,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 22,
        "length_tokens": 23,
        "text": "·一个训练步骤(trainingstep)，称之为一次迭代。目的在于更新权重和变量",
        "id": 70,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 22,
        "length_tokens": 26,
        "text": "·通过多次迭代，模型中的参数不断进行更新。就好像是在数据中进行线性拟合",
        "id": 71,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 22,
        "length_tokens": 13,
        "text": "·当完成训练时，可以使用模型对房价进行预测",
        "id": 72,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 73,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "机器学习的模型选择",
        "id": 74,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 23,
        "length_tokens": 14,
        "text": "·Thinking：什么是回归问题，什么是分类问题？",
        "id": 75,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 23,
        "length_tokens": 17,
        "text": "·Thinking：什么是线性回归，什么是逻辑回归？",
        "id": 76,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "机器学习的模型选择",
        "id": 77,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 19,
        "text": "·判断一个问题是分类，还是回归：输出的数据类型：离散or连续",
        "id": 78,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "·线性回归：",
        "id": 79,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 89,
        "text": "$$\n\\begin{array} { l } { f ( x ) = w _ { 1 } x _ { 1 } + w _ { 2 } x _ { 2 } + \\ldots + w _ { d } x _ { d } + b } \\\\ { f ( x ) = \\mathbf { w } ^ { T } \\mathbf { x } + b } \\end{array}\n$$",
        "id": 80,
        "type": "equation",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 6,
        "text": "·逻辑回归：",
        "id": 81,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 9,
        "text": "使用sigmod函数，实际上是分类算法",
        "id": 82,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 83,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 25,
        "length_tokens": 5,
        "text": "机器学习的模型选择",
        "id": 84,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 25,
        "length_tokens": 16,
        "text": "·Thinking：如何判断杯子里盛的是水，还是饮料？",
        "id": 85,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 86,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "机器学习的模型选择",
        "id": 87,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 88,
        "type": "table",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 26,
        "length_tokens": 47,
        "text": "可见光的波长为 $4 0 0 \\sim 7 6 0 \\mathrm { n m }$ ，白色是包含光谱中所有颜色的集合因此采用color这里采用颜色值",
        "id": 89,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "机器学习的模型选择",
        "id": 90,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 91,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 28,
        "length_tokens": 7,
        "text": "机器学习的特征构造",
        "id": 92,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 28,
        "length_tokens": 13,
        "text": "如何用线性回归模型拟合非线性关系",
        "id": 93,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 28,
        "length_tokens": 0,
        "text": "",
        "id": 94,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "机器学习的评估",
        "id": 95,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 29,
        "length_tokens": 28,
        "text": "·对数据的评估有多种方式：·我们通过会选择一部分数据作为测试集，比如20%或者10%",
        "id": 96,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 29,
        "length_tokens": 12,
        "text": "省 省 Training Evaluation 80% 20% ",
        "id": 97,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "超参数调整",
        "id": 98,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 30,
        "length_tokens": 61,
        "text": "·我们还可以对模型中的参数进行调整，比如epoch的次数，学习率等·这些参数通常被称为超参数。调整超参数的过程比起科学更像是艺术。这是实验性的过程，并很大程度上取决于具体的数据集、模型和训练过程",
        "id": 99,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "数据分析模型",
        "id": 100,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "——10大经典模型",
        "id": 101,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 31,
        "length_tokens": 32,
        "text": "·分类算法：C4.5，朴素贝叶斯（Naive Bayes），SVM，KNN，Adaboost， CART",
        "id": 102,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 31,
        "length_tokens": 10,
        "text": "·聚类算法：K-Means，EM",
        "id": 103,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "·关联分析：Apriori",
        "id": 104,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "·连接分析：PageRank ",
        "id": 105,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "数据分析模型",
        "id": 106,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "主流模型",
        "id": 107,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 32,
        "length_tokens": 19,
        "text": "Logistic Regression,Decision Trees, RandomForests在业界依然是主流 ",
        "id": 108,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 109,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 110,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 34,
        "length_tokens": 4,
        "text": "Thinking& Action ",
        "id": 111,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "Action：寿险客户续保预测 ",
        "id": 112,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 34,
        "length_tokens": 52,
        "text": "寿险行业是一个高度依赖于客户忠诚度和持续支付保费的领域。准确预测客户是否续保可以帮助保险公司提前采取措施，减少流失率，比如提供更加个性化的服务或者优化产品设计。",
        "id": 113,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 34,
        "length_tokens": 46,
        "text": "训练集：train.csv 1000条   \n测试集：test.csv200条   \nhttps://www.kaggle.c0m/t/467370365f17478   \n68eadbd65eeb970c5 ",
        "id": 114,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 115,
        "type": "table",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 116,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "决策树：",
        "id": 117,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 14,
        "text": "·决策树基本上就是把我们以前的经验总结出来",
        "id": 118,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 20,
        "text": "·常见的决策树算法有C4.5、ID3和CART ",
        "id": 119,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 16,
        "text": "·Thinking：如何构造一个判断是否去打篮球的决策树",
        "id": 120,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 23,
        "text": "将哪个属性（天气、温度、湿度、刮风）作为根节点是个关键问题",
        "id": 121,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 35,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "table",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 123,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "信息、熵以及信息增益：",
        "id": 124,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 53,
        "text": "·引用香农的话来说，信息是用来消除随机不确定性的东西·对于机器学习中的决策树而言，如果带分类的事物集合可以划分为多个类别当中，则某个类（xi）的信息可以定义为",
        "id": 125,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 46,
        "text": "$$\n\\boxed { I \\big ( X = x _ { i } \\big ) } = - \\log _ { 2 } \\boxed { P \\big ( x _ { i } \\big ) }\n$$",
        "id": 126,
        "type": "equation",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "随机变量的信息 当xi发生时的概率",
        "id": 127,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 45,
        "text": "·熵是约翰.冯.诺依曼建议使用的命名，熵 $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ 信息的期望值",
        "id": 128,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 102,
        "text": "$$\nH ( X ) = \\sum _ { i = 1 } ^ { n } p { \\big ( } x _ { i } { \\big ) } I { \\big ( } x _ { i } { \\big ) } = - \\sum _ { i = 1 } ^ { n } p { \\big ( } x _ { i } { \\big ) } \\log p { \\big ( } x _ { i } { \\big ) }\n$$",
        "id": 129,
        "type": "equation",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 174,
        "text": "熵用来度量不确定性的，当熵越大， $x = x i$ 的不确定性越大对于机器学习中的分类问题，熵越大 $\\Rightarrow$ 这个类别的不确定性大·信息增益在决策树算法中是用来选择特征的指标，信息增益越大，则这个特征的选择性越好信息增益 $g \\left( D , A \\right) = H \\left( D \\right) - H \\left( D \\mid A \\right)$ 原有树的熵 $\\mathsf { H } ( \\mathsf { D } )$ 增加了一个分裂节点，使得熵变成了 ${ \\mathsf { H } } ( { \\mathsf { D } } | { \\math",
        "id": 130,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 30,
        "text": "了 ${ \\mathsf { H } } ( { \\mathsf { D } } | { \\mathsf { A } } )$ ",
        "id": 131,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 132,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 133,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "决策树与随机森林",
        "id": 134,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 37,
        "length_tokens": 5,
        "text": "随机森林的生成：",
        "id": 135,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 37,
        "length_tokens": 69,
        "text": "·森林中的每棵树都是独立的  \n·bagging思想，将若干个弱分类器的分类结果进行投票选择，从而组成一个强分类器  \n·bagging不用单棵决策树来做预测，增加了预测准确率，即不容易过拟合，减少了预测方差",
        "id": 136,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 137,
        "type": "image",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 37,
        "length_tokens": 17,
        "text": "少数服从多数，获得票数最多的类别就是森林的分类结果",
        "id": 138,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 139,
        "type": "text",
        "file_name": "4.1-Cursor数据可视化与洞察"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "客户续保预测 ",
        "id": 0,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "Case: 客户续保预测 ",
        "id": 1,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 2,
        "length_tokens": 7,
        "text": "Case：客户续保预测 ",
        "id": 2,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 2,
        "length_tokens": 52,
        "text": "寿险行业是一个高度依赖于客户忠诚度和持续支付保费的领域。准确预测客户是否续保可以帮助保险公司提前采取措施，减少流失率，比如提供更加个性化的服务或者优化产品设计。",
        "id": 3,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 2,
        "length_tokens": 46,
        "text": "训练集：train.csv 1000条   \n测试集：test.csv200条   \nhttps://www.kaggle.c0m/t/467370365f17478   \n68eadbd65eeb970c5 ",
        "id": 4,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 5,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 3,
        "length_tokens": 8,
        "text": "Case: 客户续保预测 ",
        "id": 6,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 3,
        "length_tokens": 25,
        "text": "提交结果以cSV的格式，采用accuracy进行评价标准工作中，可能还会用到其他评价标准：",
        "id": 7,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 3,
        "length_tokens": 113,
        "text": "$F 1 = 2 { \\frac { p \\cdot r } { p + r } } { \\mathrm { ~ w h e r e ~ } } p = { \\frac { t p } { t p + f p } } , r = { \\frac { t p } { t p + f n } }$ 比如F1值，可以平衡精确率和召回率精确率 Precision：True Positive在all predicted positives的比例召回率 Recall:True Positive在all actual positives的比例",
        "id": 8,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 9,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "policyresult.csv，提交预测结果",
        "id": 10,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "Case: 客户续保预测 ",
        "id": 11,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 12,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 4,
        "length_tokens": 75,
        "text": "Step1，数据预处理  \n对数据进行可视化探索  \n缺失值处理，异常值处理，唯一值统计  \n分类变量数值化  \nStep2，模型选择（训练&评估）  \n随机森林,XGBoost,LightGBM  \n决策树、逻辑回归  \nStep3，模型预测（提交预测结果）",
        "id": 13,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "policyresult.csv，提交预测结果",
        "id": 14,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "To DO: 数据预处理",
        "id": 15,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 5,
        "length_tokens": 2,
        "text": "数据探索",
        "id": 16,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 5,
        "length_tokens": 18,
        "text": "Thinking: 针对客户续保， 都有哪些维度可以进行数据探索？",
        "id": 17,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "基本人口统计特征",
        "id": 18,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 5,
        "length_tokens": 32,
        "text": "年龄分布  \n性别差异  \n出生地区与投保所在地区的关联  \n经济状况  \n收入水平  \n教育背景  \n，职业类型",
        "id": 19,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 5,
        "length_tokens": 2,
        "text": "家庭结构",
        "id": 20,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 5,
        "length_tokens": 53,
        "text": "·婚姻状况  \n·家庭成员数量  \n保单详情  \n·保单类型  \n·保费金额  \n·保单期限  \n·理赔历史  \n时间和地域因素  \n·保单生效日期  \n·投保所在地区",
        "id": 21,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "数据探索",
        "id": 22,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 114,
        "text": "#年龄分布  \nplt.figure(figsize=(10, 6))  \nsns.histplot(df['age'], bins $\\scriptstyle \\mathtt { \\mathtt { = 5 0 } }$ ,kde $\\risingdotseq$ True)  \nplt.title('客户年龄分布')  \nplt.xlabel('年龄')  \nplt.ylabel('人数)  \nplt.show()  \n# 出生地区与投保所在地区的关联  \nregion_cross $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.crosstab(df['b",
        "id": 23,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 112,
        "text": "hbf { \\tau } = \\mathbf { \\tau }$ pd.crosstab(df['birth_region'], df['insurance_region'])  \nplt.figure(figsize $\\ c =$ (12, 10))  \nsns.heatmap(region_cross, cmap $= ^ { \\mathsf { 1 } }$ YIGnBu',annot $\\ c =$ False, fmt='.0f',  \ncbar_kws $\\ c =$ {\"label':'人数'})  \nplt.title('出生地区与投保所在地区的热力图')  \nplt.xla",
        "id": 24,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 106,
        "text": "l':'人数'})  \nplt.title('出生地区与投保所在地区的热力图')  \nplt.xlabel('投保所在地区')  \nplt.ylabel('出生地区')  \nplt.show()  \n# 性别差异  \ngender_renewal $\\mathbf { \\tau } = \\mathbf { \\tau }$   \ndf.groupby('gender')['renewal'].value_counts(normalize $\\circleddash$ True).unstack()  \ngender_renewal.plot(kind $= ^ { \\mathsf { I } }",
        "id": 25,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 64,
        "text": "  \ngender_renewal.plot(kind $= ^ { \\mathsf { I } }$ bar'，stacked $\\ c =$ True, figsize=(8, 6), title $\\bullet ^ { \\prime }$ 不同  \n性别续保情况\")  \nplt.ylabel('比例\")  \nplt.show()",
        "id": 26,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 27,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 28,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "数据探索 （人口特征）",
        "id": 29,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "数据探索 （人口特征）",
        "id": 31,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 33,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "数据探索 （经济情况）",
        "id": 34,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "数据探索 （经济情况）",
        "id": 36,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 37,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "数据探索 （家庭结构）",
        "id": 38,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 39,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "数据探索 （保单详情",
        "id": 40,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 41,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 42,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "数据探索 （保单详情",
        "id": 43,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 44,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": "数据探索 （时间和地域因素）",
        "id": 45,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 46,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": "数据探索 （时间和地域因素）",
        "id": 47,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 48,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "数据预处理",
        "id": 49,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 16,
        "length_tokens": 46,
        "text": "#查看分类变量   \ncate_cols $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.select_dtypes(include $\\mathop { \\bf { \\phi } } =$ ['object']).columns   \ncate_cols ",
        "id": 50,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 16,
        "length_tokens": 58,
        "text": "Index(['gender','birth_region','insurance_region','income_level', 'education_level','occupation','marital_status','policy_type', 'policy_term','claim_history','renewal'], dtype $\\mathbf { \\lambda } = \\mathbf { \\vec { \\lambda } }$ object') ",
        "id": 51,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 16,
        "length_tokens": 49,
        "text": "# policy_term字段：去掉'年'字，并转换为整数 df['policy_term'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['policy_term'].str.replace('年',\").astype(int) ",
        "id": 52,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "数据预处理",
        "id": 53,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 70,
        "text": "#对income_level进行数值编码 income_map $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {'低': 0,'中': 1,'高': 2} df['income_level'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['income_level'].map(income_map) ",
        "id": 54,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 71,
        "text": "#对education_level进行数值编码education_map $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {高中':0,'本科':1,'硕士':2,'博士':3}df['education_level'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['education_level'].map(education_map)",
        "id": 55,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 73,
        "text": "#对marital_status进行数值编码 marital_ $m a p = \\{ ^ { \\prime }$ 单身':0,'已婚':1,'离异': 2} df['marital_status'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['marital_status'].map(marital_map) ",
        "id": 56,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 121,
        "text": "#对gender进行数值编码   \ngender_map $\\mathbf { \\tau } = \\mathbf { \\tau }$ {女': 0,'男': 1}   \ndf['gender'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['gender'].map(gender_map)   \n# 对claim_map进行数值编码   \nrenewal_ $\\mathsf { m a p } = \\{ { } ^ { \\prime } \\mathsf { Y } \\mathsf { e s } ^ { \\prime } \\colon 1 , { } ^ ",
        "id": 57,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 116,
        "text": "Y } \\mathsf { e s } ^ { \\prime } \\colon 1 , { } ^ { \\prime } \\mathsf { N o } ^ { \\prime } \\colon 0 \\}$   \ndf['renewal'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['renewal'].map(renewal_map)   \n#将分类变量转换为数值型   \nle $\\mathbf { \\tau } = \\mathbf { \\tau }$ LabelEncoder()   \ncate_cols $\\mathbf { \\tau } = \\ma",
        "id": 58,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 65,
        "text": "abelEncoder()   \ncate_cols $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['birth_region','insurance_region',   \n'occupation','policy_type']   \nfor col in cate_cols: df[col] $\\mathbf { \\tau } = \\mathbf { \\tau }$ le.fit_transform(df[col]) ",
        "id": 59,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 61,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "续保预测：随机森林",
        "id": 62,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 19,
        "length_tokens": 100,
        "text": "import pandas as pd   \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_excel('./policy_clean.xlsx')   \n#转换为自某一起始点的天数   \ndf['policy_start_date'].min()   \nbase_date $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime('2010-01-01')   \ndf['policy_start_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ ",
        "id": 63,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 19,
        "length_tokens": 88,
        "text": "_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (df['policy_start_date'] -   \nbase_date).dt.days   \ndf[['policy_start_date','policy_start_date_day']]   \ndf['policy_end_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (df['policy_end_date'] -   \nbase_date).dt.days   \ndf[['policy_end_date','policy_e",
        "id": 64,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "e_date).dt.days   \ndf[['policy_end_date','policy_end_date_day'l] ",
        "id": 65,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 66,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "续保预测：随机森林",
        "id": 67,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 20,
        "length_tokens": 58,
        "text": "from sklearn.model_selection import train_test_split   \nfrom sklearn.preprocessing import StandardScaler   \nfrom sklearn.ensemble import RandomForestClassifier   \nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix   \n#特征和目标变量   \n$\\mathsf { X } =$ df.drop(['renewal','",
        "id": 68,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 20,
        "length_tokens": 105,
        "text": "#特征和目标变量   \n$\\mathsf { X } =$ df.drop(['renewal','policy_start_date','policy_end_date'], axis ${ \\bf \\varepsilon } = 1$ ）   \n$\\boldsymbol { \\mathsf { y } } = \\mathsf { d } \\boldsymbol { \\mathsf { f } } [$ 'renewal']   \n#标准化特征   \nscaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ StandardScaler()   \nX_scal",
        "id": 69,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 20,
        "length_tokens": 115,
        "text": "u } = \\mathbf { \\tau }$ StandardScaler()   \nX_scaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ scaler.fit_transform(X) 以上代码都可以复用，用于决策树、逻辑回归等   \n#划分训练集和测试集   \nX_train,X_test, y_train, Y_test $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(X_scaler, y, test_size ${ \\tt \\tt = } 0 . 2$ , random_state",
        "id": 70,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 20,
        "length_tokens": 24,
        "text": " y, test_size ${ \\tt \\tt = } 0 . 2$ , random_state=42) ",
        "id": 71,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "续保预测：随机森林",
        "id": 72,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 96,
        "text": "#创建随机森林分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ RandomForestClassifier(n_estimators=100, random_state=42)   \n# 训练模型   \nclf.fit(X_train, y_train)   \n#预测   \nY_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test)   \n#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"",
        "id": 73,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 44,
        "text": "uracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred))   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "id": 74,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "Accuracy: 0.925 ",
        "id": 75,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 16,
        "text": "Confusion Matrix:   \n[[33 11]   \n[4152]] ",
        "id": 76,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "Classification Report: ",
        "id": 77,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 78,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 8,
        "text": "续保预测：决策树 ",
        "id": 79,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 97,
        "text": "#创建决策树分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ DecisionTreeClassifier(random_state=42,max_depth=4)   \n#训练模型   \nclf.fit(X_train, Y_train)   \n#预测   \nY_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test)   \n#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"Confusio",
        "id": 80,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 42,
        "text": "accuracy_score(y_test, Y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred))   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "id": 81,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 7,
        "text": "Accuracy: 0.93 ",
        "id": 82,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 16,
        "text": "Confusion Matrix:   \n[[34 10]   \n[4152]] ",
        "id": 83,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "Classification Report: ",
        "id": 84,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 85,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "续保预测：决策树 ",
        "id": 86,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "#可视化决策树 ",
        "id": 87,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 92,
        "text": "dot_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ export_graphviz(clf, out_file $\\ c =$ None, feature_names=X.columns, class_names $\\ c =$ ['Not   \nRenewed', 'Renewed'], filled $\\mathbf { \\lambda } = \\mathbf { \\dot { \\lambda } }$ True, rounded $\\ c = { \\overrightarrow { \\vert \\mathbf { \\mu } } }$ True,",
        "id": 88,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 59,
        "text": "\\overrightarrow { \\vert \\mathbf { \\mu } } }$ True, special_characters $\\ c =$ True)   \ngraph $\\mathbf { \\tau } = \\mathbf { \\tau }$ pydotplus.graph_from_dot_data(dot_data)   \nImage(graph.create_png()) ",
        "id": 89,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 112,
        "text": "class=Renewed True False family_members≤2.5 age ≤60.5 gini=0.499 samp1 due=e5 class=Not Renewed class=Renewe policy_stait_date_day≤703.0 marital stus 1.5 poey family_members≤3.5 gini =0.294 gini = 0.449 gini=0.449 val15 samples =106 valpg /alue=[36,70] [8,481] class=NotRenewed class=Renewed class=Re",
        "id": 90,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 97,
        "text": "0] [8,481] class=NotRenewed class=Renewed class=Renewed class=Renewed n1-195 国 G oc535 educaion iel0. Ca samples = 5 class=newed samples = 87 Can clss=N= [1.nwed Ce =Not Renewed class = Renewed class= Not Renewed va class = Not Renewed class = Renewed class =Not Renewed class =NotRenew Ga class = Re",
        "id": 91,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 23,
        "length_tokens": 56,
        "text": "d class =Not Renewed class =NotRenew Ga class = Renewed valtg-0.4 class=Renewed somples=419 class =Renewed vamuples.6g class = Not Renewed E class = Renewed class =Not Renewec ",
        "id": 92,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "续保预测：决策树 ",
        "id": 93,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 24,
        "length_tokens": 51,
        "text": "from sklearn.tree import DecisionTreeClassifier, export_text #输出决策树的文本表示   \ntree_rules $\\mathbf { \\tau } = \\mathbf { \\tau }$ export_text(clf, feature_names=list(X.columns)) print(tree_rules) ",
        "id": 94,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 24,
        "length_tokens": 122,
        "text": "--- age <= 29.50 |--- family_members <= 2.50 :policy_start_date_day $< = 7 0 3 . 0 0$ （2 - age <= 19.50 |--- class: 0 |--- age > 19.50 1 --- class:1 -- policy_start_date_day $>$ 703.00 |--- age <= 21.50 1 |--- class: 0 |--- age > 21.50 |--- class: 0 l--- family_members $>$ 2.50 : marital_status $< =",
        "id": 95,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 24,
        "length_tokens": 115,
        "text": "l--- family_members $>$ 2.50 : marital_status $< = \\ 1 . 5 8$ --- occupation $< = ~ 2 . 5 8$ |--- class: 1 |--- occupation $>$ 2.50 |--- class: 0 -- marital_status $>$ 1.50 |--- policy_end_date_day $\\scriptstyle < =$ 8918.50 --- class:0 |--- policy_end_date_day $>$ 8918.50 |--- class: 1 age > 29.50 ",
        "id": 96,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 24,
        "length_tokens": 124,
        "text": "nd_date_day $>$ 8918.50 |--- class: 1 age > 29.50 age $< = ~ 6 0 . 5 8$ - policy_end_date_day $\\scriptstyle < =$ 5506.00 |--- class: 0 --- policy_end_date_day $>$ 5506.00 |--- occupation $< = ~ 3 . 5 0$ 1 |--- class: 1 |--- occupation $>$ 3.50 |--- class: 1 |--- age > 60.50 |--- family_members $< = ",
        "id": 97,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 24,
        "length_tokens": 117,
        "text": "lass: 1 |--- age > 60.50 |--- family_members $< = ~ 3 . 5 0$ （20 - education_level $< = ~ 9 . 5 8$ （20 |--- class: 0 |--- education_level $>$ 0.50 |--- class: 1 --- family_members > 3.50 |--- marital_status $< = ~ 1 . 5 0$ （204 |--- class: 1 - marital_status $>$ 1.50 |--- class: 0 ",
        "id": 98,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 9,
        "text": "续保预测：逻辑回归 ",
        "id": 99,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 54,
        "text": "#创建逻辑回归分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ LogisticRegression(random_state $= 4 2$ ,max_iter=200) # 增加   \nmax_iter以确保收敛 ",
        "id": 100,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "# 训练模型 clf.fit(X_train, y_train) ",
        "id": 101,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 24,
        "text": "#预测 Y_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test) ",
        "id": 102,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 51,
        "text": "#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred)   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "id": 103,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 7,
        "text": "Accuracy: 0.835 ",
        "id": 104,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 21,
        "text": "Confusion Matrix:   \n[[11 33]   \n[0 156]]   \nClassification Report: ",
        "id": 105,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 26,
        "length_tokens": 9,
        "text": "续保预测：逻辑回归 ",
        "id": 107,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 26,
        "length_tokens": 112,
        "text": "#获取特征重要性（通过系数）  \nfeature_importance $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.coef_[0]#取第一个类别的系数绝对值  \nfeature_names $\\mathbf { \\tau } = \\mathbf { \\tau }$ X.columns  \n#将特征重要性和特征名称组合成一个DataFrame  \nimportances_df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({'Feature': feature_names,'lmportance':",
        "id": 108,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 26,
        "length_tokens": 94,
        "text": ".DataFrame({'Feature': feature_names,'lmportance': feature_impor  \n# 按照重要性从大到小排序  \nimportances_df $\\mathbf { \\tau } = \\mathbf { \\tau }$ importances_df.sort_values(by='lmportance', ascending=False)  \n#绘制水平柱状图  \nplt.figure(figsize=(10, 8))  \nplt.barh(importances_df['Feature'], importances_df['lmportan",
        "id": 109,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 26,
        "length_tokens": 69,
        "text": "mportances_df['Feature'], importances_df['lmportance'], color='skyblue')  \nplt.xlabel('Feature lmportance (Absolute Coefficient Value)')  \nplt.title('Feature Importance from Logistic Regression Model')  \nplt.gca().invert_yaxis()#使得最重要的特征在顶部  \nplt.show()",
        "id": 110,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 27,
        "length_tokens": 9,
        "text": "续保预测：逻辑回归 ",
        "id": 111,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 112,
        "type": "image",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 28,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 113,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "常用模型对比",
        "id": 114,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "常用模型对比：",
        "id": 115,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "评分卡模型: ",
        "id": 116,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 117,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 118,
        "type": "table",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 12,
        "text": "LR模型是评分卡模型最经常使用的算法",
        "id": 119,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 29,
        "length_tokens": 94,
        "text": "0为模型中第i个变量的系数 ${ \\mathbf { \\nabla } } _ { \\mathbf { \\mu } } , w _ { i j }$ 为第i个变量第j个分箱WOE值， 影响每个分箱分数的因素：参数B，系数 $\\cdot \\theta _ { i } ,$ 该分箱WOE编码 $w _ { i j }$ ",
        "id": 120,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 30,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 121,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 30,
        "length_tokens": 12,
        "text": "Thinking: 如何对决策树模型进行解读？",
        "id": 122,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 30,
        "length_tokens": 121,
        "text": "--- age <= 29.50 |--- family_members <= 2.50 policy_start_date_day $< = 7 0 3 . 0 0$ - age <= 19.50 |--- class: 0 |--- age > 19.50 1 |--- class: 1 |--- policy_start_date_day $>$ 703.00 |--- age <= 21.50 --- class: 0 --- age > 21.50 |--- class: 0 l--- family_members $>$ 2.50 : marital_status $< = \\ 1",
        "id": 123,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 30,
        "length_tokens": 116,
        "text": " family_members $>$ 2.50 : marital_status $< = \\ 1 . 5 8$ |--- occupation $< = ~ 2 . 5 8$ |--- class: 1 l--- occupation $>$ 2.50 |--- class: 0 --- marital_status $>$ 1.50 |--- policy_end_date_day $\\scriptstyle < =$ 8918.50 |--- class: 0 l--- policy_end_date_day $>$ 8918.50 |--- class: 1 age > 29.50 ",
        "id": 124,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 30,
        "length_tokens": 124,
        "text": "nd_date_day $>$ 8918.50 |--- class: 1 age > 29.50 age $< = ~ 6 0 . 5 8$ - policy_end_date_day $\\scriptstyle < =$ 5506.00 |--- class: 0 |--- policy_end_date_day $>$ 5506.00 |--- occupation $< = ~ 3 . 5 0$ 1 |--- class: 1 |--- occupation $>$ 3.50 |--- class: 1 |--- age > 60.50 l--- family_members $< =",
        "id": 125,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 30,
        "length_tokens": 117,
        "text": "class: 1 |--- age > 60.50 l--- family_members $< = ~ 3 . 5 0$ （20 - education_level $< = ~ 9 . 5 8$ |--- class: 0 l--- education_level $>$ 0.50 |--- class: 1 |--- family_members > 3.50 |--- marital_status $< = ~ 1 . 5 0$ （204号 |--- class: 1 - marital_status $>$ 1.50 |--- class: 0 ",
        "id": 126,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 31,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 127,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 31,
        "length_tokens": 133,
        "text": "我在做寿险续保预测，构建了决策树：   \n二二   \n|-- age <= 29.50 |--- family_members $< = 2 . 5 0$ |--- policy_start_date_day $< = 7 0 3 . 0 0$ |--- age <= 19.50 --- class: 0 --- age > 19.50 I|--- class: 1 |--- policy_start_date_day $>$ 703.00 --- age <= 21.50 |--- class: 0 --- age > 21.50 --- class: 0 |--- family_membe",
        "id": 128,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 31,
        "length_tokens": 85,
        "text": ": 0 --- age > 21.50 --- class: 0 |--- family_members $>$ 2.50 --- marital_status $< = 1 . 5 0$ |--- occupation $< = 2 . 5 0$ l|--- class: 1 |--- occupation $>$ 2.50 --- class: 0 |--- marital_status $>$ 1.50 ",
        "id": 129,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 31,
        "length_tokens": 121,
        "text": "||--- policy_end_date_day $< = 8 9 1 8 . 5 0$ --- class: 0 | |--- policy_end_date_day $>$ 8918.50 ||--- class: 1 --- age > 29.50 -- age <= 60.50 --- policy_end_date_day $< =$ 5506.00 --- class: 0 I--- policy_end_date_day $>$ 5506.00 |--- occupation $< = 3 . 5 0$ --- class: 1 -- occupation > 3.50 |--",
        "id": 130,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 31,
        "length_tokens": 114,
        "text": "< = 3 . 5 0$ --- class: 1 -- occupation > 3.50 |--- class: 1 |--- age > 60.50 |--- family_members $< = 3 . 5 0$ |--- education_level $< = 0 . 5 0$ --- class: 0 |--- education_level $>$ 0.50 |--- class: 1 |--- family_members $>$ 3.50 I||--- marital_status $< = 1 . 5 0$ ",
        "id": 131,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 31,
        "length_tokens": 151,
        "text": "--- class: 1--- marital status > 1.50|--- class: 0二==policy_start_date_day:距离 2010-01-01的天数policy_end_date_day:距离 2010-01-01的天数class:0代表不续保，1代表续保marital_status:'单身': 0,'已婚':1,'离异': 2occupation:0:医生,1:工程师,2:律师，3：经理,4:设计师,5:销售education_level: '高中':0,'本科':1,'硕士':2, 博士':3===帮我解释这个决策树，告诉我寿险客户续保有哪些特点",
        "id": 132,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 133,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 37,
        "text": "这个决策树模型根据一系列的条件来预测寿险客户是否会续保。让我们逐层分析，看看哪些因素对续保决策有影响。",
        "id": 134,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 7,
        "text": "1.年龄 (age) ",
        "id": 135,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "。年龄小于等于29.5岁的客户：",
        "id": 136,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 155,
        "text": "■家庭成员数量(family_members)少于或等于2.5时:■如果保险开始日期(policy_start_date_day)距离2010-01-01不超过703天 (约2年)，那么更年轻的客户( $< = 1 9 . 5$ 岁)倾向于不续保；而较年长的客户 $( > 1 9 . 5$ 岁)则倾向于续保。■如果保险开始日期超过703天，那么更年轻的客户( $< = 2 1 . 5$ 岁)和稍微年长一点的客户( $> 2 1 . 5$ 岁)都倾向于不续保。",
        "id": 137,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 12,
        "text": "■当家庭成员数大于2.5时：",
        "id": 138,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 136,
        "text": "■婚姻状况(marital_status)为单身或已婚 $< = 1 . 5 )$ 时，职业(occupation)为医生、工程师或律师( $< = 2 . 5$ 的人倾向于续保，而其他职业则倾向于不续保。  \n■对于婚姻状况为离异 $( > 1 . 5 )$ 的客户，如果保险结束日期(policy_end_date_day)距离2010-01-01不超过8918.5天（约24.5年）则倾向于不续保；否则，倾向于续保。",
        "id": 139,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 10,
        "text": "。年龄大于29.5岁的客户：",
        "id": 140,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 32,
        "length_tokens": 188,
        "text": "■年龄在60.5岁以下时，若保险结束日期早于或等于5506天 (约15.1年)，则倾向于不续保；否则，无论职业如何，都倾向于续保。  \n■年龄超过60.5岁时，家庭成员较少( $\\scriptstyle \\left\\{ < = 3 . 5 \\right\\}$ 且教育水平较低( $\\scriptstyle < = 0 . 5 ,$ 高中)的客户倾向于不续保；而教育水平较高 $( > 0 . 5 )$ 的客户则倾向于续保。对于家庭成员较多 $( > 3 . 5 )$ 的客户，如果是单身或已婚( $( < = 1 . 5 )$ ，则倾向于续保；反之，则倾向于不续保。",
        "id": 141,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 142,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 33,
        "length_tokens": 19,
        "text": "从上述决策树可以看出，影响续保的因素包括但不限于：",
        "id": 143,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 33,
        "length_tokens": 117,
        "text": "·年龄：年轻客户与老年客户的续保倾向有所不同。  \n·家庭成员数量：家庭规模大小会影响续保决策。  \n·婚姻状态：不同婚姻状态下的个人续保意愿存在差异。  \n·职业：某些职业可能比其他职业更有可能续保。  \n·教育水平：受教育程度较高的个体可能更倾向于续保。  \n·保险起始/结束日期：保险合同的时间长度也对续保决定有一定影响。",
        "id": 144,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 33,
        "length_tokens": 47,
        "text": "这些特征共同作用，帮助模型判断客户是否具有较高的续保可能性。请注意，这只是一个基于给定数据集的统计模型，实际应用中还需要考虑更多因素和个人情况。",
        "id": 145,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 146,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 43,
        "text": "在这个决策树中：年龄、家庭成员数量、婚姻状态、职业、教育水平、保险起始/结束日期如何影响续保可能性，给我一些洞察结论",
        "id": 147,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 31,
        "text": "基于您提供的决策树，我们可以得出以下关于不同特征如何影响寿险客户续保可能性的洞察结论：",
        "id": 148,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "1.年龄 (Age) ",
        "id": 149,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 123,
        "text": "。年轻客户（特别是29.5岁以下）与年长客户（尤其是60.5岁以上）在续保行为上表现出不同的模式。年轻客户中，家庭规模较小且保险开始日期较早的群体更可能不续保，而那些年龄稍大一些的年轻客户则更倾向于续保。）对于年龄较大的客户 （超过 $6 0 . 5 \\mathcal { \\sharp }$ )，如果他们的教育水平较高，那么他们更有可能续保；反之，则不太可能续保。",
        "id": 150,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 9,
        "text": "2.家庭成员数量 (FamilyMembers)",
        "id": 151,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 102,
        "text": "○家庭成员较少的年轻人（ $< = 2 . 5$ 人）通常在特定条件下(如保险开始日期较早）更可能选择不续保。。当家庭成员较多时，特别是在老年人群中（ $> 3 . 5$ 人)，婚姻状况成为决定性因素之一。单身或已婚者更可能续保，而离异状态下的个人则倾向于不续保。",
        "id": 152,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 12,
        "text": "3.婚姻状态 (Marital Status) ",
        "id": 153,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 80,
        "text": "。婚姻状况对续保的影响主要体现在家庭成员较多的老年群体中。单身或已婚人士比离异的人更可能续保。○在某些情况下，比如对于拥有较大家庭的年轻客户，婚姻状况也会影响续保决策，但这种影响是通过与其他变量结合来体现的。",
        "id": 154,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "4.职业 (Occupation) ",
        "id": 155,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 75,
        "text": "。职业类型对年轻客户的续保意愿有显著影响。医生、工程师和律师等职业的年轻客户更倾向于续保，而其他职业 类型的客户则相反。 ○对于年龄介于29.5至60.5岁之间的客户，职业不再是一个区分是否续保的关键因素。 ",
        "id": 156,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 8,
        "text": "5.教育水平 (Education Level)",
        "id": 157,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 36,
        "text": "$0$ 教育水平仅在老年客户群体中被用作区分续保与否的标准。高学历的老年人更可能续保",
        "id": 158,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 16,
        "text": "6.保险起始/结束日期 (Policy Start/End Date) ",
        "id": 159,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 34,
        "length_tokens": 74,
        "text": "。保险合同的时间长度对续保决策有重要影响。例如，保险开始日期较早（距离2010-01-01不超过703天）的年轻客户更可能选择不续保。。对于年龄较大的客户，如果保险结束日期远 (距离2010-01-01超过8918.5天)，则更可能续保。",
        "id": 160,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 161,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "综合来看，给我续保用户的特点",
        "id": 162,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 17,
        "text": "根据决策树分析，我们可以总结出以下续保用户的一些特点：",
        "id": 163,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 5,
        "text": "1.年龄: ",
        "id": 164,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 73,
        "text": "○年轻客户（小于等于29.5岁）中，年龄稍大一些的客户（大于19.5岁）更可能续保。  \n○对于年龄较大的客户 (超过29.5岁)，尤其是那些年龄在60.5岁以下且保险结束日期较晚的客户，倾向于续保。",
        "id": 165,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "2.家庭成员数量：",
        "id": 166,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 76,
        "text": "。家庭成员较多的老年客户（大于3.5人）如果教育水平较高，则更可能续保。  \n。年轻客户中，家庭成员较少的情况下，保险开始日期较早的客户不太可能续保；而家庭成员较多的老年客户如果是单身或已婚状态，更可能续保。",
        "id": 167,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 7,
        "text": "3.婚姻状态：",
        "id": 168,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 35,
        "text": "○单身或已婚状态下的年轻和老年客户更可能续保。  \n。离异状态下的老年客户不太可能续保。",
        "id": 169,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "4.职业：",
        "id": 170,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 35,
        "length_tokens": 65,
        "text": "○职业为医生、工程师或律师的年轻客户更可能续保。  \n。对于年龄介于29.5至60.5岁的客户，职业类型不是续保的关键因素。  \n○但对于年龄大于60.5岁的客户，无论职业如何，都倾向于续保。",
        "id": 171,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 3,
        "text": "模型洞察",
        "id": 172,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 5,
        "text": "5.教育水平：",
        "id": 173,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "教育水平较高的老年客户更可能续保",
        "id": 174,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "6.保险起始/结束日期：",
        "id": 175,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 100,
        "text": "。保险开始日期较晚（距离2010-01-01超过703天）的年轻客户更可能续保。  \n。保险结束日期较晚（对于年龄较大的客户来说，距离2010-01-01超过8918.5天）的客户更可能续保。  \n。对于年龄在60.5岁以下的客户，保险结束日期较晚（距离2010-01-01超过5506天）也增加了续保的可能性。",
        "id": 176,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 18,
        "text": "综上所述，续保用户的典型特征可以概括为：",
        "id": 177,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 119,
        "text": "·年龄方面，中等年龄段 (比如29.5岁以上但未达到老年）的客户以及特定条件下的年轻客户 (年龄略大)。  \n·拥有较大或适中的家庭规模。  \n·婚姻状态稳定，如单身或已婚。  \n·在某些年龄段内，从事专业性较强的职业 (如医生、工程师、律师)。  \n·教育背景较好，尤其是在老年群体中。  \n·保险合同的有效期较长，特别是保险结束日期较远的客户。",
        "id": 178,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 36,
        "length_tokens": 51,
        "text": "这些特征反映了续保用户通常具有一定的财务稳定性、对未来规划的关注以及对保险产品价值的认可。保险公司可以根据这些特点来优化其产品和服务，以提高客户的续保率。",
        "id": 179,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 180,
        "type": "text",
        "file_name": "4.2-CASE-客户续保预测"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "Embedding与向量数据库",
        "id": 0,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "什么是Embedding",
        "id": 2,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 2,
        "length_tokens": 45,
        "text": "CASE：基于内容的推荐  \n什么是N-Gram  \n余弦相似度计算  \n为酒店建立内容推荐系统  \nWord Embedding  \n什么是Embedding  \nWord2Vec进行词向量训练",
        "id": 3,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "向量数据库",
        "id": 4,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 2,
        "length_tokens": 25,
        "text": "·什么是向量数据库FAISS，Milvus,Pinecone的特点向量数据库与传统数据库的对比",
        "id": 5,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "什么是Embedding",
        "id": 6,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "基于内容的推荐",
        "id": 7,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "基于内容的推荐：",
        "id": 8,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 19,
        "text": "·依赖性低，不需要动态的用户行为，只要有内容就可以进行推荐",
        "id": 9,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "系统不同阶段都可以应用",
        "id": 10,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 44,
        "text": "系统冷启动，内容是任何系统天生的属性，可以从中挖掘到特征，实现推荐系统的冷启动。一个复杂的推荐系统是从基于内容的推荐成长起来的",
        "id": 11,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 27,
        "text": "商品冷启动，不论什么阶段，总会有新的物品加入，这时只要有内容信息，就可以帮它进行推荐",
        "id": 12,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 4,
        "length_tokens": 12,
        "text": "了解Embedding可以从了解物体的特征表达开始",
        "id": 13,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "基于内容的推荐",
        "id": 14,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 15,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 15,
        "text": "·物品表示 Item Representation:为每个item抽取出features",
        "id": 16,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "·特征学习ProfileLearning: ",
        "id": 17,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 27,
        "text": "利用一个用户过去喜欢（不喜欢）的item的特征数据，来学习该用户的喜好特征（profile）；",
        "id": 18,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "·生成推荐列表Recommendation Generation: ",
        "id": 19,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 5,
        "length_tokens": 17,
        "text": "通过用户profile与候选item的特征，推荐相关性最大的item。",
        "id": 20,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 21,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "西雅图酒店数据集：",
        "id": 22,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 6,
        "length_tokens": 89,
        "text": "·下载地址: https://github.com/susanli2016/Machine-Learning-with-Python/blob/master/Seattle_Hotels.csv  \n·字段:name,address,desc  \n·基于用户选择的酒店，推荐相似度高的Top10个其他酒店  \n·方法：计算当前酒店特征向量与整个酒店特征矩阵的余弦相似度，取相似度最大的Top-k个",
        "id": 23,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 24,
        "type": "table",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 25,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "余弦相似度：",
        "id": 26,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 25,
        "text": "·通过测量两个向量的夹角的余弦值来度量它们之间的相似性",
        "id": 27,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 64,
        "text": "·判断两个向量大致方向是否相同，方向相同时，余弦相似度为1；两个向量夹角为90°时，余弦相似度的值为0，方向完全相反时，余弦相似度的值为-1。",
        "id": 28,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 19,
        "text": "·两个向量之间夹角的余弦值为[-1,1] ",
        "id": 29,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 32,
        "text": "给定属性向量A和B，A和B之间的夹角0余弦值可以通过点积和向量长度计算得出",
        "id": 30,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 31,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 32,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 8,
        "length_tokens": 12,
        "text": "计算A和B的余弦相似度：",
        "id": 33,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 8,
        "length_tokens": 162,
        "text": "·句子A：这个程序代码太乱，那个代码规范  \n·句子B：这个程序代码不规范，那个更规范  \n·Step1，分词  \n句子A：这个/程序/代码/太乱，那个/代码/规范  \n句子B：这个/程序/代码/不/规范，那个/更/规范  \n·Step2，列出所有的词  \n这个，程序，代码，太乱，那个，规范，不，更  \n·Step3，计算词频  \n句子A：这个1，程序1，代码2，太乱1，那个1，规范1，不0，更0  \n句子B：这个1，程序1，代码1，太乱0，那个1，规范2，不1，更1",
        "id": 34,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 35,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 9,
        "length_tokens": 12,
        "text": "计算A和B的余弦相似度：",
        "id": 36,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 9,
        "length_tokens": 74,
        "text": "Step4，计算词频向量的余弦相似度句子A: (1，1，2，1，1，1，0，0)句子B: $( 1 , \\ 1 , \\ 1 , \\ 0 , \\ 1 , \\ 2 , \\ 1 , \\ 1 )$ ",
        "id": 37,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 9,
        "length_tokens": 174,
        "text": "cos( $g ) = { \\frac { 1 \\times 1 + 1 \\times 1 + 2 \\times 1 + 1 \\times 0 + 1 \\times 1 + 1 \\times 2 + 0 \\times 1 + 0 \\times 1 } { { \\sqrt { 1 ^ { 2 } + 1 ^ { 2 } + 2 ^ { 2 } + 1 ^ { 2 } + 1 ^ { 2 } + 1 ^ { 2 } + 0 ^ { 2 } + 0 ^ { 2 } } } \\times { \\sqrt { 1 ^ { 2 } + 1 ^ { 2 } + 1 ^ { 2 } + 0 ^ { 2 } +",
        "id": 38,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 9,
        "length_tokens": 74,
        "text": " { 1 ^ { 2 } + 1 ^ { 2 } + 1 ^ { 2 } + 0 ^ { 2 } + 1 ^ { 2 } + 2 ^ { 2 } } } } }$ 2+1²+1² $= 0 . 7 3 8$ ",
        "id": 39,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 9,
        "length_tokens": 17,
        "text": "结果接近1，说明句子A与句子B是相似的",
        "id": 40,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 41,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 10,
        "length_tokens": 11,
        "text": "什么是N-Gram（N元语法）：",
        "id": 42,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 10,
        "length_tokens": 94,
        "text": "·基于一个假设：第n个词出现与前n-1个词相关，而与其他任何词不相关$N = 1$ 时为unigram， $N = 2$ 为bigram， $N = 3$ 为trigram·N-Gram指的是给定一段文本，其中的N个item的序列比如文本：ABCDE，对应的Bi-Gram为AB,BC,CD,DE",
        "id": 43,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 10,
        "length_tokens": 68,
        "text": "·当一阶特征不够用时，可以用N-Gram做为新的特征。比如在处理文本特征时，一个关键词是一个特征，但有些情况不够用，需要提取更多的特征，采用N-Gram $\\Rightarrow$ 可以理解是相邻两个关键词的特征组合",
        "id": 44,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 10,
        "length_tokens": 18,
        "text": "如何了解事物的特征表达？N-Gram就是最基本的一种方式",
        "id": 45,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 46,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 115,
        "text": "plt.rcParams['font.sans-serif'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['SimHei']#用来正常显示中文标签  \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_csv('Seattle_Hotels.csv',encoding $\\ c =$ \"latin-1\")  \n# 得到酒店描述中n-gram特征中的TopK个  \ndef get_top_n_words(corpus, $\\mathsf { n } = 1$ ， $\\mathrel { \\mathop : } =",
        "id": 47,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 25,
        "text": "s, $\\mathsf { n } = 1$ ， $\\mathrel { \\mathop : } =$ None):",
        "id": 48,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 49,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 97,
        "text": "#统计ngram词频矩阵 vec $\\mathbf { \\tau } = \\mathbf { \\tau }$ CountVectorizer(ngram_range $\\ c =$ (n,n), stop_words $\\ c =$ english').fit(corpus) bag_of_words $\\mathbf { \\tau } = \\mathbf { \\tau }$ vec.transform(corpus) sum_words $\\mathbf { \\tau } = \\mathbf { \\tau }$ bag_of_words.sum(axis ${ \\boldsymbol { \\",
        "id": 50,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 103,
        "text": "{ \\tau }$ bag_of_words.sum(axis ${ \\boldsymbol { \\mathbf { \\mathit { \\sigma } } } } = 0$ ） words_freq $\\mathbf { \\tau } = \\mathbf { \\tau }$ [(word,sum_words[0, idx]) for word, idx in vec.vocabulary_.items(] #按照词频从大到小排序 words_freq $\\mathbf { \\tau } = \\mathbf { \\tau }$ sorted(words_freq, key $\\mathbf ",
        "id": 51,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 102,
        "text": "\\mathbf { \\tau }$ sorted(words_freq, key $\\mathbf { \\tau } = \\mathbf { \\tau }$ lambda x: x[1],reverse $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ True) return words_freq[:k] common_words $\\mathbf { \\tau } = \\mathbf { \\tau }$ get_top_n_words(df['desc'],1, 20) df1 $\\mathbf { \\tau } = \\mathbf { \\tau }$ p",
        "id": 52,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 11,
        "length_tokens": 92,
        "text": "1, 20) df1 $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame(common_words, columns $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['desc','count']) df1.groupby('desc').sum()['count'].sort_values().plot(kind $\\ c =$ 'barh', title $\\ c =$ 去掉停用词后，酒店描述中的Top20单词\") plt.show0 ",
        "id": 53,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 54,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "# Bi-Gram ",
        "id": 55,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 12,
        "length_tokens": 20,
        "text": "common words  = get top n words(df['des c'], 2, 20) ",
        "id": 56,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 57,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 12,
        "length_tokens": 5,
        "text": "# Tri-Gram ",
        "id": 58,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 12,
        "length_tokens": 19,
        "text": "common words = get top n words(df['des c'], 3, 20) ",
        "id": 59,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 60,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "def clean_text(text): ",
        "id": 61,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 141,
        "text": "(151. 13732) 0.02288547901274695   \n(151, 21971) 0.03682289049851129   \n(151. 19896) 0.017052721912118395   \n(151, 22212) 0.016660175897670552   \n(151, 13482) 0.024148380094538605   \n(151, 12132) 0.024170114517665667   \n(151, 11079) 0.07169842086767955   \n(151. 11324) 0.013227229761895392   \n(152, 2",
        "id": 62,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 27,
        "text": "55   \n(151. 11324) 0.013227229761895392   \n(152, 26879) ",
        "id": 63,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 109,
        "text": "#全部小写 text $\\mathbf { \\tau } = \\mathbf { \\tau }$ text.lower() return text df['desc_clean'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['desc'].apply(clean_text) > # 使用TF-IDF提取文本特征 tf $\\mathbf { \\tau } = \\mathbf { \\tau }$ TfidfVectorizer(analyzer $\\ c =$ word',ngram_range $\\ c =$ (1,3),min_df ${ } = 0$ ",
        "id": 64,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 103,
        "text": " word',ngram_range $\\ c =$ (1,3),min_df ${ } = 0$ ,stop_words $\\ c =$ en tfidf_matrix $\\mathbf { \\tau } = \\mathbf { \\tau }$ tf.fit_transform(df['desc_clean']) print(tfidf_matrix) print(tfidf_matrix.shape) # 计算酒店之间的余弦相似度 (线性核函数) cosine_similarities $\\mathbf { \\tau } = \\mathbf { \\tau }$ linear_kernel(",
        "id": 65,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 32,
        "text": "mathbf { \\tau } = \\mathbf { \\tau }$ linear_kernel(tfidf_matrix,tfidf_matrix) print(cosine_similarities) ",
        "id": 66,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 167,
        "text": "0.01161917 0.02656894 0.01184587 0.00244782 0.005835891 [0.01161917 1 0.015586 0.01625083 0.00313105 0.00797999 [0.02656894 0.015586 1. 0.02071479 0.00748781 0.01028037] [0.01184587 0.01625083 0.02071479 0.01066904 0.0079114 [0.00244782 0.00313105 0.00748781 0.01066904 1. 0.00257955] [0.00583589 0.0",
        "id": 67,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 59,
        "text": "00748781 0.01066904 1. 0.00257955] [0.00583589 0.00797999 0.01028037 0.0079114 0.00257955 1. (152, 152) ",
        "id": 68,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 13,
        "length_tokens": 24,
        "text": "152家酒店，之间的相似度矩阵(1-Gram,2-Gram,3-Gram)",
        "id": 69,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 70,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 102,
        "text": "#基于相似度矩阵和指定的酒店name，推荐TOP10酒店   \ndef recommendations(name,cosine_similarities $\\mathbf { \\tau } = \\mathbf { \\tau }$ cosine_similarities): recommended_hotels = [] #找到想要查询酒店名称的idx idx $\\mathbf { \\tau } = \\mathbf { \\tau }$ indices[indices $\\scriptstyle = =$ name].index[0] print('idx $\\ c =$ ,idx) #对于idx",
        "id": 71,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 116,
        "text": " =$ name].index[0] print('idx $\\ c =$ ,idx) #对于idx酒店的余弦相似度向量按照从大到小进行排序 score_series $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.Series(cosine_similarities[idx]).sort_values(ascending $\\mathbf { \\tau } = \\mathbf { \\tau }$ False) # 取相似度最大的前10个 (除了自己以外) top_10_indexes $\\mathbf { \\tau } = \\mathbf { \\tau }$",
        "id": 72,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 80,
        "text": "p_10_indexes $\\mathbf { \\tau } = \\mathbf { \\tau }$ list(score_series.iloc[1:11].index) #放到推荐列表中 for iin top_10_indexes: recommended_hotels.append(list(df.index)[i) return recommended_hotels   \nprint(recommendations('Hilton Seattle Airport & Conference Center'))   \nprint(recommendations('The Bacon Ma",
        "id": 73,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 17,
        "text": "e Center'))   \nprint(recommendations('The Bacon Mansion Bed and Breakfast')) ",
        "id": 74,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 5,
        "text": "idx= 49 ",
        "id": 75,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 71,
        "text": "[\"Enbassy Suites by Hilton Seattle Tacoma International Airport'   \n'DoubleTree by Hilton Hotel Seattle Airport', 'Seattle Airport   \nMarriott', 'Motel 6 Seattle Sea-Tac Airport South'， \"Econo Lodge   \nSeaTac Airport North'， Four Points by Sheraton Downtown Seattle   \nCenter', 'Knights Inn Tukwila',",
        "id": 76,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 82,
        "text": "owntown Seattle   \nCenter', 'Knights Inn Tukwila', “Econo Lodge Renton-Bellevue'   \n'Hampton Inn Seattle/Southcenter\", “Radisson Hotel Seattle   \nAirport\"]   \nidx= 116   \n['11th Avenue Inn Bed and Breakfast', 'Shafer Baillie Mansion Bed   \n& Breakfast'， ‘Chittenden House Bed and Breakfast\"， ‘Gasligh",
        "id": 77,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 62,
        "text": "t'， ‘Chittenden House Bed and Breakfast\"， ‘Gaslight   \nInn'， 'Bed and Breakfast Inn Seattle'， 'Silver Cloud Hotel   \nSeattle Broadway', ‘Hyatt House Seattle\", ‘Mozart Guest House'   \n\"Quality Inn & Suites Seattle Center', 'MarQueen Hotel\"] ",
        "id": 78,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 14,
        "length_tokens": 14,
        "text": "查找和指定酒店相似度最高的Top10家酒店",
        "id": 79,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 80,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "CountVectorizer: ",
        "id": 81,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 116,
        "text": "将文本中的词语转换为词频矩阵  \nfittransform：计算各个词语出现的次数  \ngetfeaturenames：可获得所有文本的关键词  \ntoarray(：查看词频矩阵的结果。  \nvec $\\mathbf { \\tau } = \\mathbf { \\tau }$ CountVectorizer(ngram_range=(n,n), stop_words $\\mathbf { \\Phi } = \\mathbf { \\Phi } ^ { \\prime }$ english').fit(corpus)  \nbag_of_words $\\mathbf { \\tau } = \\mathbf ",
        "id": 82,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 56,
        "text": "orpus)  \nbag_of_words $\\mathbf { \\tau } = \\mathbf { \\tau }$ vec.transform(corpus)  \nprint('feature names:')  \nprint(vec.get_feature_names())  \nprint('bag of words:\")  \nprint(bag_of_words.toarray())",
        "id": 83,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 84,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 4,
        "text": "feature names: ",
        "id": 85,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 87,
        "text": "['00 night plus', '000 crystals marble', ‘000 sq ft', '000 square feet', ‘000 redesigned venues', '10 unique guestrooms' , '100 meters away', ‘100 non smokin '10best georgetown inn'， '11 km emerald'， \"11 km seattle'， “11 miles downtown' '120 luxury guestrooms', '120 sqft 11sqm'， '1200 people range°，",
        "id": 86,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 94,
        "text": "uestrooms', '120 sqft 11sqm'， '1200 people range°， \"12pm noon dai: minute walk'， ‘15 minutes drive'， “15 minutes water'， ‘15 people doesn'， ‘150 property', '178 guest rooms'， '18 acre retreat'， '18 acres natural'， '188th sti landmark building', “1906 located street'， '1909 cecil bacon', '1910 landma",
        "id": 87,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 40,
        "text": " located street'， '1909 cecil bacon', '1910 landmark executive hotel', '1928 inn tucked', '1930s art deco'， \"1960s renamed mason' ",
        "id": 88,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 15,
        "length_tokens": 59,
        "text": "bag of words: 0 0 0 0 0 0 0 0 0] 00 0 0 0 0] 0 00 0 0 0] [0 0 0 0 0 0]] ",
        "id": 89,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 16,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 90,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "TF-IDF: ",
        "id": 91,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 16,
        "length_tokens": 106,
        "text": "单词次数TF  \n·TF：Term Frequency，词频 文档中总单词数  \n一个单词的重要性和它在文档中出现的次数呈正比。  \n· IDF： Inverse Document Frequency，逆向文档频率  \n一个单词在文档中的区分度。这个单词出现的文档数越少，区分文档总数  \n度越大，IDF越大 IDF =log单词出现的文档数+1",
        "id": 92,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 93,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "TfidfVectorizer: ",
        "id": 94,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 111,
        "text": "#使用TF-IDF提取文本特征   \ntf $\\mathbf { \\tau } = \\mathbf { \\tau }$ TfidfVectorizer(analyzer $= ^ { \\mathsf { 1 } }$ word',ngram_range $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (1,3),min_df=0,   \nstop_words $\\mathbf { \\lambda } = \\mathbf { \\vec { \\lambda } }$ english')   \ntfidf_matrix $\\mathbf { \\tau } = \\m",
        "id": 95,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 43,
        "text": "$ english')   \ntfidf_matrix $\\mathbf { \\tau } = \\mathbf { \\tau }$ tf.fit_transform(df['desc_clean'])   \nprint(tfidf_matrix)   \nprint(tfidf_matrix.shape) ",
        "id": 96,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 140,
        "text": "将文档集合转化为tf-idf特征值的矩阵构造函数analyzer：word或者char，即定义特征为词（word）或n-gram字符ngram_range:参数为二元组(min_n,max_n)，即要提取的n-gram的下限和上限范围max_df：最大词频，数值为小数[0.0,1.0],或者是整数，默认为1.0min_df：最小词频，数值为小数[0.0,1.0],或者是整数，默认为1.0stop_words：停用词，数据类型为列表",
        "id": 97,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 143,
        "text": "(151. 13732) 0.02288547901274695   \n151. 21971) 0.036827:0010851129   \n(151. 19896) 0.017052721912118395   \n(151, 22212) 0.016660175897670552   \n(151, 13482) 0.0241 8380094538605   \n(151, 12132) 0.024170114517665667   \n(151, 11079) 0.07169842086767955   \n(151, 11324) 0.013227220761895392   \n(152, 26",
        "id": 98,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 27,
        "text": "5   \n(151, 11324) 0.013227220761895392   \n(152, 26879) ",
        "id": 99,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 3,
        "text": "功能函数：",
        "id": 100,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 17,
        "length_tokens": 37,
        "text": "·fit_transform：进行tf-idf训练，学习到一个字典，并返回Document-term的矩阵，也就是词典中的词在该文档中出现的频次",
        "id": 101,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 18,
        "length_tokens": 6,
        "text": "为酒店建立内容推荐系统",
        "id": 102,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 18,
        "length_tokens": 6,
        "text": "基于内容的推荐：",
        "id": 103,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 18,
        "length_tokens": 93,
        "text": "·Step1，对酒店描述（Desc）进行特征提取·N-Gram，提取N个连续字的集合，作为特征·TF-IDF，按照(min_df,max_df)提取关键词，并生成TFIDF矩阵  \n·Step2，计算酒店之间的相似度矩阵·余弦相似度  \n·Step3，对于指定的酒店，选择相似度最大的Top-K个酒店进行输出",
        "id": 104,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 18,
        "length_tokens": 37,
        "text": "Thinking :N-Gram $\\cdot$ TF-IDF的特征表达会让特征矩阵非常系数，计算量大，有没有更适合的方式？",
        "id": 105,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "Word Embedding ",
        "id": 106,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 19,
        "length_tokens": 4,
        "text": "什么是Embedding:",
        "id": 107,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 19,
        "length_tokens": 93,
        "text": "·一种降维方式，将不同特征转换为维度相同的向量  \n离线变量转换成one-hot $\\Rightarrow$ 维度非常高，可以将它转换为固定size的embedding向量  \n·任何物体，都可以将它转换成为向量的形式，从Trait#1到#N  \n·向量之间，可以使用相似度进行计算  \n·当我们进行推荐的时候，可以选择相似度最大的",
        "id": 108,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 109,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 110,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 4,
        "text": "Word Embedding ",
        "id": 111,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "将Word进行Embedding: ",
        "id": 112,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 25,
        "text": "·如果我们将King这个单词，通过维基百科的学习，进行GloVe向量化，可以表示成",
        "id": 113,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 195,
        "text": "[ 0.50451，0.68607，-0.59517，-0.022801，0.60046，-0.13498，-0.08813，0.47377，-0.61798，-0.31012  \n-0.076666，1.493，-0.034189，-0.98173，0.68229，0.81722，-0.51874，-0.31503，-0.55809，0.66421，0.1961  \n，-0.13495，-0.11476，-0.30344，0.41177，-2.223，-1.0756，-1.0783，-0.34354，0.33505，1.9927  \n-0.04234，-0.64319，0.71125，0.4",
        "id": 114,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 118,
        "text": "354，0.33505，1.9927  \n-0.04234，-0.64319，0.71125，0.49159，0.16754，0.34344，-0.25663，-0.8523，0.1661，0.40102，1.1685  \n-1.0137 ， -0.21585， -0.15155，0.78321， -0.91241， -1.6106， -0.64426， -0.51042]",
        "id": 115,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 21,
        "text": "这50维度的权重大小在[-2,2]，按照颜色的方式来表示",
        "id": 116,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 117,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "Word Embedding ",
        "id": 118,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "将Word进行Embedding: ",
        "id": 119,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 21,
        "length_tokens": 41,
        "text": "·我们将King与其他单词进行比较，可以看到Man和Woman更相近同样有了向量，我们还可以进行运算king-man+woman与queen的相似度最高",
        "id": 120,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 21,
        "length_tokens": 18,
        "text": "model.most_similar(positive=[\"king\",\"woman\"]，negative=[\"man\"]) ",
        "id": 121,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "Word Embedding ",
        "id": 123,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 22,
        "length_tokens": 119,
        "text": "Softmax ClassifierWord2Vec: Hidden Layer Probabilltythat the word atInputVector LinearNeurons £ ranitimiyhabandn通过Embedding，把原先词所在空间映射到一个新的空间中去，使得语义上相似的单词在该空间内距离相近。 £ ∑ abilityWord Embedding $\\Rightarrow$ 学习隐藏层的权重矩阵 ∑A ‘1’ in the £输入测是one-hot编码 correspondi隐藏层的神经元数量为hidden_size(Embedding Size)回 £对于输入",
        "id": 124,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 22,
        "length_tokens": 77,
        "text": "spondi隐藏层的神经元数量为hidden_size(Embedding Size)回 £对于输入层和隐藏层之间的权值矩阵W，大小为 10.,00300 neurons £ one\"[vocab_size,hidden_size]10,000neurons输出层为[vocab_size]大小的向量，每一个值代表着输出一个词的概率",
        "id": 125,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 23,
        "length_tokens": 4,
        "text": "Word Embedding ",
        "id": 126,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 23,
        "length_tokens": 7,
        "text": "对于输入的one-hot编码：",
        "id": 127,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 23,
        "length_tokens": 84,
        "text": "在矩阵相乘的时候，选取出矩阵中的某一行，而这一  \n行就是输入词语的word2vec表示  \n隐含层的节点个数 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 词向量的维数  \n隐层的输出是每个输入单词的Word Embedding  \nword2vec，实际上就是一个查找表",
        "id": 128,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 129,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 4,
        "text": "Word Embedding ",
        "id": 130,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 8,
        "text": "Word2Vec的两种模式：",
        "id": 131,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 12,
        "text": "·Skip-Gram，给定inputword预测上下文",
        "id": 132,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 133,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 18,
        "text": ".Bereftoflifeherestsinpeace!Ifyouhadn'tnailedhir ",
        "id": 134,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 20,
        "text": "CBOW，给定上下文，预测inputword（与 Skip-Gram相反) ",
        "id": 135,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 136,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 19,
        "text": "Bereft of life herestsin peace! Ifyouhadn'tnailed hi=.. ",
        "id": 137,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 138,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "Word2Vec工具",
        "id": 139,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "Gensim工具",
        "id": 140,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 25,
        "length_tokens": 68,
        "text": "pip install gensim  \n开源的Python工具包  \n可以从非结构化文本中，无监督地学习到隐层的主题向  \n量表达  \n每一个向量变换的操作都对应着一个主题模型  \n支持TF-IDF，LDA，LSA，Word2vec等多种主题模型算法",
        "id": 141,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "使用方法：",
        "id": 142,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 25,
        "length_tokens": 73,
        "text": "：建立词向量模型：word2vec.Word2Vec(sentences)window,句子中当前单词和被预测单词的最大距离mincount,需要训练词语的最小出现次数，默认为5size,向量维度，默认为100worker训练使用的线程数，默认为1即不使用多线程",
        "id": 143,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 25,
        "length_tokens": 14,
        "text": "模型保存 model.save(fname) 模型加载 model.load(fname) ",
        "id": 144,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 26,
        "length_tokens": 4,
        "text": "Word2Vec工具",
        "id": 145,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "数据集：西游记",
        "id": 146,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 26,
        "length_tokens": 32,
        "text": "journey_to_the_west.txt  \n计算小说中的人物相似度，比如孙悟空与猪八戒，孙悟空与  \n孙行者",
        "id": 147,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 26,
        "length_tokens": 3,
        "text": "方案步骤:",
        "id": 148,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 26,
        "length_tokens": 55,
        "text": "Step1，使用分词工具进行分词，比如NLTK,JIEBA：Step2，将训练语料转化成一个sentence的迭代器：Step3，使用word2vec进行训练  \nStep4，计算两个单词的相似度",
        "id": 149,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 150,
        "type": "table",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 4,
        "text": "Word2Vec工具",
        "id": 151,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 14,
        "text": "#字词分割，对整个文件内容进行字词分割",
        "id": 152,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 87,
        "text": "def segment_lines(file_list,segment_out_dir,stopwords=[]):for i,file in enumerate(file_list):segment_out_name $\\scriptstyle 1 = 0 s$ .path.join(segment_out_dir,'segment_0.txt'.format(i)with open(file,'rb') as f:document $\\mathbf { \\tau } = \\mathbf { \\tau }$ f.read()document_cut $\\mathbf { \\tau } = \\",
        "id": 153,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 85,
        "text": "\\tau }$ f.read()document_cut $\\mathbf { \\tau } = \\mathbf { \\tau }$ jieba.cut(document)sentence_segment=[]for word in document_cut:if word not in stopwords:sentence_segment.append(word)result $\\mathbf { \\tau } = \\mathbf { \\tau }$ ''join(sentence_segment)result $\\mathbf { \\tau } = \\mathbf { \\tau }$ re",
        "id": 154,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 97,
        "text": "nt)result $\\mathbf { \\tau } = \\mathbf { \\tau }$ result.encode('utf-8)with open(segment_out_name,'wb') as f2:f2.write(result)  \n# 对source中的txt文件进行分词，输出到segment目录中  \nfile_list $\\ c =$ files_processing.get_files_list('./source',postfix $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ \\*.txt')  \nsegment_l",
        "id": 155,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 199,
        "text": " = \\mathbf { \\dot { \\tau } }$ \\*.txt')  \nsegment_lines(file_list,'./segment')  \n西游记（吴承思  \n西游记  \n作者：吴承思西游记却 以 丰富 瑰奇 的 想象 描写 了 师徒 四众的精怪生动地表现了无情的山川的险阻，并以  \n第第第第第第第第附第第第第第第第第第第第第第第 001 回 灵根育孕 源流 出 心性他持大道生002 I回 悟彻 菩提 真 妙理 断 魔 归本 合元神003 回 四海 千山 皆拱伏 九山 十类 尽 除名004 回 官封弼 马心 何足 注 齐 天意 未宁005 I回 乱 蟠桃 大圣 偷丹 反 天",
        "id": 156,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 239,
        "text": "尽 除名004 回 官封弼 马心 何足 注 齐 天意 未宁005 I回 乱 蟠桃 大圣 偷丹 反 天宫 诣神 捉 怪006 回 观音 赴 会问 原田 小至  薛 大至007 I回回 八卦 炉中 逃 大圣 五行 山下 定心 猿008 我佛造经传极乐 观音 奉旨 上 长安录 陈光正 赴任 逢文 江流 僧 复九 报士009 回回 袁守迪 过算 无 曲 老 龙王 拙计 犯 天条010 二 将军 宫门 镇鬼 唐大宗 地府 还望011 回 还 受生 唐王 逗香果 度孤魂萧璃正空门012 回 玄里 秉迪里 大= 观音 显象 化 金蝉013 [回回 陷 虎穴 金星 解厄 双此 伯钦 留圖014 心猿 归正 六",
        "id": 157,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 211,
        "text": "= 观音 显象 化 金蝉013 [回回 陷 虎穴 金星 解厄 双此 伯钦 留圖014 心猿 归正 六吨 无踪015 回 蛇 盘山 诸神 暗佑 应 涧 意马 收组016 I回 观音院 僧谋 宝贝 呈日山 怪古017 回 孙行者 大闹 黑凡山 现世音 收代 琵 景 怪018 回 观音院 唐僧脱 难 高老王 行者 薛登019 回 云栈 洞 悟空收 八戒 浮屠 山 玄奘 受心经020 回 昔此 居僧 有主 半山 中 八戒 争先021 回 护法设庄留 大圣 须弥 灵吉定 口度022 回 戒 士战 流」可 木又 奉法收悟净",
        "id": 158,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 27,
        "length_tokens": 0,
        "text": "",
        "id": 159,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "Word2Vec工具",
        "id": 160,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 28,
        "length_tokens": 106,
        "text": "#将Word转换成Vec，然后计算相似度   \nfrom gensim.models import word2vec   \nimport multiprocessing   \n#如果目录中有多个文件，可以使用PathLineSentences   \nsentences $\\mathbf { \\tau } = \\mathbf { \\tau }$ word2vec.PathLineSentences('./segment') 0.96224165 0.98238677   \n#设置模型参数，进行训练 0.9193349 0.9293375   \nmodel $\\mathbf { \\tau } = ",
        "id": 161,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 28,
        "length_tokens": 129,
        "text": " 0.9193349 0.9293375   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ word2vec.Word2Vec(sentences, size $= 1 0 0$ ,window $^ { \\cdot = 3 }$ ,min_count $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ 1)   \nprint(model.wv.similarity('孙悟空'，'猪八戒))   \nprint(model.wv.similarity('孙悟空'，'孙行者))   \n#设置模型参数，进行训练  ",
        "id": 162,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 28,
        "length_tokens": 104,
        "text": "model.wv.similarity('孙悟空'，'孙行者))   \n#设置模型参数，进行训练   \nmodel2 $\\mathbf { \\tau } = \\mathbf { \\tau }$ word2vec.Word2Vec(sentences, size $\\ c =$ 128, window $^ { = 5 }$ min_count=5,   \nworkers $\\ c =$ multiprocessing.cpu_count()   \n#保存模型   \nmodel2.save('./models/word2Vec.model\")   \nprint(model2.wv.similar",
        "id": 163,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 28,
        "length_tokens": 77,
        "text": "models/word2Vec.model\")   \nprint(model2.wv.similarity('孙悟空','猪八戒))   \nprint(model2.wv.similarity('孙悟空','孙行者))   \nprint(model2.wv.most_similar(positive $\\ c =$ ['孙悟空'，'唐僧'],negative $\\ c =$ ['孙行者')) ",
        "id": 164,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 28,
        "length_tokens": 141,
        "text": "[(菩萨\\*, 0.9546594619750977)， ('何干', 0.9491345286369324)(长老'， 0.9437956809997559)， ('沙 僧见°, 0.943665623664856),(悟净'， 0.9424765706062317)， ('手指', 0.9390666484832764),(银角', 0.937991201877594)， ( 大子 '， 0.9359638690948486)， (',0.9339208006858826), (\\*祥师', 0.9319193363189697)]",
        "id": 165,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "Thinking: 得到了特征表达 (itemrepresentation），有什么用?",
        "id": 166,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "基于内容的推荐：",
        "id": 167,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 29,
        "length_tokens": 63,
        "text": "将你看的item，相似的item推荐给你通过物品表示Item Representation $\\Rightarrow$ 抽取特征TF-IDF=>返回给某个文本的“关键词-TFIDF值”的词数对TF-IDF可以帮我们抽取文本的重要特征，做成itemembedding",
        "id": 168,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 29,
        "length_tokens": 17,
        "text": "Thinking: 如何使用事物的特征表达， 进行相似推荐？",
        "id": 169,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 29,
        "length_tokens": 24,
        "text": "计算item之间的相似度矩阵对于指定的item，选择相似度最大的Top-K个进行输出",
        "id": 170,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 30,
        "length_tokens": 4,
        "text": "Embedding的理解：",
        "id": 171,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 30,
        "length_tokens": 92,
        "text": "·Embedding指某个对象X被嵌入到另外一个对象Y中，映射 $f : X \\to \\mathbb { Y }$   \n，一种降维方式，转换为维度相同的向量  \n·矩阵分解中的User矩阵，第i行可以看成是第i个user的Embedding。Item矩阵中的第j列可以看成是对第j个Item的Embedding",
        "id": 172,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 173,
        "type": "image",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 31,
        "length_tokens": 7,
        "text": "Word2Vec工具的使用：",
        "id": 174,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 31,
        "length_tokens": 144,
        "text": "·Word Embedding就是将Word嵌入到一个数学空间里，Word2vec，就是词嵌入的一种·可以将sentence中的word转换为固定大小的向量表达（Vector Respresentations），·其中意义相近的词将被映射到向量空间中相近的位置。  \n·将待解决的问题转换成为单词word和文章doc的对应关系  \n大V推荐中，大 $\\mathsf { V } = >$ 单词，将每一个用户关注大V的顺序 $\\Rightarrow$ 文章  \n商品推荐中，商品 $\\Rightarrow$ 单词，用户对商品的行为顺序 $\\Rightarrow$ 文章",
        "id": 175,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 32,
        "length_tokens": 3,
        "text": "向量数据库",
        "id": 176,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "向量数据库",
        "id": 177,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "Thinking: 什么是向量数据库？",
        "id": 178,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 57,
        "text": "一种专门用于存储和检索高维向量数据的数据库。它将数据（如文本、图像、音频等）通过嵌入模型转换为向量形式，并通过高效的索引和搜索算法实现快速检索。",
        "id": 179,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 71,
        "text": "向量数据库的核心作用是实现相似性搜索，即通过计算向量之间的距离（如欧几里得距离、余弦相似度等）来找到与目标向量最相似的其他向量。它特别适合处理非结构化数据，支持语义搜索、内容推荐等场景。",
        "id": 180,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 15,
        "text": "Thinking: 如何存储和检索嵌入向量？",
        "id": 181,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 43,
        "text": "存储：向量数据库将嵌入向量存储为高维空间中的点，并为每个向量分配唯一标识符（ID），同时支持存储元数据。",
        "id": 182,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 33,
        "length_tokens": 48,
        "text": "检索：通过近似最近邻（ANN）算法（如PQ等）对向量进行索引和快速搜索。比如，FAISS和Milvus等数据库通过高效的索引结构加速检索。",
        "id": 183,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 6,
        "text": "常见的向量数据库",
        "id": 184,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "1.FAISS ",
        "id": 185,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 26,
        "text": "特点：由Facebook开发，专注于高性能的相似性搜索，适合大规模静态数据集。",
        "id": 186,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 13,
        "text": "优势：检索速度快，支持多种索引类型",
        "id": 187,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 17,
        "text": "局限性：主要用于静态数据，更新和删除操作较复杂。",
        "id": 188,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "2.Milvus ",
        "id": 189,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 16,
        "text": "特点：开源，支持分布式架构和动态数据更新。",
        "id": 190,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 16,
        "text": "优势：具备强大的扩展性和灵活的数据管理功能，",
        "id": 191,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "3.Pinecone ",
        "id": 192,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 20,
        "text": "特点：托管的云原生向量数据库，支持高性能的向量搜索。",
        "id": 193,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 34,
        "length_tokens": 17,
        "text": "优势：完全托管，易于部署，适合大规模生产环境。",
        "id": 194,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "向量数据库与传统数据库的对比",
        "id": 195,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "1.数据类型",
        "id": 196,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 17,
        "text": "传统数据库：存储结构化数据（如表格、行、列）。",
        "id": 197,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 19,
        "text": "向量数据库：存储高维向量数据，适合非结构化数据。",
        "id": 198,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "2.查询方式",
        "id": 199,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 17,
        "text": "传统数据库：依赖精确匹配（如=、<、>）",
        "id": 200,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 28,
        "text": "向量数据库：基于相似度或距离度量（如欧几里得距离、余弦相似度）。",
        "id": 201,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 5,
        "text": "3.应用场景",
        "id": 202,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 12,
        "text": "传统数据库：适合事务记录和结构化信息管理",
        "id": 203,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 35,
        "length_tokens": 22,
        "text": "向量数据库：适合语义搜索、内容推荐等需要相似性计算的场景。",
        "id": 204,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 36,
        "length_tokens": 5,
        "text": "讨论与呈现 ",
        "id": 205,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 36,
        "length_tokens": 22,
        "text": "结合你的业务场景，你认为事物的特征提取重要么？有什么应用场景？",
        "id": 206,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 36,
        "length_tokens": 22,
        "text": "非结构化数据的理解，pdf，word等结构化数据的理解，excel，数据表等",
        "id": 207,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "如何对这些特征进行理解？",
        "id": 208,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 37,
        "length_tokens": 52,
        "text": "Thinking1：假设一个小说网站，有N部小说，每部小说都有摘要描述。如何针对该网站制定基于内容的推荐系统，即用户看了某部小说后，推荐其他相关的小说。原理和步骤是怎样的",
        "id": 209,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "Thinking2：Word2Vec的应用场景有哪些",
        "id": 210,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 38,
        "length_tokens": 45,
        "text": "Action1：使用Gensim中的Word2Vec对三国演义进行Word Embedding，分析和曹操最相近的词有哪些，曹操+刘备-张飞 $= ?$ ",
        "id": 211,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "数据集：three_kingdoms.txt ",
        "id": 212,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 213,
        "type": "text",
        "file_name": "5-Embedding与向量数据库"
      },
      {
        "page": 1,
        "length_tokens": 5,
        "text": "RAG技术与应用",
        "id": 0,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 2,
        "length_tokens": 5,
        "text": "RAG技术与应用",
        "id": 2,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 2,
        "length_tokens": 61,
        "text": "·大模型应用开发的三种模式  \nRAG的核心原理与流程  \nNativeRAG  \nNoteBookLM使用  \nEmbedding模型选择  \nCASE: DeepSeek $+$ Faiss搭建本地知识库检索  \nRAG常见问题一一如何提升RAG质量",
        "id": 3,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "大模型应用开发",
        "id": 4,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 3,
        "length_tokens": 16,
        "text": "Thinking: 提示工程VSRAGVS 微调， 什么时候使用？",
        "id": 5,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "具备各种能力的AI",
        "id": 6,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "什么是RAG",
        "id": 8,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 4,
        "length_tokens": 10,
        "text": "RAG （Retrieval-Augmented Generation） :",
        "id": 9,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 4,
        "length_tokens": 60,
        "text": "·检索增强生成，是一种结合信息检索（Retrieval）和文本生成（Generation）的技术  \n·RAG技术通过实时检索相关文档或信息，并将其作为上下文输入到生成模型中，从而提高生成结果的时效性和准确性。",
        "id": 10,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 11,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "RAG的优势 ",
        "id": 12,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 5,
        "length_tokens": 8,
        "text": "Thinking: RAG的优势是什么？",
        "id": 13,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 5,
        "length_tokens": 38,
        "text": "·解决知识时效性问题：大模型的训练数据通常是静态的，无法涵盖最新信息，而RAG可以检索外部知识库实时更新信息。",
        "id": 14,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 5,
        "length_tokens": 29,
        "text": "·减少模型幻觉：通过引入外部知识，RAG能够减少模型生成虚假或不准确内容的可能性。",
        "id": 15,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 5,
        "length_tokens": 30,
        "text": "·提升专业领域回答质量：RAG能够结合垂直领域的专业知识 库，生成更具专业深度的回答 ",
        "id": 16,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 17,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 6,
        "length_tokens": 8,
        "text": "RAG的核心原理与流程",
        "id": 18,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 6,
        "length_tokens": 6,
        "text": "Step1，数据预处理",
        "id": 19,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 6,
        "length_tokens": 28,
        "text": "·知识库构建：收集并整理文档、网页、数据库等多源数据，构建外部知识库。",
        "id": 20,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 6,
        "length_tokens": 46,
        "text": "·文档分块：将文档切分为适当大小的片段（chunks），以便后续检索。分块策略需要在语义完整性与检索效率之间取得平衡。",
        "id": 21,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 6,
        "length_tokens": 44,
        "text": "·向量化处理：使用嵌入模型（如BGE、M3E、Chinese-Alpaca-2等）将文本块转换为向量，并存储在向量数据库中",
        "id": 22,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 8,
        "text": "RAG的核心原理与流程",
        "id": 23,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "Step2, 检索阶段",
        "id": 24,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 33,
        "text": "·查询处理：将用户输入的问题转换为向量，并在向量数据库中进行相似度检索，找到最相关的文本片段。",
        "id": 25,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 26,
        "text": "·重排序：对检索结果进行相关性排序，选择最相关的片段作为 生成阶段的输入 ",
        "id": 26,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 5,
        "text": "Step3，生成阶段",
        "id": 27,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 26,
        "text": "·上下文组装：将检索到的文本片段与用户问题结合，形成增强的上下文输入。",
        "id": 28,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 16,
        "text": "·生成回答：大语言模型基于增强的上下文生成最终回答",
        "id": 29,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "RAG的步骤：",
        "id": 31,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 15,
        "text": "Indexing $\\Rightarrow$ 如何更好地把知识存起来。",
        "id": 32,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 26,
        "text": "Retrieval $\\Rightarrow$ 如何在大量的知识中，找到一小部分有用的，给到模型参考。",
        "id": 33,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 25,
        "text": "Generation $\\Rightarrow$ 如何结合用户的提问和检索到的知识，让模型生成有用的答案。",
        "id": 34,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 30,
        "text": "这三个步骤虽然看似简单，但在RAG应用从构建到落地实施的整个过程中，涉及较多复杂的工作内容",
        "id": 35,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 61,
        "text": "Input Indexing Query User thatsa Documents ChunksVectors went through a sudden dismissal Output by the board in just three days, and then was rehired by the embeddings company,resembling a real-life versionof\"GameofThrones\"in Retrieval without RAG Relevant Documents   \n...l am unable to provide comm",
        "id": 36,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 72,
        "text": "levant Documents   \n...l am unable to provide comments on   \nfuture events. Currently,I do not have   \nanyinformation regarding thedismissal LLM Generation   \nand rehiring of OpenAl's CEO .. Question : Chunk 1: \"Sam Altman Returns to   \nith RAGniantinena p Rpenls   \ndisagreements within OpenAl regar",
        "id": 37,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 81,
        "text": "nena p Rpenls   \ndisagreements within OpenAl regarding!   \n!the company's future direction and based on the following information : Chunk 2: \"The Drama Concludes? Sam Cnunk 1: AtaaUersf   \n' OpenAl... Chunk 3: \"The Personnel Turmoil at Combine Context OpenAl Comes to an End: Who Won and Who Lost?\" A",
        "id": 38,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 8,
        "length_tokens": 19,
        "text": "t OpenAl Comes to an End: Who Won and Who Lost?\" Answer and Prompts ",
        "id": 39,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 9,
        "length_tokens": 3,
        "text": "NotebookLM使用",
        "id": 40,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "Embedding模型选择 ",
        "id": 41,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "Embedding模型选择 ",
        "id": 42,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "Summary Performance per task Task information ",
        "id": 43,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 44,
        "type": "table",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "Embedding模型选择 ",
        "id": 45,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "Thinking: 有哪些常见的Embedding模型？",
        "id": 46,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 8,
        "text": "2、中文嵌入模型",
        "id": 47,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "1、通用文本嵌入模型",
        "id": 48,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "xiaobu-embedding-v2 ",
        "id": 49,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "BGE-M3 （智源研究院）",
        "id": 50,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 31,
        "text": "·特点：针对中文语义优化，语义理解能力强。  \n·适用场景：中文文本分类、语义检索。",
        "id": 51,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 68,
        "text": "·特点：支持 $1 0 0 +$ 语言，输入长度达8192tokens，融合密集、稀疏、多向量混合检索，适合跨语言长文档检索。·适用场景：跨语言长文档检索、高精度RAG应用。",
        "id": 52,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "M3E-Turbo ",
        "id": 53,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "text-embedding-3-large （OpenAl)",
        "id": 54,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 76,
        "text": "·特点：针对中文优化的轻量模型，适合本地私有化部署。  \n·适用场景：中文法律、医疗领域检索任务。·特点：向量维度3072，长文本语义捕捉能力强，英文表现优秀。  \n·适用场景：英文内容优先的全球化应用。",
        "id": 55,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 56,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 15,
        "text": "stella-mrl-large-zh-v3.5-1792 ",
        "id": 57,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 13,
        "text": "Jina-embeddings-v2 （Jina AI) ",
        "id": 58,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 102,
        "text": "·特点：处理大规模中文数据能力强，捕捉细微语义关系。  \n·适用场景：中文文本高级语义分析、自然语言处理任务。  \n·特点：参数量仅35M，支持实时推理（ $\\mathsf { R T } < 5 0 \\mathsf { m s } ,$ ），适合轻量化部署。  \n·适用场景：轻量级文本处理、实时推理任务。",
        "id": 59,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "Embedding模型选择 ",
        "id": 61,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 10,
        "text": "3、指令驱动与复杂任务模型",
        "id": 62,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 16,
        "text": "gte-Qwen2-7B-instruct (阿里巴巴) ",
        "id": 63,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 22,
        "text": "·特点：基于Qwen大模型微调，支持代码与文本跨模态检索，",
        "id": 64,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 18,
        "text": "·适用场景：复杂指令驱动任务、智能问答系统。",
        "id": 65,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 11,
        "text": "E5-mistral-7B （Microsoft)",
        "id": 66,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 19,
        "text": "·特点：基于Mistral架构，Zero-shot任务表现优异。 ",
        "id": 67,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 16,
        "text": "·适用场景：动态调整语义密度的复杂系统。",
        "id": 68,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "4、企业级与复杂系统",
        "id": 69,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 10,
        "text": "BGE-M3 （智源研究院）",
        "id": 70,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 33,
        "text": "·特点：适合企业级部署，支持混合检索。  \n适用场景：企业级语义检索、复杂RAG应用。",
        "id": 71,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 11,
        "text": "E5-mistral-7B （Microsoft)",
        "id": 72,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 13,
        "length_tokens": 33,
        "text": "·特点：适合企业级部署，支持指令微调。  \n·适用场景：需要动态调整语义密度的复杂系统。",
        "id": 73,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "CASE: bge-m3 使用",
        "id": 74,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 85,
        "text": "from FlagEmbedding import BGEM3FlagModel   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ BGEM3FlagModel('BAAI/bge-m3', use_fp16=True) # Setting use_fp16 to True speeds up   \ncomputation with a slight performance degradation   \nsentences_ $\\varTheta =$ [\"What is BGE M3?\", \"Defination of BM25\"]   \nsent",
        "id": 75,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 71,
        "text": " [\"What is BGE M3?\", \"Defination of BM25\"]   \nsentences_ $\\displaystyle 2 =$ [\"BGE M3 is an embedding model supporting dense   \nretrieval, lexical matching and multi-vector interaction.\", \"BM25 is a bag-of-words retrieval function that ranks a set of   \ndocuments based on the query terms appearing i",
        "id": 76,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 69,
        "text": "   \ndocuments based on the query terms appearing in each document\"]   \nembeddings_ $\\varXi =$ model.encode(sentences_1, batch_size $= 1 2$ ， max_length=8192, # If you don't need such a   \nlong length, you can set a smaller value to speed up the   \nencoding process. ",
        "id": 77,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 78,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 56,
        "text": ")['dense_vecs'] embeddings_ $\\underline { { 2 } } =$ model.encode(sentences_2)['dense_vecs'] similarity $\\mathbf { \\tau } = \\mathbf { \\tau }$ embeddings_1 $@$ embeddings_2.T print(similarity) ",
        "id": 79,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "[[0.626 0.3477] ",
        "id": 80,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "CASE: bge-m3 使用",
        "id": 81,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 18,
        "text": "similarity $\\cdot$ embeddings_1 $\\cdot$ embeddings_2.T ",
        "id": 82,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 141,
        "text": "在计算两组嵌入向量（embeddings）之间的相似度矩阵。embeddings_1包含了第一组句子(sentences_1)的嵌入向量，形状为[sentences_1的数量,嵌入维度]  \nembeddings_2包含了第二组句子(sentences_2)的嵌入向量，形状为[sentences_2的数量,嵌入维度]  \nembeddings_2.T是对embeddings_2进行转置操作，形状变为[嵌入维度,sentences_2的数量]",
        "id": 83,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 66,
        "text": "$@$ 符号在Python中表示矩阵乘法运算$\\Rightarrow$ 通过矩阵乘法计算了两组句子之间的余弦相似度矩阵。结果similarity的形状是[sentences_1的数量,sentences_2的数量]。",
        "id": 84,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 85,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "[[0.626 0.3477][0.3499 0.678 ]]可以看出：",
        "id": 86,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 87,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 88,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "\"What is BGE M3?\" 与 \"BGE M3 is an embedding model...\" 的相似度为0.6265（较高）",
        "id": 89,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 34,
        "text": "\"What is BGE M3?\" 与 \"BM25 is a bag-of-words retrieval function...\"的相似度为0.3477（较低） ",
        "id": 90,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 31,
        "text": "\"Defination of BM25\" 与 \"BGE M3 is an embedding model...\" 的相似度为0.3499（较低）",
        "id": 91,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 15,
        "length_tokens": 33,
        "text": "\"Defination of BM25\" 与 \"BM25 is a bag-of-words retrieval function...\"的相似度为0.678（较高） ",
        "id": 92,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "CASE: gte-qwen2 使用",
        "id": 93,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 84,
        "text": "from sentence_transformers import SentenceTransformer   \nmodel_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"/root/autodl-tmp/models/iic/gte_Qwen2-1_5B-instruct\"   \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ SentenceTransformer(model_dir, trust_remote_code $\\ c =$ True)   \n# In case you want to reduce",
        "id": 94,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 90,
        "text": "code $\\ c =$ True)   \n# In case you want to reduce the maximum length:   \nmodel.max_seq_length $= 8 1 9 2$   \nqueries $\\mathbf { \\tau } = \\mathbf { \\tau }$ [ \"how much protein should a female eat\", \"summit define\",   \n]   \ndocuments $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [   \n\"Definition of summi",
        "id": 95,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 77,
        "text": " } = \\mathbf { \\sigma }$ [   \n\"Definition of summit for English Language Learners. : 1 the highest   \npoint of a mountain : the top of a mountain. : 2 the highest level. : 3 a   \nmeeting or series of meetings between the leaders of two or more   \ngovernments.\",   \n]   \nquery_embeddings $\\mathbf { \\t",
        "id": 96,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 80,
        "text": "ernments.\",   \n]   \nquery_embeddings $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.encode(queries, prompt_name $\\ c =$ \"query\")   \ndocument_embeddings $\\mathbf { \\tau } = \\mathbf { \\tau }$ model.encode(documents)   \nscores $\\mathbf { \\tau } = \\mathbf { \\tau }$ (query_embeddings $@$ document_embeddings",
        "id": 97,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 23,
        "text": " \\tau }$ (query_embeddings $@$ document_embeddings.T) \\* 100   \nprint(scores.tolist()) ",
        "id": 98,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 99,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 67,
        "text": "\"As a general guideline, the CDC's average requirement of protein for women ages 19 to 7O is 46 grams per day. But, as you can see from this chart, you'll need to increase that if you're expecting or training for a marathon. Check out the chart below to see how much protein you should be eating each",
        "id": 100,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 13,
        "text": " to see how much protein you should be eating each day.\", ",
        "id": 101,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 16,
        "length_tokens": 36,
        "text": "[[78.49691772460938,17.04286003112793], [14.924489974975586, 75.37960815429688]] ",
        "id": 102,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "CASE: gte-qwen2 使用",
        "id": 103,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 89,
        "text": "import torch   \nimport torch.nn.functional as F   \nfrom torch import Tensor   \nfrom modelscope import AutoTokenizer, AutoModel   \n# 定义最后一个token池化函数   \n#该函数从最后的隐藏状态中提取每个序列的最后一个有效token的表示   \ndef last_token_pool(last_hidden_states: Tensor, attention_mask: Tensor) $\\phantom { 0 } { - } >$ Tensor:   \nlef",
        "id": 104,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 89,
        "text": "k: Tensor) $\\phantom { 0 } { - } >$ Tensor:   \nleft_padding $\\mathbf { \\tau } = \\mathbf { \\tau }$ (attention_mask[:, -1].sum() $\\scriptstyle = =$ attention_mask.shape[0]) if left_padding:   \nreturn last_hidden_states[:, -1] else:   \nsequence_lengths $\\mathbf { \\tau } = \\mathbf { \\tau }$ attention_ma",
        "id": 105,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 71,
        "text": "$\\mathbf { \\tau } = \\mathbf { \\tau }$ attention_mask.sum(dim $= 1$ ) - 1 batch_size $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_hidden_states.shape[0] return last_hidden_states[torch.arange(batch_size   \ndevice=last hidden states.device), sequence lengthsl ",
        "id": 106,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 107,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 52,
        "text": "#将任务描述和查询组合成特定格式的指令 def get_detailed_instruct(task_description: str,query: str) $- >$ str: return f'Instruct: {task_description}\\nQuery: {query}' ",
        "id": 108,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 85,
        "text": "task $\\equiv$ 'Given a web search query, retrieve relevant passages that answer the   \nquery'   \nqueries $\\mathbf { \\tau } = \\mathbf { \\tau }$ [ get_detailed_instruct(task,'how much protein should a female eat'), # 女   \n性应该摄入多少蛋白质 get_detailed_instruct(task,'summit define') # summit （顶峰）的定义   \n]   \n",
        "id": 109,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 40,
        "text": "ct(task,'summit define') # summit （顶峰）的定义   \n]   \n#检索文档   \ndocuments $\\mathbf { \\tau } = \\mathbf { \\tau }$ [ ",
        "id": 110,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 17,
        "length_tokens": 66,
        "text": "\"As a general guideline, the CDC's average requirement of protein for women ages 19 to 70 is 46 grams per day. But, as you can see from this chart, you'll need to increase that if you're expecting or training for a marathon. Check out the chart below to see how much protein vou should be eating ",
        "id": 111,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 8,
        "text": "CASE: gte-qwen2 使用",
        "id": 112,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 16,
        "text": "each day.\"，# 关于女性蛋白质摄入量的文档",
        "id": 113,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 87,
        "text": "\"Definition of summit for English Language Learners. : 1 the highest point of a mountain : the top of a mountain. : 2 the highest level. : 3 a meeting or series of meetings between the leaders of two or more governments.\" # 关 于summit定义的文档 ] # 将查询和文档合并为一个输入文本列表 input_texts $\\mathbf { \\tau } = \\mathbf",
        "id": 114,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 30,
        "text": "并为一个输入文本列表 input_texts $\\mathbf { \\tau } = \\mathbf { \\tau }$ queries $^ +$ documents ",
        "id": 115,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 106,
        "text": "#设置模型路径  \nmodel_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"/root/autodl-tmp/models/iic/gte_Qwen2-1_5B-instruct\"  \n#加载分词器，trust_remote_code $\\ c = { }$ True允许使用远程代码  \ntokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoTokenizer.from_pretrained(model_dir,  \ntrust_remote_code $\\ c =$ True)  \n#加载模型  \nm",
        "id": 116,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 89,
        "text": "dir,  \ntrust_remote_code $\\ c =$ True)  \n#加载模型  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoModel.from_pretrained(model_dir, trust_remote_code $\\ c =$ True  \nmax_length $\\mathbf { \\tau } = \\mathbf { \\tau }$ 8192  \nbatch_dict $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer(input_texts,max_length",
        "id": 117,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 99,
        "text": "\\mathbf { \\tau }$ tokenizer(input_texts,max_length $\\ c =$ max_length, padding=True,  \ntruncation $\\ c =$ True,return_tensors $\\bullet ^ { \\prime }$ pt')  \noutputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ model(\\*\\*batch_dict)  \n# 使用last_token_pool函数从最后的隐藏状态中提取每个序列的表示  \nembeddings $\\mathbf { \\tau } = \\",
        "id": 118,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 44,
        "text": "的隐藏状态中提取每个序列的表示  \nembeddings $\\mathbf { \\tau } = \\mathbf { \\tau }$ last_token_pool(outputs.last_hidden_state,  \nbatch_dict['attention_mask'])",
        "id": 119,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 120,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 89,
        "text": "embeddings $\\mathbf { \\tau } = \\mathbf { \\tau }$ F.normalize(embeddings, $\\mathsf { p } { = } 2$ ，dim ${ = } 1$ ） scores $\\mathbf { \\tau } = \\mathbf { \\tau }$ (embeddings[:2] $@$ embeddings[2:].T) $^ { * } 1 0 0$ print(scores.tolist()) ",
        "id": 121,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 18,
        "length_tokens": 86,
        "text": "[[78.49689483642578, 17.042858123779297],[14.924483299255371， 75.37962341308594]]gte-Qwen2-7B-instruct是基于Qwen2的指令优化型嵌入模型指令优化：经过大量指令-响应对的训练，特别擅长理解和生成高质量的文本。",
        "id": 122,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 123,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 124,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 35,
        "text": "性能表现：在文本生成、问答系统、文本分类、情感分析、命名实体识别和语义匹配等任务中表现优异。",
        "id": 125,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 29,
        "text": "适合场景：适合复杂问答系统，处理复杂的多步推理问题，能够生成准确且自然的答案。",
        "id": 126,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 2,
        "text": "优势：",
        "id": 127,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 19,
        "text": "·指令理解和执行能力强，适合复杂的指令驱动任务。",
        "id": 128,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 12,
        "text": "多语言支持，能够处理多种语言的文本。",
        "id": 129,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 14,
        "text": "·在文本生成和语义理解任务中表现优异。",
        "id": 130,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 3,
        "text": "局限：",
        "id": 131,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 19,
        "length_tokens": 15,
        "text": "·计算资源需求较高，适合资源充足的环境。",
        "id": 132,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 20,
        "length_tokens": 17,
        "text": "CASE: DeepSeek + Faiss 搭建本地知识库检索 ",
        "id": 133,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 134,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "百度文库－好好学习，天天向上",
        "id": 135,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 19,
        "text": "上海浦东发展银行西安分行个金客户经理管理考核暂行办法",
        "id": 136,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "第一章总则",
        "id": 137,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 89,
        "text": "第一条为保证我分行个金客户经理制的顺利实施，有效调动个金客户经理的积极性，促进个金业务快速、稳定地发展，根据总行《上海浦东发展银行个人金融营销体系建设方案（试行）》要求，特制定《上海浦东发展银行西安分行个金客户经理管理考核暂行办法（试行）》（以下简称本办法）。",
        "id": 138,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 40,
        "text": "第二条个金客户经理系指各支行（营业部）从事个人金融产品营销与市场开拓，为我行个人客户提供综合银行服务的我行市场人员。",
        "id": 139,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 47,
        "text": "第三条考核内容分为二大类，即个人业绩考核、工作质量考核。个人业绩包括个人资产业务、负债业务、卡业务。工作质量指个人业务的资产质量。",
        "id": 140,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 61,
        "text": "第四条为规范激励规则，客户经理的技术职务和薪资实行每年考核浮动。客户经理的奖金实行每季度考核浮动，即客户经理按其考核内容得分与行员等级结合，享受对应的行员等级待遇。",
        "id": 141,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "客户经理被投诉了，投诉一次扣多少分",
        "id": 142,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 17,
        "text": "根据文件内容，客户经理被投诉一次扣2分。具体规定如下：",
        "id": 143,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "（二） 服务质量考核：",
        "id": 144,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 30,
        "text": "2．客户服务效率低，态度生硬或不及时为客户提供维护服务，有客户投诉的，每投诉一次扣2分。",
        "id": 145,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "客户经理每年评聘申报时间是怎样的？",
        "id": 146,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 15,
        "text": "根据文件内容，客户经理每年评聘申报时间如下：",
        "id": 147,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 60,
        "text": "第十一条 每年一月份为客户经理评聘的申报时间，由分行人力资源部、个人业务部每年二月份组织统一的资格考试。考试合格者由分行颁发个金客户经理资格证书，其有效期为一年。",
        "id": 148,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 21,
        "length_tokens": 15,
        "text": "因此，客户经理每年评聘的申报时间是一月份。",
        "id": 149,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 150,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 72,
        "text": "from PyPDF2 import PdfReader text = \"\"   \nfrom langchain.chains.question_answering import load_qa_chain page_numbers = []   \nfrom langchain_openai import OpenAl   \nfromlangchain_community.calbacks.managerimport get_openai_calbackforpage_number,pageinenumerate(pd.pages,start $= 1$ ）   \nfrom langchain",
        "id": 151,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 68,
        "text": "enumerate(pd.pages,start $= 1$ ）   \nfrom langchain.text_splitter import RecursiveCharacterTextSplitter extracted_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ page.extract_text()   \nfrom langchain_community.embeddings import DashScopeEmbeddings if extracted_text:   \nfrom langchain_community.vectorstore",
        "id": 152,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 71,
        "text": "cted_text:   \nfrom langchain_community.vectorstores import FAISS text $+ =$ extracted_text   \nfrom typing import List, Tuple page_numbers.extend([page_number] len(extracted_text.split(\"\\n\"))   \ndef extract_text_with_page_numbers(pdf)- $\\cdot >$ Tuple[str, List[int]: else: Logger.warning(f\"No text fo",
        "id": 153,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 48,
        "text": "[str, List[int]: else: Logger.warning(f\"No text found on page {page_number).\") 从PDF中提取文本并记录每行文本对应的页码 参数: return text, page_numbers rdf:DE文件色 ",
        "id": 154,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 0,
        "text": "",
        "id": 155,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 22,
        "length_tokens": 19,
        "text": "返回:text:提取的文本内容page_numbers:每行文本对应的页码列表",
        "id": 156,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 157,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 29,
        "text": "def process_text_with_splitter(text: str, page_numbers: List[int]) - $\\cdot >$ FAISS: \" \" \" ",
        "id": 158,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 27,
        "text": "处理文本并创建向量存储参数:text:提取的文本内容page_numbers:每行文本对应的页码列表",
        "id": 159,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 160,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 3,
        "text": "返回: ",
        "id": 161,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 114,
        "text": "knowledgeBase:基于FAISS的向量存储对象   \nI I \"   \n#创建文本分割器，用于将长文本分割成小块   \ntext_splitter $\\mathbf { \\tau } = \\mathbf { \\tau }$ RecursiveCharacterTextSplitter( separators $\\ c =$ [\"\\n\\n\",\"\\n\",\".\", \" \", \"\"], chunk_s $\\mathsf { i } z e = 1 0 0 0$ chunk_overlap $= 2 0 0 .$ （2 length_function $\\ c =$ len, ",
        "id": 162,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 163,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 104,
        "text": "# 分割文本 chunks $\\mathbf { \\tau } = \\mathbf { \\tau }$ text_splitter.split_text(text) print(f\"文本被分割成{len(chunks)} 个块。\") #创建嵌入模型 embeddings $\\mathbf { \\tau } = \\mathbf { \\tau }$ DashScopeEmbeddings( model $\\ c =$ \"text-embedding-v1\", dashscope_api_key $\\ c =$ DASHSCOPE_API_KEY, ） #从文本块创建知识库 knowledgeBas",
        "id": 164,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 100,
        "text": " c =$ DASHSCOPE_API_KEY, ） #从文本块创建知识库 knowledgeBase $\\mathbf { \\tau } = \\mathbf { \\tau }$ FAISS.from_texts(chunks, embeddings) #Logger.info(\"Knowledge base created from text chunks.\") print(\"已从文本块创建知识库。\") # 存储每个文本块对应的页码信息 knowledgeBase.page_info $\\mathbf { \\tau } = \\mathbf { \\tau }$ {chunk: page_num",
        "id": 165,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 23,
        "length_tokens": 34,
        "text": "thbf { \\tau } = \\mathbf { \\tau }$ {chunk: page_numbers[i] for i, chunk in enumerate(chunks)} return knowledgeBase ",
        "id": 166,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 167,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 24,
        "length_tokens": 85,
        "text": "# 读取PDF文件   \npdf_reader $\\mathbf { \\tau } = \\mathbf { \\tau }$ PdfReader('./浦发上海浦东发展银行西安分行个金客户经理考核   \n办法.pdf\")   \n#提取文本和页码信息   \ntext, page_numbers $\\mathbf { \\tau } = \\mathbf { \\tau }$ extract_text_with_page_numbers(pdf_reader)   \ntext ",
        "id": 168,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 24,
        "length_tokens": 210,
        "text": "百度文库-好好学习，天天向上\\n-1上海浦东发展银行西安分行\\n个金客户经理管理考核暂行办法\\n\\n\\n第一章总则\\n第一条为保证我分行个金客户经理制的顺利实施，有效调动个\\n金客户经理的积极性，促进个金业务快速、稳定地发展，根据总行《上\\n海浦东发展银行个人金融营销体系建设方案（试行）》要求，特制定\\n《上海浦东发展银行西安分行个金客户经理管理考核暂行办法（试\\n行）》（以下简称本办法）。\\n第二条个金客户经理系指各支行（营业部）从事个人金融产品\\n营销与市场开拓，为我行个人客户提供综合银行服务的我行市场人\\n员。\\n第三条考核内容分为二大类，即个人业绩考核、工作质量考核。\\n个人业绩包括个",
        "id": 169,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 24,
        "length_tokens": 205,
        "text": "务的我行市场人\\n员。\\n第三条考核内容分为二大类，即个人业绩考核、工作质量考核。\\n个人业绩包括个人资产业务、负债业务、卡业务。工作质量指个人业\\n务的资产质量。\\n第四条为规范激励规则，客户经理的技术职务和薪资实行每年\\n考核浮动。客户经理的奖金实行每季度考核浮动，即客户经理按其考\\n核内容得分与行员等级结合，享受对应的行员等级待遇。\\n百度文库－好好学习天天向上\\n-2第二章职位设置与职责\\n第五条个金客户经理职位设置为：客户经理助理、客户经理、\\n高级客户经理、资深客户经理。\\n第六条个金客户经理的基本职责：\\n（一）客户开发。研究客户信息、联系与选择客户、与客户.",
        "id": 170,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 25,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 171,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 25,
        "length_tokens": 110,
        "text": "print(f\"提取的文本长度:{len(text)} 个字符。\")  \n# 处理文本并创建知识库  \nknowledgeBase $\\mathbf { \\tau } = \\mathbf { \\tau }$ process_text_with_splitter(text, page_numbers)  \nknowledgeBase提取的文本长度:3881个字符。  \n文本被分割成5个块。  \n已从文本块创建知识库。  \n<langchain_community.vectorstores.faiss.FAlSS at 0x170ab59f7d0>",
        "id": 172,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 25,
        "length_tokens": 0,
        "text": "",
        "id": 173,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 174,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 102,
        "text": "from langchain_community.llms import Tongyi   \nIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tongyi(model_name $\\ c =$ \"deepseek-v3\",   \ndashscope_api_key $\\ c =$ DASHSCOPE_API_KEY)   \n#设置查询问题   \nquery $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"客户经理被投诉了，投诉一次扣多少分'   \nquery $\\mathbf { \\tau } = \\mathbf { \\tau }",
        "id": 175,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 117,
        "text": "多少分'   \nquery $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"客户经理每年评聘申报时间是怎样的？\"   \nif query: # 执行相似度搜索，找到与查询相关的文档 docs $\\mathbf { \\tau } = \\mathbf { \\tau }$ knowledgeBase.similarity_search(query) #加载问答链 chain $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_qa_chain(llm, chain_type $\\ c =$ \"stuff\") #准备输入数据 input_",
        "id": 176,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 97,
        "text": "in(llm, chain_type $\\ c =$ \"stuff\") #准备输入数据 input_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ {\"input_documents\": docs, \"question\": query}   \n#使用回调函数跟踪API调用成本   \nwith get_openai_callback() as cost: #执行问答链 response $\\mathbf { \\tau } = \\mathbf { \\tau }$ chain.invoke(input $\\ c =$ input_data) print(f\"查询",
        "id": 177,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 107,
        "text": " chain.invoke(input $\\ c =$ input_data) print(f\"查询已处理。成本: {cost}\") print(response[\"output_text\"]) print(\"来源:\")   \n# 记录唯一的页码   \nunique_ $\\mathsf { p a g e s } = \\mathsf { s e t } ( )$   \n# 显示每个文档块的来源页码   \nfor doc in docs: text_content $\\mathbf { \\tau } = \\mathbf { \\tau }$ getattr(doc,\"page_content\",\"",
        "id": 178,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 73,
        "text": "} = \\mathbf { \\tau }$ getattr(doc,\"page_content\",\"\") source_page $\\mathbf { \\tau } = \\mathbf { \\tau }$ knowledgeBase.page_info.get( text_content.strip(, \"未知\" ） if source_page not in unique_pages: unique_pages.add(source_page) print(f\"文本块页码:{sourcepage}\") ",
        "id": 179,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 26,
        "length_tokens": 0,
        "text": "",
        "id": 180,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 181,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "1.PDF文本提取与处理",
        "id": 182,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 55,
        "text": "使用PyPDF2库的PdfReader从PDF文件中提取文本在提取过程中记录每行文本对应的页码，便于后续溯源使用RecursiveCharacterTextSplitter将长文本分割成小块，便于向量化处理",
        "id": 183,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "2.向量数据库构建",
        "id": 184,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 50,
        "text": "使用OpenAIEmbeddings将文本块转换为向量表示使用FAISS向量数据库存储文本向量，支持高效的相似度搜索为每个文本块保存对应的页码信息，实现查询结果溯源",
        "id": 185,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 10,
        "text": "3.语义搜索与问答链 ",
        "id": 186,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 49,
        "text": "基于用户查询，使用similarity_search在向量数据库中检索相关文本块使用OpenAl语言模型和load_qa_chain构建问答链将检索到的文档和用户问题作为输入，生成回答",
        "id": 187,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 8,
        "text": "4.成本跟踪与结果展示",
        "id": 188,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 27,
        "length_tokens": 24,
        "text": "使用get_openai_callback跟踪APl调用成本展示问答结果和来源页码，方便用户验证信息",
        "id": 189,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 28,
        "length_tokens": 9,
        "text": "打卡： 创建你的RAG问答",
        "id": 190,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 28,
        "length_tokens": 144,
        "text": "结合你的业务场景，创建你的RAG问答（LangChain+DeepSeek+Faiss）  \nStep1，收集整理知识库 (客户经理考核办法.pdf只是示例，用你的PDF进行检索)  \nStep2，从PDF中提取文本并记录每行文本对应的页码  \nStep3，处理文本并创建向量存储  \nStep4，执行相似度搜索，找到与查询相关的文档  \nStep5，使用问到链对用户问题进行回答 (使用你的DASHSCOPE_API_KEY)  \nStep6，显示每个文档块的来源页码（当前页码来源有问题，可以用Cursor完善）",
        "id": 191,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 192,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 17,
        "text": "Thinking: 如何调整文本块页码，当前文本块页码计算有问题",
        "id": 193,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 23,
        "text": "这个文本块页码不对，帮我查看文本块页码的计算逻辑，是否有问题",
        "id": 194,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 47,
        "text": "$\\textcircled { < } 2$ Thought for 5 seconds  \n$a$ Searched codebase for\"文本块页码的计算逻辑\"  \n$\\textcircled{9}$ Read chatpdf-faiss.py",
        "id": 195,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "问题找到了。当前页码计算逻辑有以下问题：",
        "id": 196,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 23,
        "text": "1.在extract_text_with_page_numbers 函数中，页码是按行文本进行记录的:",
        "id": 197,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 2,
        "text": "python ",
        "id": 198,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "Apply to chatpdf-fais.. ",
        "id": 199,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 18,
        "text": "page_numbers.extend([page_number] $*$ len(extracted_text.split(\"\\n\"))) ",
        "id": 200,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 28,
        "text": "这里对每个PDF页面提取的文本按换行符分割，然后为每一行都分配当前页码。",
        "id": 201,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 23,
        "text": "2.但在 process_text_with_splitter 函数中，文本被分成块时使用的是:",
        "id": 202,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 2,
        "text": "python ",
        "id": 203,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 8,
        "text": "Apply to chatpdf-fais.. ",
        "id": 204,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 65,
        "text": "page_info $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {chunk: page_numbers[i] for i,chunk in enumerate(chunks)}这段代码假设分割后的chunks数量与原始按行记录的page_numbers长度相同，直接使用索引i来获取页码。",
        "id": 205,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 206,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 54,
        "text": "但实际上，RecursiveCharacterTextSplitter 分割器会按照多种分隔符（ $\\ln ( n$ ： $\\sin$ 101）将文本分割成chunk_size大小的块，与原始按行分割的对应关系已经不存在了。",
        "id": 207,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "解决方案是修改页码记录逻辑，使页码能够正确对应到分割后的文本块：",
        "id": 208,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 22,
        "text": "解决方案是修改页码记录逻辑，使页码能够正确对应到分割后的文本块：",
        "id": 209,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 16,
        "text": "chatpdf-faiss.py $+ 3 2 - 1 <$ ",
        "id": 210,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "••· □ ",
        "id": 211,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 132,
        "text": "#修正页码逻辑：为每个文本块找到最频繁出现的页码  \npage_info $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ ☆  \nfor chunk in chunks:# 找到文本块在原始文本中的起始位置chunk_start $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ text.find(chunk)if chunk_start $\\scriptstyle \\mathbf { \\mu = \\mu - 1 }$ ：#如果找不到精确匹配，可能是因为文本分割的边界问题# 使用一个默认页码（例如第一页）或标记为未知page",
        "id": 212,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 29,
        "length_tokens": 88,
        "text": "果找不到精确匹配，可能是因为文本分割的边界问题# 使用一个默认页码（例如第一页）或标记为未知page_info[chunk] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"未知\"continue# 计算文本块结束位置chunk_end $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ chunk_start $^ +$ len(chunk)",
        "id": 213,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "LangChain中的问答链",
        "id": 214,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 30,
        "length_tokens": 11,
        "text": "LangChain问答链中的4种chain_type:",
        "id": 215,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 30,
        "length_tokens": 142,
        "text": "1）stuff  \n直接把文档作为prompt输入给OpenAl  \n2) map_reduce  \n对于每个chunk做一个prompt（回答或者摘要），然后  \n再做合并  \n3)refine  \n在第一个chunk上做prompt得到结果，然后合并下一个  \n文件再输出结果  \nA map_rerank  \n对每个chunk做prompt，然后打个分，然后根据分数返  \n回最好的文档中的结果  \nquery $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"客户经理每年评聘申报时间是怎样的？“  \nif query:#执行相似度搜索，找到与查询相关的文档doc",
        "id": 216,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 30,
        "length_tokens": 113,
        "text": "经理每年评聘申报时间是怎样的？“  \nif query:#执行相似度搜索，找到与查询相关的文档docs $\\mathbf { \\tau } = \\mathbf { \\tau }$ knowledgeBase.similarity_search(query,k=10)#加载问答链chain $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_qa_chain(llm, chain_type $\\ c =$ \"stuff\")#准备输入数据input_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ {\"input_documen",
        "id": 217,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 30,
        "length_tokens": 91,
        "text": "athbf { \\tau } = \\mathbf { \\tau }$ {\"input_documents\": docs, \"question\": query}#使用回调函数跟踪API调用成本with get_openai_callback() as cost:# 执行问答链response $\\mathbf { \\tau } = \\mathbf { \\tau }$ chain.invoke(input $\\ c =$ input_data)print(f\"查询已处理。成本:{cost}\")print(response[\"output_text\"])",
        "id": 218,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 30,
        "length_tokens": 0,
        "text": "",
        "id": 219,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 31,
        "length_tokens": 6,
        "text": "LangChain中的问答链",
        "id": 220,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 221,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 31,
        "length_tokens": 69,
        "text": "1） stuff  \n适合文档拆分的比较小，一次获取文档比较少的情况  \n调用LLM的次数也比较少，能使用stuff的就使用这种方式。2) map_reduce  \n将每个document单独处理，可以并发进行调用。但是每个文档之间缺少上下文。",
        "id": 222,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 31,
        "length_tokens": 0,
        "text": "",
        "id": 223,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 32,
        "length_tokens": 6,
        "text": "LangChain中的问答链",
        "id": 224,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 225,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 226,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 32,
        "length_tokens": 25,
        "text": "3）refine  \nRefine这种方式能部分保留上下文，以及token的使用能控制在一定范围。",
        "id": 227,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 32,
        "length_tokens": 19,
        "text": "4 map_rerank会大量地调用LLM，每个document之间是独立处理",
        "id": 228,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 33,
        "length_tokens": 3,
        "text": "Q&A ",
        "id": 229,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 33,
        "length_tokens": 18,
        "text": "Thinking: 如果LLM可以处理无限上下文了，RAG还有意义吗？",
        "id": 230,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 33,
        "length_tokens": 205,
        "text": "效率与成本：LLM处理长上下文时计算资源消耗大，响应时间增加。RAG通过检索相关片段，减少输入长度。  \n知识更新：LLM的知识截止于训练数据，无法实时更新。RAG可以连接外部知识库，增强时效性。  \n可解释性：RAG的检索过程透明，用户可查看来源，增强信任。LLM的生成过程则较难追溯。  \n定制化：RAG可针对特定领域定制检索系统，提供更精准的结果，而LLM的通用性可能无法满足特定需求。  \n数据隐私：RAG允许在本地或私有数据源上检索，避免敏感数据上传云端，适合隐私要求高的场景。  \n$\\Rightarrow$ 结合LLM的生成能力和RAG的检索能力，可以提升整体性能，提供更全面、准确的回",
        "id": 231,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 33,
        "length_tokens": 30,
        "text": "ightarrow$ 结合LLM的生成能力和RAG的检索能力，可以提升整体性能，提供更全面、准确的回答。",
        "id": 232,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 34,
        "length_tokens": 12,
        "text": "RAG常见问题一一如何提升RAG质量",
        "id": 233,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 35,
        "length_tokens": 9,
        "text": "RAG常见问题：数据准备阶段",
        "id": 234,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 35,
        "length_tokens": 4,
        "text": "数据准备阶段：",
        "id": 235,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 35,
        "length_tokens": 110,
        "text": "·数据质量差：企业大部分数据（尤其是非结构化数据）缺乏良好的数据治理，未经标记/评估的非结构化数据可能包含敏感、过时、矛盾或不正确的信息。  \n·多模态信息：提取、定义和理解文档中的不同内容元素，如标题、配色方案、图像和标签等存在挑战。  \n·复杂的PDF提取：PDF是为人类阅读而设计的，机器解析起来非常复杂。",
        "id": 236,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 35,
        "length_tokens": 10,
        "text": "Thinking: 如何提升数据准备阶段的质量？",
        "id": 237,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 35,
        "length_tokens": 12,
        "text": "·构建完整的数据准备流程·智能文档技术",
        "id": 238,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "RAG准备：构建完整的数据准备流程",
        "id": 239,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "Thinking: 如何构建完整的数据准备流程？",
        "id": 240,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "1.数据评估与分类",
        "id": 241,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 158,
        "text": "数据审计：全面审查现有数据，识别敏感、过时、矛盾或不准确的信息。  \n数据分类：按类型、来源、敏感性和重要性对数据进行分类，便于后续处理。识别敏感信息，比如：  \n客户姓名、身份证号、手机号、银行账号、交易记录等个人身份信息（PI）。  \n信用卡号、CVV码、有效期等支付信息。发现问题：  \n这些信息可能未经加密存储，存在泄露风险。部分数据可能被未授权人员访问。识别过时信息，比如：  \n客户地址、联系方式未及时更新。  \n已结清的贷款或信用卡账户仍被标记为“活跃”",
        "id": 242,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 243,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 244,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 245,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 36,
        "length_tokens": 17,
        "text": "发现问题：过时信息可能导致客户沟通失败或决策错误。",
        "id": 246,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "RAG准备：构建完整的数据准备流程",
        "id": 247,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 5,
        "text": "2.数据清洗",
        "id": 248,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "去重：删除重复数据",
        "id": 249,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "纠错：修正格式错误、拼写错误等。",
        "id": 250,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 14,
        "text": "更新：替换过时信息，确保数据时效性。",
        "id": 251,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 15,
        "text": "一致性检查：解决数据矛盾，确保逻辑一致。",
        "id": 252,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "3.敏感信息处理",
        "id": 253,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 26,
        "text": "识别敏感数据：使用工具或正则表达式识别敏感信息，如个人身份信息（PII）。",
        "id": 254,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 19,
        "text": "脱敏或加密：对敏感数据进行脱敏处理，确保合规。",
        "id": 255,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "4.数据标记与标注",
        "id": 256,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 38,
        "text": "元数据标记：为数据添加元数据，如来源、创建时间等内容标注：对非结构化数据进行标注，便于后续检索和分析。",
        "id": 257,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "5.数据治理框架",
        "id": 258,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 12,
        "text": "制定政策：明确数据管理、访问控制和更新流程",
        "id": 259,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 12,
        "text": "责任分配：指定数据治理负责人，确保政策执行",
        "id": 260,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 37,
        "length_tokens": 17,
        "text": "监控与审计：定期监控数据质量，进行审计。",
        "id": 261,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 38,
        "length_tokens": 8,
        "text": "RAG准备：智能文档技术",
        "id": 262,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 263,
        "type": "image",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 39,
        "length_tokens": 12,
        "text": "RAG常见问题： 知识检索阶段",
        "id": 264,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 39,
        "length_tokens": 5,
        "text": "知识检索阶段：",
        "id": 265,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 39,
        "length_tokens": 32,
        "text": "内容缺失：当检索过程缺少关键内容时，系统会提供不完整的答案 $\\Rightarrow$ 降低RAG的质量",
        "id": 266,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 39,
        "length_tokens": 85,
        "text": "，错过排名靠前的文档：用户查询相关的文档时被检索到，但相关性极低。因为在检索过程中，用户通过主观判断决定检索“文档数量”。理论上所有文档都要被排序并考虑进一步处理，但在实践中，通常只有排名top k的文档才会被召回，而k值需要根据经验确定。",
        "id": 267,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 39,
        "length_tokens": 11,
        "text": "Thinking: 如何提升知识检索阶段的质量？",
        "id": 268,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 39,
        "length_tokens": 21,
        "text": "通过查询转换澄清用户意图。  \n采用混合检索和重排策略。",
        "id": 269,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 15,
        "text": "RAG检索： 通过查询转换澄清用户意图",
        "id": 270,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 10,
        "text": "1.查询转换澄清用户意图",
        "id": 271,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "场景：用户询问“如何申请信用卡？”",
        "id": 272,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 24,
        "text": "问题：用户意图可能模糊，例如不清楚是申请流程、所需材料还是资格条件。",
        "id": 273,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "解决方法：通过查询转换明确用户意图。",
        "id": 274,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 3,
        "text": "步骤: ",
        "id": 275,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 99,
        "text": "·意图识别：使用自然语言处理技术识别用户意图。例如，识别用户是想了解流程、材料还是资格。  \n·查询扩展：根据识别结果扩展查询。例如：如果用户想了解流程，查询扩展为“信用卡申请的具体步骤”如果用户想了解材料，查询扩展为“申请信用卡需要哪些材料”如果用户想了解资格，查询扩展为“申请信用卡的资格条件”。",
        "id": 276,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 14,
        "text": "·检索：使用扩展后的查询检索相关文档",
        "id": 277,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 3,
        "text": "示例：",
        "id": 278,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 40,
        "length_tokens": 48,
        "text": "·用户输入：“如何申请信用卡？”  \n系统识别意图为“流程”，扩展查询为“信用卡申请的具体步骤”。  \n·检索结果包含详细的申请步骤文档，系统生成准确答案",
        "id": 279,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 14,
        "text": "RAG检索： 混合检索和重排策略",
        "id": 280,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 10,
        "text": "2.混合检索和重排策略",
        "id": 281,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 13,
        "text": "场景：用户询问“信用卡年费是多少？”",
        "id": 282,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 22,
        "text": "问题：直接检索可能返回大量文档，部分相关但排名低，导致答案不准确。",
        "id": 283,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 16,
        "text": "解决方法：采用混合检索 $^ +$ 重排策略。",
        "id": 284,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "步骤: ",
        "id": 285,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 55,
        "text": "·混合检索：结合关键词检索和语义检索。比如：关键词检索：“信用卡年费”。语义检索：使用嵌入模型检索与“信用卡年费”语义相近的文档，",
        "id": 286,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 23,
        "text": "重排：对检索结果进行重排生成答案：从重排后的文档中生成答案。",
        "id": 287,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "示例：",
        "id": 288,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 86,
        "text": "·用户输入：“信用卡年费是多少？”系统进行混合检索，结合关键词和语义检索。重排后，最相关的文档（如“信用卡年费政策”）排名靠前。  \n·系统生成准确答案：“信用卡年费根据卡类型不同，普通卡年费为100元，金卡为300元，白金卡为1000元。”",
        "id": 289,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "RAG检索阶段的质量提升：",
        "id": 290,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 41,
        "length_tokens": 38,
        "text": "查询转换：明确用户意图，提高检索准确性。混合检索与重排：确保最相关的文档被优先处理，生成更准确的答案。",
        "id": 291,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 9,
        "text": "RAG常见问题：答案生成阶段",
        "id": 292,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "答案生成阶段：",
        "id": 293,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 44,
        "text": "·未提取：正确答案出现在所提供的上下文中，但LLM却没有准确提取。这种情况通常发生在上下文中存在过多噪音或存在冲突的信息。",
        "id": 294,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 25,
        "text": "不完整：尽管能够利用上下文生成答案，但存在信息缺失，最终导致LLM回答不完整。",
        "id": 295,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 32,
        "text": "·格式错误：当prompt中的附加指令格式不正确时，LLM 可能误解这些指令，从而导致错误的答案。",
        "id": 296,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 12,
        "text": "·幻觉：大模型可能会产生虚假信息",
        "id": 297,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 10,
        "text": "Thinking: 如何提升答案生成阶段的质量？",
        "id": 298,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 42,
        "length_tokens": 11,
        "text": "改进提示词模板。实施动态防护栏",
        "id": 299,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 11,
        "text": "RAG答案生成： 改进提示词模板",
        "id": 300,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 12,
        "text": "场景：用户询问“如何申请信用卡？”",
        "id": 301,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 14,
        "text": "场景：用户询问“什么是零存整取？”",
        "id": 302,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 18,
        "text": "原始提示词： “根据以下上下文回答问题：如何申请信用卡？”",
        "id": 303,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 20,
        "text": "原始提示词： “根据以下上下文回答问题：什么是零存整取？”",
        "id": 304,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 71,
        "text": "场景：用户询问“信用卡的年费是多少？”原始提示词： “根据以下上下文回答问题：信用卡的年费是多少？”改进后的提示词： “根据以下上下文，详细列出不同信用卡的年费信息，并说明是否有减免政策：信用卡的年费是多少？”",
        "id": 305,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 32,
        "text": "改进后的提示词： “根据以下上下文，提取与申请信用卡相关的具体步骤和所需材料：如何申请信用卡？”",
        "id": 306,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 40,
        "text": "改进后的提示词： “根据以下上下文，准确解释零存整取的定义、特点和适用人群，确保信息真实可靠：什么是零存整取？”",
        "id": 307,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 12,
        "text": "Thinking: 如何对原有的提示词进行优化？",
        "id": 308,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 16,
        "text": "可以通过DeepSeek-R1的推理链，对提示词进行优化：",
        "id": 309,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 43,
        "length_tokens": 61,
        "text": "·信息提取：从原始提示词中提取关键信息。  \n·需求分析：分析用户的需求，明确用户希望获取的具体信息。  \n·提示词优化：根据需求分析的结果，优化提示词，使其更具体、更符合用户的需求。",
        "id": 310,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 44,
        "length_tokens": 12,
        "text": "RAG答案生成： 实施动态防护栏 ",
        "id": 311,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 44,
        "length_tokens": 79,
        "text": "实施动态防护栏（DynamicGuardrails）是一种在生成式AI系统中用于实时监控和调整模型输出的机制，目的是确保生成的内容符合预期、准确且安全。它通过设置规则、约束和反馈机制，动态地干预模型的生成过程，避免生成错误、不完整、不符合格式要求或有幻觉的内容。",
        "id": 312,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 44,
        "length_tokens": 23,
        "text": "在RAG系统中，动态防护栏的作用尤为重要，因为它可以帮助解决以下问题：",
        "id": 313,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 44,
        "length_tokens": 62,
        "text": "·未提取：确保模型从上下文中提取了正确的信息，·不完整：确保生成的答案覆盖了所有必要的信息·格式错误：确保生成的答案符合指定的格式要求。·幻觉：防止模型生成与上下文无关或虚假的信息，",
        "id": 314,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 12,
        "text": "RAG答案生成： 实施动态防护栏 ",
        "id": 315,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "场景1：防止未提取",
        "id": 316,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "场景2：防止不完整 ",
        "id": 317,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "场景4：防止幻觉 ",
        "id": 318,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 9,
        "text": "·用户问题：“如何申请信用卡？”",
        "id": 319,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 12,
        "text": "·用户问题： “信用卡的年费是多少？”",
        "id": 320,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 11,
        "text": "·用户问题：“什么是零存整取？”",
        "id": 321,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 15,
        "text": "·上下文：包含申请信用卡的步骤和所需材料。",
        "id": 322,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 11,
        "text": "上下文：包含不同信用卡的年费信息",
        "id": 323,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 13,
        "text": "上下文：包含零存整取的定义和特点。",
        "id": 324,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "动态防护栏规则：",
        "id": 325,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "动态防护栏规则：",
        "id": 326,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 6,
        "text": "动态防护栏规则：",
        "id": 327,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 21,
        "text": "检查生成的答案是否包含“步骤”和“材料”，如果缺失，提示模型重新生成。",
        "id": 328,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 22,
        "text": "检查生成的答案是否列出所有信用卡的年费如果缺失，提示模型补充。",
        "id": 329,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 20,
        "text": "检查生成的答案是否与上下文一致。  \n如果不一致，提示模型重新生成。",
        "id": 330,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "·示例：",
        "id": 331,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "·示例：",
        "id": 332,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 4,
        "text": "·示例：",
        "id": 333,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 14,
        "text": "错误输出：“信用卡A的年费是100元。 ”",
        "id": 334,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 33,
        "text": "错误输出： “申请信用卡需要提供一些材料。 7防护栏触发：检测到未提取具体步骤，提示模型补充。",
        "id": 335,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 31,
        "text": "错误输出： “零存整取是一种贷款产品。防护栏触发：检测到与上下文不一致，提示模型重新生成",
        "id": 336,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 45,
        "length_tokens": 23,
        "text": "防护栏触发：检测到未列出所有信用卡的年费，提示模型补充。",
        "id": 337,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 12,
        "text": "RAG答案生成： 实施动态防护栏 ",
        "id": 338,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 10,
        "text": "Thinking: 如何实现动态防护栏技术？",
        "id": 339,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 49,
        "text": "事实性校验规则，在生成阶段，设置规则，验证生成内容是否与检索到的知识片段一致。例如，可以使用参考文献验证机制，确保生成内容有可靠来源支持，避免输出不合理的回答。",
        "id": 340,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 10,
        "text": "Thinking: 如何制定事实性校验规则？",
        "id": 341,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 19,
        "text": "当业务逻辑明确且规则较为固定时，可以人为定义一组规则，比如：",
        "id": 342,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 29,
        "text": "，规则1：生成的答案必须包含检索到的知识片段中的关键实体（如“年费”、“利率”）。",
        "id": 343,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 21,
        "text": "·规则2：生成的答案必须符合指定的格式（如步骤列表、表格等）。",
        "id": 344,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "实施方法：",
        "id": 345,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 17,
        "text": "使用正则表达式或关键词匹配来检查生成内容是否符合规则。",
        "id": 346,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 46,
        "length_tokens": 31,
        "text": "例如，检查生成内容是否包含“年费”这一关键词，或者是否符合步骤格式（如“1.登录；2.设置”）。",
        "id": 347,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "RAG在不同阶段提升质量的实践",
        "id": 348,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 47,
        "length_tokens": 122,
        "text": "在数据准备环节，阿里云考虑到文档具有多层标题属性且不同标题之间存在关联性，提出多粒度知识提取方案，按照不同标题级别对文档进行拆分，然后基于Qwen14b模型和RefGPT训练了一个面向知识提取任务的专属模型，对各个粒度的chunk进行知识提取和组合，并通过去重和降噪，保证知识不丢失、不冗余。最终将文档知识提取成多个事实型对话，提升检索效果;",
        "id": 349,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 47,
        "length_tokens": 92,
        "text": "在知识检索环节，哈啰出行采用多路召回的方式，主要是向量召回和搜索召回。其中，向量召回使用了两类，一类是大模型的向量、另一类是传统深度模型向量；搜索召回也是多链路的，包括关键词、ngram等。通过多路召回的方式，可以达到较高的召回查全率。",
        "id": 350,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 47,
        "length_tokens": 43,
        "text": "在答案生成环节，中国移动为了解决事实性不足或逻辑缺失，采用FoRAG两阶段生成策略，首先生成大纲，然后基于大纲扩展生成最终答案。",
        "id": 351,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 48,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 352,
        "type": "text",
        "file_name": "6.1-RAG技术与应用"
      },
      {
        "page": 1,
        "length_tokens": 3,
        "text": "NotebookLM使用",
        "id": 0,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 3,
        "text": "NotebookLM使用",
        "id": 1,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "NotebookLM使用：",
        "id": 2,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "https://notebooklm.google/ ",
        "id": 3,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 45,
        "text": "·每个Notebook最多50个文件，每个文件最多包含50万字或200兆字节的数据。用户可以上传多达2500万字的文本来创建特定学习主题的笔记本。",
        "id": 4,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 19,
        "text": "·NotebookLM可以组织信息、总结关键事实，回答用户的问题，并制作成播客",
        "id": 5,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 55,
        "text": "·NotebookLM与LLM的区别在于其“基于来源”的方法，即它仅从上传材料的范围内检索信息。此外，所有NotebookLM从这些材料中提取的内容都会自动生成引用，简化了事实核查过程。",
        "id": 6,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "巧思胜苦干 ",
        "id": 7,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 2,
        "length_tokens": 24,
        "text": "基于Gemini1.5打造的一款出色的工具，可助您理解您最为关心的信息",
        "id": 8,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 6,
        "text": "CASE: 三国演义助手",
        "id": 9,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 11,
        "text": "TODO：创建一个三国演义的AI助手",
        "id": 10,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "三 NotebookLM",
        "id": 11,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 1,
        "text": "来源",
        "id": 12,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 1,
        "text": "回",
        "id": 13,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "选择所有来源",
        "id": 14,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "米 笔记本指南",
        "id": 15,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 7,
        "text": "three_kingdoms.txt ",
        "id": 16,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 17,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "CASE: 三国演义助手",
        "id": 18,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 19,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人100:00 ",
        "id": 20,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 43,
        "text": "Weleoi batlesndadc chaoticerabegan.YeahmeetkeyplayerslikeCaoCaoandLiuBeiandunderstandjustwhythisstorysilresonatessomuchtoday. ",
        "id": 21,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 22,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人200:29 ",
        "id": 23,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 24,
        "text": "Itisfscinatinoasageastgtrstordldt,teatetiatatiateddftrt ",
        "id": 24,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人100:39 ",
        "id": 26,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 8,
        "text": "LietCt period even begin? ",
        "id": 27,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 28,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人200:48 ",
        "id": 29,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 13,
        "text": "el And they inevitably fall, making way for something new. ",
        "id": 30,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 31,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人101:02 ",
        "id": 32,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 11,
        "text": "Icaeota predetermined roles. That's a. ",
        "id": 33,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 34,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人201:15 ",
        "id": 35,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 16,
        "text": "GreatptIj inevitablepatemaksiulacllAddftradorgi ",
        "id": 36,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 37,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 7,
        "text": "说话人101:34 ",
        "id": 38,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "utl ",
        "id": 39,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 5,
        "length_tokens": 6,
        "text": "CASE: 三国演义助手",
        "id": 40,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 5,
        "length_tokens": 0,
        "text": "",
        "id": 41,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 5,
        "length_tokens": 228,
        "text": "是一次深入探讨中国古代三国时期的对话，主要围绕罗贯中的《三国演义》展开。以下是对话的主要内容总结：三国时期的背景：对话开始于对三国时期政治阴谋、战争和英雄人物的介绍，提到了曹操（Cao Cao）和刘备（Liu Bei）等关键人物，并探讨了这个故事为何至今仍然引人入胜。《三国演义》的叙事特点：讨论了罗贯中如何将历史与传说编织在一起，创造出一个吸引读者数世纪的叙事。三国时期的开始：通过一首诗引入了三国时期的开始，讨论了历史的循环性，帝国的兴衰更迭。东汉末年的动荡：提到了导致东汉王朝崩溃的腐败官员、自然灾害和农民起义，特别是黄巾起义（YellowTurban Rebellion）。主要人物的介绍：介",
        "id": 42,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 5,
        "length_tokens": 217,
        "text": "然灾害和农民起义，特别是黄巾起义（YellowTurban Rebellion）。主要人物的介绍：介绍了刘备、关羽（GuanYu）、张飞（Zhang Fei）三位主要人物，以及他们如何结义并承诺忠诚于彼此和国家。早期胜利与汉政府的腐败：讨论了三位英雄早期对抗黄巾军的胜利，以及这些胜利如何揭示了汉政府内部的腐败。董卓（Dong Zhuo）的暴政：探讨了董卓如何利用权力真空控制首都，迫使年轻皇帝退位，并安装傀儡统治者，成为故事中的大反派。孙坚（Sun Jian）和玉玺（ImperialSeal）：讨论了孙坚如何发现象征权威的玉玺，并与另一个军阀吕布（Lu Biao）发生冲突。吕布的悲剧：探讨了吕布",
        "id": 43,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 5,
        "length_tokens": 253,
        "text": "论了孙坚如何发现象征权威的玉玺，并与另一个军阀吕布（Lu Biao）发生冲突。吕布的悲剧：探讨了吕布如何成为政治操纵和背叛的受害者，强调了智力和狡猾往往胜过蛮力。刘备、关羽和张飞的漂泊：描述了他们在动荡的世界中寻找自己的位置，从一位军阀转到另一位军阀，提供服务但面临不断的挫折。曹操的崛起：讨论了曹操如何从董卓的暴政中崛起，成为一个新的强大势力。三国的形成：最后，对话探讨了刘备、关羽和张飞如何从忠诚的追随者转变为自己的领导者，并开始建立自己的王国。《三国演义》的主题：强调了《三国演义》不仅仅是关于战斗和政治阴谋，还是对人性、领导力和在动荡世界中导航的复杂性的洞察结束语：对话以对三国时期成功所需特",
        "id": 44,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 5,
        "length_tokens": 106,
        "text": "战斗和政治阴谋，还是对人性、领导力和在动荡世界中导航的复杂性的洞察结束语：对话以对三国时期成功所需特质的讨论结束，是像刘备这样重视荣誉和正义的人，还是像曹操这样不择手段实现目标的人。整个对话是对三国时期复杂历史和人物的深入分析，展现了那个时代的政治斗争、个人野心和道德困境。",
        "id": 45,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "CASE: 肺癌分析助手",
        "id": 46,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "肿瘤分析助手：",
        "id": 47,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 6,
        "length_tokens": 40,
        "text": "Application of NotebookLM, a Large Language Model with Retrieval-Augmented Generation, for Lung Cancer Staging, 2024 https://arxiv.0rg/abs/2410.10869 ",
        "id": 48,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 6,
        "length_tokens": 108,
        "text": "·探讨LLMs在放射学中的实用性，尤其是在肺癌分期的应用。研究者将日本当前的肺癌分期指南总结为可靠的外部知识（REK），提供给NotebookLM。  \n·使用NotebookLM对100个虚构的肺癌病例进行分期，并评估其准确性。  \n·将NotebookLM的结果与GPT-4Omni（GPT-4o）进行比较（分别在有和没有REK的情况下进行测试）",
        "id": 49,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 6,
        "length_tokens": 55,
        "text": "CT findings of 10o fictional lung cancer patients ↓ 1 ↓ NotebookLM GPT-40 GPT-40 with REK with REK without REK ↓ ↓ ↓ TNM classifications TNM classifications TNM classifications ↓ ↓ ↓ Diagnostic accuracy Diagnostic accuracy Diagnostic accuracy Search accuracy ",
        "id": 50,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 7,
        "length_tokens": 7,
        "text": "CASE: 肺癌分析助手",
        "id": 51,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 7,
        "length_tokens": 112,
        "text": "在使用100个虚构的肺癌案例进行的实验中，不同大语言模型设置（即带有可靠外部知识(REK)的NotebookLM、带有REK的GPT-4o以及不带REK的GPT-4o）对TNM分期诊断的准确性。如果T、N和M这三个因素都被正确诊断，则认为该TNM分期诊断是正确的。对于NotebookLM，还计算了搜索准确性。这里REK指的是可靠外部知识。",
        "id": 52,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 53,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "CASE: 肺癌分析助手",
        "id": 54,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "Case 2 CT findings: ",
        "id": 55,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 53,
        "text": "A 2 cm solid component diameter tumor is observed in the left lower lobe. The tumor invades the main bronchus but not the carina. Enlarged left mediastinal lymph nodes. There is a metastasis in the axial vertebrae. ",
        "id": 56,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 12,
        "text": "Correct answer: T2a N2 M1b ",
        "id": 57,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 59,
        "text": "在左下叶观察到一个直径为2厘米的实性成分肿瘤。该肿瘤侵犯了主支气管但未侵犯隆突。左侧纵隔淋巴结肿大。存在轴椎骨转移。",
        "id": 58,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "Output by LLMs: ",
        "id": 59,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "NotebookLM with REK ",
        "id": 60,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 77,
        "text": "· T2a: The tumor size is 2 cm in diameter and invades the main bronchus. According to source $\\textcircled{1}$ ，tumors with a solid component diameter greater than 3 cm and less than or equal to 5 cm，or a solid component diameter less than or equal to 3 cm with involvement of the main bronchus meet ",
        "id": 61,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 74,
        "text": "o 3 cm with involvement of the main bronchus meet the criteria for T2.Additionally，source $\\textcircled{2}$ states that tumors meeting the T2 criteria but are 3 cm or less in size are classified as T2a.   \nN2: The case presents with enlarged left mediastinal lymph nodes. Since the primary tumor is i",
        "id": 62,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 70,
        "text": "iastinal lymph nodes. Since the primary tumor is in the left lung，the mediastinal lymph nodes are considered ipsilateral. Source $\\textcircled{3}$ states that metastasis to the ipsilateral mediastinal lymph nodes falls under the N2 classification. M1b: The case notes \"metastasis in the axial vertebr",
        "id": 63,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 48,
        "text": "b: The case notes \"metastasis in the axial vertebrae,' indicating metastasis outside the lungs. Source $\\textcircled{4}$ states that a single metastasis outside the lungs is classified as M1b. ",
        "id": 64,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 113,
        "text": "·T2a：肿瘤直径为2厘米，并侵犯主支气管。根据来源o1，具有实性成分直径大于3厘米且小于或等于5厘米的肿瘤，或者实性成分直径小于或等于3厘米但伴有主支气管受累的肿瘤符合T2的标准。此外，来源o2指出，满足T2标准但大小不超过3厘米的肿瘤被分类为T2a。",
        "id": 65,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 2,
        "text": "Correct ",
        "id": 66,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 69,
        "text": "·N2：病例表现为左侧纵隔淋巴结肿大。由于原发肿瘤位于左肺，因此这些纵隔淋巴结被认为是同侧的。来源o3指出，转移到同侧纵隔淋巴结的情况归类于N2。",
        "id": 67,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 8,
        "length_tokens": 43,
        "text": "·M1b：病例中提到\"轴椎骨转移”，表明存在肺外转移。来源o4说明，单个肺外转移被分类为M1b。",
        "id": 68,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "CASE: 肺癌分析助手",
        "id": 69,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 7,
        "text": "Case 2 CT findings: ",
        "id": 70,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 53,
        "text": "A 2 cm solid component diameter tumor is observed in the left lower lobe. The tumor invades the main bronchus but not the carina. Enlarged left mediastinal lymph nodes. There is a metastasis in the axial vertebrae. ",
        "id": 71,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 12,
        "text": "Correct answer: T2a N2 M1b ",
        "id": 72,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 59,
        "text": "在左下叶观察到一个直径为2厘米的实性成分肿瘤。该肿瘤侵犯了主支气管但未侵犯隆突。左侧纵隔淋巴结肿大。存在轴椎骨转移。",
        "id": 73,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "GPT-4o with REK ",
        "id": 74,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 75,
        "type": "table",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "CASE: 肺癌分析助手",
        "id": 76,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 10,
        "length_tokens": 68,
        "text": "在使用100个虚构的肺癌患者进行的实验中，针对T、N和M各个因素，不同大语言模型（带有可靠外部知识(REK)的NotebookLM、带有REK的GPT-4o以及不带REK的GPT-4o）的诊断准确性。",
        "id": 77,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 78,
        "type": "image",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 11,
        "length_tokens": 88,
        "text": "以往的研究中，使用传统LLMs（包括GPT-4o）进行肺癌分期的诊断准确率不足以用于临床应用。  \nNotebookLM通过RAG技术，仅基于提供的REK生成响应，避免了不相关信息。  \nNotebookLM能够清晰地指出REK中的参考位置，这使得放射科医生可以轻松验证NotebookLM响应的正确性。",
        "id": 79,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 11,
        "length_tokens": 54,
        "text": "CT findings of 10o fictional lung cancer patients ↓ ↓ ↓ NotebookLM GPT-40 GPT-40 with REK with REK without REK ↓ ↓ ↓ TNM classifications TNM classifications TNM classifications ↓ ↓ ↓ Diagnostic accuracy Diagnostic accuracy Diagnostic accuracy Search accuracy ",
        "id": 80,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 81,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 15,
        "text": "帮我介绍平安产险团体险都有哪些险种？",
        "id": 82,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 10,
        "text": "平安产险团体险险种介绍",
        "id": 83,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 18,
        "text": "根据您提供的资料，平安产险提供以下团体险险种：",
        "id": 84,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "商业综合责任保险 1",
        "id": 85,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 119,
        "text": "$\\bigcirc$ 该险种满足亚马逊平台对卖家保险的要求，承保范围包括产品和完工责任，责任限额为每次及累计赔偿限额100万美元。①②  \n$\\bigcirc$ 该险种涵盖的产品大类多达195个，超过 2000 种商品，覆盖亚马逊网站 $9 5 \\%$ 以上在售产品。①  \n$\\bigcirc$ 该险种提供无免赔/10000美金免赔两种方案。2",
        "id": 86,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 9,
        "text": "$\\bullet$ 雇主责任险 ",
        "id": 87,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 133,
        "text": "$\\bigcirc$ 该险种是符合国家法律法规要求的，保障因工作原因导致的员工意外事故或职业病，包括死亡赔偿金、伤残赔偿金、医疗费用、误工费用和法律诉讼费用。③4  \n$\\bigcirc$ 相比团体意外伤害险，雇主责任险可以承保职业病和误工费用。4  \n$\\bigcirc$ 相比工伤保险，雇主责任险可以弥补工伤保险的不足，例如停工留薪期间的工资福利待遇和一次性伤残就业补助金。（5",
        "id": 88,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "企业团体综合意外险",
        "id": 89,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 152,
        "text": "$\\bigcirc$ 该险种保障范围涵盖日常生活、旅游度假、工作出差、户外团建等场景。6$\\bigcirc$ 该险种提供交通意外双重赔付、疾病（猝死）身故、高额意外医疗和尊享服务四大特色。$\\bigcirc$ 该险种针对不同的交通工具（飞机、火车、轮船、汽车）提供不同的意外身故/伤残保额。 $\\textcircled{7}$ $\\bigcirc$ 该险种的意外伤害医疗保障，对超过人民币100 元的部分，按照 $100 \\%$ 的比例赔付保险金。8",
        "id": 90,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 9,
        "text": "$\\bullet$ 雇主安心保 ",
        "id": 91,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 12,
        "length_tokens": 103,
        "text": "$\\bigcirc$ 该险种可以税前列支，帮助企业节省 $2 5 \\%$ 的企业所得税。9  \n$\\bigcirc$ 该险种提供灵活的方案定制，可以按职业类别承保，并为不同人员配置不同方案。9  \n$\\bigcirc$ 该险种可以覆盖工作期间全部风险，包括死亡赔偿金、伤残赔偿金、医疗费用、误工费用和法律诉讼费用。9",
        "id": 92,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 93,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "施工保 10: ",
        "id": 94,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 30,
        "text": "$\\bigcirc$ 该险种保障施工过程中的意外风险，包括工程自身损失、第三方责任和员工意外。1",
        "id": 95,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 29,
        "text": "$\\bigcirc$ 该险种的方案灵活，按工程造价收费，并提供多种附加保障。10 11",
        "id": 96,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 21,
        "text": "$\\bigcirc$ 该险种出单快捷，支持二维码、APP出单。 10",
        "id": 97,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "财产一切险12：",
        "id": 98,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 34,
        "text": "$\\bigcirc$ 该险种保障范围包括火灾爆炸、自然灾害、高空坠物、意外事故及其他附加责任。",
        "id": 99,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 39,
        "text": "$\\bigcirc$ 该险种是各行业企业必备的基础保险保障，除了主险保障责任以外，还可以通过附加条款来扩大保险责任范围。",
        "id": 100,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "装修保 13 : ",
        "id": 101,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 95,
        "text": "$\\bigcirc$ 该险种保障范围包括工程本身损失、第三者损失和施工人员意外。13此外，平安产险还提供交通出行意外伤害保险和交通工具意外伤害保险，这两个险种主要针对个人出行提供保障。14请注意，以上信息均来自您提供的资料。具体保险方案和费率，请以平安产险官方公布的信息为准。",
        "id": 102,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 13,
        "length_tokens": 2,
        "text": "15 ",
        "id": 103,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 104,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 14,
        "length_tokens": 15,
        "text": "1.为什么亚马逊卖家需要购买商业综合责任保险？",
        "id": 105,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 14,
        "length_tokens": 94,
        "text": "自2021年9月1日起，亚马逊平台要求月销售额超过1万美元的卖家必须购买商业综合责任保险。这是因为北美法律体系存在集体诉讼、高额索赔以及惩罚性赔偿等特点，产品缺陷可能导致巨额赔偿，保险可以帮助卖家转嫁风险。未投保的卖家可能会面临无法提现甚至被禁止销售的风险。",
        "id": 106,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 107,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 15,
        "length_tokens": 18,
        "text": "2.平安商业综合责任保险（亚马逊）有哪些产品亮点？",
        "id": 108,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 15,
        "length_tokens": 28,
        "text": "产品覆盖范围广：覆盖195个产品大类、超过2000种商品，满足大部分亚马逊卖家需求。",
        "id": 109,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "保障范围全面：涵盖法律费用、产品责任和完工责任，符合亚马逊平台要求。",
        "id": 110,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 15,
        "length_tokens": 27,
        "text": "服务响应迅速：承保后可快速获得英文保单和保险凭证，便于卖家通过平台审核。",
        "id": 111,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "续保优惠：为上年在我司投保的优质客户提供续保优惠套餐。 ",
        "id": 112,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 113,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 16,
        "length_tokens": 15,
        "text": "3.什么是雇主责任险？哪些企业需要购买？",
        "id": 114,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 16,
        "length_tokens": 102,
        "text": "雇主责任险是指在雇佣关系存续期间，因雇员在受雇过程中发生意外或患职业病而造成伤亡，雇主依法应承担的经济赔偿责任，由保险公司承担的保险。任何有用工需求的单位都可以购买雇主责任险，通过将雇主责任转嫁给保险公司，降低企业用工风险，减少工伤纠纷，并为员工提供更全面的保障。",
        "id": 115,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 17,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 116,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 17,
        "length_tokens": 22,
        "text": "4.雇主责任险与团体意外伤害险、工伤保险有什么区别？",
        "id": 117,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 17,
        "length_tokens": 38,
        "text": "雇主责任险是法定要求，保障范围更全面，涵盖职业病和误工费用；意外险则主要体现企业福利，没有法律强制性。",
        "id": 118,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 17,
        "length_tokens": 54,
        "text": "雇主责任险可作为工伤保险的补充，承担工伤保险基金无法覆盖的部分，如停工留薪期间的工资和部分伤残补助金，同时避免因工伤申领次数过多而面临行政处罚。",
        "id": 119,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 18,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 120,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 18,
        "length_tokens": 22,
        "text": "4.雇主责任险与团体意外伤害险、工伤保险有什么区别？",
        "id": 121,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 18,
        "length_tokens": 38,
        "text": "雇主责任险是法定要求，保障范围更全面，涵盖职业病和误工费用；意外险则主要体现企业福利，没有法律强制性。",
        "id": 122,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 18,
        "length_tokens": 54,
        "text": "雇主责任险可作为工伤保险的补充，承担工伤保险基金无法覆盖的部分，如停工留薪期间的工资和部分伤残补助金，同时避免因工伤申领次数过多而面临行政处罚。",
        "id": 123,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 19,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 124,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 19,
        "length_tokens": 120,
        "text": "5.平安企业团体综合意外险有哪些特色？交通意外双重赔付：涵盖海陆空各种交通工具，意外身故/伤残可获得双倍赔付。  \n疾病（猝死）身故保障：最高保额20万元。  \n高额意外医疗：门急诊和住院医疗最高保额10万元，每次事故100元免赔， $100 \\%$ 赔付。  \n尊享服务：24小时电话医疗咨询、意外住院医疗垫付等服务。",
        "id": 125,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 20,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 126,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 20,
        "length_tokens": 15,
        "text": "6.什么是施工保？平安施工保提供哪些保障？",
        "id": 127,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 20,
        "length_tokens": 89,
        "text": "施工保是针对施工过程中可能发生的各种风险提供保障的保险产品。平安施工保保障范围涵盖：工程自身：自然灾害或意外事故造成的工程财产损失。  \n第三者责任：意外事故造成周边第三者的人身伤亡或财产损失。  \n员工意外：施工人员因意外事故导致的人身伤亡和医疗费用支出。",
        "id": 128,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 129,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 21,
        "length_tokens": 21,
        "text": "7.什么是财产一切险？与财产基本险、综合险有什么区别？",
        "id": 130,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 21,
        "length_tokens": 127,
        "text": "财产一切险是指保险公司对被保险财产因发生火灾、爆炸、自然灾害以及意外事故等造成的损失负责赔偿的保险。  \n基本险：仅承保火灾、爆炸、雷击、飞行物体及其他高空运行物体坠落造成的损失。  \n综合险：在基本险基础上增加了暴雨、洪水等自然灾害造成的损失。  \n一切险：在综合险基础上增加了意外事故导致的标的损失，保障范围最全面。",
        "id": 131,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 22,
        "length_tokens": 7,
        "text": "CASE: 团体险助手",
        "id": 132,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 22,
        "length_tokens": 10,
        "text": "8.平安装修保提供哪些保障？",
        "id": 133,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 22,
        "length_tokens": 83,
        "text": "平安装修保为房屋装修过程中可能出现的风险提供保障，包括：保障工程本身：装修工程本身因意外事故造成的损失。保障第三者损失：装修过程中意外事故造成第三者的人身伤亡或财产损失。保障施工人员意外：装修工人因意外事故导致的人身伤亡和医疗费用支出。",
        "id": 134,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 23,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 135,
        "type": "text",
        "file_name": "6.2-NotebookLM使用"
      },
      {
        "page": 1,
        "length_tokens": 6,
        "text": "RAG高级技术与实践",
        "id": 0,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 2,
        "length_tokens": 6,
        "text": "RAG高级技术与实践",
        "id": 2,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 2,
        "length_tokens": 40,
        "text": "RAG技术树  \nRAFT方法  \nCASE: DeepSeek $+$ Faiss搭建本地知识库检索  \nRAG高效召回方法  \nGraphRAG  \nQwen-Agent",
        "id": 3,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "RAG技术树",
        "id": 4,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 3,
        "length_tokens": 30,
        "text": "RAG研究的技术树主要涉及预训练（Pre-training）、微调（Fine-tuning）和推理（Inference）等阶段。",
        "id": 5,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 3,
        "length_tokens": 32,
        "text": "随着LLM的出现，RAG的研究最初侧重于利用LLMs强大的上下文学习能力，主要集中在推理阶段。",
        "id": 6,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 3,
        "length_tokens": 38,
        "text": "随后的研究进一步深入，逐渐与LLMs的微调阶段更加融合。研究人员也在探索通过检索增强技术来提升预训练阶段的语言模型性能。",
        "id": 7,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "RAG的步骤：",
        "id": 9,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 15,
        "text": "Indexing $\\Rightarrow$ 如何更好地把知识存起来。",
        "id": 10,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 26,
        "text": "Retrieval $\\Rightarrow$ 如何在大量的知识中，找到一小部分有用的，给到模型参考。",
        "id": 11,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 25,
        "text": "Generation $\\Rightarrow$ 如何结合用户的提问和检索到的知识，让模型生成有用的答案。",
        "id": 12,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 30,
        "text": "这三个步骤虽然看似简单，但在RAG应用从构建到落地实施的整个过程中，涉及较多复杂的工作内容",
        "id": 13,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 61,
        "text": "Input Indexing Query User thatsa Documents ChunksVectors went through a sudden dismissal Output by the board in just three days, and then was rehired by the embeddings company,resembling a real-life versionof\"GameofThrones\"in Retrieval without RAG Relevant Documents   \n...l am unable to provide comm",
        "id": 14,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 71,
        "text": "levant Documents   \n...l am unable to provide comments on   \nfuture events. Currently,I do not have   \nanyinformation regarding thedismissal LLM Generation   \nand rehiring of OpenAl's CEO . Question : Chunk 1: \"Sam Altman Returns to   \nith RAGniantinena p Rpenls   \ndisagreements within OpenAl regard",
        "id": 15,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 80,
        "text": "ena p Rpenls   \ndisagreements within OpenAl regarding!   \n!the company's future direction and based on the following information : Chunk 2: \"The Drama Concludes? Sam Cnunk 1: AtaaUersf   \n' OpenAl... Chunk 3: \"The Personnel Turmoil at Combine Context OpenAl Comes to an End: Who Won and Who Lost?\" An",
        "id": 16,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 4,
        "length_tokens": 18,
        "text": " OpenAl Comes to an End: Who Won and Who Lost?\" Answer and Prompts ",
        "id": 17,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 5,
        "length_tokens": 2,
        "text": "RAFT方法",
        "id": 18,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "RAFT方法",
        "id": 19,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 6,
        "length_tokens": 11,
        "text": "RAFT方法（Retrieval Augmented Fine Tuning）",
        "id": 20,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 6,
        "length_tokens": 35,
        "text": "RAFT: Adapting Language Model to Domain Specific RAG, 2024 https://arxiv.org/pdf/2403.10131 如何最好地准备考试？ ",
        "id": 21,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 6,
        "length_tokens": 112,
        "text": "(a)基于微调的方法通过“学习”来实现“记忆”输入文档或回答练习题而不参考文档。  \n(b)或者，基于上下文检索的方法未能利用固定领域所提供的学习机会，相当于参加开卷考试但没有事先复习。  \n(c)相比之下，我们的方法RAFT利用了微调与问答对，并在一个模拟的不完美检索环境中参考文档一一从而有效地为开卷考试环境做准备。",
        "id": 22,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 23,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 7,
        "length_tokens": 2,
        "text": "RAFT方法",
        "id": 24,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 7,
        "length_tokens": 13,
        "text": "RAFT方法（Retrieval Augmented Fine Tuning）: ",
        "id": 25,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 7,
        "length_tokens": 86,
        "text": "让LLMs从一组正面和干扰文档中读取解决方案，这与标准的RAG设置形成对比，因为在标准的RAG设置中，模型是基于检索器输出进行训练的，这包含了记忆和阅读的混合体。在测试时，所有方法都遵循标准的RAG设置，即提供上下文中排名前k的检索文档。",
        "id": 26,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 27,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 8,
        "length_tokens": 2,
        "text": "RAFT方法",
        "id": 28,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 8,
        "length_tokens": 88,
        "text": "RAFT在所有专业领域的RAG性能上有所提升（在PubMed、HotPot、HuggingFace、Torch Hub和Tensorflow Hub等多个领域）领域特定的微调提高了基础模型的性能，RAFT无论是在有RAG的情况下还是没有RAG的情况下，都持续优于现有的领域特定微调方法。这表明了需要在上下文中训练模型。",
        "id": 29,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 9,
        "length_tokens": 2,
        "text": "RAFT方法",
        "id": 31,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 9,
        "length_tokens": 12,
        "text": "RAFT方法（Retrieval Augmented Fine Tuning） :",
        "id": 32,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 9,
        "length_tokens": 132,
        "text": "·适应特定领域的LLMs对于许多新兴应用至关重要，但如何有效融入信息仍是一个开放问题。  \n·RAFT结合了检索增强生成（RAG）和监督微调（SFT），从而提高模型在特定领域内回答问题的能力。  \n·训练模型识别并忽略那些不能帮助回答问题的干扰文档，只关注和引用相关的文档。  \n·通过在训练中引入干扰文档，提高模型对干扰信息的鲁棒性，使其在测试时能更好地处理检索到的文档。",
        "id": 33,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 9,
        "length_tokens": 11,
        "text": "https://github.com/lumpenspace/raft ",
        "id": 34,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 35,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 10,
        "length_tokens": 17,
        "text": "CASE: DeepSeek + Faiss 搭建本地知识库检索 ",
        "id": 36,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 37,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "百度文库－好好学习，天天向上",
        "id": 38,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 19,
        "text": "上海浦东发展银行西安分行个金客户经理管理考核暂行办法",
        "id": 39,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 4,
        "text": "第一章总则",
        "id": 40,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 89,
        "text": "第一条为保证我分行个金客户经理制的顺利实施，有效调动个金客户经理的积极性，促进个金业务快速、稳定地发展，根据总行《上海浦东发展银行个人金融营销体系建设方案（试行）》要求，特制定《上海浦东发展银行西安分行个金客户经理管理考核暂行办法（试行）》（以下简称本办法）。",
        "id": 41,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 40,
        "text": "第二条个金客户经理系指各支行（营业部）从事个人金融产品营销与市场开拓，为我行个人客户提供综合银行服务的我行市场人员。",
        "id": 42,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 47,
        "text": "第三条考核内容分为二大类，即个人业绩考核、工作质量考核。个人业绩包括个人资产业务、负债业务、卡业务。工作质量指个人业务的资产质量。",
        "id": 43,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 61,
        "text": "第四条为规范激励规则，客户经理的技术职务和薪资实行每年考核浮动。客户经理的奖金实行每季度考核浮动，即客户经理按其考核内容得分与行员等级结合，享受对应的行员等级待遇。",
        "id": 44,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 11,
        "text": "客户经理被投诉了，投诉一次扣多少分",
        "id": 45,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 17,
        "text": "根据文件内容，客户经理被投诉一次扣2分。具体规定如下：",
        "id": 46,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 7,
        "text": "（二） 服务质量考核：",
        "id": 47,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 30,
        "text": "2．客户服务效率低，态度生硬或不及时为客户提供维护服务，有客户投诉的，每投诉一次扣2分。",
        "id": 48,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 13,
        "text": "客户经理每年评聘申报时间是怎样的？",
        "id": 49,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 15,
        "text": "根据文件内容，客户经理每年评聘申报时间如下：",
        "id": 50,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 60,
        "text": "第十一条 每年一月份为客户经理评聘的申报时间，由分行人力资源部、个人业务部每年二月份组织统一的资格考试。考试合格者由分行颁发个金客户经理资格证书，其有效期为一年。",
        "id": 51,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 11,
        "length_tokens": 15,
        "text": "因此，客户经理每年评聘的申报时间是一月份。",
        "id": 52,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 12,
        "length_tokens": 16,
        "text": "CASE: DeepSeek+Faiss搭建本地知识库检索 ",
        "id": 53,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 12,
        "length_tokens": 66,
        "text": "from langchain_community.embeddings import DashScopeEmbeddings   \n# 创建嵌入模型 embeddings $\\mathbf { \\tau } = \\mathbf { \\tau }$ DashScopeEmbeddings( model $\\ c =$ \"text-embedding-v1\", dashscope_api_key $\\ c =$ DASHSCOPE_API_KEY, ） ",
        "id": 54,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 12,
        "length_tokens": 33,
        "text": "# 从文本块创建知识库knowledgeBase $\\mathbf { \\tau } = \\mathbf { \\tau }$ FAISS.from_texts(chunks, embeddings)",
        "id": 55,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 12,
        "length_tokens": 63,
        "text": "from langchain_community.llms import Tongyi Im $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tongyi(model_name $\\ c =$ \"deepseek-v3\",dashscope_api_key $\\mathbf { \\tau } = \\mathbf { \\tau }$ DASHSCOPE_API_KEY) ",
        "id": 56,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "RAG高效召回方法",
        "id": 57,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 13,
        "length_tokens": 48,
        "text": "Thinking: 如果要召回更多的片段，如何设置？docs $\\mathbf { \\tau } = \\mathbf { \\tau }$ knowledgeBase.similarity_search(query, $k { = } 1 0 )$ ",
        "id": 58,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "RAG高效召回方法",
        "id": 59,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 17,
        "text": "Thinking: 都有哪些RAG召回的策略，提升召回的质量？",
        "id": 60,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "1．改进检索算法",
        "id": 61,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 31,
        "text": "知识图谱：利用知识图谱中的语义信息和实体关系，增强对查询和文档的理解，提升召回的相关性",
        "id": 62,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 11,
        "text": "2.引入重排序 (Reranking）",
        "id": 63,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 41,
        "text": "重排序模型：对召回结果进行重排，提升问题和文档的相关性。常见的重排序模型有BGE-Rerank和Cohere Rerank。",
        "id": 64,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 114,
        "text": "场景：用户查询“如何提高深度学习模型的训练效率？”召回结果：初步召回10篇文档，其中包含与“深度学习”、“训练效率”相关的文章。重排序：BGE-Rerank对召回的10篇文档进行重新排序，将与“训练效率”最相关的文档（如“优化深度学习训练的技巧”）排在最前面，而将相关性较低的文档（如“深度学习基础理论”）排在后面。",
        "id": 65,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 14,
        "length_tokens": 32,
        "text": "混合检索：结合向量检索和关键词检索的优势，通过重排序模型对结果进行归一化处理，提升召回质量",
        "id": 66,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 5,
        "text": "Rerank模型使用",
        "id": 67,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 10,
        "text": "Thinking: 什么是重排序Rerank？",
        "id": 68,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 74,
        "text": "重排序Rerank主要用于优化初步检索结果的排序，提高最终输出的相关性或准确性。BGE-Rerank和Cohere Rerank是两种广泛使用的重排序模型，它们在检索增强生成（RAG）系统、搜索引擎优化和问答系统中表现优异。",
        "id": 69,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "1.BGE-Rerank ",
        "id": 70,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 109,
        "text": "由北京智源人工智能研究院（BAAI）开源发布，属于FlagEmbedding项目的一部分。  \n基于Transformer的Cross-Encoder结构，直接计算查询（Query）与文档（Document）的交互相关性得分。  \n训练数据：支持多语言（中、英等），训练数据包括T2Ranking、MSMARCO、NLI等数据集。  \n提供bge-reranker-base和bge-reranker-large两个版本，后者在精度上更优。",
        "id": 71,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "部署方式：可本地部署",
        "id": 72,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 15,
        "length_tokens": 29,
        "text": "开源免费，适合本地化部署，保护数据隐私。在中文任务中表现优秀，适用于垂直领域优化",
        "id": 73,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 16,
        "length_tokens": 5,
        "text": "Rerank模型使用",
        "id": 74,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 16,
        "length_tokens": 74,
        "text": "import torch  \nfrom transformers import AutoModelForSequenceClassification, AutoTokenizer  \ntokenizer $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoTokenizer.from_pretrained('BAAl/bge-reranker-large')  \nmodel $\\mathbf { \\tau } = \\mathbf { \\tau }$ AutoModelForSequenceClassification.from_pretrained('BAAl/",
        "id": 75,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 16,
        "length_tokens": 84,
        "text": "elForSequenceClassification.from_pretrained('BAAl/bge-reranker-large')  \nmodel.eval()  \npairs $\\mathbf { \\tau } = \\mathbf { \\tau }$ [['what is panda?','The giant panda is a bear species endemic to China.']]  \ninputs $\\mathbf { \\tau } = \\mathbf { \\tau }$ tokenizer(pairs, padding $\\circleddash$ True, ",
        "id": 76,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 16,
        "length_tokens": 123,
        "text": " }$ tokenizer(pairs, padding $\\circleddash$ True, truncation $\\ c =$ True,return_tensors $u ^ { \\prime }$ pt')  \nscores $\\mathbf { \\tau } = \\mathbf { \\tau }$ model(\\*\\*inputs).logits.view(-1).float()  \nprint(scores)#输出相关性分数 4.9538  \n在BGE-Rerank模型中，相关性分数scores是一个未归一化的对数几率（logits）值，范围没有固定的上  \n限或下限（不像某",
        "id": 77,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 16,
        "length_tokens": 121,
        "text": "性分数scores是一个未归一化的对数几率（logits）值，范围没有固定的上  \n限或下限（不像某些模型限制在O-1）。不过BGE-Rerank的分数通常落在以下范围：  \n高相关性： $3 . 0 { \\sim } 1 0 . 0$   \n中等相关性： $0 . 0 { \\sim } 3 . 0 \\$ （204号  \n低相关性/不相关：负数（如-5.0以下）",
        "id": 78,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 79,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 5,
        "text": "Rerank模型使用",
        "id": 80,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "2.Cohere Rerank ",
        "id": 81,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 11,
        "text": "由Cohere公司提供的商业API服务。",
        "id": 82,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 25,
        "text": "基于专有的深度学习模型，支持多语言（如rerank-multilingual-v3.0）。",
        "id": 83,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 33,
        "text": "川练数据：优化了语义匹配，特别适用于混合检索（如结合BM25和向量检索）后的结果优化。",
        "id": 84,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 24,
        "text": "使用方式：通过APi调用，集成到LangChain、Llamalndex等框架中。",
        "id": 85,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 2,
        "text": "优势：",
        "id": 86,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 15,
        "text": "·简单易用，适合快速集成到现有系统。",
        "id": 87,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 17,
        "length_tokens": 28,
        "text": "，在英文和多语言任务中表现优异，如提升Hit Rate（命中率）和MRR（平均倒数排名）。",
        "id": 88,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 18,
        "length_tokens": 5,
        "text": "Rerank模型使用",
        "id": 89,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 18,
        "length_tokens": 86,
        "text": "import cohere   \n$\\mathtt { c o } =$ cohere.Client(api_key=\"YOUR_API_KEY\")   \nquery $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"What is the capital of France?\"   \ndocs $\\mathbf { \\tau } = \\mathbf { \\tau }$ [\"Paris is the capital of France.\", \"Berlin is the capital of Germany.\"]   \nresults $\\mathbf { \\tau",
        "id": 90,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 18,
        "length_tokens": 103,
        "text": "e capital of Germany.\"]   \nresults $\\mathbf { \\tau } = \\mathbf { \\tau }$ co.rerank(query $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ query, documents $\\ c =$ docs,top_ $\\scriptstyle { \\mathsf { n } } = 2$ ,model $\\mathbf { \\Phi } = \\mathbf { \\Phi } ^ { \\prime }$ rerank-multilingual-v3.0') print(r",
        "id": 91,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 18,
        "length_tokens": 50,
        "text": "} ^ { \\prime }$ rerank-multilingual-v3.0') print(results）#Cohere Rerank的API返回的是归一化后的相关性分数（如O-1），更易解释。 ",
        "id": 92,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 93,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 19,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （优化查询扩展）",
        "id": 94,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 19,
        "length_tokens": 6,
        "text": "3.优化查询扩展",
        "id": 95,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 19,
        "length_tokens": 44,
        "text": "相似语义改写：使用大模型将用户查询改写成多个语义相近的查询，提升召回多样性。例如，LangChain的MultiQueryRetriever支持多查询召回。",
        "id": 96,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 19,
        "length_tokens": 90,
        "text": "#加载向量数据库，添加allow_dangerous_deserialization=True参数以允许反序列化   \nvectorstore $\\mathbf { \\tau } = \\mathbf { \\tau }$ FAISS.load_local(\"./faiss-1\",embeddings,allow_dangerous_deserialization=True)   \n# 创建MultiQueryRetriever   \nretriever $\\mathbf { \\tau } = \\mathbf { \\tau }$ MultiQueryRetriever.from_Ilm( retr",
        "id": 97,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 19,
        "length_tokens": 98,
        "text": "athbf { \\tau }$ MultiQueryRetriever.from_Ilm( retriever $\\mathbf { \\tau } = \\mathbf { \\tau }$ vectorstore.as_retriever(), Im=llm   \n）   \nquery $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"客户经理的考核标准是什么？\"   \n#执行查询   \nresults $\\mathbf { \\tau } = \\mathbf { \\tau }$ retriever.get_relevant_documents(query) ",
        "id": 98,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 20,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （优化查询扩展）",
        "id": 99,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 20,
        "length_tokens": 14,
        "text": "TO DO: 编写chatpdf-faiss-MultiQueryRetriever.py",
        "id": 100,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 20,
        "length_tokens": 15,
        "text": "LangChain的MultiQueryRetriever支持多查询召回，再进行回答问题",
        "id": 101,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （双向改写）",
        "id": 102,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 38,
        "text": "双向改写：将查询改写成文档（Query2Doc）或为文档生成查询（Doc2Query），缓解短文本向量化效果差的问题",
        "id": 103,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 25,
        "text": "Query2Doc: 将查询改写成文档用户查询：“如何提高深度学习模型的训练效率？‘",
        "id": 104,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 105,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "Query2Doc改写：",
        "id": 106,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 14,
        "text": "原始查询较短，可能无法充分表达用户意图。",
        "id": 107,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "通过Query2Doc 生成一段扩展文档：",
        "id": 108,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 16,
        "text": "提高深度学习模型的训练效率可以从以下几个方面入手：",
        "id": 109,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 96,
        "text": "1.使用更高效的优化算法，如AdamW或LAMB。  \n2.采用混合精度训练（Mixed Precision Training），减少显存  \n占用并加速计算。  \n3.使用分布式训练技术，如数据并行或模型并行。  \n4.对数据进行预处理和增强，减少训练时的冗余计算。  \n5.调整学习率调度策略，避免训练过程中的震荡。",
        "id": 110,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "Doc2Query: 为文档生成关联查询 ",
        "id": 111,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 4,
        "text": "文档内容：",
        "id": 112,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "本文介绍了深度学习模型训练中的优化技巧，包括：",
        "id": 113,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 56,
        "text": "1.使用AdamW优化器替代传统的SGD。2.采用混合精度训练，减少显存占用。3.使用分布式训练技术加速大规模模型的训练..通过Doc2Query生成一组可能的查询：",
        "id": 114,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 21,
        "length_tokens": 66,
        "text": "1.如何选择深度学习模型的优化器？  \n2.混合精度训练有哪些优势？  \n3.分布式训练技术如何加速深度学习？  \n4.如何减少深度学习训练中的显存占用？  \n5.深度学习模型训练的最佳实践是什么？",
        "id": 115,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 22,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （索引扩展）",
        "id": 116,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 22,
        "length_tokens": 6,
        "text": "4.索引扩展",
        "id": 117,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 22,
        "length_tokens": 38,
        "text": "1）离散索引扩展：使用关键词抽取、实体识别等技术生成离散索引，与向量检索互补，提升召回准确性。",
        "id": 118,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 22,
        "length_tokens": 38,
        "text": "2）连续索引扩展：结合多种向量模型（如OpenAI的Ada、智源的BGE）进行多路召回，取长补短。",
        "id": 119,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 22,
        "length_tokens": 39,
        "text": "3）混合索引召回：将BM25等离散索引与向量索引结合，通过Ensemble Retriever实现混合召回，提升召回多样性",
        "id": 120,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （索引扩展）",
        "id": 121,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 36,
        "text": "葛散索引扩展：使用关键词抽取、实体识别等技术生成离散索引，与向量检索互补，提升召回准确性。",
        "id": 122,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 33,
        "text": "关键词抽取：从文档中提取出重要的关键词，作为离散索引的一部分，用于补充向量检索的不足。",
        "id": 123,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 3,
        "text": "文档内容",
        "id": 124,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "本文介绍了深度学习模型训练中的优化技巧，包括：",
        "id": 125,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 47,
        "text": "1.使用AdamW优化器替代传统的SGD。  \n2.采用混合精度训练，减少显存占用。  \n3.使用分布式训练技术加速大规模模型的训练。",
        "id": 126,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 47,
        "text": "通过关键词抽取技术（如TF-IDF、TextRank） 提取出以下关键词： [\"深度学习\",\"模型训练\",\"优化技巧\",\"AdamW\", \"混合精度训练\",\"分布式训练\"] ",
        "id": 128,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 23,
        "length_tokens": 29,
        "text": "当用户查询“如何优化深度学习模型训练？”时，离散索引中的关键词能够快速匹配到相关文档。",
        "id": 129,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 24,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （索引扩展）",
        "id": 130,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 24,
        "length_tokens": 40,
        "text": "实体识别：从文档中识别出命名实体（如人名、地点、组织等），作为离散索引的一部分，增强检索的精确性。",
        "id": 131,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 132,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 24,
        "length_tokens": 80,
        "text": "又档内谷  \n2023年诺贝尔物理学奖授予了三位科学家，以表彰他们 通过实体识别技术（如 SpaCy、BERT-based  \n在量子纠缠领域的研究成果。 NER）提取出以下实体：[\"2023年\",\"诺贝尔物理学奖\",\"量子纠缠\"]",
        "id": 133,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 24,
        "length_tokens": 37,
        "text": "当用户查询“2023年诺贝尔物理学奖的获奖者是谁？”时，离散索引中的实体能够快速匹配到相关文档。",
        "id": 134,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 13,
        "text": "RAG高效召回方法 （索引扩展）",
        "id": 135,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 35,
        "text": "混合索引召回：将离散索引（如关键词、实体）与向量索引结合，通过混合召回策略提升检索效果。",
        "id": 136,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "文档内容",
        "id": 137,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 12,
        "text": "本文介绍了人工智能在医疗领域的应用，包括：",
        "id": 138,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 1,
        "text": "二",
        "id": 139,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 45,
        "text": "1.使用深度学习技术进行医学影像分析。  \n2.利用自然语言处理技术提取电子病历中的关键信息。  \n3.开发智能诊断系统辅助医生决策。",
        "id": 140,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 64,
        "text": "当用户查询“人工智能在医疗领域的应用有哪些？”时：离散索引通过关键词和实体匹配到相关文档。向量索引通过语义相似度匹配到相关文档。综合两种召回结果，提升检索的准确性和覆盖率。",
        "id": 141,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 25,
        "length_tokens": 57,
        "text": "关键词抽取：[\"人工智能\",\"医疗领域\",\"深度学 习\",\"医学影像分析\",\"自然语言处理\",\"电子病历 \",\"智能诊断系统\"]   \n实体识别：[\"人工智能\",\"医疗领域\",\"深度学习\", \"自然语言处理\"] ",
        "id": 142,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 13,
        "text": "RAG高效召回方法 (Small-to-Big)",
        "id": 143,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "Small-to-Big索引策略：",
        "id": 144,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 89,
        "text": "一种高效的检索方法，特别适用于处理长文档或多文档场景。核心思想是通过小规模内容（如摘要、关键句或段落）建立索引，并链接到大规模内容主体中。这种策略的优势在于能够快速定位相关的小规模内容，并通过链接获取更详细的上下文信息，从而提高检索效率和答案的逻辑连贯性。",
        "id": 145,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 8,
        "text": "小规模内容（索引部分）：",
        "id": 146,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 15,
        "text": "摘要：从每篇论文中提取摘要作为索引内容。",
        "id": 147,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 26,
        "text": "摘要1：本文介绍了Transformer 模型在机器翻译任务中的应用，并提出了改进的注意力机制。",
        "id": 148,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 24,
        "text": "摘要2：本文探讨了Transformer模型在文本生成任务中的性能，并与RNN模型进行了对比。",
        "id": 149,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 15,
        "text": "关键句：从论文中提取与查询相关的关键句。",
        "id": 150,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 21,
        "text": "关键句1：Transformer 模型通过自注意力机制实现了高效的并行计算。",
        "id": 151,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 26,
        "length_tokens": 27,
        "text": "关键句2：BERT 是基于Transformer 的预训练模型，在多项NLP任务中取得了显著效果。",
        "id": 152,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 27,
        "length_tokens": 13,
        "text": "RAG高效召回方法 (Small-to-Big)",
        "id": 153,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "大规模内容（链接部分）：",
        "id": 154,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 27,
        "length_tokens": 18,
        "text": "每篇论文的完整内容作为大规模内容，通过链接与小规模内容关联。",
        "id": 155,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 27,
        "length_tokens": 38,
        "text": "论文1：链接到完整的PDF文档，包含详细的实验和结果。  \n论文2：链接到完整的PDF文档，包含模型架构和性能分析。",
        "id": 156,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "Small-to-Big机制: ",
        "id": 157,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 27,
        "length_tokens": 168,
        "text": "小规模内容检索：用户输入查询后，系统首先在小规模内容（如摘要、关键句或段落）中检索匹配的内容。小规模内容通常是通过摘要生成、关键句提取等技术从大规模内容中提取的，并建立索引。链接到大规模内容：当小规模内容匹配到用户的查询后，系统会通过预定义的链接（如文档ID、URL或指针）找到对应的大规模内容（如完整的文档、文章）。大规模内容包含更详细的上下文信息，为RAG提供丰富的背景知识。上下文补充：将大规模内容作为RAG 系统的上下文输入，结合用户查询和小规模内容，生成更准确和连贯的答案。",
        "id": 158,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "GraphRAG使用",
        "id": 159,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 6,
        "text": "GraphRAG过程包括：",
        "id": 160,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 46,
        "text": "构建社区层级(这种结构通常用来描述个体、群体及它们之间的关系，帮助理解信息如何在社区内部传播、知识如何共享以及权力和影响力如何分布)",
        "id": 161,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 32,
        "text": "·是一种结构化的、分层的检索增强生成（RAG）方法，而不是使用纯文本片段的语义搜索方法。",
        "id": 162,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 15,
        "text": "然后在执行基于RAG的任务时，会利用这些结构。",
        "id": 163,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 164,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "GraphRAG: ",
        "id": 165,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 18,
        "text": "原始文本中提取出知识图谱为这些社区层级生成摘要。",
        "id": 166,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 0,
        "text": "",
        "id": 167,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 29,
        "length_tokens": 14,
        "text": "GraphRAG工作流，DAG（有向无环）",
        "id": 168,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 9,
        "text": "GraphRAG与 基线RAG:",
        "id": 169,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 46,
        "text": "大多数 RAG使用矢量相似性作为搜索技术，称之为 基线 RAGGraphRAG使用知识图谱来在处理复杂信息时提供问题和回答性能的显著改进。",
        "id": 170,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 14,
        "text": "在某些情况下，基线RAG的性能非常差：",
        "id": 171,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 72,
        "text": "·基线RAG难以连接各个要点。这种情况发生在回答问题需要通过共享属性遍历不同的信息片段，以提供新的综合见解。  \n·基线RAG在被要求全面理解大量的数据（跨文档）或甚至单个大文档的的语义概念时表现不佳。",
        "id": 172,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 42,
        "text": "RAG 在帮助LLM推理“私有数据集”方面有很大的潜力。这些数据集是LLM从未见过的，例如企业的专有研究、商业文件。",
        "id": 173,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "GraphRAG方法：",
        "id": 174,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 30,
        "length_tokens": 71,
        "text": "·使用LLMs来创建基于输入语料库的知识图谱。  \n这个知识图谱、社区层级摘要、以及知识图谱机器学习输出会  \n在用户查询时用于增强提示。  \n·GraphRAG在回答上述两类问题时可以显著改进回答能力，远超基线RAG",
        "id": 175,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 176,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 17,
        "text": "Query：19世纪的艺术运动是如何影响20世纪现代艺术的发展的？",
        "id": 177,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 46,
        "text": "LLM：19世纪的艺术运动通过鼓励对色彩、形式和主题的实验影响了20世纪的现代艺术。这些运动为抽象主义、表现主义和其他创新艺术铺平了道路。",
        "id": 178,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 98,
        "text": "RAG检索：1.像克劳德·莫奈这样的印象派艺术家引入了新技术，彻底改变了对光和颜色的描绘。2.印象派的技法影响了后来的艺术运动。3.巴勃罗·毕加索开创了立体主义，从根本上改变了视觉表现的方式。4.立体主义出现在20世纪初，挑战了传统的艺术观点。",
        "id": 179,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 52,
        "text": "RAG回答：像19世纪的克劳德·莫奈这样的印象派艺术家引入了影响后来艺术运动的新技术。巴勃罗·毕加索在20世纪初开创了立体主义相对论。",
        "id": 180,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 85,
        "text": "GraphRAG检索： （莫奈）-[引进 $] $ （新技术）-（新技术）-[革新] $| $ （光和颜色的描绘）（印象派技术）-[影响] $| $ （后来的艺术运动）（毕加索）-[开创 $$ （立体主义）（立体主义）-[出现] $| $ （20世纪初）",
        "id": 181,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "GraphRAG回答：",
        "id": 182,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 31,
        "length_tokens": 64,
        "text": "莫奈引进的新技术彻底改变了对光和色彩的描绘。他的印象派技巧影响了后来的艺术运动，包括20世纪初出现的毕加索的立体主义。这种影响有助于塑造毕加索对碎片化视角的创新方法。",
        "id": 183,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 184,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 2,
        "text": "Query ",
        "id": 185,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 66,
        "text": "Query Query   \nHow did the artistic movements How did the artistic movements   \nof the 19th century impact the of the 19th century impact the   \ndevelopment of modern art in development of modern art in   \nthe 20th century? the 20th century? Retriever ↓ 1. Impressionist artists like Claude Monet int",
        "id": 186,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 60,
        "text": "r ↓ 1. Impressionist artists like Claude Monet introduced new techniques that revolutionized the depiction of light and color. 2. The Impressionist techniques influenced later art movements. LLMs LLMs 3. Pablo Picasso pioneered Cubism, which radically transformed the approach to visual representatio",
        "id": 187,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 65,
        "text": "y transformed the approach to visual representation. 4. Cubism emerged in the early 20th century and challenged Response traditional perspectives on art.   \nThe artistic movements of   \nthe 19th century influenced Retrieved Text   \nmodern art in the 20th   \neptrimeyteticon with nolor, Response   \nfo",
        "id": 188,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 61,
        "text": "20th   \neptrimeyteticon with nolor, Response   \nform, and subject matter. Impressionist artists like Claude Monet in the 19th   \nThese movements paved century introduced new techniques that influence   \nthe way for abstraction, later art movements. Pablo Picasso pioneered   \nexpressionism, and other",
        "id": 189,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 73,
        "text": "ablo Picasso pioneered   \nexpressionism, and other   \ninnovative. × Cubism relativity in the early 20th century. ■=   \nHow did the artistic movements   \nof the 19th century impact the   \ndevelopment of modern art in Retriever   \nthe 20th century? 1 - (Claude Monet) - [introduced] $$ (new techniques)",
        "id": 190,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 93,
        "text": " (Claude Monet) - [introduced] $$ (new techniques) - (new techniques) - [revolutionized] $$ (depiction of light and color) - (Impressionist techniques) - LLMs ←[influenced] $$ (later art movements) - (Pablo Picasso) - [pioneered] $$ (Cubism) - (Cubism) -[emerged in] $$ (early 20th century) Retrieved",
        "id": 191,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 21,
        "text": "m) -[emerged in] $$ (early 20th century) Retrieved Triplets Response ",
        "id": 192,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 0,
        "text": "",
        "id": 193,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 51,
        "text": "Monet introduced new techniques that revolutionized the depiction of light and color. His Impressionist techniques influenced later art movements, including Picasso's Cubism， which emerged in the early 20th century. This influence helped shape Picasso's innovative approach to fragmented perspectives",
        "id": 194,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 32,
        "length_tokens": 9,
        "text": "o's innovative approach to fragmented perspectives. ",
        "id": 195,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 33,
        "length_tokens": 8,
        "text": "GraphRAG的基本步骤如下：",
        "id": 196,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 33,
        "length_tokens": 2,
        "text": "索引",
        "id": 197,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 33,
        "length_tokens": 137,
        "text": "·将输入语料库分割为一系列的文本单元（TextUnits），这些单元作为处理以下步骤的可分析单元，并在我们的输出中提供细粒度的引用。  \n·使用LLM从文本单元中提取所有实体、关系和关键声明。  \n·使用Leiden技术对知识图谱进行层次聚类。每个圆圈都是一个实体（例如人、地点或组织），大小表示实体的度，颜色表示其社区层级。  \n·自下而上地生成每个社区层级及其组成部分的摘要。这有助于对数据集的整体理解。",
        "id": 198,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 199,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 34,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 200,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 34,
        "length_tokens": 2,
        "text": "查询：",
        "id": 201,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 34,
        "length_tokens": 67,
        "text": "·在查询时，使用这些结构为LLM上下文窗口提供材料来回答问题。主要查询模式有：全局搜索，通过社区层级摘要来推理有关语料库的整体问题。局部搜索，通过扩展到其邻居和相关概念来推理特定实体的情况。",
        "id": 202,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 34,
        "length_tokens": 49,
        "text": "GraphRAG方法是使用LLM构建基于图的文本索引，分两个阶段：首先从源文档中派生出实体知识图谱然后为所有密切相关的实体组预生成社区摘要。",
        "id": 203,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 35,
        "length_tokens": 3,
        "text": "Input Query ",
        "id": 204,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 35,
        "length_tokens": 25,
        "text": "bw did the artistic movements of the 19th century impactthe development of modern art in the 20th century? ",
        "id": 205,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 35,
        "length_tokens": 71,
        "text": "V G-Retrieval Retrieval Graph Format G-Generation Output Results Response ● 画   \nQaerygeg Reeeieir Merging Nodee Ageng Pre-Gnenemetnon Generator Pruning ：   \nDecomposition Natural Language Query Knowledge Triplets 國   \nEnhancements Enhancements O C Mid-Gncemetion Generator 1 Paths Graph Database & G",
        "id": 206,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 35,
        "length_tokens": 48,
        "text": "id-Gncemetion Generator 1 Paths Graph Database & G-Indexing O Syntax Tree U W Subgraphs Nod euence Post-Generation Generator Enhancements Open Knowledge Self-Constructed Graphs Graph Data Hybrid Graph Embedding ",
        "id": 207,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "GraphRAG索引数据流",
        "id": 208,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "知识模型: ",
        "id": 209,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 31,
        "text": "在GraphRAG的存储库中，包括实体类型如Document、TextUnit、Entity、 Relationship、 Covariate、 Community Report和Node。",
        "id": 210,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 20,
        "text": "默认配置工作流程：将文本文档转换为知识图谱模型，主要步骤包括：",
        "id": 211,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "第一阶段：组合TextUnits",
        "id": 212,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 30,
        "text": "将输入文档转换为TextUnits，用于知识图谱提取的文本块。  \n用户可以配置块大小和分组方式。",
        "id": 213,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 10,
        "text": "第二阶段： 知识图谱提取",
        "id": 214,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 16,
        "text": "分析每个TextUnit，用来提取实体、关系和主张。",
        "id": 215,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 23,
        "text": "实体和关系在entity_extract动词中提取，而主张在claim_extract动词中提取。",
        "id": 216,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "实体和关系提取：",
        "id": 217,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 14,
        "text": "使用LLM从原始文本中提取实体和关系。",
        "id": 218,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 20,
        "text": "合并具有相同名称和类型的实体，以及具有相同源和目标的关系。",
        "id": 219,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "实体和关系概述：",
        "id": 220,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 16,
        "text": "通过询问LLM获取每个实体和关系的简要概述",
        "id": 221,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "实体解析 （默认未启用）：",
        "id": 222,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 14,
        "text": "解析表示相同现实世界实体，但具有不同名称的实体。",
        "id": 223,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 8,
        "text": "主张提取和发射：",
        "id": 224,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 36,
        "length_tokens": 27,
        "text": "从源TextUnits中提取主张，这些主张是正面事实陈述，并作为Covariates发射。",
        "id": 225,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 7,
        "text": "GraphRAG索引数据流",
        "id": 226,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 9,
        "text": "第三阶段： 知识图谱增强",
        "id": 227,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "了解实体的社区结构，并增强知识图谱",
        "id": 228,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 24,
        "text": "使用层次Leiden算法进行社区检测，使用Node2Vec算法进行知识图谱嵌入。",
        "id": 229,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "第四阶段： 社区总结",
        "id": 230,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 32,
        "text": "生成社区报告，了解知识图谱在各个粒度级别上的高层次情况。  \n使用LLM生成每个社区的摘要。",
        "id": 231,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "第五阶段： 文档处理",
        "id": 232,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 10,
        "text": "为知识模型创建“文档”表。",
        "id": 233,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 22,
        "text": "如果工作流在CSV数据上运行，可以配置工作流，用于向文档输出添加其他字段。",
        "id": 234,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 8,
        "text": "第六阶段：网络可视化",
        "id": 235,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 19,
        "text": "执行UMAP降维，用于在2D空间中可视化知识图谱 ",
        "id": 236,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 15,
        "text": "UMAP嵌入作为“节点”表格发出。",
        "id": 237,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 37,
        "length_tokens": 58,
        "text": "GraphRAG工作流程是将文本数据转换为结构化的知识图谱，以便理解和分析数据。通过这个流程，用户可以提取关键信息，如实体、关系和主张，并在知识图谱中进行进一步的分析和可视化。",
        "id": 238,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 5,
        "text": "GraphRAG方法：",
        "id": 239,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 35,
        "text": "Creating virtualenv graphrag-x3i77_Wo-py3.11 in C:\\Users\\cheny\\AppData\\LocalV Installing dependencies from lock file ",
        "id": 240,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 16,
        "text": "Package operations: 205 installs， 1 update， 0 removals ",
        "id": 241,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 94,
        "text": "https://github.com/microsoft/graphrag   \nStep1，下载源代码   \ngit clone https://github.com/microsoft/graphrag.git   \ncd graphrag   \nStep2，下载依赖并初始化项目   \npip install poetry   \npoetry install   \nInstalling attrs (24.2.0)   \nInstalling rpds-py (0.20.0)   \nInstalling referencing (0.35.1)   \nInstalling six (1.1",
        "id": 242,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 95,
        "text": "alling referencing (0.35.1)   \nInstalling six (1.16.0)   \nInstalling jsonschema-specifications (2024.10.1)   \nInstalling platformdirs (4.3.6)   \nInstalling python-dateutil (2.9.0.post0)   \nInstalling pywin32 (307)   \nInstalling traitlets (5.14.3)   \nInstalling types-python-dateutil (2.9.0.20241003) ",
        "id": 243,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 102,
        "text": "Installing types-python-dateutil (2.9.0.20241003)   \nInstalling arrow (1.3.0)   \nInstalling fastjsonschema (2.20.0)   \nInstalling jsonschema (4.23.0)   \nInstalling jupyter-core (5.7.2)   \nInstalling pycparser (2.22)   \nInstalling pyzmq (26.2.0)   \nInstalling tornado (6.4.1)   \nInstalling cffi (1.17.",
        "id": 244,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 89,
        "text": "stalling tornado (6.4.1)   \nInstalling cffi (1.17.1)   \nInstalling fqdn (1.5.1)   \nInstalling idna (3.10)   \nInstalling isoduration (20.11.0)   \nInstalling jsonpointer (3.0.0)   \nInstalling jupyter-client (8.6.3)   \nInstalling markupsafe (3.0.1) ",
        "id": 245,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 246,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 247,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 1,
        "text": "初始化",
        "id": 248,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 11,
        "text": "poetry run poe index --init --root . ",
        "id": 249,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 24,
        "text": "Poe => python -m graphrag.index --init --root   \nInitializing project at GraphRAG Indexer ",
        "id": 250,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 25,
        "text": "正确运行后，此处会在graphrag目录下生成output、prompts、 .env、settings.yaml文件",
        "id": 251,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 17,
        "text": "Step3，将待检索的文档放到./cases/input目录下 ",
        "id": 252,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 6,
        "text": "three_kingdoms ",
        "id": 253,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 12,
        "text": "Step4，修改配置文件对.env文件配置api_key",
        "id": 254,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 17,
        "text": "修改 settings.yaml，设置 model为 gpt-4o-mini 减少成本",
        "id": 255,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 102,
        "text": "2 encoding_model:cl100k_base 3 skip_workflows:[] 4 11m: 5 api_key:\\${GRAPHRAG_API_KEY} 6 type:openai_chat # or azure_openai_chat 7 model:gpt-4o-mini 8 model_supports_json:true# recommended if this is 9 # max_tokens:4000 10 # request timeout:180.0 11 #api_base:https://<instance>.openai.azure.com 12 #",
        "id": 256,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 94,
        "text": "#api_base:https://<instance>.openai.azure.com 12 #api_version:2024-02-15-preview 13 #organization:<organization_id> 14 #deployment_name:<azure_model_deployment_name> 15 #tokens_per_minute:150_oo0 # set a leaky bucket 16 #requests_per_minute:10_ooe # set a leaky bucket 17 # max_retries:10 18 #max_ret",
        "id": 257,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 39,
        "length_tokens": 87,
        "text": "set a leaky bucket 17 # max_retries:10 18 #max_retry_wait:10.0 19 #sleep_on_rate_limit_recommendation:true # wheth 20 #concurrent_requests: 25 # the number of parallel 21 #temperature:0 # temperature for sampling 22 #top_p:1 #top-p sampling 23 # n: 1 # Number of completions to generate ",
        "id": 258,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 259,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 22,
        "text": "Step5, 创建GraphRAG索引 （耗时较长，取决于文本的大小）",
        "id": 260,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 10,
        "text": "python -m graphrag.index --init ",
        "id": 261,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 5,
        "text": "create_base_text_units ",
        "id": 262,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 168,
        "text": "id n_tokens   \n。 801b6814471d697381794bb6956fd0c6 1200   \n12 e3dedbef878b93e8bf31d89efe569d2d 1200   \n7e6a07a57a5bce1b1c7062b23dbb74b7 1200   \n3 cf129ba1766b69b7320e56a265103fb6 1200   \n4 1f13f6ff579a1698e4f38c4d6f50c9e0 1200   \n185 5840b8ca61c8d142db5b0ef438d61084 1200   \n186 64748e530daca0dfe4ccb7",
        "id": 263,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 107,
        "text": "b5b0ef438d61084 1200   \n186 64748e530daca0dfe4ccb72b53653af6 1200   \n187 8f4a5f417780c51f68f784c98208af22 1200   \n188 de9746b3e28d9102b781bb4d5537be1b 1200   \n189 14ce6192f23892049905b4fb03431ac3 603 ",
        "id": 264,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 9,
        "text": "[763 rows x 5 columns] ",
        "id": 265,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 74,
        "text": "create_base_extracted_entities entity_graph   \n0 <graphml xmlns=\"http://graphml.graphdrawing.or. create_summarized_entities entity_graph   \n0 <graphml xmlns=\"http://graphml.graphdrawing.or. 5 create_base_entity_graph level clustered_graph   \n0 0 <graphml xmlns=\"http://graphml.graphdrawing.or.   \n1 1",
        "id": 266,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 49,
        "text": "phml xmlns=\"http://graphml.graphdrawing.or.   \n1 1 <graphml xmlns=\"http://graphml.graphdrawing.or...   \n2 2 <graphml xmlns=\"http://qraphml.qraphdrawing.or... ",
        "id": 267,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 67,
        "text": "D:\\AppData\\Local\\Programs\\Python\\Python3l1\\Lib\\site-packages\\numpy\\core\\fromnumeric.py:59: Ful 'DataFrame.swapaxes' is deprecated and will be removed in a future version. Please use 'DataF return bound(\\*args,\\*\\*kwds) ",
        "id": 268,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 4,
        "text": "create_final_entities ",
        "id": 269,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 2,
        "text": "id ",
        "id": 270,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 97,
        "text": "e06f3f6665aa42ac821ff4d01d98ceba 257cdee6da194ec6bbec93c2f9941c38 ad019054a71a430a8a41e0e3d91b2c5c ca823d5f25194f68b39ece117097d195 ac81cfd5ca844d7f8cff43ff78f1af4c ",
        "id": 271,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 137,
        "text": "[0.010473140515387058，0.022974025458097458  \n-0.0069566573947668076，0.010649037547409534  \n-0.013226160779595375, -0.0005299110780470073  \n-0.03153751790523529 -0.021626872941851616  \n[-0.020771170035004616，0.010091422125697136  \n234 25fffea45b424b3c9d1e581c6fd681b8  \n235 c1c178fa53f3483f8664633a085",
        "id": 272,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 149,
        "text": "9d1e581c6fd681b8  \n235 c1c178fa53f3483f8664633a085ffa18  \n236 85182bda61ef45cb9a38e49318730879  \n237 e0a0f05a3a4f47d5b156e375903748b9  \n238 f2cb3f0d39364f77924ceefe904f3eb1  \n[-0.05620903894305229 -0.010554901324212551  \n[-0.013504572212696075， -0.03294695168733597  \n[-0.021599022671580315, -0.06492",
        "id": 273,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 64,
        "text": "294695168733597  \n[-0.021599022671580315, -0.06492338329553604  \n-0.019512852653861046, -0.013822405599057674  \n[-0.014387020841240883 -0.03131725639104843",
        "id": 274,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 275,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 276,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 0,
        "text": "",
        "id": 277,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 15,
        "text": "[21558 rows x 15 columns] create_final_communities ",
        "id": 278,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 40,
        "length_tokens": 165,
        "text": "id text_unit_ids 0 13 [298a3982b5caca8d7469b70dfa25dde9,31b86a6ef947 12 [0520611682d791b2b24230b97e678086,34e26f0d3d0f， 2 16 [0155f78da1a3c002f786eb383427f425,2b6e6bb6274d. 3 1 [3b9ff1bfd4325c5ef3b1a04afe05d324,e3dedbef878b. 4 9 [2231c35ad19351487db2e3d6bbbc8c97,30da0f99935d. ",
        "id": 279,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 280,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 281,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 10,
        "text": "[6776 rows × 10 columns] ",
        "id": 282,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 5,
        "text": "create_final_text_units ",
        "id": 283,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 163,
        "text": "id relationship_ids   \n0 801b6814471d697381794bb6956fd0c6 [9080aded4c9b4f44952bc3a02454eb92，19f6dcd5317...   \n1 e3dedbef878b93e8bf31d89efe569d2d [11792907413a46ad870b4ea6b64e8bd2，e50fbb6b703..   \n2 7e6a07a57a5bce1b1c7062b23dbb74b7 [fcec411d9ebf42709d61ff5f40645782，61cc1b4f6bd...   \n3 cf129ba1766b69b",
        "id": 284,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 169,
        "text": "61ff5f40645782，61cc1b4f6bd...   \n3 cf129ba1766b69b7320e56a265103fb6 [9a4db82ca62748c0896e732acf1c839a，b014e174e90..   \n4 1f13f6ff579a1698e4f38c4d6f50c9e0 [9e3bd9746ee445bbb4767a14c3fb559f，90893fd8103..   \n758 5840b8ca61c8d142db5b0ef438d61084 [3640377f34c3454a86546f88b50e746a，ca095dd8ae5..   \n759 647",
        "id": 285,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 178,
        "text": "f34c3454a86546f88b50e746a，ca095dd8ae5..   \n759 64748e530daca0dfe4ccb72b53653af6 [6f85ba6a3ec44575a62417e76673f0b2，2a28f93c5e6..   \n760 8f4a5f417780c51f68f784c98208af22 [9eea4da941e44a149f809a52a8fbf9f1，f6e3780d8f6..   \n761 de9746b3e28d9102b781bb4d5537be1b [b020dc312c9b49788c71fb7dca87a97c，939b0747da",
        "id": 286,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 81,
        "text": "7be1b [b020dc312c9b49788c71fb7dca87a97c，939b0747da3..   \n762 14ce6192f23892049905b4fb03431ac3 [a9af6efea0954150837cc6c7ff3be099，e5fc4e28e61. ",
        "id": 287,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 6,
        "text": "create_final_community_reports ",
        "id": 288,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 165,
        "text": "community id   \n0 671 f7a276e5-8706-4700-9950-688fc35106dc   \n1 672 11af1b98-4065-44e2-abec-71770b644424   \n2 628 02663567-b02e-4fd9-ada8-8cfc3c7954d4   \n3 629 9edcbda5-82ca-4eed-85fd-47fd879a4a26   \n4 630 53fdb3ea-1042-4125-b09c-d968b0dd2429   \n668 12 cacdeb2c-122a-45f4-b00b-8b26a365d99f   \n669 13 ",
        "id": 289,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 141,
        "text": "12 cacdeb2c-122a-45f4-b00b-8b26a365d99f   \n669 13 4b1b70ec-3d55-4b4c-af69-285d3a83bdd9   \n670 14 4a401a7b-c48d-49f0-89be-5321d444fb04   \n671 16 47cd804d-1c34-42b2-8694-8214873c92df   \n672 9 392f2225-07b2-4a3e-bbf2-9cbbf0b2640e ",
        "id": 290,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "[673 rows x 10 columns] ",
        "id": 291,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 43,
        "text": "datetime_column=pd.to_datetime(column,errors=\"ignore\" create_base_documents id title 203662678a5410290a61489e3a6b6e1f three_kingdoms.txt ",
        "id": 292,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 83,
        "text": "rows x 4 columns] create_final_documents id title D 203662678a5410290a61489e3a6b6e1f three_kingdoms.txt [1rowsx4columns] GraphRAG Indexer Loading Input（InputFileType.text)-1 filesloaded （0filtered) create_base_text_units create_base_extracted_entities create_summarized_entities create_base_entity_gr",
        "id": 293,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 49,
        "text": "s create_summarized_entities create_base_entity_graph create_final_entities create_final_nodes create_final_communities create_final_relationships create_final_text_units create_final_community_reports create_base_documents create_final_documents ALl workfLows completed successfully ",
        "id": 294,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 295,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 11,
        "text": "community_reporting entity_extraction summarize_descriptions text_embedding ",
        "id": 296,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 41,
        "length_tokens": 26,
        "text": "创建GraphRAG索引后，会在./cache文件夹下面生成4个文件夹，方便后续进行提问",
        "id": 297,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "GraphRAG ",
        "id": 298,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 6,
        "text": "Step6，进行查询 ",
        "id": 299,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 19,
        "text": "python -m graphrag.query --root ./cases --method global \"和曹操 ",
        "id": 300,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 7,
        "text": "相关的人物都有哪些？\"",
        "id": 301,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 109,
        "text": "creating llm client with {'api_key': 'REDACTED,len=51'，'type': \"openai_chat\"， 'model' :'gpt-4o-mini'， 'max_tokens': 4000,'temperature': 0.0, 'top_p': 1.0,'n': 1, 'reques t_timeout': 180.0,'api_base': None，'api_version': None，'organization': None，'proxy : None，_'cognitive_services_endpoint': None,'de",
        "id": 302,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 80,
        "text": "xy : None，_'cognitive_services_endpoint': None,'deployment_name': None，'model_supports json':True,'tokens_per_minute': 0,'requests_per_minute': 0,'max_retries': 10,'ma X_retry_waiti: 10.0, 'sleep_on_rate_limit_recommendation': True, 'concurrent_requests' ： 25} ",
        "id": 303,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 13,
        "text": "SUCCESS: Global Search Response:##曹操相关人物概述",
        "id": 304,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 77,
        "text": "曹操是三国时期魏国的主要领导者，他与许多重要人物之间的关系复杂且深远。这些人物不仅在军事和政治上与曹操有着密切的联系，还在当时的权力斗争中扮演了关键角色。以下是与曹操相关的些重要人物及其关系的概述。",
        "id": 305,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 7,
        "text": "###重要盟友与将领",
        "id": 306,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 67,
        "text": "1．\\*\\*曹丕\\*\\*：曹操的儿子，继承了父亲的权力，并在其父去世后成为魏国的第一位皇帝。父子关系在魏国的建立和发展中起到了关键作用[Data：Reports（42，119)]。",
        "id": 307,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 57,
        "text": "2．\\*\\*夏侯惇\\*\\*：曹操的重要将领，以其忠诚和军事才能著称，参与了多次重要战役，支持曹操的军事策略[Data：Reports（212，79，336，+more)]。",
        "id": 308,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 55,
        "text": "3．\\*\\*张辽\\*\\*：另一位著名的将领，他在曹操的指挥下参与了多次重要战役，展示了曹操在军事指挥中的影响力 [Data:Reports（178，153)]。",
        "id": 309,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 54,
        "text": "4．\\*\\*荀或\\*\\*：作为曹操的军事顾问，荀或以其战略眼光和智谋著称，对曹操的决策产生了深远影响[Data:Reports (195，42)]。",
        "id": 310,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 46,
        "text": "5．\\*\\*关羽\\*\\*：虽然关羽以忠诚著称，但他与曹操的关系复杂，涉及尊重和内心冲突[Data：Reports (299，180)]。",
        "id": 311,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 5,
        "text": "### 主要对手",
        "id": 312,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 97,
        "text": "1．\\*\\*刘备\\*\\*：刘备是曹操的主要对手之一，二者之间的竞争和冲突在三国历史中占据了重要地位刘备的崛起对曹操的统治构成了威胁，双方之间的多次冲突和战略对抗影响了整个三国的政治格局[Data:Rep0rts(181，123，299，+more)]",
        "id": 313,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 73,
        "text": "2．\\*\\*孙权\\*\\*：作为东吴的领导者，孙权与曹操之间存在激烈的竞争关系，尤其是在赤壁之战等关键战役中，两者的对抗塑造了当时的政 治格局[Data：Reports（125，288，202，+more)]。",
        "id": 314,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 72,
        "text": "3．\\*\\*袁绍\\*\\*：袁绍是曹操的重要对手之一，二者在权力斗争中形成了明显的对抗关系。袁绍的失败在很大程度上为曹操的崛起铺平了道 路[Data：Reports（62，205)]。",
        "id": 315,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 57,
        "text": "4．\\*\\*董卓\\*\\*：董卓是曹操的敌对人物，曹操曾领导军队反对董卓的暴政，显示了他在当时政治斗争中的重要性[Data：Reports（377，165)]。",
        "id": 316,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 4,
        "text": "###其他相关人物",
        "id": 317,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 42,
        "text": "\\*\\*吕布\\*\\*：吕布曾与曹操结盟，但最终成为敌人，导致了激烈的权力斗争[Data：Reports（370  \n160)1",
        "id": 318,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 44,
        "text": "-\\*\\*诸葛亮\\*\\*：蜀汉的主要战略家，与曹操的对抗在三国历史中占据了重要地位[Data:Reports(240，53)]。",
        "id": 319,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 41,
        "text": "·\\*\\*华佗\\*\\*：著名的医师，曾为曹操治疗，显示了医疗专业在政治环境中的重要性[Data：Reports(51)]。",
        "id": 320,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 3,
        "text": "##结论",
        "id": 321,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 42,
        "length_tokens": 75,
        "text": "曹操的历史地位与他周围的众多人物密切相关。这些人物的关系和互动不仅影响了曹操的军事和政治生涯，也在三国时期的权力格局中发挥了重要作用。通过对这些人物的分析，我们可以更好地理解曹操在历史上的复杂角色及其影响力。",
        "id": 322,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 20,
        "text": "python -m graphrag.query --root ./cases --method local \"和曹操相 ",
        "id": 323,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "关的人物都有哪些？\"",
        "id": 324,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 112,
        "text": "creating llm client with {'api_key': 'REDACTED,len=51'，'type': \"openai_chat\",'model' :'gpt-4o-mini'， 'max_tokens': 4000，'temperature': 0.0， 'top_p': 1.0,'n': 1, 'reques t_timeout': 180.0，'api_base': None，'api_version': None，'organization': None，'proxy : None，'cognitive_services_endpoint': None，'depl",
        "id": 325,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 81,
        "text": "y : None，'cognitive_services_endpoint': None，'deployment_name': None，'model_supports json': True,'tokens_per_minute': 0，'requests_per_minute': 0，'max_retries': 10,'ma X_retry_wait': 10.0，'sleep_on_rate_limit_recommendation': True，'concurrent_requests' ：25} ",
        "id": 326,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 104,
        "text": "creating embedding llm client with {'api_key': 'REDACTED,len=51'，'type': \"openai_embe dding\"，'model': 'text-embedding-3-small'，'max_tokens': 4000，'temperature': 0, 'top_ p': 1,'n': 1， 'request_timeout': 180.0,'api_base': None,'api_version': None，'organ ization': None,'proxy': None，'cognitive_service",
        "id": 327,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 87,
        "text": "an ization': None,'proxy': None，'cognitive_services_endpoint': None，'deployment_name': None,'model_supports_json': None,'tokens_per_minute': 0,'requests_per_minute': 0, 'max_retries': 10, 'max_retry_waiti: 10.0, 'sleep_on_rate_iimit_recommendation': True, 'concurrent_requests': 25} ",
        "id": 328,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 13,
        "text": "SUCCESS:Local Search Response:##曹操相关人物概述",
        "id": 329,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 58,
        "text": "曹操是中国历史上著名的政治家和军事统帅，他的周围有许多重要人物，这些人物在他的军事和政治生涯中扮演了关键角色。以下是与曹操相关的一些主要人物及其简要介绍。",
        "id": 330,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "### 1．曹洪 ",
        "id": 331,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 83,
        "text": "曹洪是曹操的主要将领之一，以其在对抗袁绍的军事行动中表现出的战略才能而闻名。他在曹操的军队中担任重要职务，参与了多次关键战役，展现了对曹操的忠诚和支持[Data：Entities（291）Relationships (723，2223，2226，+more)]。",
        "id": 332,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "###2.许褚 ",
        "id": 333,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 89,
        "text": "许褚是曹操的另一位重要将领，以其勇敢和忠诚著称。他不仅在战斗中表现出色，还担任曹操的护卫，确保其安全。许褚在多次战役中与曹操并肩作战，展现了深厚的信任关系[Data：Entities530)；Relationships (735，2953，258，+more)]。",
        "id": 334,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "###3.荀或 ",
        "id": 335,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 69,
        "text": "荀或是曹操的重要谋士，以其卓越的智谋和战略眼光而闻名。他在曹操的军事和政治决策中提供了重要的建议，帮助曹操在复杂的局势中做出明智的选择[Data:Entities（903)；Relationships(未提供)]。",
        "id": 336,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 7,
        "text": "### 4．刘备 ",
        "id": 337,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 84,
        "text": "刘备是曹操的主要对手之一，最初与曹操有过合作，但后来因权力斗争而成为敌人。刘备的崛起与曹操的扩张形成鲜明对比， 二者之间的冲突深刻影响了三国时期的历史进程[Data：Entities（未提供）；Relationships(497，258，+more)]。",
        "id": 338,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 6,
        "text": "### 5．吕布",
        "id": 339,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 81,
        "text": "吕布是另一位与曹操有过直接冲突的著名武将。他以勇猛著称，但因其反复无常的性格而受到各方的忌惮。吕布与曹操之间的敌对关系在历史上留下了深刻的印记[Data：Entities（未提供）；Relationships (1789，+more)]。",
        "id": 340,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 2,
        "text": "##总结",
        "id": 341,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 43,
        "length_tokens": 94,
        "text": "曹操的周围有许多重要人物，他们在不同的历史阶段对曹操的军事和政治生涯产生了深远的影响。这些人物不仅包括他的将领和谋士，还包括他的对手，他们的互动和冲突共同塑造了三国时期的历史格局。这些关系的复杂性和多样性使得曹操的故事更加引人入胜，成为后世研究的重要课题。",
        "id": 342,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 5,
        "text": "GraphRAG查询模式",
        "id": 343,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 10,
        "text": "GraphRAG提供了两种查询模式：",
        "id": 344,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 14,
        "text": "GlobalQuery（全局查询）LocalQuery（本地查询）",
        "id": 345,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 7,
        "text": "GlobalQuery（全局查询）：",
        "id": 346,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 86,
        "text": "用于回答全局性的问题，例如“《三国演义》的主题是什么”它通过利用社区摘要，对整个语料库进行整体问题的推理，利用LLM生成的知识图谱来组织和聚合信息。  \n在具体实现上，GlobalQuery方法使用从社区层次结构指定层级中收集的报告作为上下文数据，以类似Map-Reduce的方式生成响应。",
        "id": 347,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 32,
        "text": "在Map步骤中，社区报告被分割成文本块，每个文本块用于生成中间响应，其中每个点都有一个数值评级。",
        "id": 348,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 55,
        "text": "在Reduce步骤中，从中间响应中挑选出最重要的点并进行聚合，最终形成用于生成最终响应的上下文。这种方法的直观理解是：越宏观的问题需要越宏观的视角和信息来回答。",
        "id": 349,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 44,
        "length_tokens": 26,
        "text": "这种查询方式是资源密集型的，但通常能够很好地回答那些需要对数据集整体有全面理解的问题。",
        "id": 350,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 45,
        "length_tokens": 5,
        "text": "GraphRAG查询模式",
        "id": 351,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 352,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 5,
        "text": "GraphRAG查询模式",
        "id": 353,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 7,
        "text": "Local Query （本地查询）：",
        "id": 354,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 19,
        "text": "用于回答更加具体的问题，例如询问“洋甘菊有哪些治疗特性？”。",
        "id": 355,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 43,
        "text": "本地查询则基于更加微观的视角，结合知识图谱中的结构化数据与原始文档中的非结构化数据，来增强检索和生成过程中的上下文。",
        "id": 356,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 110,
        "text": "在具体实现上，系统将依据原始提问，从知识图谱中识别出一组与用户输入语义相关的实体。然后，利用这些实体作为查询条件，在知识图谱或相关数据库中进行检索，找到与这些实体直接相关的内容，包含：TextUnit、社区报告、实体、关系或协变量（如主张）。检索的结果经过过滤和重排序后，选择高质量的数据源，并将其整合进一个预定义大小的上下文窗口。",
        "id": 357,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 33,
        "text": "这种方法适用于需要理解输入文档中特定实体的问题，通过结合AI提取的知识图谱和原始文档的文本块生成答案。",
        "id": 358,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 46,
        "length_tokens": 34,
        "text": "GlobalQuery适合处理需要跨数据集汇总信息的宏观问题，而LocalQuery适合处理需要理解文档中特定实体的微观问题。",
        "id": 359,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 47,
        "length_tokens": 5,
        "text": "GraphRAG查询模式",
        "id": 360,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 47,
        "length_tokens": 0,
        "text": "",
        "id": 361,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 4,
        "text": "GraphRAG查询",
        "id": 362,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 26,
        "text": "python-m graphrag.query --root ./cases --method local \"关羽战胜 过哪些武将？\" ",
        "id": 363,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 16,
        "text": "SUCCESS:Local Search Response: ## 关羽的战斗成就 ",
        "id": 364,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 64,
        "text": "关羽，作为三国时期著名的将领，以其卓越的武艺和忠诚的精神而闻名。他在多场战斗中展现了非凡的战斗能力，战胜了多位敌将。以下是关羽战胜的一些重要武将：",
        "id": 365,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 5,
        "text": "###1.吕布",
        "id": 366,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 82,
        "text": "关羽在与吕布的战斗中表现出色，尽管吕布是当时公认的顶尖武将，但关羽凭借其高超的战斗技巧和勇气，成功击败了吕布。这场战斗不仅展示了关羽的武力，也突显了他在战场上的战略思维[Data: Relationships (363)]。",
        "id": 367,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "### 2.颜良",
        "id": 368,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 66,
        "text": "在著名的白马之战中，关羽面对敌将颜良，展现了他的英勇和战斗技巧。关羽在这场战斗中成功击败了颜良，进一步巩固了他在蜀汉的声望[Data：Entities（1022)]。",
        "id": 369,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "###3.阮籍 ",
        "id": 370,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 43,
        "text": "关羽在与阮籍的交战中也取得了胜利，显示了他在战斗中的灵活应变能力和战术运用[Data：Relationships (2036)]。",
        "id": 371,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "###4.黄承儿 ",
        "id": 372,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 40,
        "text": "在与黄承儿的战斗中，关羽同样表现出色，成功将其击败，进一步证明了他的战斗实力[Data：Relationships (2036)]。",
        "id": 373,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "###5.其他敌将",
        "id": 374,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 43,
        "text": "关羽在多次战斗中还战胜了其他敌将，如管亥等，展现了他在战场上的统治力和影响力[Data：Entities (32)]。",
        "id": 375,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 2,
        "text": "##总结",
        "id": 376,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 84,
        "text": "关羽的战斗成就不仅体现在他战胜的敌将上，更在于他在三国历史中的重要地位和影响力。他的忠诚、勇气和战斗技巧使他成为了三国时期最受尊敬的将领之一。关羽的传奇故事至今仍在中国文化中广为流传，成为了忠义的象征。",
        "id": 377,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 27,
        "text": "python -m graphrag.query --root ./cases --method global \"关羽战 胜过哪些武将？\" ",
        "id": 378,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 14,
        "text": "SUCCESS: Global Search Response: ##关羽的战胜记录 ",
        "id": 379,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 78,
        "text": "关羽，亦称为关云长，是三国时期著名的将领，以其卓越的武艺和战斗能力而闻名。他在与多位敌将的交战中取得了显著的胜利，这些胜利不仅巩固了他在蜀汉的地位，也为他赢得了传奇般的声誉",
        "id": 380,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 8,
        "text": "### 主要战胜的敌将",
        "id": 381,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 69,
        "text": "1．\\*\\*吕布\\*\\*：关羽在与吕布的战斗中取得了显著的胜利，吕布被视为当时最强的武将之一。这场胜利展示了关羽的武力和战略能力[Data：Reports（299，141，+more)]。",
        "id": 382,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 83,
        "text": "2.\\*\\*曹操的将领\\*\\*：关羽曾战胜曹操的多位将领，包括曹仁、颜良和文丑等。这些胜利不仅展示了他的个人实力，也在三国时期的权力斗争中产生了深远的影响[Data：Reports（132，154，277342，394，+m0re)]。",
        "id": 383,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 47,
        "text": "3．\\*\\*黄忠\\*\\*：关羽在与黄忠的交战中也表现出色，进一步巩固了他的声誉[Data:Reports（298，181，+more)]。",
        "id": 384,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 51,
        "text": "4．\\*\\*张辽\\*\\*：关羽在与张辽的战斗中取得了胜利，展示了他在战斗中的卓越才能[Data：Reports(323，255，+m0re)]。",
        "id": 385,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 70,
        "text": "5．\\*\\*周瑜\\*\\*：虽然与周瑜的对抗中未能完全战胜，但关羽在多次交锋中展现了强大的战斗力，给敌方造成了显著的压力[Data：Reports（79，212，249，400，+more)]。",
        "id": 386,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 6,
        "text": "### 战斗的影响 ",
        "id": 387,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 90,
        "text": "关羽的胜利不仅提升了他的个人声望，也为蜀汉的军事战略做出了重要贡献。他在战斗中展现出的勇气和智慧，使他成为三国历史上不可或缺的军事领导者。这些战斗的胜利为他赢得了“武圣”的称号，成为后世崇拜的对象[Data：Reports（323，255，+more)]。",
        "id": 388,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 48,
        "length_tokens": 53,
        "text": "总的来说，关羽在三国时期的战斗中战胜了多位著名武将，这些胜利不仅巩固了他在蜀汉的地位也为他在中国历史上留下了深远的影响",
        "id": 389,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 49,
        "length_tokens": 4,
        "text": "GraphRAG查询",
        "id": 390,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 49,
        "length_tokens": 0,
        "text": "",
        "id": 391,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 50,
        "length_tokens": 4,
        "text": "GraphRAG查询",
        "id": 392,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 50,
        "length_tokens": 0,
        "text": "",
        "id": 393,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 50,
        "length_tokens": 69,
        "text": ".ocal答案生成：针对具体问题，GraphRAG通过结合元素和元素摘要生成初步答案，这些答案来源于GraphRAG中的特定社区，Global答案生成：对于需要涵盖整个数据集的全局性问题，GraphRAG采用Map-Reduce机制，将所有社区的初步答案组合起来",
        "id": 394,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 51,
        "length_tokens": 9,
        "text": "搭建RAG--使用Qwen-Agent",
        "id": 395,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 396,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 7,
        "text": "Qwen-Agent开发框架：",
        "id": 397,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 28,
        "text": "·是一个Agent开发框架。充分利用QwenModel的指令遵循、工具使用、规划、记忆能力。",
        "id": 398,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 8,
        "text": "Qwen-Agent支持的模型形式：",
        "id": 399,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 27,
        "text": "·DashScope服务提供的Qwen模型服务·支持通过OpenAIAPI方式接入开源的Qwen模型服务。",
        "id": 400,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 40,
        "text": "Thinking: 现在能够原生处理数百万字输入的LLM成为了一种趋势，如何让一个上下文长度为8K的模型，能处理1M的上下文？",
        "id": 401,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 7,
        "text": "我们采取以下方法准备数据：",
        "id": 402,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 29,
        "text": "利用一个较弱的8k上下文聊天模型构建一个相对强大的智能体，能够处理1M的上下文。",
        "id": 403,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 20,
        "text": "随后，使用该智能体合成微调数据，并应用自动化过滤确保数据质量。",
        "id": 404,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 52,
        "length_tokens": 25,
        "text": "最终，使用合成数据对预训练模型进行微调，得到一个强大的1M上下文聊天模型，",
        "id": 405,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 53,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 406,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 53,
        "length_tokens": 27,
        "text": "Qwen-Agent构建的智能体包含三个复杂度级别，每一层都建立在前一层的基础上：",
        "id": 407,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 53,
        "length_tokens": 8,
        "text": "·级别一：检索 ",
        "id": 408,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 53,
        "length_tokens": 80,
        "text": "处理100万字上下文的一种朴素方法是采用RAG。RAG将上下文分割成较短的块，每块不超过512个字，然后仅保留最相关的块在8k字的上下文中。挑战在于如何精准定位最相关的块。经过多次尝试，我们提出了一种基于关键词的解决方案：",
        "id": 409,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 53,
        "length_tokens": 0,
        "text": "",
        "id": 410,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 411,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 54,
        "text": "步骤1: 指导聊天模型将用户查询中的指令与非指令信息分开例如，将用户查询\"回答时请用2000字详尽阐述，我的问题是，自行车是什么时候发明的？请用英文回复。“",
        "id": 412,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 413,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 37,
        "text": "转化为{\"信息\":[\"自行车是什么时候发明的\"],\"指令\":[\"回答时 用2000字\",\"尽量详尽\",\"用英文回复\"]}。 ",
        "id": 414,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 65,
        "text": "步骤2：要求聊天模型从查询的信息部分推导出多语言关键词。 例如，短语\"自行车是什么时候发明的\"会转换为{\"关键词_英文 \":[\"bicycles\",\"invented\",\"when\"],\"关键词_中文\":[\"自行车\",\"发 明\",\"时间\"]}。 ",
        "id": 415,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 29,
        "text": "步骤3：运用BM25这一传统的基于关键词的检索方法，找出与提取关键词最相关的块。",
        "id": 416,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 54,
        "length_tokens": 0,
        "text": "",
        "id": 417,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 418,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 8,
        "text": "级别二：分块阅读 ",
        "id": 419,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 40,
        "text": "直接RAG检索很快，但常在相关块与用户查询关键词重叠程度不足时失效 $\\Rightarrow$ 导致这些相关的块未被检索到。",
        "id": 420,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 32,
        "text": "尽管理论上向量检索可以缓解这一问题，但实际上效果有限。为了解决这个局限，我们采用了一种暴力策略：",
        "id": 421,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 51,
        "text": "步骤1：对于每个512字块，让聊天模型评估其与用户查询的相关性，如果认为不相关则输出\"无\",如果相关则输出相关句子。这些块会被并行处理以避免长时间等待。",
        "id": 422,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 50,
        "text": "步骤2：取那些非\"无\"的输出（即相关句子），用它们作为搜索查询词，通过BM25检索出最相关的块（总的检索结果长度控制在8k上下文限制内）。",
        "id": 423,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 30,
        "text": "步骤3：最后，基于检索到的上下文生成最终答案，这一步骤的实现方式与通常的RAG相同。",
        "id": 424,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 55,
        "length_tokens": 0,
        "text": "",
        "id": 425,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 56,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 426,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 56,
        "length_tokens": 8,
        "text": "级别三：逐步推理",
        "id": 427,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 56,
        "length_tokens": 189,
        "text": "在基于文档的问题回答中，一个典型的挑战是多跳推理。  \n例如，考虑回答问题：“与第五交响曲创作于同一世纪的交通工具是什么？”  \n模型首先需要确定子问题的答案，“第五交响曲是在哪个世纪创作的？”即19世纪。然后，它才可以意识到包含“自行车于19世纪发明”的信息块实际上与原始问题相关的。  \nFunctionCall智能体或ReAct智能体是经典的解决方案，它们内置了问题分解和逐步推理的能力。因此，我们将前述级别二的智能体（Lv2-智能体）封装为一个工具，由工具调用智能体（Lv3-智能体）调用。  \n工具调用智能体进行多跳推理的流程如下：  \n向Lv3-智能体提出一个问题  \nwhile (Lv",
        "id": 428,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 56,
        "length_tokens": 107,
        "text": " \n工具调用智能体进行多跳推理的流程如下：  \n向Lv3-智能体提出一个问题  \nwhile (Lv3-智能体无法根据其记忆回答问题){Lv3-智能体提出一个新的子问题待解答。Lv3-智能体向Lv2-智能体提问这个子问题。将Lv2-智能体的回应添加到Lv3-智能体的记忆中，  \n（  \nLv3-智能体提供原始问题的最终答案。",
        "id": 429,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 56,
        "length_tokens": 0,
        "text": "",
        "id": 430,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 57,
        "length_tokens": 10,
        "text": "搭建RAG (Qwen-Agent) ",
        "id": 431,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 57,
        "length_tokens": 103,
        "text": "例如，Lv3-智能体最初向Lv2-智能体提出子问题：“贝多芬的第五交响曲是在哪个世纪创作的？”收到“19世纪”的回复后，Lv3-智能体提出新的子问题：“19世纪期间发明了什么交通工具？”通过整合Lv2-智能体的所有反馈，Lv3-智能体便能够回答原始问题：“与第五交响曲创作于同一世纪的交通工具是什么？”",
        "id": 432,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 57,
        "length_tokens": 73,
        "text": "Ask the 1st sub-question \"In which century was the Fifth Symphony composed\" Long Docs of Ask the 2nd sub-question \"What vehicle was invented during the 19th century?\" 1M tokens User Query: \"What vehicle was invented in Level-3 Agent Level-2 Agent the same century as the Fifth (Multi-Hop Reasoning) (",
        "id": 433,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 57,
        "length_tokens": 74,
        "text": " same century as the Fifth (Multi-Hop Reasoning) (Read All Chunks Parallelly) Symphony was composed?\" Answer the 1st sub-question:“The 19th century.\" Final Response: \"Bicycles were invented Give the final response Answer the 2nd sub-question: \"Bicycles.\" in the same century.\" once allsub-questions a",
        "id": 434,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 57,
        "length_tokens": 16,
        "text": "es.\" in the same century.\" once allsub-questions are answered. ",
        "id": 435,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 5,
        "text": "RAG评测结果",
        "id": 436,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 47,
        "text": "NeedleBench是测试模型是否能够在充满大量不相关信息的上下文中识别出最相关句子的基准测试。回答问题可能需要同时发现几个“针”并执行多跳推理。",
        "id": 437,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 17,
        "text": "LV-Eval是一个要求一次性理解多块证据的基准测试",
        "id": 438,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 44,
        "text": "·32k-Model：一个Qwen-7B聊天模型，主要在8k上下文样本上进行微调，有一些32k上下文样本，可以扩展到256k上下文。",
        "id": 439,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 40,
        "text": "·4k-RAG：使用与32k模型相同的模型，但应用了Lv1代理的RAG策略。它只检索和处理最相关的4k上下文。",
        "id": 440,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 0,
        "text": "",
        "id": 441,
        "type": "table",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 58,
        "length_tokens": 35,
        "text": "·4k-Agent：使用与32k模型相同的模型，遵循上述更高级的代理策略。Agent策略每次只使用4k上下文。",
        "id": 442,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 59,
        "length_tokens": 5,
        "text": "RAG评测结果",
        "id": 443,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 59,
        "length_tokens": 0,
        "text": "",
        "id": 444,
        "type": "image",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 60,
        "length_tokens": 4,
        "text": "Qwen-Agent使用",
        "id": 445,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 60,
        "length_tokens": 84,
        "text": "import pprint   \nimport urllib.parse   \nimport json5   \nfrom qwen_agent.agents import Assistant   \nfrom qwen_agent.tools.base import BaseTool, register_tool   \n#添加一个名为\\`my_image_gen\\`的自定义工具。   \n$@$ register_tool('my_image_gen')   \nclass MylmageGen(BaseTool): #description\\`用于告诉智能体该工具的功能。 description ",
        "id": 446,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 60,
        "length_tokens": 115,
        "text": "seTool): #description\\`用于告诉智能体该工具的功能。 description $= ^ { \\prime } \\mathsf { A l }$ 绘画（图像生成）服务，输入文本描述，返回基于文   \n本信息绘制的图像URL。' #parameters\\`告诉智能体该工具有哪些输入参数。 parameters ${ \\bf \\Xi } = [ \\{$ 'name': 'prompt', 'type': 'string', 'description':'期望的图像内容的详细描述', 'required': True ",
        "id": 447,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 60,
        "length_tokens": 96,
        "text": "def call(self, params: str, \\*\\*kwargs) $\\ J \\to$ str: # params'是由LLM 智能体生成的参数。 prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ json5.loads(params)['prompt'] prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ urllib.parse.quote(prompt) return json5.dumps( {'image_url': f'https://image.pollinations.ai/prompt/",
        "id": 448,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 60,
        "length_tokens": 73,
        "text": "mage_url': f'https://image.pollinations.ai/prompt/{prompt}'}, ensure_ascii=False) #步骤2：配置LLM。 Ilm_cfg = { 'model': 'qwen-max', 'model_server':'dashscope', 'api_key': 'sk-XX', generate_cfg': { 'top_p': 0.8 } 1 ",
        "id": 449,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 4,
        "text": "Qwen-Agent使用",
        "id": 450,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 152,
        "text": "#步骤3：创建一个智能体。这里我们以\\`Assistant'智能体为例，它能够使用工具并读取文件。  \nsystem_instruction $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"你是一个乐于助人的AI助手。  \n在收到用户的请求后，你应该：  \n-首先绘制一幅图像，得到图像的url,  \n-然后运行代码\\`request.get\\`以下载该图像的url,  \n-最后从给定的文档中选择一个图像操作进行图像处理。  \n用‘plt.show()\\`展示图像。  \n你总是用中文回复用户。\"  \ntools $\\mathbf { \\tau } = \\ma",
        "id": 451,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 106,
        "text": "图像。  \n你总是用中文回复用户。\"  \ntools $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['my_image_gen','code_interpreter'] #\\`code_interpreter' 是框架自带的工具，用于执行代码。  \n#files $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['./examples/resource/doc.pdf'] #给智能体一个 PDF 文件阅读。files $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['./examples/resource",
        "id": 452,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 92,
        "text": "{ \\tau } = \\mathbf { \\tau }$ ['./examples/resource/平安钟爱一生养老年金保险（分红型）.pdf']#给智能体一个 PDF 文件阅读。  \nbot $\\mathbf { \\tau } = \\mathbf { \\tau }$ Assistant(llm=lm_cfg,  \nsystem_message $\\mathbf { \\tau } =$ system_instruction,  \nfunction_list $\\ c =$ tools,  \nfiles=files)",
        "id": 453,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 37,
        "text": "#步骤4：作为聊天机器人运行智能体。$\\mathsf { m e s s a g e s = [ l }$ #这里储存聊天历史while True:",
        "id": 454,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 110,
        "text": "# 例如，输入请求\"绘制一只狗并将其旋转90 度\"  \nquery $\\mathbf { \\tau } = \\mathbf { \\tau }$ input('用户请求：\")  \n#将用户请求添加到聊天历史，  \nmessages.append({'role': 'user','content': query})  \nresponse $\\mathbf { \\varepsilon } = [ ] \\mathbf { \\varepsilon }$   \nfor response in bot.run(messages $\\ c =$ messages):#流式输出。print('机器人回应:\")p",
        "id": 455,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 31,
        "text": "(messages $\\ c =$ messages):#流式输出。print('机器人回应:\")pprint.pprint(response, indent $: = 2$ ）",
        "id": 456,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 61,
        "length_tokens": 14,
        "text": "#将机器人的回应添加到聊天历史。messages.extend(response)",
        "id": 457,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 62,
        "length_tokens": 10,
        "text": "用户请求：养老年金保险的特点是什么",
        "id": 458,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 62,
        "length_tokens": 213,
        "text": "[{‘content'：‘平安钟爱一生养老年金保险（分红型）具有以下特点：\\n'\"\\n''1．\\*\\*领至一百岁\\*\\*：退休后的生活保障，养老保险金可以领取到100岁的保单周年日。\\n''2．\\*\\*三年一增长\\*\\*：养老保险金每三年递增一次，意味着养老金水平会逐步提高。\\n''3．\\*\\*活到八十八，额外贺金庆高寿\\*\\*：如果被保险人生存至88岁的保单周年日，将额外获得一笔10万元的  \n祝寿金。\\n''4.'‘\\*\\*领取有保证\\*\\*：在开始领取养老保险金后的20年内，即使被保险人不幸身故，也会确保至少可领取20年的  \n养老保险金总额。\\n''5．\\*\\*保单可分红\\*\\*：该保",
        "id": 459,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 62,
        "length_tokens": 136,
        "text": "幸身故，也会确保至少可领取20年的  \n养老保险金总额。\\n''5．\\*\\*保单可分红\\*\\*：该保险产品是分红型的，意味着投保人有机会分享保险公司的经营成果，但需注意红  \n利分配是不确定的。\\n'\"\\n''这些特点旨在为投保人提供长期、稳定的养老收入来源，并且通过分红机制可能增加额外收益。不过，重要  \n的是要理解红利并非保证，实际分红情况将根据保险公司当年的实际经营状况而定。‘，'role':'assistant'}1",
        "id": 460,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 4,
        "text": "Qwen-Agent使用",
        "id": 461,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 12,
        "text": "用户请求：帮我写一个二分查找法",
        "id": 462,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 93,
        "text": "[{‘content'：‘二分查找法是一种在有序数组中查找特定元素的搜索算法。它的基本思想是将目标值与数组中间的元素进行比较，如果目标值等于中间元素，则查找结束；如果目标值小于或大于中间元素，则在数组的前半部分或后半部分继续查找，直到找到目标值或者搜索范围为空。\\n'",
        "id": 463,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 66,
        "text": "\"\\n''下面我将为您编写一个 Python‘'函数来实现二分查找法。这个函数会接收两个参数：一个是已经排序好的列表（数组），另一个是要查找的目标值。函数返回目标值在列表中的索引位置，如果未找到则返回‘",
        "id": 464,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 109,
        "text": "'-1。''role':'assistant'},{'content':''function_call': { 'arguments': py\\n''def binary_search(arr，target):\\n'left，right $= \\ 8$ ，len(arr) - 1\\n'■ $\\backslash \\boldsymbol { \\mathsf { n } } ^ { \\prime }$ （1 while left $< =$ right:\\n'■ mid $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ (left $^ +$ right) $1 ",
        "id": 465,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 124,
        "text": "gma } = \\mathbf { \\sigma }$ (left $^ +$ right) $1 1 2 \\backslash { \\mathfrak { n } }$ 1if arr[mid] $\\scriptstyle = =$ target:\\n'1 return mid # 找到目标值，返回索引\\n'elif arr[mid] $\\angle \\cdot \\angle$ target:\\n'left $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ mid $^ \\textrm { \\scriptsize + 1 }$ # 在右半部分查找\\n'els",
        "id": 466,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 140,
        "text": "id $^ \\textrm { \\scriptsize + 1 }$ # 在右半部分查找\\n'else:\\n'right $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ mid -1 # 在左半部分查找\\n'1 \\n'1 return $^ { - 1 }$ # 未找到目标值\\n''\\n''# 示例使用\\n''sorted_list $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [1，3，5,7,9,11，13，15，'17，19]\\n''target_value $= 7 \\backslash { \\mathsf { ",
        "id": 467,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 71,
        "text": "7，19]\\n''target_value $= 7 \\backslash { \\mathsf { n } }$ ='index $\\mathbf { \\tau } = \\mathbf { \\tau }$ binary_search(sorted_list,'target_value)\\n''print(f\"目标值{target_value} 的索引是：‘'{index}\")\\n'",
        "id": 468,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 43,
        "text": "{'content':'二分查找法已经实现，并且我们用一个示例来测试了这个函数。对于排序好的列表‘[1,3,5,7,9,11,13,'",
        "id": 469,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 27,
        "text": "'15,17,19]\\`，目标值7'在列表中的索引是\\`3\\`。\\n'",
        "id": 470,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 3,
        "text": "\\n' ",
        "id": 471,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 25,
        "text": "如果您有特定的列表或目标值想要测试，请告诉我，我可以为您运行该算法。‘",
        "id": 472,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 63,
        "length_tokens": 8,
        "text": "'role': 'assistant'}] ",
        "id": 473,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 64,
        "length_tokens": 4,
        "text": "Qwen-Agent使用",
        "id": 474,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 64,
        "length_tokens": 20,
        "text": "用户请求：[1,2,3,4,5,6]中查找5 ",
        "id": 475,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 64,
        "length_tokens": 103,
        "text": "{'content':''function_call': { 'arguments':' \\` py\\n''# 使用之前定义的binary_search函数来查找5\\n''sorted_list $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ [1,2,3,4,5,6]\\n''target_value $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 5\\n''index $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ binary_search(sorted_list，''target_",
        "id": 476,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 64,
        "length_tokens": 131,
        "text": "bf { \\sigma }$ binary_search(sorted_list，''target_value)\\n''print(f\"目标值{target_value} 的索引是：''{index}\")\\n''name': 'code_interpreter'},'role':'assistant'},  \n{'content'：'stdout:\\n\\n\\`\\`\\n目标值 5 的索引是：4\\n\\n\\`'name':'code_interpreter''role': 'function'},  \n{‘content'：‘在排序列表‘[1，2，3，4，5，6]’中，目标值‘5’的索引是‘4\\`。",
        "id": 477,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 64,
        "length_tokens": 99,
        "text": "\n{‘content'：‘在排序列表‘[1，2，3，4，5，6]’中，目标值‘5’的索引是‘4\\`。这意味着‘5’位于列表中的第‘'5 个位置（因为索引是从 开始计数的）。\\n'\"\\n''如果您还有其他数值需要查找或有其他问题，请告诉我！‘,'role': 'assistant'}]",
        "id": 478,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 65,
        "length_tokens": 10,
        "text": "Qwen-Agent使用 (多文件提问)",
        "id": 479,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 65,
        "length_tokens": 108,
        "text": "import os  \n# 获取文件夹下所有文件  \nfile_dir $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join('./','平安团体险')  \n$\\mathsf { f i l e s } = \\left[ \\mathsf { l } \\right]$   \nif os.path.exists(file_dir):#遍历目录下的所有文件for file in os.listdir(file_dir):file_path $\\mathbf { \\tau } = \\mathbf { \\tau }$ os.path.join(file_d",
        "id": 480,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 65,
        "length_tokens": 65,
        "text": "f { \\tau } = \\mathbf { \\tau }$ os.path.join(file_dir, file)if os.path.isfile(file_path):#确保是文件而不是目录files.append(file_path)  \nprint('files $\\mathbf { \\partial } = \\mathbf { \\vec { \\tau } }$ , files)",
        "id": 481,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 65,
        "length_tokens": 213,
        "text": "files=['./平安团体险\\\\1-平安商业综合责任保险（亚马逊）.txt',/平安团体险\\\\2-雇主责任险.txt',./平安团体险\\3-平安企业团体综合意外险.txt','./平安团体险\\\\4-雇主安心保.txt','./平安团体险\\\\5-施工保.txt','./平安团体险\\\\6-财产一切险.txt','./平安团体险\\/\\7-平安装修保.txt','./平安团体险/平安产险交通出行意外伤害保险（互联网版）产品说明.pdf,'./平安团体险\\平安产险交通工具意外伤害保险（互联网版）条款.pdf，'./平安团体险\\平安企业团体综合意外险(互联网版)适用条款.pdf，'./平安团体险/平安商",
        "id": 482,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 65,
        "length_tokens": 91,
        "text": "df，'./平安团体险\\平安企业团体综合意外险(互联网版)适用条款.pdf，'./平安团体险/平安商业综合责任保险（亚马逊）.pdf,'/平安团体险\\平安境内紧急医疗救援服务条款.pdf,'./平安团体险\\/平安附加疾病身故保险条款.pdf]",
        "id": 483,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 10,
        "text": "Qwen-Agent使用 (多文件提问)",
        "id": 484,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 8,
        "text": "介绍下雇主责任险 ",
        "id": 485,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 43,
        "text": "雇主责任险是一种为企业提供保障的保险产品，主要针对企业在雇佣员工过程中可能面临的法律责任风险。以下是雇主责任险的详细介绍：",
        "id": 486,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 11,
        "text": "###1.\\*\\*保障范围\\*\\* ",
        "id": 487,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 10,
        "text": "雇主责任险的保障范围包括：",
        "id": 488,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 31,
        "text": "-\\*\\*死亡赔偿金\\*\\*：员工因工作原因导致死亡，保险公司将赔付相应的死亡赔偿金。",
        "id": 489,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 36,
        "text": "-\\*\\*伤残赔偿金\\*\\*：员工因工作原因导致伤残，保险公司将根据伤残等级赔付相应的赔偿金。",
        "id": 490,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 30,
        "text": "-\\*\\*医疗费用\\*\\*：员工因工作原因受伤或患病，保险公司将赔付相应的医疗费用。",
        "id": 491,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 35,
        "text": "-\\*\\*误工费用\\*\\*：员工因工作原因受伤或患病导致无法工作，保险公司将赔付相应的误工费用。",
        "id": 492,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 45,
        "text": "-\\*\\*法律诉讼费用\\*\\*：员工因工作原因受伤或患病，企业因此面临法律诉讼，保险公司将赔付相应的法律诉讼费用。",
        "id": 493,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 12,
        "text": "###2.\\*\\*产品亮点\\*\\* ",
        "id": 494,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 48,
        "text": "-\\*\\*雇主责任转嫁给保险公司\\*\\*：企业通过购买雇主责任险，将员工在工作中可能面临的风险责任转嫁给保险公司，降低企业的用工风险。",
        "id": 495,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 2,
        "text": "0 ",
        "id": 496,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 66,
        "length_tokens": 14,
        "text": "当内容超过LLM上下文长度的时候，需要采用召回策略",
        "id": 497,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 67,
        "length_tokens": 10,
        "text": "Thinking: 多种RAG技术如何使用？",
        "id": 498,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 67,
        "length_tokens": 44,
        "text": "·单文件互动：DeepSeek直接提问·多文件互动：Qwen-Agent，DeepSeek $^ +$ FaissQwen-Agent内置多种召回方式，提升召回的可能性",
        "id": 499,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 68,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 500,
        "type": "text",
        "file_name": "7-RAG高级技术与实践"
      },
      {
        "page": 1,
        "length_tokens": 11,
        "text": "Text2SQL: 自助式数据报表开发",
        "id": 0,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 2,
        "length_tokens": 11,
        "text": "Text2SQL: 自助式数据报表开发",
        "id": 2,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 2,
        "length_tokens": 44,
        "text": "Text to SQL技术LLM模型选择Function Call  \n·搭建SQL Copilot  \nLangChain中的sQLAgent  \n自己编写 (LLM + Prompt)CASE:保险场景SQLCopilot实战",
        "id": 3,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 3,
        "length_tokens": 4,
        "text": "CASE： 数据查询",
        "id": 4,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 3,
        "length_tokens": 30,
        "text": "小张是运营负责人员，要给老板汇报投放数据，现在渠道，统计维度很多，如何响应老板的灵活查询？",
        "id": 5,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 3,
        "length_tokens": 36,
        "text": "比如：社交媒体在哪天的投放费用是最高的？ 2025年2月份一共花了多少钱，带来了多少转化量？．…",
        "id": 6,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 3,
        "length_tokens": 0,
        "text": "",
        "id": 7,
        "type": "table",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "channel_performance.csv ",
        "id": 8,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "Text to SQL技术",
        "id": 9,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 4,
        "length_tokens": 36,
        "text": "Text-to-SQL(文本转 SQL)将自然语言问题自动转换为结构化的SQL查询语句，可以让用户更直观的与数据库进行交互。",
        "id": 10,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 4,
        "length_tokens": 14,
        "text": "Text-to-SQL的技术演变经历了3个阶段：",
        "id": 11,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 4,
        "length_tokens": 28,
        "text": "·早期阶段：依赖于人工编写的规则模板来匹配自然语言和SQL语句之间的对应关系。",
        "id": 12,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 4,
        "length_tokens": 28,
        "text": "，机器学习阶段:采用序列到序列模型等机器学习方法来学习自然语言和SQL之间的映射关系。",
        "id": 13,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 4,
        "length_tokens": 37,
        "text": "·LLM阶段：借助LLM强大的语言理解和代码生成能力，利用提示工程、微调等方法将Text-to-SQL性能提升到新的高度。",
        "id": 14,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "Text to SQL技术",
        "id": 15,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 5,
        "length_tokens": 25,
        "text": "我们目前已处于LLM阶段，基于LLM的Text-to-SQL系统会包含以下几个步骤：",
        "id": 16,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 5,
        "length_tokens": 81,
        "text": "·自然语言理解：分析用户输入的自然语言问题，理解其意图和语义。  \n·模式链接：将问题中的实体与数据库模式中的表和列进行链接。  \n·SQL生成:根据理解的语义和模式链接结果，生成相应的SQL查询语句。  \n·SQL执行：在数据库上执行SQL查询，将结果返回给用户。",
        "id": 17,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 6,
        "length_tokens": 9,
        "text": "LLM模型选择 （闭源模型）",
        "id": 18,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 6,
        "length_tokens": 176,
        "text": "·GPT-o1/o3:o1模型开启了新的Scaling Law，更专注于推理阶段，在编程和Textto SQL中能力优于gpt-4o，同时mini模型速度更快，价格更低。  \n·Claude3.7-sonnet:Anthropic公司于2025年2月发布，号称迄今为止最智能的模型，首款混合推理模型Claude 3.7-sonnet实现了两种思考方式的结合，既能提供接近即时的响应，也能展示分步骤的详细思考过程·Claude 3.5-sonnet：2024年推出的模型，支持20万tokens上下文，性能超过GPT-4o，在Cursor中使用非常顺滑。·Gemini 2.0：性能强悍，支持100万t",
        "id": 19,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 6,
        "length_tokens": 56,
        "text": "性能超过GPT-4o，在Cursor中使用非常顺滑。·Gemini 2.0：性能强悍，支持100万token上下文。  \n·Qwen-Turbo：支持100万token上下文，速度快，价格非常便宜。",
        "id": 20,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 7,
        "length_tokens": 9,
        "text": "LLM模型选择 （开源模型）",
        "id": 21,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 7,
        "length_tokens": 170,
        "text": "·DeepSeek-V3:在代码生成任务中表现出色，能够快速生成高质量的代码片段。它通过从DeepSeek-R1中蒸馏推理能力，显著提升了代码生成的准确性和效率·DeepSeek-R1:R1在代码生成和复杂逻辑推理方面表现卓越，特别是在处理复杂的编程任务和数学问题时，准确率更高。例如，在Codeforces Elo评分中，R1达到 2029分，超越 $9 6 . 3 \\%$ 的人类参赛者·Qwen：Qwen系列从0.5B，1.5B，3B，7B，14B，32B，72B等多种尺寸，性能优于Llama3.1。",
        "id": 22,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 8,
        "length_tokens": 9,
        "text": "LLM模型选择 （代码大模型）",
        "id": 23,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 8,
        "length_tokens": 118,
        "text": "·Qwen-Coder：能力强，接近闭源一线大模型，其中Qwen2.5-Coder-32B能力与GPT-4o持平  \n·CodeGeeX：智谱开源的代码大模型，基于GLM底座，性能卓越，在vscode等编辑器中可以找到对应的插件。·SQLCoder：专为 SQL生成而设计的开源模型，但是维护更新慢。  \n·DeepSeek-Coder：在多种编程语言中与开源代码模型中实现了先进的性能",
        "id": 24,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 25,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 8,
        "length_tokens": 0,
        "text": "",
        "id": 26,
        "type": "image",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "搭建SQL Copilot ",
        "id": 27,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 4,
        "text": "SQL Copilot ",
        "id": 28,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 10,
        "text": "方法1:SQLDatabase采用LangChain框架",
        "id": 29,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 0,
        "text": "",
        "id": 30,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 22,
        "text": "提供了sql chain，prompt，retriever， tools,agent，让用户通过自然语言，执行SQL查询",
        "id": 31,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 41,
        "text": "优点：使用方便，自动通过数据库连接，获取数据库的metadata不足：执行不灵活，需要多次判断哪个表适合复杂查询很难胜任，对于复杂查询通过率低",
        "id": 32,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "方法2： 自己编写",
        "id": 33,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 9,
        "text": "本质是：LLM+RAG",
        "id": 34,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 60,
        "text": "选择适合的LLM，比如：ChatModel:DeepSeek-V3，CodeModel: Qwen2.5-Coder, CodeGeeX2-6BRAG，可以分成：向量数据库检索 $^ +$ 固定文件（比如本地数据表说明等)",
        "id": 35,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 10,
        "length_tokens": 28,
        "text": "优点：重心在于RAG的提供上，准确性高，配置灵活不足：需要设置的条件规则多",
        "id": 36,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 11,
        "length_tokens": 9,
        "text": "方法1：SQLDatabaseTookit使用",
        "id": 37,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 11,
        "length_tokens": 69,
        "text": "from langchain.agents import create_sql_agent   \nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit   \nfrom langchain.sql_database import SQLDatabase   \nfrom langchain.llms.openai import OpenAl   \nfrom langchain.agents import AgentExecutor   \n#连接到数据库   \ndb_user $\\mathbf { \\tau } = \\mathb",
        "id": 38,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 11,
        "length_tokens": 106,
        "text": "r   \n#连接到数据库   \ndb_user $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"root\"   \ndb_password $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"your_password\"   \ndb_host $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"localhost:3306\"   \ndb_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"wucai\"   \ndb $\\mathbf { \\tau } = \\mathbf { \\ta",
        "id": 39,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 11,
        "length_tokens": 49,
        "text": "}$ \"wucai\"   \ndb $\\mathbf { \\tau } = \\mathbf { \\tau }$ SQLDatabase.from_uri(f\"mysql+pymysql://{db_user}:{db_password)@{db_host}/{db_name}\") ",
        "id": 40,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 11,
        "length_tokens": 10,
        "text": "通过sQLDatabase可以访问到数据库的Schema",
        "id": 41,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 42,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "方法1：SQLDatabaseToolkit使用",
        "id": 43,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 98,
        "text": "from langchain.chat_models import ChatOpenAl  \nIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatOpenAl(model_name $= ^ { \\mathsf { \\Gamma } }$ \"deepseek-chat\")  \n#需要设置Ilm  \ntoolkit $\\mathbf { \\tau } = \\mathbf { \\tau }$ SQLDatabaseToolkit(db=db, Ilm=llm)  \nagent_executor $\\mathbf { \\tau } = \\mathbf { \\ta",
        "id": 44,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 65,
        "text": " \nagent_executor $\\mathbf { \\tau } = \\mathbf { \\tau }$ create_sql_agent($| | m = | | m ,$ toolkit $\\ c =$ toolkit,verbose $\\ c =$ True  \n1  \n#Task:描述数据表  \nagent_executor.run(\"描述与订单相关的表及其关系\")",
        "id": 45,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 9,
        "text": "> Entering new AgentExecutor chain.. ",
        "id": 46,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 7,
        "text": "Action: sql_db_list_tables ",
        "id": 47,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 4,
        "text": "Action Input: ",
        "id": 48,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 87,
        "text": "Observation: acceptedrides，address，address_copyl， covid_sh， douyin， douyin2, e_names，employees，gdp，height_grades，hero_score，hero_temp，heros，items，or er2，player_copyl，player_score，product_comment，product_comment2，product_con s，sessions，staff，team，team_score，test，transactions，trip，user，users，we Though",
        "id": 49,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 33,
        "text": "_score，test，transactions，trip，user，users，we Thought:There are many tables in the database， so I should query the schema of rs. ",
        "id": 50,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "Action: sql_db_schema ",
        "id": 51,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 6,
        "text": "Action Input: \"orders ",
        "id": 52,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 3,
        "text": "Observation: ",
        "id": 53,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 50,
        "text": "CREATE TABLE orders（ order_id INTEGER, customer_id INTEGER, order_date DATE, item_id VARCHAR(30), quantity INTEGER   \n)DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB ",
        "id": 54,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 3,
        "text": "\\* ",
        "id": 55,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 12,
        "length_tokens": 65,
        "text": "3 rows from orders table:   \norder_id customer_id order_date item_id quantity   \n1 1 2020-06-01 1 10   \n2 1 2020-06-08 2 10   \n3 2 2020-06-02 1 5   \n\\*/ ",
        "id": 56,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 7,
        "text": "方法1：SQLDatabaseToolkit使用",
        "id": 57,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 83,
        "text": "三wucai   \n∨曲表 目acceptedrides 曲address address_copy1 曲covid_sh 用douyin 曲douyin2 用drivers 曲employee 目employee_names 曲employees 曲gdp 曲height_grades hero_score 曲hero_temp 曲heros 曲items 曲orders 曲person 曲 player 曲player_copy1 player_score 曲 player2 曲product_comment 曲product_comment2 product_comment3 曲resu",
        "id": 58,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 30,
        "text": "t_comment 曲product_comment2 product_comment3 曲result 曲rides 曲sales 曲sessions 曲staff 曲team 曲team_score 曲test transactions 曲trip ",
        "id": 59,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 27,
        "text": "Thought:The tables related to orders are\"orders\".I can query the \"orders\" table to get information abou t orders. ",
        "id": 60,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 6,
        "text": "Action: sql_db_query ",
        "id": 61,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 25,
        "text": "Action Input: \"SELECT \\* FROM orders LIMIT ${ 1 0 } ^ { \\prime \\prime }$ ",
        "id": 62,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 163,
        "text": "Observation:[(1，1，datetime.date(2020，6，1)，'1'，10)，(2，1，datetime.date(2020，6,8)，'2'，10)，(3,2，datetime.date(2020，6，2)，'1'，5)，(4，3，datetime.date(2020，6，3)，'3’，5)，(5，4，datetime.date(2020，6，4)，'4’，1)，(6，4，datetime.date(2020，6，5)，'5'，5)，(7，5，datetime.date(2020，6,5)，'1’，10)，(8,5，datetime.date(2020，6，14)，'4",
        "id": 63,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 78,
        "text": "2020，6,5)，'1’，10)，(8,5，datetime.date(2020，6，14)，'4'，5)，(9，5，datetime.date(2020，6，21)，'3'，5)]Thought:The relevant tables related to orders are \"orders\".From the \"orders\" table，I obtained the following rows:",
        "id": 64,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 0,
        "text": "",
        "id": 65,
        "type": "table",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 37,
        "text": "Final Answer:The table related to orders is \"orders\".The columns in the\"orders\" table are order_id,cu stomer_id,order_date，item_id,and quantity. ",
        "id": 66,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "> Finished chain. ",
        "id": 67,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 13,
        "length_tokens": 35,
        "text": "'The table related to orders is \"orders\".The columns in the \"orders\" table are order_id,customer_id,order_ date， item_id,and quantity.' ",
        "id": 68,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "方法1：SQLDatabaseToolkit使用",
        "id": 69,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 20,
        "text": "#这个任务，实际上数据库中没有HeroDetails表agent_executor.run(\"描述HeroDetails表\")",
        "id": 70,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 8,
        "text": ">Entering new AgentExecutorchain. ",
        "id": 71,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 82,
        "text": "Action:sql_db_list_tables   \nActionInput:\"\"   \nObservation: acceptedrides，address,address_copyl，covid_sh，douyin，douyin2,drivers, employee, yee_names, employees，gdp,height_grades， hero_score，hero_temp， heros,items，orders, person，p player2，player_copyl，player_score， product_comment， product_comment2，p",
        "id": 72,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 78,
        "text": "，player_score， product_comment， product_comment2，product_comment3,result s，sales，sessions，staff，team, team_score，test，transactions，trip，user，users，weather Thought:The tablesinthe database are:acceptedrides,address，address_copyl，covid_sh，douyin, 2，drivers，employee，employee_names，employees，gdp，height_",
        "id": 73,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 77,
        "text": "vers，employee，employee_names，employees，gdp，height_grades，hero_score，hero_temp,hero s，orders，person，player，player2，player_copyl，player_score，product_comment，product_comment uct_comment3，result，rides，sales，sessions，staff，team，team_score，test，transactions，trip, users,weather. ",
        "id": 74,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 12,
        "text": "Ishould query the schema of the HeroDetails table. ",
        "id": 75,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 6,
        "text": "Action:sql_db_schema ",
        "id": 76,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 7,
        "text": "ActionInput:\"HeroDetails\" ",
        "id": 77,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 17,
        "text": "Observation:Error:table_names{'HeroDetails'}not found in database Thought: ",
        "id": 78,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 38,
        "text": "OutputParserException Traceback (most recent call last)   \nCellIn[6]，line 2 1 # Task: 2 agent_executor.run(\"描述HeroDetails表\") ",
        "id": 79,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 91,
        "text": "File \\~\\AppData\\Roaming\\Python\\Python311\\site-packages\\langchain\\chains\\base.py:451, in Chain.run(self, callbacks， tags， metadata， \\*args， \\*\\*kwargs) 449 if len(args) $! = ~ 1$ ： 450 raise ValueError(\" run’ supports only one positional argument.\") ->451 return self(args[0]， callbacks=callbacks, tag",
        "id": 80,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 86,
        "text": ">451 return self(args[0]， callbacks=callbacks, tags=tags, metadata=metadata)[ 452 output_key 453 ] 455 if kwargs and not args: 456 return self(kwargs, callbacks=callbacks, tag $\\mathrm { ~ s = ~ }$ tags，metadata=metadata)[ 457 _output_key 458 ] 54 obserVation=MISSING_ACTION_AFTER_THOUGHT_ERROR_MESSA",
        "id": 81,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 114,
        "text": "serVation=MISSING_ACTION_AFTER_THOUGHT_ERROR_MESSAGE, 55 llm_output=text, 56 send_to_llm=True, 57 ） 58 elif not re.search( 59 r\"[\\s]\\*Action\\s\\*\\d\\*\\s\\*Input\\s\\*\\d\\*\\s\\*:[\\s]\\*(.\\*)\"， text，re.DOTALL 60）: 61 raise OutputParserException( 62 f\"Could not parse LLM output:‘{text}'' 63 obserVation=MISSING",
        "id": 82,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 43,
        "text": " parse LLM output:‘{text}'' 63 obserVation=MISSING_ACTION_INPUT_AFTER_ACTION_ERROR_MESSAGE, 64 llm_output=text, 65 send_to_llm=True, 66 ） ",
        "id": 83,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 0,
        "text": "",
        "id": 84,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 13,
        "text": "如果没有找到对应的表，会解析报错OutputParseException",
        "id": 85,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 14,
        "length_tokens": 36,
        "text": "OutputParserException: Could not parse LLM output:The table \"HeroDetails\" does not exist in the databas e.I don't know the schema of the HeroDetails table. ",
        "id": 86,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 7,
        "text": "方法1：SQLDatabaseToolkit使用",
        "id": 87,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 19,
        "text": "#这个任务，数据库中的表实际为herosagent_executor.run(\"描述Hero表\")",
        "id": 88,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 8,
        "text": ">Entering new AgentExecutor chain.. ",
        "id": 89,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 87,
        "text": "Action:sql_db_list_tables   \nAction Input:\"\"   \nObservation:acceptedrides，address，address_copyl，covid_sh，douyin，douyin2，drivers，employee，employ   \ne_names，employees，gdp，height_grades，hero_score，hero_temp，heros，items，orders，person，player，pla   \ner2，player_copyl，player_score，product_comment，product_co",
        "id": 90,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 77,
        "text": "ayer_copyl，player_score，product_comment，product_comment2，product_comment3，result，rides，sal   \ns，sessions，staff，team， team_score，test，transactions，trip，user，users，weather   \nThought:The relevant table is \"heros\". I should query the schema of this table.   \nAction: sql_db_schema   \nAction Input: \"hero",
        "id": 91,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 76,
        "text": "e.   \nAction: sql_db_schema   \nAction Input: \"heros\"   \nObservation:   \nCREATE TABLE heros（ id INTEGER NOT NULL AUTO_INCREMENT, name VARCHAR(255） CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, hp_max FLOAT, hp_growth FLOAT, hp_start FLOAT, mp_max FLOAT, mp_growth FLOAT, mp_start FLOAT, attack_",
        "id": 92,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 50,
        "text": "ax FLOAT, mp_growth FLOAT, mp_start FLOAT, attack_max FLOAT, attack_growth FLOAT, attack_start FLOAT, defense_max FLOAT, defense_growth FLOAT, defense_start FLOAT, hp_5s_max FLOAT, hp_5s_growth FLOAT, ",
        "id": 93,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 3,
        "text": "/\\* ",
        "id": 94,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 78,
        "text": "3 rows from heros table:   \nid name hp_max hp_growth hp_start mp_max mp_growth mp_start attack_max   \nattack_growth attack_start defense_max defense_growth defense_start hp_5s_max hp_5s_growth   \nhp_5s_start mp_5s_max mp_5s_growth mp_5s_start attack_speed_max attack_range role   \n_main role_assist b",
        "id": 95,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 177,
        "text": "speed_max attack_range role   \n_main role_assist birthdate   \n10000 夏侯惇 7350.0 288.8 3307.0 1746.0 94.0 430.0 321.0 11.57 159.0 397.0 21.14 101.   \n0 98.0 3.357 51.0 37.0 1. 571 15.0 0.0 近战 坦克 战士 2016-07-19   \n10001 钟无艳 7000.0 275.0 3150.0 1760.0 95.0 430.0 318.0 11.0 164.0 409.0 22.07 100.   \n0 92.",
        "id": 96,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 178,
        "text": "0 430.0 318.0 11.0 164.0 409.0 22.07 100.   \n0 92.0 3.143 48.0 37.0 1. 571 15.0 0.0 近战 战士 坦克 None   \n10002 张飞 8341.0 329.4 3450.0 100.0 0.0 100.0 301.0 10.57 153.0 504.0 27.07 125.   \n0 115.0 4.143 57.0 5.0 0.0 5.0 0.0 近战 坦克 辅助 None   \n\\*/   \nThought:The Hero table has the following columns: id   \nn",
        "id": 97,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 84,
        "text": ":The Hero table has the following columns: id   \nname   \nhp_max   \n- hp_growth   \n- hp_start   \n- mp_max   \n- mp_growth   \n- mp_start   \n-attack_max   \nattack_growth   \nattack_start defense max defense_growth defense_start hp_5s_max hp_5s_growth hp_5s_start mp_5s_max   \nmp_5s_growth   \n-mp_5s_start ",
        "id": 98,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 41,
        "text": "s_start mp_5s_max   \nmp_5s_growth   \n-mp_5s_start   \n- attack_speed_max   \n- attack_range   \nrole_main   \n- role_assist   \nbirthdate ",
        "id": 99,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 12,
        "text": "Final Answer: The Hero table has the above columns. ",
        "id": 100,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 15,
        "length_tokens": 19,
        "text": "$\\mathrm { > }$ Finished chain. 'The Hero table has the above columns.' ",
        "id": 101,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 7,
        "text": "方法1：SQLDatabaseToolkit使用",
        "id": 102,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 41,
        "text": "#执行指定的任务：编写 $S { \\mathsf { O } } L = >$ 查询结果 agent_executor.run(\"找出英雄攻击力最高的前5个英雄\") ",
        "id": 103,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 87,
        "text": ">Entering new AgentExecutor chain..   \nAction:sql_db_list_tables   \nAction Input:\"\"   \nObservation:acceptedrides，address，addresscopyl，covid_sh，douyin，douyin2，drivers，employee，employe   \ne_names，employees，gdp，height_grades，hero_score，hero_temp，heros，items，orders，person，player，play   \ner2，player_copyl",
        "id": 104,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 73,
        "text": "tems，orders，person，player，play   \ner2，player_copyl， player_score，product_comment， product_comment2，product_comment3，result，rides，sale   \ns， sessions， staff， team， team_score，test，transactions， trip，user，users，weather   \nThought:The tables that might contain information about heroes and their attack ",
        "id": 105,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 67,
        "text": "contain information about heroes and their attack power are \"heros\" and “he   \nro_score\". I should query the schema of these tables to see what columns they have.   \nAction:sql_db_schema   \nAction Input:\"heros，hero_score\"   \nObservation:   \nCREATE TABLE herO_score（ id INTEGER NOT NULL AUTO_INCREMENT",
        "id": 106,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 76,
        "text": "BLE herO_score（ id INTEGER NOT NULL AUTO_INCREMENT, SCOre INTEGER NOT NULL DEFAULT'0' name VARCHAR(2O） CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci, PRIMARY KEY (id)   \n)DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB ",
        "id": 107,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "/\\* ",
        "id": 108,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 32,
        "text": "3 rows from hero_score table: id score name 1 80 张飞 2 95 关羽 3 92 刘备 \\*/ ",
        "id": 109,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 54,
        "text": "找到了数据库中两个相关的表：heros,hero_score分别进行查询，发现heros这个数据表可以找到问题的答案，最终结果为：阿轲,孙尚香，百里守约,虞姬,黄忠",
        "id": 110,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 8,
        "text": "CREATETABLEheros（ ",
        "id": 111,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 73,
        "text": "idINTEGER NOT NULL AUTO_INCREMENT, nameVARCHAR(255)CHARACTERSETutf8COLLATEutf8_general_ciNOTNULL, hp_maxFLOAT, hp_growth.FLOAT, hp_start FLOAT, mp_max FLOAT, mp_growth FLOAT, mp_start FLOAT, attack maxFLOAT, attack_growthFLOAT, attack_startFLOAT, defense_maxFLOAT, defense_growth FLOAT, defense_start",
        "id": 112,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 93,
        "text": "ense_maxFLOAT, defense_growth FLOAT, defense_startFLOAT, hp_5s_maxFLOAT, hp_5s_growthFLOAT, hp_5s_start FLOAT, mp_5smax FLOAT, mp_5s_growth FLOAT, mp_5s_start FLOAT, attack_speed_maxFLOAT, attack_rangeVARCHAR(255)CHARACTERSETutf8COLLATEutf8_general_ci, role_mainVARCHAR(255)CHARACTERSETutf8COLLATEutf",
        "id": 113,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 65,
        "text": "i, role_mainVARCHAR(255)CHARACTERSETutf8COLLATEutf8_general_ci, role_assistVARCHAR(255)CHARACTERSETutf8COLLATEutf8_general_ci, birthdate DATE, PRIMARYKEY（id) DEFAULT CHARSET=utf8ROW_FORMAT=DYNAMIC ENGINE=InnoDB ",
        "id": 114,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 115,
        "type": "table",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 16,
        "length_tokens": 28,
        "text": "$>$ Finished chain. ’阿轲，孙尚香，百里守约，虞姬，黄忠’ ",
        "id": 116,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 17,
        "length_tokens": 8,
        "text": "Summary (SQL+LLM) ",
        "id": 117,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 17,
        "length_tokens": 20,
        "text": "$\\mathsf { S O L } + \\mathsf { L L M }$ 使用:",
        "id": 118,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 17,
        "length_tokens": 109,
        "text": "·通过sQLDatabase可以访问到数据库的Schemaagent_executor作为sQLAgent，可以执行用户的各种SQL需求（通过自然语言 $\\Rightarrow$ 编写 $S O L \\Rightarrow$ 查询结果返回)  \n如果数据库中没有找到对应的表，会报  \nOutputParseException错误  \n如果有多张表，会分别执行，然后判断哪个数据表可以  \n得到结果  \nfrom langchain.chat_models import ChatOpenAl  \nIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatOpenAl",
        "id": 119,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 17,
        "length_tokens": 105,
        "text": "m $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatOpenAl(model_name $\\ c =$ \"gpt-3.5-turbo\")  \n#需要设置Ilm  \ntoolkit $\\mathbf { \\tau } = \\mathbf { \\tau }$ SQLDatabaseToolkit(db $\\ c =$ db, Ilm=llm)  \nagent_executor $\\mathbf { \\tau } = \\mathbf { \\tau }$ create_sql_agent(IIm=Ilm,toolkit $\\ c =$ toolkit,verbose",
        "id": 120,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 17,
        "length_tokens": 42,
        "text": "_sql_agent(IIm=Ilm,toolkit $\\ c =$ toolkit,verbose $\\ c =$ True  \n#Task:描述数据表  \nagent_executor.run(\"描述与订单相关的表及其关系\")",
        "id": 121,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 122,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 18,
        "length_tokens": 13,
        "text": "Thinking: 直接使用SQL+LLM会有什么问题？",
        "id": 123,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 18,
        "length_tokens": 24,
        "text": "1） 多个相似的数据表 $\\cdot$ 导致LangChain会尝试多次生成sQL",
        "id": 124,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 18,
        "length_tokens": 39,
        "text": "2) 用户Prompt太宽泛 $\\Rightarrow$ 生成的结果 不是用户想要的给Agent配备专有知识库 在prompt中动态完善和query相关的context",
        "id": 125,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 126,
        "type": "image",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 18,
        "length_tokens": 0,
        "text": "",
        "id": 127,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 10,
        "text": "SQL+ 向量数据库 + LLM ",
        "id": 128,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 21,
        "text": "$\\mathsf { S O L + }$ 向量数据库 $^ +$ LLM:",
        "id": 129,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 45,
        "text": "·向量数据库可以提供领域知识，当用户检索某个问题的时候 $\\Rightarrow$ 从向量数据库中找到相关的内容，放到prompt中 $\\Rightarrow$ 提升SQL查询的相关性",
        "id": 130,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 11,
        "text": "RAG技术 (Retrieval Augmented Generation) ",
        "id": 131,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 98,
        "text": "·在prompt中增加few-shot examples   \n·专门定制检索工具，从向量数据库中检索到与用户 query相近的知识 agent.run(\"How many employees do we have?\")   \n$>$ Entering new AgentExecutor chain...   \nInvoking: \\`sql_get_similar_examples\\` with \\`How many employees do we have?\\`   \n[Document(page_content $= ^ { \\mathsf { I } }$ How many emplo",
        "id": 132,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 81,
        "text": "age_content $= ^ { \\mathsf { I } }$ How many employees are there',   \nmetadata $\\ c =$ {'sql_query': 'SELECT COUNT(\\*) FROM \"employee\"}) Document(page_content $\\mathbf { \\lambda } = \\mathbf { \\lambda } ^ { \\prime }$ Which employee has sold the most?', metadata={'sql_query': \"SELECT e.FirstName $| | ",
        "id": 133,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 91,
        "text": ", metadata={'sql_query': \"SELECT e.FirstName $| | { } ^ { \\prime \\prime } | |$ e.LastName AS EmployeeName, SUM(i.Total) AS TotalSales\\n FROM Employee e\\n JOIN Customer c ON e.Employeeld $\\mathbf { \\tau } = \\mathbf { \\tau }$ c.SupportRepld\\n JOIN Invoice i ON c.Customerld $\\mathbf { \\tau } = \\mathbf ",
        "id": 134,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 79,
        "text": "ice i ON c.Customerld $\\mathbf { \\tau } = \\mathbf { \\tau }$ i.Customerld\\n GROUP BY e.Employeeld\\n ORDER BY TotalSales DESC\\n LIMIT 1;\"})] Invoking:\\`sql_db_query' with\\`SELECT COUNT(\\*) FROM employee) responded: {content}   \n[(8,)]We have 8 employees. ",
        "id": 135,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 136,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 10,
        "text": "SQL+ 向量数据库 + LLM ",
        "id": 137,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 99,
        "text": "Thinking：除了对用户query，补充领域知识外，针对专门名词（用户可以拼写错误的），也可以进行纠正 sql_agent(\"What is 'Francis Trembling's email address?\") Invoking: \\`name_search' with \\`Francis Trembling [Document(page_content $= ^ { \\prime }$ Francois Tremblay', metadata={), Document(page_content $= ^ { \\prime }$ Edward Francis',metadata={)",
        "id": 138,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 83,
        "text": "ntent $= ^ { \\prime }$ Edward Francis',metadata={), Document(page_content $= ^ { \\prime }$ Frank Ralston', metadata={) Document(page_content $= ^ { \\prime }$ Frank Harris', metadata={), Document(page_content $= \" N$ . Frances Street', metadata={})] Invoking:\\`sql_db_query_checker' with \\`SELECT Emai",
        "id": 139,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 70,
        "text": "nvoking:\\`sql_db_query_checker' with \\`SELECT Email FROM Customer WHERE FirstName $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Francois' AND LastName $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Tremblay' LIMIT 1 responded: {content} ",
        "id": 140,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 0,
        "text": "",
        "id": 141,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 94,
        "text": "SELECT Email FROM Customer WHERE FirstName $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Francois' AND LastName $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Tremblay' LIMIT 1 Invoking: \\`sql_db_query' with \\`SELECT Email FROM Customer WHERE FirstName $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Francois' AND LastName ",
        "id": 142,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 43,
        "text": "tau } = \\mathbf { \\tau }$ 'Francois' AND LastName $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Tremblay' LIMIT1\\` ",
        "id": 143,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 32,
        "text": "[('ftremblay@gmail.com',)]The email address of 'Francois Tremblay' is 'ftremblay@gmail.com'. ",
        "id": 144,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 20,
        "length_tokens": 49,
        "text": "$>$ Finished chain.   \n{'input': \"What is 'Francis Trembling' email address?\", 'output': \"The email address of 'Francois Tremblay' is   \nftremblay@gmail.com'.\"} ",
        "id": 145,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "Summary (SQL+向量数据库+LLM) ",
        "id": 146,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 21,
        "length_tokens": 22,
        "text": "$\\mathsf { S O L + }$ 向量数据库 $^ +$ LLM使用:",
        "id": 147,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 21,
        "length_tokens": 64,
        "text": "·如果想让LLM使用tool（可以按照某个顺序，执行完这个再执行下一个），比较有效的方式是写在prompt中，而不是在tooldescription中进行定义  \n·向量数据库的作用：  \n给Prompt提供更多的context，用于LLM进行决策",
        "id": 148,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 21,
        "length_tokens": 14,
        "text": "Thinking: 使用向量数据库的时候 有哪些可以优化的地方？",
        "id": 149,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 21,
        "length_tokens": 42,
        "text": "·使用similarity threshold，来决定retrieved examples的质量（有些example和用户query关系不大)·优化few-showexamples的多样性，让尽可能多的情况展示给prompt",
        "id": 150,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "CASE: 保险场景SQLCopilot实战",
        "id": 151,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 152,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 3,
        "text": "数据表：",
        "id": 153,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "1）客户信息表 (Customerlnfo) :",
        "id": 154,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 11,
        "text": "2）保单信息表 (Policylnfo)",
        "id": 155,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 10,
        "text": "3） 理赔信息表 (ClaimInfo)",
        "id": 156,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "4）受益人信息表 (Beneficiarylnfo)",
        "id": 157,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 10,
        "text": "5）代理人信息表 (AgentInfo)",
        "id": 158,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 10,
        "text": "6）保险产品信息表 (ProductInfo)",
        "id": 159,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "7）保险公司内部员工表 (Employeelnfo)",
        "id": 160,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 23,
        "length_tokens": 0,
        "text": "",
        "id": 161,
        "type": "image",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 162,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 10,
        "text": "TODO：针对保险场景进行SQL查询 ",
        "id": 163,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 112,
        "text": "1、获取所有客户的姓名和联系电话。  \n2、找出所有已婚客户的保单。  \n3、查询所有未支付保费的保单号和客户姓名。4、找出所有理赔金额大于10000元的理赔记录，并列出相关客户的姓名和联系电话  \n5、查找代理人的姓名和执照到期日期，按照执照到期日期升序排序。  \n6、获取所有保险产品的产品名称和保费，按照保费降序排序。",
        "id": 164,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "7、查询所有在特定销售区域工作的员工的姓名和职位。",
        "id": 165,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 24,
        "text": "8、找出所有年龄在30岁以下的客户，并列出其客户ID、姓名和出生日期。",
        "id": 166,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 26,
        "text": "9、查找所有已审核但尚未支付的理赔记录，包括理赔号、审核人和审核日期。",
        "id": 167,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 21,
        "text": "10、获取每个产品类型下的平均保费，以及该产品类型下的产品数量。",
        "id": 168,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 16,
        "text": "Thinking: 如何让LLM进行SQL查询， 准确率如何？",
        "id": 169,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 13,
        "text": "方法1: SQLDatabaseToolkit方法2： 自己编写",
        "id": 170,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 24,
        "length_tokens": 0,
        "text": "",
        "id": 171,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 25,
        "length_tokens": 3,
        "text": "SQL数据表",
        "id": 172,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 25,
        "length_tokens": 100,
        "text": "客户信息表（Customerlnfo）：客户ID（CustomerID）、客户姓名（Name）、性别（Gender）、出生日期（DateOfBirth）、身份证号码（IDNumber）、联系地址（Address）、联系电话（PhoneNumber）、电子邮件地址（EmailAddress）、婚姻状况（MaritalStatus）、职业（Occupation）、健康状况（HealthStatus）、客户注册日期（RegistrationDate）、客户类型（CustomerType）、客户来源(SourceOfCustomer）、客户状态（CustomerStatus)",
        "id": 173,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 25,
        "length_tokens": 97,
        "text": "保单信息表（PolicyInfo）：保单号（PolicyNumber）、客户ID（CustomerID）、保险产品ID（ProductID）、保单状态（PolicyStatus）受益人（Beneficiary）、受益人关系（Relationship）、投保日期（PolicyStartDate）、终止日期（PolicyEndDate）、保费支付状态(PremiumPaymentStatus）、保费支付日期（PaymentDate）、保费支付方式（PaymentMethod）、代理人ID（AgentID)",
        "id": 174,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 25,
        "length_tokens": 113,
        "text": "理赔信息表（Claimlnfo）：理赔号（ClaimNumber）、保单号（PolicyNumber）、理赔日期（ClaimDate）、理赔类型（ClaimType）、理赔金额（ClaimAmount）、理赔状态（ClaimStatus）、理赔描述（ClaimDescription）、受益人ID（BeneficiaryID）、医疗记录(MedicalRecords）、事故报告（AccidentReport）、审核人（ClaimHandler）、审核日期（ReviewDate）、支付方式(PaymentMethod）、支付日期（PaymentDate）、拒赔原因（DenialReason）",
        "id": 175,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 26,
        "length_tokens": 3,
        "text": "SQL数据表",
        "id": 176,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 26,
        "length_tokens": 58,
        "text": "受益人信息表（Benefiarylnfo）：受益人ID（BeneficiaryID）、姓名（Name）、性别（Gender）、出生日期（DateOfBirth）、国籍(Nationality）、联系地址（Address）、电话号码（PhoneNumber）、电子邮件（EmailAddress)",
        "id": 177,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 26,
        "length_tokens": 82,
        "text": "代理人信息表（AgentInfo）：代理人ID（AgentID）、姓名（Name）、性别（Gender）、出生日期（DateOfBirth）、联系地址(Address）、电话号码（PhoneNumber）、电子邮件（EmailAddress）、证书号码（CertificateNumber）、执照发放日期(LicenselssueDate）、执照到期日期（LicenseExpirationDate）、佣金结构（CommissionStructure)",
        "id": 178,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 26,
        "length_tokens": 102,
        "text": "险产品信息表（ProductInfo）：产品ID（ProductID）、产品名称（ProductName）、产品类型（ProductType）、保险金额范围(CoverageRange）、保险期限（CoverageTerm）、保费（Premium）、缴费频率（PaymentFrequency）、产品特性(ProductFeatures）、投保年龄限制（AgeLimit）、保费计算方式（PremiumCalculation）、理赔流程（ClaimsProcess）、投保要求(UnderwritingRequirements）、销售区域（SalesRegion）、产品状态（ProductStatu",
        "id": 179,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 26,
        "length_tokens": 15,
        "text": "gRequirements）、销售区域（SalesRegion）、产品状态（ProductStatus)",
        "id": 180,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 26,
        "length_tokens": 90,
        "text": "保险公司内部员工表（Employeelnfo）：员工ID（EmployeeID）、姓名（Name）、性别（Gender）、出生日期（DateOfBirth）、联系地址（Address）、电话号码（PhoneNumber）、电子邮件（EmailAdress）、入职日期（HireDate）、职位（Position）、部门(Department）、工资（Salary）、工作地点（Location）、上级主管（Supervisor）、员工类型（EmployeeType）、员工状态(EmployeeStatus)",
        "id": 181,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 27,
        "length_tokens": 3,
        "text": "SQL数据表",
        "id": 182,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 27,
        "length_tokens": 75,
        "text": "REATE TABLE CustomerInfo（   \nCustomerID INT PRIMARY KEY,   \nName VARCHAR(50),   \nGender VARCHAR(10),   \nDateOfBirth DATE,   \nIDNumber VARCHAR(18),   \nAddress VARCHAR(100),   \nPhoneNumber VARCHAR(20),   \nEmailAddress VARCHAR(50),   \nMaritalStatus VARCHAR(20),   \nOccupation VARCHAR(50),   \nHealthStatu",
        "id": 183,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 27,
        "length_tokens": 45,
        "text": "HAR(20),   \nOccupation VARCHAR(50),   \nHealthStatus VARCHAR(20),   \nRegistrationDate DATE,   \nCustomerType VARCHAR(20),   \nSourceOfCustomer VARCHAR(50)   \nCustomerStatus VARCHAR(20) ",
        "id": 184,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 27,
        "length_tokens": 12,
        "text": "LKEAIE IABLE POIICYInTO（ ",
        "id": 185,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 27,
        "length_tokens": 65,
        "text": "PolicyNumber INT PRIMARY KEY, CustomerID INT, ProductID INT, PolicyStatus VARCHAR(20), Beneficiary VARCHAR(50), Relationship VARCHAR(20), PolicyStartDate DATE, PolicyEndDate DATE, PremiumPaymentStatus VARCHAR(20), PaymentDate DATE, PaymentMethod VARCHAR(20), AgentID INT ）； ： ",
        "id": 186,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 187,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 10,
        "text": "1、获取所有客户的姓名和联系电话。",
        "id": 188,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 8,
        "text": "SELECT Name， PhoneNumberFROM CustomerInfo",
        "id": 189,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 12,
        "text": "2、找出所有已婚客户的保单。",
        "id": 190,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 2,
        "text": "SELECT ",
        "id": 191,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 52,
        "text": "Policylnfo.PolicyNumber, Policylnfo.CustomerID, Policylnfo.ProductID, Policylnfo.PolicyStatus, Policylnfo.Beneficiary, Policylnfo.Relationship, Policylnfo.PolicyStartDate, Policylnfo.PolicyEndDate, ",
        "id": 192,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 27,
        "text": "Policylnfo.PremiumPaymentStatus, Policylnfo.PaymentDate, Policylnfo.PaymentMethod, Policylnfo.AgentlD ",
        "id": 193,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 2,
        "text": "FROM ",
        "id": 194,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "Policylnfo ",
        "id": 195,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 19,
        "text": "WHERE Policylnfo.CustomerlD IN ( SELECT Customerlnfo.CustomerID FROM CustomerInfo ",
        "id": 196,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 1,
        "text": "WHERE",
        "id": 197,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 28,
        "length_tokens": 25,
        "text": "Customerlnfo.MaritalStatus $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Married'）",
        "id": 198,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 199,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 29,
        "length_tokens": 16,
        "text": "3、查询所有未支付保费的保单号和客户姓名。",
        "id": 200,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 29,
        "length_tokens": 75,
        "text": "SELECT Policylnfo.PolicyNumber, Customerlnfo.Name   \nFROM PolicyInfo LEFT JOIN Customerlnfo ON Policylnfo.CustomerID $\\mathbf { \\tau } = \\mathbf { \\tau }$   \nCustomerlnfo.CustomerlD   \nWHERE Policylnfo.PremiumPaymentStatus $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Not Paid' ",
        "id": 201,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 29,
        "length_tokens": 27,
        "text": "4、找出所有理赔金额大于10000元的理赔记录并列出相关客户的姓名和联系电话。",
        "id": 202,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 29,
        "length_tokens": 79,
        "text": "SELECT Customerlnfo.Name, Customerlnfo.PhoneNumber   \nFROM Customerlnfo JOIN Policylnfo ON Customerlnfo.CustomerlD $\\mathbf { \\tau } = \\mathbf { \\tau }$   \nPolicylnfo.CustomerID JOIN ClaimInfo ON Policylnfo.PolicyNumber $\\mathbf { \\tau } = \\mathbf { \\tau }$   \nClaimInfo.PolicyNumber   \nWHERE Claimln",
        "id": 203,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 29,
        "length_tokens": 24,
        "text": "\\tau }$   \nClaimInfo.PolicyNumber   \nWHERE Claimlnfo.ClaimAmount $>$ 10000; ",
        "id": 204,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 205,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 24,
        "text": "5、查找代理人的姓名和执照到期日期，按照执照到期日期升序排序。",
        "id": 206,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "SELECT Name, LicenseExpirationDate FROM AgentInfo ORDER BY LicenseExpirationDate; ",
        "id": 207,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 20,
        "text": "6、获取所有保险产品的产品名称和保费，按照保费降序排序。",
        "id": 208,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 14,
        "text": "SELECT ProductName， Premium FROM ProductInfo ORDER BY Premium DESC; ",
        "id": 209,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 16,
        "text": "7、查询所有在特定销售区域工作的员工的姓名和职位。",
        "id": 210,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 30,
        "length_tokens": 46,
        "text": "SELECT Name， Position   \nFROM Employeelnfo   \nWHERE EmployeeID IN( SELECT EmployeeID FROM EmployeeInfo WHERE Location $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Sales Region 1   \n）； ",
        "id": 211,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 212,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 24,
        "text": "8、找出所有年龄在30岁以下的客户，并列出其客户ID、姓名和出生日期。",
        "id": 213,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 45,
        "text": "SELECT Customerlnfo.CustomerlD, Customerlnfo.Name,   \nCustomerlnfo.DateOfBirth   \nFROM Customerlnfo   \nWHERE Customerlnfo.DateOfBirth $\\angle$ '1990-01-01' ",
        "id": 214,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 25,
        "text": "9、查找所有已审核但尚未支付的理赔记录，包括理赔号、审核人和审核日期",
        "id": 215,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 2,
        "text": "SELECT ",
        "id": 216,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 29,
        "text": "Claimlnfo.ClaimNumber, Claimlnfo.ClaimDate, Claimlnfo.ClaimType, Claimlnfo.ClaimAmount, ",
        "id": 217,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 83,
        "text": "Claimlnfo.ClaimStatus, Claimlnfo.ClaimDescription, Claimlnfo.BeneficiarylD, Claimlnfo.MedicalRecords, Claimlnfo.AccidentReport, Claimlnfo.ClaimHandler, Claimlnfo.ReviewDate, ClaimInfo.PaymentMethod, Claimlnfo.PaymentDate, ClaimInfo.DenialReason   \nFROM ClaimInfo   \nWHERE Claimlnfo.ClaimStatus $\\math",
        "id": 218,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 31,
        "length_tokens": 29,
        "text": "OM ClaimInfo   \nWHERE Claimlnfo.ClaimStatus $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'Pending' ",
        "id": 219,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 32,
        "length_tokens": 5,
        "text": "保险场景 SQL查询",
        "id": 220,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 32,
        "length_tokens": 21,
        "text": "10、获取每个产品类型下的平均保费，以及该产品类型下的产品数量。",
        "id": 221,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 32,
        "length_tokens": 64,
        "text": "SELECT ProductType, AVG(Premium) AS AveragePremium, COUNT(PolicyNumber) AS PolicyCount   \nFROM Policylnfo AS pi   \nJOIN ProductInfo AS pi2   \nON pi.ProductID $\\mathbf { \\tau } = \\mathbf { \\tau }$ pi2.ProductID   \nGROUP BY ProductType; ",
        "id": 222,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 33,
        "length_tokens": 4,
        "text": "Prompt works! ",
        "id": 223,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 33,
        "length_tokens": 14,
        "text": "Thinking: 以下哪种prompt可以写出更好的sQL？",
        "id": 224,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 33,
        "length_tokens": 77,
        "text": "prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"\"\"# language: SQL  \n/\\*  \n{query}你需要先判断需要哪个数据表和字段，  \n然后基于它们编写SQL。数据库中有以下数  \n据表:  \n=====  \n{table_description}  \n\\*/  \n# {query}\"\" 写法1",
        "id": 225,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 33,
        "length_tokens": 0,
        "text": "",
        "id": 226,
        "type": "table",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 33,
        "length_tokens": 25,
        "text": "table_description是数据表的中文描述，create_sql是数据表的建表语句，query是用户查询的问题",
        "id": 227,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 34,
        "length_tokens": 4,
        "text": "Prompt works! ",
        "id": 228,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 34,
        "length_tokens": 5,
        "text": "Prompt写法很重要",
        "id": 229,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 34,
        "length_tokens": 114,
        "text": "1）说明语言类型，--language:SQL   \n2）将SQL建表语句放到sQLprompt中，因为大语   \n言是通过SQL建表语句进行识别的   \n3）SQL编写用\\`\\`\\`sql，放到prompt最后   \nPrompt中的首尾很重要   \nprompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ f\"-- language: SQL   \n### Question: {query}   \n### Input: {create_sql}   \n### Response:   \nHere is the SQL query I have generate",
        "id": 230,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 34,
        "length_tokens": 31,
        "text": "Response:   \nHere is the SQL query I have generated to   \nanswer the question {query}':   \n\\`\\`sql   \n1-=\\` ",
        "id": 231,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 34,
        "length_tokens": 0,
        "text": "",
        "id": 232,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 35,
        "length_tokens": 6,
        "text": "打卡：Text2SQL",
        "id": 233,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 35,
        "length_tokens": 70,
        "text": "在你的工作中，都有哪些SQL查询的场景？（对应的数据表、SQL查询语句，LLM能否完  \n成，是否有临时SQL的需求)  \n使用LangChain或者vanna或者自己调用大模型来完成  \n可以使用heros数据表，或者用自己本地的MySQL数据表",
        "id": 234,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 36,
        "length_tokens": 6,
        "text": "CASE: 业务分析助手",
        "id": 235,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 2,
        "text": "业务助手",
        "id": 236,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 3,
        "text": "业务助手：",
        "id": 237,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 29,
        "text": "为环球影城打造业务助手，通过自然语言交互的方式，对主营业务（门票、酒店、餐饮）进行洞察",
        "id": 238,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 6,
        "text": "助手的工作职责包括：",
        "id": 239,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 23,
        "text": "1）自助式数据查询  \n2）影响主营业务的关键因素分析  \n3）决策建议",
        "id": 240,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 34,
        "text": "我看到2023年第31周的数据有异常，能否针对那一周，按照天、不同销售渠道进行聚合，给我他们的销售表现",
        "id": 241,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 13,
        "text": "2024/3/1 11:11:45 ",
        "id": 242,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 243,
        "type": "image",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "SQL查询 ",
        "id": 244,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "数据表：",
        "id": 245,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "1) crs_orders酒店预定订单表",
        "id": 246,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 20,
        "text": "2） eco_orderseco订单表，订单中台，汇总了各类订单信息",
        "id": 247,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 248,
        "type": "table",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 19,
        "text": "3） tkt_orders门票类产品订单表，包含具体到门票票号",
        "id": 249,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 38,
        "length_tokens": 21,
        "text": "4） tkt_redemption门票类产品核销表，包含具体到门票票号",
        "id": 250,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 39,
        "length_tokens": 4,
        "text": "SQL查询需求 ",
        "id": 251,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 39,
        "length_tokens": 20,
        "text": "1） 酒店日报Bot:Q1：11月1日的酒店销售情况如何？",
        "id": 252,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 39,
        "length_tokens": 43,
        "text": "2）门票助手：Q1：查询2023年6、7、8月，所售一日门票、二日门票的销售数量，按周聚合，计算销售数量",
        "id": 253,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 39,
        "length_tokens": 28,
        "text": "3）餐饮分析助手：Q1：万圣节期间的年卡用户园内人均餐饮消费有多少？",
        "id": 254,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 255,
        "type": "table",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 40,
        "length_tokens": 3,
        "text": "SQL查询 ",
        "id": 256,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "Thinking: 如何设置门票助手bot",
        "id": 257,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 40,
        "length_tokens": 12,
        "text": "if bot $\\scriptstyle = =$ 门票助手': ",
        "id": 258,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 40,
        "length_tokens": 70,
        "text": "#得到用户查询的问题  \nmessages $\\mathbf { \\tau } = \\mathbf { \\tau }$ data  \n# 更换system prompt  \nmessages[O]['content'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ ticket_bot.system_prompt  \n#创建生成器函数，以流形式获取并返回数据  \ndef generate():",
        "id": 259,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 40,
        "length_tokens": 81,
        "text": "yield from model_tools.exc_messages(messages $\\ c =$ messages, functions_desc=ticket_bot.functions_desc, database $= ^ { \\mathsf { I } }$ ubr', bot $\\mathop { \\bf { \\phi } } =$ bot) return Response(generate(), content_type $= ^ { \\mathsf { 1 } }$ text/event-stream', headers $\\ c =$ stream_headers) ",
        "id": 260,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 3,
        "text": "SQL查询 ",
        "id": 261,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 12,
        "text": "Thinking: 门票助手的system_prompt如何设置? ",
        "id": 262,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 117,
        "text": "system_prompt 我是环球影城门票助手， 个是关于门票订单表相关的字段，我可能会编写对应的SQL  \n--内票订单表  \nCREATE TABLEtkt_orders （order_time DATETIME, --订单日期account_id INT, -预定用户IDgov_id VARCHAR(18), -商品使用人ID（身份证号）gender VARCHAR(10), -使用人性别age INT, --年龄province VARCHAR(30), -使用人省份SKU VARCHAR(100), --商品SKU名product_serial_no VARCHAR(30), -商",
        "id": 263,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 92,
        "text": "AR(100), --商品SKU名product_serial_no VARCHAR(30), -商品IDeco_main_order_id VARCHAR(20), -订单IDsales_channel VARCHAR(20), 销售渠道status VARCHAR(30), --商品状态order_value DECIMAL(10,2), --订单金额quantity INT -商品数量  \n）；  \n一日内票，对应多种SKU：  \nUniversal Studios Beijing One-Day Dated Ticket-Standard  \nUniversal Studios Bei",
        "id": 264,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 87,
        "text": "-Day Dated Ticket-Standard  \nUniversal Studios Beijing One-Day Dated Ticket-Child  \nUniversal Studios Beijing One-Day Dated Ticket-Senior  \n二日内票，对应多种SKU：  \nUSB1.5-Day DatedTicket Standard  \nUSB 1.5-Day Dated Ticket Discounted  \n一日内票、二日内票查询  \nSUM(CASE WHEN SKU LIKE 'Universal Studios Beijing One-Day%",
        "id": 265,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 51,
        "text": " WHEN SKU LIKE 'Universal Studios Beijing One-Day%' THEN quantity ELSE 0 END)AS  \nSUM(CASE WHEN SKU LIKE 'USB%' THEN quantity ELSE 0 END) AS tWO_day_ticket_sales  \n我将回答用户关于内票相关的问题",
        "id": 266,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 9,
        "text": "Thinking：设置system_prompt的目的是什么?",
        "id": 267,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 41,
        "length_tokens": 20,
        "text": "说明应用的目标：门票助手，帮用户查询数据通用信息：数据表结构",
        "id": 268,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 42,
        "length_tokens": 3,
        "text": "SQL查询 ",
        "id": 269,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 42,
        "length_tokens": 21,
        "text": "Thinking：function tool如何设置？比如针对生成的sQL语句，进 行SQL查询 ",
        "id": 270,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 42,
        "length_tokens": 67,
        "text": "functions_desc=[ { \"name\":\"exc_sql\" \"description\"：\"对于生成的sQL，进行sQL查询\", \"parameters\":{ \"type\":\"object\" \"properties\":{ \"sql_input\":{ \"type\":\"string\", \"description\"：\"生成的sQL语句\", \"required\": [\"sql_input\"] ",
        "id": 271,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 43,
        "length_tokens": 3,
        "text": "SQL查询 ",
        "id": 272,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 43,
        "length_tokens": 81,
        "text": "#传入之前的多轮对话，进行推理，会使用到自定义Tools=>更新messages   \ndef exc_messages(messages,functions_desc,database=\"\",bot=\"\"): while True: chat_response=chat_completion_request( messages,functions=functions_desc fn_name= #函数名称function name fn_arguments =' #函数参数 functionarguments for chunk in chat_response: #判断是否有functio",
        "id": 273,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 43,
        "length_tokens": 64,
        "text": "rguments for chunk in chat_response: #判断是否有function_call function_call = chunk.choices[e].delta.function_call if function_call is not None: iffunction_call.nameisnot None: fn_name = function_call.name fn_arguments += function_call.arguments #temp_data = data_processing.stream_data(function_call.argu",
        "id": 274,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 43,
        "length_tokens": 83,
        "text": "a = data_processing.stream_data(function_call.arguments #temp_data = temp_data=chunk.model_dump_json(exclude_unset=True) #print(f\"data:{temp_data}\\n\\n\") yieldf\"data:{temp_data}\\n\\n\" ifchunk.choices[0].finish_reason=='stop': break print('fn_name=',fn_name) print('fn_arguments=',fn_arguments) #判断是否有fn",
        "id": 275,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 43,
        "length_tokens": 31,
        "text": "name) print('fn_arguments=',fn_arguments) #判断是否有fn_name iffn_name t=''： arguments_json = json.loads(fn_arguments) ",
        "id": 276,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 44,
        "length_tokens": 18,
        "text": "Thinking: 除了SQL数据查询， 能否进行数据建模 比如:",
        "id": 277,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 44,
        "length_tokens": 107,
        "text": "1）万圣节期间的年卡用户园内人均餐饮消费有多少？ (线性回归)  \n2）分析哪些因素对餐饮总营收的变大影响较大，诸如大型活动、节假日、票价、促销、天气等 (使用决策树)  \n3）分析哪些因素对餐饮人均消费影响较大，诸如大型活动、节假日、票价、促销、天气等 (使用决策树)",
        "id": 278,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 44,
        "length_tokens": 94,
        "text": "Thinking：针对问题1，能否让LLM自行进行推理？  \n餐饮消费总金额 $\\mathbf { \\tau } = \\mathbf { \\tau }$ type1_num \\* type1_revenue $+$ type2_num \\* type2_revenue $+$ type3_num \\* type3_revenue  \ntype1,type2,type3分别为数据表中3种类别的人群：年卡，门票，促销票",
        "id": 279,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 3,
        "text": "数据建模",
        "id": 280,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 27,
        "text": "Thinking: 在Ask Bot中， 让用户可以通过数据建模对业务进行洞察， 都需要哪些环节？",
        "id": 281,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 109,
        "text": "system_prompt=\"\"\"我是环球影城餐饮分析助手，以下是关于餐饮营收表相关的字段，我可能  \n-餐饮营收表  \nCREATE TABLE ubr_revenuedate DATE,ticket_price DECIMAL(10,2),operating_hours DECIMAL(5，2),total_attendance INT CoMMENT ‘总入园人数，=ap_attendance+ticket_attendanceap_attendanceINTCOMMENT‘年卡入园人数ticket_attendance INTCOMMENT'票入园人数promotional_ticke",
        "id": 282,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 101,
        "text": "icket_attendance INTCOMMENT'票入园人数promotional_ticket_attendance INTCoMMENT'促销票入园人数'，media_cost_indexDECIMAL(10，2)，marquee_eventVARCHAR（255） COMMENT'4代表万圣节'，max_temperature DECIMAL(5,2),min_temperature DECIMAL(5,2)，week_days VARCHAR(10),is_national_holiday BooLEAN,beijing_guest_ratio DECIMAL(5,2)age_g",
        "id": 283,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 148,
        "text": "iday BooLEAN,beijing_guest_ratio DECIMAL(5,2)age_groUP_0_3DECIMAL(10,9),age_grouP_4_12DECIMAL(10，9)，age_grouP_13_16DECIMAL(10,9)，age_grOUp_17_18DECIMAL（10，9)，age_groUP_19_25DECIMAL(10,9),age_groUp_26_35DECIMAL(10,9)，age_groUp_36_45DECIMAL(10,9)，age_grOUP_46_50DECIMAL(10，9)，age_groUP_51_65DECIMAL(10,",
        "id": 284,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 138,
        "text": "rOUP_46_50DECIMAL(10，9)，age_groUP_51_65DECIMAL(10,9)，age_group_65_plusDECIMAL(10，9)，total_fb_revenueDECIMAL（10，2）COMMENT‘当天总餐饮消费（=年卡入园+巾票入园+促rev_per_capDECIMAL（10，2）COMMENT‘当天人均餐饮消费  \n1） system_prmpt  \n2）functions_desc工具定义  \nexc_sql：对于生成的SQL，进行SQL查询  \ncompute_avg_revenue：计算某类用户的园内人均餐饮消费  \nanalysis_i",
        "id": 285,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 67,
        "text": " \ncompute_avg_revenue：计算某类用户的园内人均餐饮消费  \nanalysis_influence_factors：分析哪些因素对餐饮消费（总消  \n费或人均消费）的变大影响较大  \nplot_image：如果有画图的python代码，可以通过它来绘制  \n图表",
        "id": 286,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 45,
        "length_tokens": 0,
        "text": "",
        "id": 287,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 3,
        "text": "数据建模",
        "id": 288,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 10,
        "text": "关于计算人均餐饮消费的需求：",
        "id": 289,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 104,
        "text": "#用户关于计算人均餐饮消费的需求  \ndef lcompute_avg_revenue(attendance_type， marquee_event=0):print(f'attendance_type={attendance_type} marquee_event={marquee_event}')#Step1，通过marquee_event，获取指定的餐饮消费数据df = get_q3_data(engine， marquee_event)# Step2，基于之前的餐饮数据，构建LR模型 =>计算出 ap，ticket，promotional前面的系数model，dvec = build_",
        "id": 290,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 61,
        "text": ">计算出 ap，ticket，promotional前面的系数model，dvec = build_lr_model(df)# Step3，洞察模型的 feature_importancefeature_df = compute_feature_importance(model， dvec)# Step4，整理输出结论content = make_conclusion(feature_df)return content",
        "id": 291,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 21,
        "text": "分析哪些因素对餐饮消费 (总消费或人均消费) 的变大影响较大",
        "id": 292,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 109,
        "text": "#分析哪些因素对餐饮消费（总消费或人均消费）的变大影响较大   \ndef analysis_influence_factors(target_type='总消费'): print('target_type='，target_type) target_map= {'总消费'：'total_fb_revenue'，'人均消费'：'rev_per_cap'} target = target_map[target_type] # 获取数据 df = get_q4_data(engine， target) # 通过决策树，构建餐饮消费模型 model， features = build_cart_mod",
        "id": 293,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 46,
        "length_tokens": 44,
        "text": " # 通过决策树，构建餐饮消费模型 model， features = build_cart_model(df， target) #决策树可视化 result = cart_feature_importance(model， features) return result ",
        "id": 294,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 47,
        "length_tokens": 6,
        "text": "打卡：Text2SQL",
        "id": 295,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 47,
        "length_tokens": 70,
        "text": "在你的工作中，都有哪些SQL查询的场景？（对应的数据表、SQL查询语句，LLM能否完  \n成，是否有临时SQL的需求)  \n使用LangChain或者vanna或者自己调用大模型来完成  \n可以使用heros数据表，或者用自己本地的MySQL数据表",
        "id": 296,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 48,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 297,
        "type": "text",
        "file_name": "8.1-Text2SQL：自助式数据报表开发"
      },
      {
        "page": 1,
        "length_tokens": 3,
        "text": "Vanna使用",
        "id": 0,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 2,
        "length_tokens": 0,
        "text": "",
        "id": 1,
        "type": "image",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 3,
        "length_tokens": 3,
        "text": "Vanna特点",
        "id": 2,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "Vanna特点: ",
        "id": 3,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 3,
        "length_tokens": 56,
        "text": "·开源与可定制化：Vanna 提供完整的 Python库，支持本地化部署，允许用户自定义大语言模型（LLM）、向量数据库（VectorDB）和关系型数据库（如MySQL、PostgreSQL等）。",
        "id": 4,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 3,
        "length_tokens": 49,
        "text": "·RAG 增强的准确性：通过检索增强生成技术，结合数据库的元数据(如DDL语句、表注释、示例 SQL等)训练模型，显著提升复杂查询的准确率。",
        "id": 5,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 3,
        "length_tokens": 36,
        "text": "·多场景支持：适用于企业数据分析、智能客服、电商搜索、金融报告生成等场景，非技术人员可通过自然语言直接查询数据库。",
        "id": 6,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 3,
        "length_tokens": 44,
        "text": "·灵活的基础设施：支持多种LLM（如OpenAI、本地部署的Ollama）、向量数据库（如ChromaDB），并可扩展至非默认支持的数据库。",
        "id": 7,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "Vanna 工作原理",
        "id": 8,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 4,
        "length_tokens": 5,
        "text": "Vanna工作原理",
        "id": 9,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 4,
        "length_tokens": 6,
        "text": "·训练 RAG 模型",
        "id": 10,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 4,
        "length_tokens": 46,
        "text": "输入数据库的元数据（如INFORMATION_SCHEMA）、DDL语句、文档或示例 SQL。  \n模型将这些信息转换为向量并存储到向量库中，用于后续检索。",
        "id": 11,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "·生成SQL ",
        "id": 12,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 4,
        "length_tokens": 45,
        "text": "用户提问时，系统从向量库中检索相关上下文，组装成Prompt发送给LLM。  \nLLM生成SQL后，自动执行并返回结果（表格或图表）。",
        "id": 13,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 4,
        "text": "Vanna使用步骤",
        "id": 14,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 5,
        "text": "Vanna使用步骤:",
        "id": 15,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 3,
        "text": "vanna安装",
        "id": 16,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 26,
        "text": "pip install vanna，可选扩展如vanna[chromadb,ollama,mysql]支持本地化部署。",
        "id": 17,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 21,
        "text": "连接数据库自定义run_sql方法（如 MySQL需通过 mysql.connector 返回 Pandas DataFrame）。",
        "id": 18,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 52,
        "text": "·训练模型  \n通过DDL、文档或SQL示例训练，例如：  \nvn.train(ddl $= ^ { \\mathsf { \\Gamma } }$ \"CREATE TABLE uSers (id INT PRIMARY KEY, name VARCHAR(100))\")",
        "id": 19,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 5,
        "length_tokens": 21,
        "text": "提问与查询调用vn.ask(\"查询销售额最高的产品\")，生成并执行SQL。",
        "id": 20,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 6,
        "length_tokens": 7,
        "text": "Vanna使用 (ask函数)",
        "id": 21,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 6,
        "length_tokens": 2,
        "text": "ask函数",
        "id": 22,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 6,
        "length_tokens": 53,
        "text": "作用：用户通过自然语言提问时调用此函数，它是查询的核心入口，会依次调用generate_sql、run_sqI、generate_plotly_code、get_plotly_figure四个函数来完成整个查询及可视化的过程。",
        "id": 23,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "工作流程:",
        "id": 24,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 6,
        "length_tokens": 84,
        "text": "·首先将用户的问题转换成向量表示，然后在向量数据库中检索与问题语义最相似的DDL语句、文档和SQL查询。  \n·将检索到的信息和用户的问题一起提供给LLM，生成对应的SQL查询。  \n·执行生成的sQL查询，并将查询结果以表格和Plotly图表的形式返回给用户。",
        "id": 25,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 6,
        "length_tokens": 20,
        "text": "比如：vn.ask(\"查询heros表中 英雄攻击力前5名的英雄\")",
        "id": 26,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 8,
        "text": "Vanna使用 (generate_sql函数)",
        "id": 27,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "generate_sql函数",
        "id": 28,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 18,
        "text": "作用：根据用户输入的自然语言问题，生成对应的sQL语句。",
        "id": 29,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 3,
        "text": "工作流程:",
        "id": 30,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 24,
        "text": "，调用get_similar_question_sql函数，在向量数据库中检索与问题相似的sql/question对。",
        "id": 31,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 25,
        "text": "·调用get_related_ddl函数，在向量数据库中检索与问题相似的建表语句ddl。",
        "id": 32,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 22,
        "text": "·调用get_related_documentation函数，在向量数据库中检索与问题相似的文档。",
        "id": 33,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 29,
        "text": "·调用get_sql_prompt函数，结合上述检索到的信息生成prompt，然后将prompt提供给LLM，生成sQL语句。",
        "id": 34,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 7,
        "length_tokens": 23,
        "text": "比如：sql=vn.generate_sql(\"查询heros表中 英雄攻击力前5名的英雄\")",
        "id": 35,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 8,
        "text": "Vanna使用 (generate_sql函数)",
        "id": 36,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 3,
        "text": "run_sql函数",
        "id": 37,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 17,
        "text": "作用：执行generate_sql函数生成的sQL语句，并返回查询结果。",
        "id": 38,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 23,
        "text": "工作流程：将生成的SQL语句发送到连接的数据库中执行，获取并返回查询结果。",
        "id": 39,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 2,
        "text": "比如:",
        "id": 40,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 23,
        "text": "sql $\\ c =$ vn.generate_sql(\"查询heros表中英雄攻击力前5名的英雄\") ",
        "id": 41,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "vn.run_sql(sql)",
        "id": 42,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 9,
        "length_tokens": 6,
        "text": "打卡：Text2SQL",
        "id": 43,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 9,
        "length_tokens": 70,
        "text": "在你的工作中，都有哪些SQL查询的场景？（对应的数据表、SQL查询语句，LLM能否完  \n成，是否有临时SQL的需求)  \n使用LangChain或者vanna或者自己调用大模型来完成  \n可以使用heros数据表，或者用自己本地的MySQL数据表",
        "id": 44,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 10,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 45,
        "type": "text",
        "file_name": "8.2-vanna使用"
      },
      {
        "page": 1,
        "length_tokens": 8,
        "text": "LangChain: 多任务应用开发 ",
        "id": 0,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 2,
        "length_tokens": 4,
        "text": "今天的学习目标",
        "id": 1,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 2,
        "length_tokens": 8,
        "text": "LangChain: 多任务应用开发 ",
        "id": 2,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 2,
        "length_tokens": 87,
        "text": "·LangChain基本概念  \nLangChain中的tools (serpapi, Ilm-math)  \nLangChain中的Memory  \n·Case：动手搭建本地知识智能客服 (理解ReAct)  \nCASE：工具链组合设计 （LangChain Agent）  \n：CASE:搭建故障诊断Agent（LangChain Agent）  \n·使用LCEL构建任务链  \n·AlAgent对比",
        "id": 3,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 3,
        "length_tokens": 5,
        "text": "LangChain基本概念",
        "id": 4,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 4,
        "length_tokens": 3,
        "text": "LangChain ",
        "id": 5,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 4,
        "length_tokens": 4,
        "text": "LangChain: ",
        "id": 6,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 4,
        "length_tokens": 19,
        "text": "·提供了一套工具、组件和接口·简化了创建LLM应用的过程",
        "id": 7,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 4,
        "length_tokens": 0,
        "text": "",
        "id": 8,
        "type": "image",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 5,
        "length_tokens": 9,
        "text": "LangChain是由多个组件组成的：",
        "id": 9,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 5,
        "length_tokens": 40,
        "text": "Models：模型，比如GPT-4o  \nPrompts：提示，包括提示管理、提示优化和提示序列化  \nMemory：记忆，用来保存和模型交互时的上下文",
        "id": 10,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 5,
        "length_tokens": 53,
        "text": "·Indexes：索引，用于结构化文档，方便和模型交互如果要构建自己的知识库，就需要各种类型文档的加载，转换，长文本切割，文本向量计算，向量索引存储查询等",
        "id": 11,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 5,
        "length_tokens": 31,
        "text": "·Chains：链，一系列对各种组件的调用Agents：代理，决定模型采取哪些行动，执行并且观察流程，直到完成为止",
        "id": 12,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 6,
        "length_tokens": 3,
        "text": "Agent的作用",
        "id": 13,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 6,
        "length_tokens": 11,
        "text": "LangChain官方文档中对Agent的定义：",
        "id": 14,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 6,
        "length_tokens": 35,
        "text": "they usean LLM to determine which actions to take and in what order.An action can either be using a tool and observing its output, or returning to the user. ",
        "id": 15,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 6,
        "length_tokens": 0,
        "text": "",
        "id": 16,
        "type": "image",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 17,
        "type": "table",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 7,
        "length_tokens": 0,
        "text": "",
        "id": 18,
        "type": "table",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "Serpapi工具: ",
        "id": 19,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "SerpApi ",
        "id": 20,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "Choose a Plan ",
        "id": 21,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "APIDOCUMENTATION ",
        "id": 22,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 33,
        "text": "·支持Google, Baidu, Yahoo,Ebay,YouTube等 多种API查询   \npip install google-search-results   \nhttps://serpapi.com/ ",
        "id": 23,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 7,
        "text": "Successfully signed in with Github. ",
        "id": 24,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 3,
        "text": "Free Plan ",
        "id": 25,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 62,
        "text": "Google Search APl Google Maps APl 中 Google Jobs APl Google Shopping APl D Google Images APl Google Local APl ☑ Google Trends APl Google Autocomplete APl Google About This Result O Google Lens APl 画GoogleFinance APl ? Google Related Questions APl Google Scholar API ",
        "id": 26,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 56,
        "text": "TO DO: 让LangChain可以使用Serpapi工具(Google搜索API) 进行问题的解答，比如query $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"今天是几月几号?历史上的今天有哪些名人出生\"",
        "id": 27,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 5,
        "text": "100 searches / month ",
        "id": 28,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 6,
        "text": "8 Non-commercial use only ",
        "id": 29,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 13,
        "text": "X Check your inbox to verify your email - Resend email ",
        "id": 30,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 8,
        "length_tokens": 4,
        "text": "Subscribe import os ",
        "id": 31,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 32,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 33,
        "text": "from langchain.agents import load_tools from langchain.agents import initialize_agent from langchain.llms import OpenAl from langchain.agents import AgentType ",
        "id": 33,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 107,
        "text": "#加载 OpenAl模型  \nIIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ OpenAl(temperature ${ \\boldsymbol { \\mathbf { \\mathit { \\sigma } } } } = 0$ , max_tokens $\\ c =$ 2048)  \n#加载 serpapi 工具  \ntools $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_tools([\"serpapi\"])  \n#工具加载后需要初始化，verbose=True代表打印执行详情  \nagent $\\mathbf {",
        "id": 34,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 88,
        "text": "工具加载后需要初始化，verbose=True代表打印执行详情  \nagent $\\mathbf { \\tau } = \\mathbf { \\tau }$ initialize_agent(tools, llm,  \nagent $\\mathbf { \\lambda } = \\mathbf { \\lambda }$ AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)  \n#运行agent  \nagent.run(\"今天是几月几号?历史上的今天有哪些名  \n人出生\")",
        "id": 35,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 36,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 21,
        "text": ">Entering new AgentExecutor chain.我需要查找今天的日期和历史上的名人出生日期",
        "id": 37,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 38,
        "type": "table",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 84,
        "text": "Observation：出生编辑·1008年：亨利一世，法國卡佩王朝國王。（·1654年：康熙帝，清朝皇帝。（·1677年：弗朗索瓦絲·瑪麗·德·波旁，法国奥爾良公爵夫人。（·1825年：托马斯·亨利·赫….",
        "id": 39,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 9,
        "text": "Thought：我现在可以确定今天的日期",
        "id": 40,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 0,
        "text": "",
        "id": 41,
        "type": "table",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 84,
        "text": "Observation：公历(阳历）：2023年5月27日星期六 农历(阴历）：2023年四月初九(闰2月）黄历：癸卯年丁巳月乙酉日 生肖：兔 节气：星座：双子座 节日：5节日大全·2023年在线日历表.",
        "id": 42,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 8,
        "text": "Thought：我现在可以确定最终答案",
        "id": 43,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 57,
        "text": "Final Answer：今天是2023年5月27日，历史上的今天有亨利一世、康熙帝、弗朗索瓦絲·瑪麗·德·波旁、托马斯·亨利·赫等名人出生。",
        "id": 44,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 5,
        "text": "> Finished chain. ",
        "id": 45,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 56,
        "text": "’今天是2023年5月27日，历史上的今天有亨利一世、康熙帝、弗朗索瓦絲·瑪麗·德·波旁、托马斯·亨利·赫等名人出生。’",
        "id": 46,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 9,
        "length_tokens": 14,
        "text": "根据工具的描述，和请求的string来决定使用哪个工具",
        "id": 47,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 10,
        "length_tokens": 6,
        "text": "Tools （使用多个Tools)",
        "id": 48,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 10,
        "length_tokens": 7,
        "text": "Ilm-math工具: ",
        "id": 49,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 10,
        "length_tokens": 21,
        "text": "·给Agent提供数学相关的计算，比如：当前温度的0.5次方是多少？",
        "id": 50,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 10,
        "length_tokens": 22,
        "text": "TO DO: 当前北京的温度是多少华氏度，这个温度的1/4是多少？",
        "id": 51,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 10,
        "length_tokens": 31,
        "text": "Thinking：Agent需要使用哪些tools?Serpapi，搜索当前北京的温度Ilm-math，计算这个温度的1/4",
        "id": 52,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "Memory: ",
        "id": 53,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 11,
        "length_tokens": 49,
        "text": "Chains和Agent之前是无状态的，如果你想让他能记住之前的交互，就需要引入内存可以让LLM拥有短期记忆对话过程中，记住用户的input和中间的output",
        "id": 54,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 11,
        "length_tokens": 3,
        "text": "LLM ",
        "id": 55,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 11,
        "length_tokens": 0,
        "text": "",
        "id": 56,
        "type": "image",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 15,
        "text": "在LangChain中提供了几种短期记忆的方式：",
        "id": 57,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 3,
        "text": "BufferMemory ",
        "id": 58,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 31,
        "text": "将之前的对话完全存储下来，传给LLMBufferWindowMemory最近的K组对话存储下来，传给LLM",
        "id": 59,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 60,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 61,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 3,
        "text": "ConversionMemory ",
        "id": 62,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 29,
        "text": "对对话进行摘要，将摘要存储在内存中，相当于将压缩过的历史对话传递给LLM",
        "id": 63,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 48,
        "text": "VectorStore-backed Memory将之前所有对话通过向量存储到VectorDB（向量数据库）中，每次对话，会根据用户的输入信息，匹配向量数据库中最相似的K组对话",
        "id": 64,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 65,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 3,
        "text": "LLM ",
        "id": 66,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 12,
        "length_tokens": 0,
        "text": "",
        "id": 67,
        "type": "image",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "#使用带有memory的ConversationChain",
        "id": 68,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 38,
        "text": "conversation $\\mathbf { \\tau } = \\mathbf { \\tau }$ ConversationChain( $1 1 m = 1 1 m$ ,verbose $\\ c =$ True) ",
        "id": 69,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 36,
        "text": "output $\\mathbf { \\tau } = \\mathbf { \\tau }$ conversation.predict(input $= ^ { \\mathsf { \\Gamma } }$ \"Hi there!\") ",
        "id": 70,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "print(output) ",
        "id": 71,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "$\\mathrm { > }$ Entering new ConversationChain chain.. ",
        "id": 72,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "Prompt after formatting: ",
        "id": 73,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 50,
        "text": "The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question， it truthfully says it does not know. ",
        "id": 74,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 4,
        "text": "Current conversation: ",
        "id": 75,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "Human: Hi there! AI: ",
        "id": 76,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 26,
        "text": "$\\mathrm { > }$ Finished chain. Hi there! It's nice to meet you. How can I help you today? ",
        "id": 77,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 38,
        "text": "output $\\mathbf { \\tau } = \\mathbf { \\tau }$ conversation.predict(input $\\ c =$ \"I'm doing well! Just having a conversation with an Al.\") print(output) ",
        "id": 78,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 14,
        "text": "$\\mathrm { > }$ Entering new ConversationChain chain.. ",
        "id": 79,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 5,
        "text": "Prompt after formatting: ",
        "id": 80,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 50,
        "text": "The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question， it truthfully says it does not know. ",
        "id": 81,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 46,
        "text": "Current conversation:   \nHuman: Hi there!   \nAI: Hi there! It’s nice to meet you. How can I help you today? Human: I'm doing well! Just having a conversation with an AI. AI: ",
        "id": 82,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 10,
        "text": "$\\mathrm { > }$ Finished chain. ",
        "id": 83,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 24,
        "text": "That's great! It's always nice to have a conversation with someone new. W hat would you like to talk about? ",
        "id": 84,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 13,
        "length_tokens": 8,
        "text": "4-ConversationChain.ipynb ",
        "id": 85,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 14,
        "length_tokens": 14,
        "text": "Case：动手搭建本地知识 智能客服 ",
        "id": 86,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "Agent设计",
        "id": 87,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 62,
        "text": "AGENT_TMPL $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"\"\"按照给定的格式回答以下问题。你可以使  \n用下面这些工具：  \n{tools}  \n回答时需要遵循以下用---括起来的格式：  \nQuestion:我需要回答的问题",
        "id": 88,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 56,
        "text": "Thought:回答这个上述我需要做些什么Action:\"{tool_names}\" 中的一个工具名Action Input:选择这个工具所需要的输入Observation:选择这个工具返回的结果.…. (这个思考/行动/行动输入/观察可以重复N次)",
        "id": 89,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 90,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 17,
        "text": "Thought:我现在知道最终答案FinalAnswer:原始输入问题的最终答案",
        "id": 91,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 0,
        "text": "",
        "id": 92,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 23,
        "text": "现在开始回答，记得在给出最终答案前，需要按照指定格式进行一步一步的推理，",
        "id": 93,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 13,
        "text": "Question: {input} {agent_scratchpad} = ",
        "id": 94,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 9,
        "text": "这个模版中，最重要的是：",
        "id": 95,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "Thought ",
        "id": 96,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 2,
        "text": "Action ",
        "id": 97,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 3,
        "text": "Action Input ",
        "id": 98,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 15,
        "length_tokens": 16,
        "text": "这3个部分是AI在Chain中进行自我思考的过程",
        "id": 99,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 3,
        "text": "LangChain使用",
        "id": 100,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 152,
        "text": "请输入您的问题：Model3怎么样？  \n[1m> Fntering new AgentExecutor chain .. [[0m  \n32;1m1;3mThought：我需要找到Model 3的产品描述和公司相关信息来回答这个问题。  \nAction：查询产品名称  \nAction Input: Model 3£[0m  \nObservation:[36:1m1:3m具有简洁、动感的外观设计，流线型车身和现代化前脸。定价23.19-33.19万0m  \n32;1m[1;3m我需要进一步了解公司相关信息，以便回答这个问题。  \nAction:公司相关信息  \nAction Input：特",
        "id": 101,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 107,
        "text": "解公司相关信息，以便回答这个问题。  \nAction:公司相关信息  \nAction Input：特斯拉0m  \nObservation:[33;1m1;3m特斯拉最知名的产品是什么？公司以什么而闻名？在车辆中引入了哪些驾驶辅助功能？0mRetrying langchain.llms.openai.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds_as it raised APIConnectionError: Error communicating with OpenAI: ('Connection ab",
        "id": 102,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 139,
        "text": ": Error communicating with OpenAI: ('Connection aborted.’， RemoteDisconnected(' Remote encclosed_ connection without response'))  \n[32;1m1;3m根据产品描述和公司相关信息，我可以回答这个问题了。  \nFinal Answer：Model3是一款具有简洁、动感的外观设计，流线型车身和现代化前脸的车型，定价在23.19-33.19万之间。它是特斯拉公司的产品之一，特斯拉公司以电动汽车和可再生能源技术而闻名，Model 3也是一款电动汽车，同时还引入了多种驾驶辅",
        "id": 103,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 176,
        "text": "，特斯拉公司以电动汽车和可再生能源技术而闻名，Model 3也是一款电动汽车，同时还引入了多种驾驶辅助功能。0m  \n1m> Finished chain. £0m  \nModel 3是一款具有简洁、动感的外观设计，流线型车身和现代化前脸的车型，定价在23.19-  \n33.19万之间。它是特斯拉公司的产品之一，特斯拉公司以电动汽车和可再生能源技术而闻名，Model  \n3也是一款电动汽车，同时还引入了多种驾驶辅助功能。  \n这个prompt中，最重要的是：  \nThought  \nAction  \nAction Input  \n可以重复N次，直到  \nThought:我现在知道最终答案  ",
        "id": 104,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 32,
        "text": "n  \nAction Input  \n可以重复N次，直到  \nThought:我现在知道最终答案  \nFinalAnswer:原始输入问题的最  \n终答案",
        "id": 105,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 16,
        "length_tokens": 0,
        "text": "",
        "id": 106,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 17,
        "length_tokens": 13,
        "text": "Case: 动手搭建一个本地知识智能客服 ",
        "id": 107,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 17,
        "length_tokens": 107,
        "text": "#定义LLM  \nIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tongyi(model_name=\"qwen-turbo\",dashscope_api_key=DASHSCOPE_API_KEY)  \n#自有数据  \ntesla_data_source $\\mathbf { \\tau } = \\mathbf { \\tau }$ TeslaDataSource(llm)  \n#定义的Tools  \ntools $\\mathbf { \\tau } = \\mathbf { \\tau }$ LTool(name=\"查询产品名称\",func $\\Bumpeq$ te",
        "id": 108,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 17,
        "length_tokens": 105,
        "text": "bf { \\tau }$ LTool(name=\"查询产品名称\",func $\\Bumpeq$ tesla_data_source.find_product_description,description $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ '通过产品名称找到产品描述时用的工具，输入应该是产品名称\",），Tool(name $u ^ { \\prime }$ '公司相关信息\",func $\\mathop { : = }$ tesla_data_source.find_company_info,description $= ^ { \\mat",
        "id": 109,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 17,
        "length_tokens": 99,
        "text": "a_source.find_company_info,description $= ^ { \\mathsf { 1 } }$ '当用户询问公司相关的问题，可以通过这个工具了解相关信息\",），  \n让LLM能使用tools，按照规定的  \nprompt执行  \n在这个prompt中，不断的：  \nThought $\\Rightarrow$ Action, Action Input $\\Rightarrow$   \nObservation  \n直到  \nThought:我现在知道最终答案  \nFinalAnswer:原始输入问题的最  \n终答案",
        "id": 110,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 17,
        "length_tokens": 0,
        "text": "",
        "id": 111,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 18,
        "length_tokens": 12,
        "text": "Case：动手搭建一个本地知识智能客服",
        "id": 112,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 18,
        "length_tokens": 72,
        "text": "#主过程：可以一直提问下去，直到 $c _ { t r 1 + C }$   \nwhile True: try: user_input $\\mathbf { \\tau } = \\mathbf { \\tau }$ input(\"请输入您的问题：\") response agent_executor.run(user_input) output_response(response) except Keyboardlnterrupt: break ",
        "id": 113,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 18,
        "length_tokens": 62,
        "text": "#定义Agent执行器 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ Agent $+$ Tools agent_executor $\\mathbf { \\tau } = \\mathbf { \\tau }$ AgentExecutor.from_agent_and_tools( agent=agent, tools $\\ c =$ tools, verbose $\\ c =$ True ",
        "id": 114,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 18,
        "length_tokens": 29,
        "text": "#定义Agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ Ilm_chain $+$ output_parser $+$ tools_names ",
        "id": 115,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 18,
        "length_tokens": 22,
        "text": "agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ LLMSingleActionAgent( ",
        "id": 116,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 18,
        "length_tokens": 53,
        "text": "Illm_chain $\\ c =$ llm_chain, output_parser $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ output_parser, stop $\\ c =$ [\"\\nObservation:\"], allowed_tools $\\ c =$ tool_names, ） ",
        "id": 117,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 12,
        "text": "Case：动手搭建一个本地知识智能客服",
        "id": 118,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 5,
        "text": "#用户定义的模板",
        "id": 119,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 21,
        "text": "agent_prompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ CustomPromptTemplate( ",
        "id": 120,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 76,
        "text": "template $\\mathop { \\cdot } =$ AGENT_TMPL, tools $\\ c =$ tools, input_variables $\\ c =$ [\"input\",\"intermediate_steps\"],   \n#Agent返回结果解析   \noutput_parser $\\mathbf { \\tau } = \\mathbf { \\tau }$ CustomOutputParser()   \n#最常用的Chain,由LLM+ PromptTemplate组成 ",
        "id": 121,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 32,
        "text": "Ilm_chain $\\mathbf { \\tau } = \\mathbf { \\tau }$ LLMChain(llm=llm, prompt=agent_prompt) ",
        "id": 122,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 58,
        "text": "#定义的工具名称 tool_names $\\mathbf { \\tau } = \\mathbf { \\tau }$ [tool.name for tool in tools] #定义Agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ Ilm_chain $+$ output_parser $+$ tools_names ",
        "id": 123,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 0,
        "text": "",
        "id": 124,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 22,
        "text": "agent $\\mathbf { \\tau } = \\mathbf { \\tau }$ LLMSingleActionAgent( ",
        "id": 125,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 19,
        "length_tokens": 52,
        "text": "Ilm_chain $\\ c =$ llm_chain, output_parser $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ output_parser, stop $\\mid =$ [\"\\nObservation:\"], allowed_tools $\\ c =$ tool_names, ",
        "id": 126,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 20,
        "length_tokens": 4,
        "text": "ReAct范式",
        "id": 127,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 20,
        "length_tokens": 6,
        "text": "ReAct范式: ",
        "id": 128,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 20,
        "length_tokens": 32,
        "text": "ReAct: Synergizing Reasoning and Acting in Language Models,2022 https://arxiv.0rg/abs/2210.03629 ",
        "id": 129,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 20,
        "length_tokens": 30,
        "text": "·将推理和动作相结合，克服LLM胡言乱语的问题同时提高了结果的可解释性和可信赖度",
        "id": 130,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 20,
        "length_tokens": 12,
        "text": "Thinking: 作者对人类的行为的洞察：",
        "id": 131,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 20,
        "length_tokens": 34,
        "text": "人们在从事一项需要多个步骤的任务时， 在步骤和步骤之间， 或者动作和动作之间，一般都会有推理过程。",
        "id": 132,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 7,
        "text": "(1) Hotspot QA ",
        "id": 133,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 25,
        "text": "Question: Aside from the Apple Remote， what other device can control the program Apple Remote was originally designed to interact with? ",
        "id": 134,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 6,
        "text": "(1a) Standard ",
        "id": 135,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 8,
        "text": "(1c) Act-Only ",
        "id": 136,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 5,
        "text": "Answer: iPod ",
        "id": 137,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 11,
        "text": "(1b) CoT (Reason Only) ",
        "id": 138,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 46,
        "text": "Act 1: Search[Apple Remote] Obs 1: The Apple Remote is a remote control   \nAct 2: Search[Front Row]   \nObs 2: Could not find [Front Row]. Similar: ... ",
        "id": 139,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 52,
        "text": "Thought: Let's think step by step. Apple Remote was originally designed to interact with Apple TV. Apple TV can be controlled by iPhone， iPad， and iPod Touch. So the answer is iPhone，iPad，and iPod Touch. ",
        "id": 140,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "Answer: iPhone， iPad， iPodTouch ×",
        "id": 141,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "Act 3: Search[Front Row (software)] ",
        "id": 142,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 13,
        "text": "Obs 3: Front Row is a discontinued media center software ",
        "id": 143,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 9,
        "text": "Act 4: Finish[yes] ",
        "id": 144,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 12,
        "text": "(1d) ReAct (Reason + Act) ",
        "id": 145,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 66,
        "text": "Thought 1: I need to search Apple Remote and find the program it was originally designed to interact with.   \nAct 1: Search[Apple Remote]   \nObs 1: The Apple Remote is a remote control introduced in October 20o5 by Apple .. originally designed to control the Front Row media center program ... Though",
        "id": 146,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 70,
        "text": "trol the Front Row media center program ... Thought 2: Apple Remote was originally designed to control the Front Row media center program. I need to search Front Row next and find what other device can control it.   \nAct 2: Search[Front Row]   \nObs 2: Could not find [Front Row]. Similar: ['Front Row",
        "id": 147,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 81,
        "text": ": Could not find [Front Row]. Similar: ['Front Row Seat to Earth'，'Front Row Motorsports'，' Front Row   \n(software)'，...]   \nThought 3: Front Row is not found. I need to search Front   \nRow (software)   \nAct 3: Search[Front Row (software)]   \nObs 3: Front Row is a discontinued media center software ",
        "id": 148,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 149,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 0,
        "text": "",
        "id": 150,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 21,
        "length_tokens": 39,
        "text": "Thought 4: Front Row (software) is controlled by an Apple Remote or the keyboard function keys. So the answer is keyboard function keys. Act 4: Finish[keyboard function keys ",
        "id": 151,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "ReAct范式",
        "id": 152,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 25,
        "text": "Question：除了苹果遥控器，还有什么设备能解决苹果遥控器最早设计交互的控制问题？",
        "id": 153,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 13,
        "text": "ReAct $\\cdot$ Reason $^ +$ Act ",
        "id": 154,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "Apple遥控器最早只能控制FrontRow软件",
        "id": 155,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 21,
        "text": "FrontRow软件可以被两种设备控制，Apple遥控器和键盘的功能键。",
        "id": 156,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "所以，正确答案是键盘的功能键。",
        "id": 157,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 11,
        "text": "ReAct这个方式，简单有效，可解释性强",
        "id": 158,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 19,
        "text": "机器把想法写出来，然后结合想法和观察，做出相应的动作",
        "id": 159,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "Though: ... ",
        "id": 160,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "Action: ... ",
        "id": 161,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 22,
        "length_tokens": 4,
        "text": "Observation: .. ",
        "id": 162,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 23,
        "length_tokens": 2,
        "text": "Summary ",
        "id": 163,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 23,
        "length_tokens": 77,
        "text": "·Agent的核心是把LLM当作推理引擎，让它能使用外部工具，以及自己的长期记忆，从而完成灵活的决策步骤，进行复杂任务LangChain里的Chain的概念，是由人来定义的一套流程步骤来让LLM执行，可以看成是把LLM当成了一个强大的多任务工具",
        "id": 164,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 23,
        "length_tokens": 13,
        "text": "典型的Agent逻辑 （比如 ReAct）: ",
        "id": 165,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 23,
        "length_tokens": 40,
        "text": "·由LLM选择工具。  \n·执行工具后，将输出结果返回给LLM  \n·不断重复上述过程，直到达到停止条件，通常是LLM自己认为找到答案了",
        "id": 166,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 24,
        "length_tokens": 10,
        "text": "CASE：工具链组合设计（LangChain)",
        "id": 167,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "工具链组合设计",
        "id": 168,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 25,
        "length_tokens": 4,
        "text": "工具链组合设计",
        "id": 169,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 25,
        "length_tokens": 39,
        "text": "在Agent系统中，工具链是实现复杂任务的关键组件。通过将多个工具组合，Agent可以逐步处理复杂的问题。示例：LangChain中的工具加载与组合",
        "id": 170,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 25,
        "length_tokens": 17,
        "text": "from langchain.agents import load_tools from langchain.llms import OpenAl ",
        "id": 171,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 25,
        "length_tokens": 101,
        "text": "IIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tongyi(model_name $= ^ { \\mathsf { \\Gamma } }$ \"qwen-turbo\",dashscope_api_key $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ DASHSCOPE_API_KEY) tools $\\mathbf { \\tau } = \\mathbf { \\tau }$ load_tools([\"serpapi\",\"llm-math\"], Ilm=llm) ",
        "id": 172,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 25,
        "length_tokens": 42,
        "text": "这里加载了搜索引擎工具（serpapi）和数学计算工具（m-math），并将其与语言模型（LLM）组合使用，以处理需要搜索和计算的任务",
        "id": 173,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "CASE：工具链组合",
        "id": 174,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 6,
        "text": "TODO：工具链组合设计",
        "id": 175,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 10,
        "text": "通过组合三个工具来解决复杂任务，包括：",
        "id": 176,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 75,
        "text": "·文本分析工具(TextAnalysisTool)：负责分析文本内容，提取统计信息和情感倾向。  \n·数据转换工具(DataConversionTool)：实现不同数据格式之间的转换，目前支持JSON和cSv格式互转。  \n·文本处理工具(TextProcessingTool)：提供文本处理功能，如统计行数、查找文本和替换文本。",
        "id": 177,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 5,
        "text": "测试用例: ",
        "id": 178,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 60,
        "text": "1、分析以下文本的情感倾向，并统计其中的行数：‘这个产品非常好用，我很喜欢它的设计，使用体验非常棒！\\n价格也很合理，推荐大家购买。\\n客服态度也很好，解答问题很及时。‘",
        "id": 179,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 47,
        "text": "2、将以下csv数据转换为JsON格式：'name,age,comment\\n张三,25,这个产品很好\\n李四,30,服务态度差\\n王五,28,性价比高",
        "id": 180,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 26,
        "length_tokens": 49,
        "text": "3、分析以下文本，找出所有包含好的行，然后将结果转换为JSON格式：“产品A：质量好，价格合理\\n产品B：外观好，但价格贵\\n产品c：性价比好，推荐购买",
        "id": 181,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 27,
        "length_tokens": 5,
        "text": "CASE：工具链组合",
        "id": 182,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 27,
        "length_tokens": 12,
        "text": "Thinking: 整体的工作流程是怎样的？",
        "id": 183,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 27,
        "length_tokens": 7,
        "text": "Step1，用户提交任务描述",
        "id": 184,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 27,
        "length_tokens": 11,
        "text": "Step2，Agent分析任务，决定使用哪些工具",
        "id": 185,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 27,
        "length_tokens": 13,
        "text": "Step3，Agent通过ReAct框架调用相应工具",
        "id": 186,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 27,
        "length_tokens": 13,
        "text": "Step4，系统整合各工具结果，生成最终回答",
        "id": 187,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 5,
        "text": "CASE：工具链组合",
        "id": 188,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 61,
        "text": "任务1、分析以下文本的情感倾向，并统计其中的行数：‘这个产品非常好用，我很喜欢它的设计，使用体验非常棒！\\n价格也很合理，推荐大家购买。\\n客服态度也很好，解答问题很及时。‘",
        "id": 189,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 17,
        "text": "我需要先分析文本的情感倾向，然后统计其中的行数。",
        "id": 190,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "行动：文本分析",
        "id": 191,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 45,
        "text": "行动输入：这个产品非常好用，我很喜欢它的设计，使用体验非常棒！\\n价格也很合理，推荐大家购买。\\n客服态度也很好，解答问题很及时。‘",
        "id": 192,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 21,
        "text": "观察:{'word_count':34,'char_count': 102,'sentiment': 'positive'} ",
        "id": 193,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 17,
        "text": "思考：我已经得到了情感倾向，现在需要统计行数。",
        "id": 194,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 4,
        "text": "行动：文本处理",
        "id": 195,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 84,
        "text": "行动输入:operation $\\mathbf { \\Phi } = \\mathbf { \\ \" }$ count_lines',content $\\mathbf { \\lambda } = \\mathbf { \\lambda } ^ { \\prime }$ 这个产品非常好用，我很喜欢它的设计，使用体验非常棒！\\n价格也很合理，推荐大家购买。\\n客服态度也很好，解答问题很及时。‘",
        "id": 196,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 28,
        "length_tokens": 44,
        "text": "观察:{'line_count': 3}  \n思考：我现在已经有了最终答案  \n回答：这段文本的情感倾向是积极的（positive），并且它共有3行。",
        "id": 197,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 29,
        "length_tokens": 5,
        "text": "CASE：工具链组合",
        "id": 198,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 29,
        "length_tokens": 47,
        "text": "2、将以下csv数据转换为JsON格式：'name,age,comment\\n张三,25,这个产品很好\\n李四,30,服务态度差\\n王五,28,性价比高",
        "id": 199,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 29,
        "length_tokens": 10,
        "text": "我需要将CSV格式的数据转换为JSON格式",
        "id": 200,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 29,
        "length_tokens": 4,
        "text": "行动：数据转换",
        "id": 201,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 29,
        "length_tokens": 141,
        "text": "行动输入:{\"input_data\":\"name,age,comment\\n张三,25,这个产品很好\\n李四,30,服务态度差\\n王五,28,性价比高\",   \n\"input_format\": \"csv\",\"output_format\": \"json\"}   \n观察:{\"name\":\"\\u5f2\\u4e09\",\"age\":\"25\",\"comment\":\"\\u8fd9\\ue2a\\u4ea7\\u54c\\u5f88\\u597d\"},{\"name\":\"\\u674e\\u56db\",   \n\"age\":\"30\",\"comment\": \"\\u670d\\u52a1\\u6001\\u5ea6\\u5dee\",{\"n",
        "id": 202,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 29,
        "length_tokens": 135,
        "text": "0\",\"comment\": \"\\u670d\\u52a1\\u6001\\u5ea6\\u5dee\",{\"name\":\"\\u738b\\u4e94\",\"age\":\"28\",\"comment\":   \n\"\\u6027\\u4ef7\\u6bd4\\u9ad8\"}]   \n思考：我现在已经有了最终答案   \n回答:cSV数据已成功转换为JSON格式：[\"name\":\"张三\",\"age\":\"25\",\"comment\":\"这个产品很好\"},{\"name\":\"李四\",\"age\":\"30\",   \n\"comment\":\"服务态度差\"},{\"name\":\"王五\",\"age\":\"28\",\"comment\":\"性价比高\"}] ",
        "id": 203,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 5,
        "text": "CASE：工具链组合",
        "id": 204,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 11,
        "text": "Thinking: 工具链是如何创建出来的？",
        "id": 205,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 18,
        "text": "create_tool_chain()函数负责初始化各工具并组合成一个完整的工具链:",
        "id": 206,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 6,
        "text": "def create_tool_chain(): ",
        "id": 207,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 65,
        "text": "#创建工具实例 text_analysis $\\mathbf { \\tau } = \\mathbf { \\tau }$ TextAnalysisTool() data_conversion $\\mathbf { \\tau } = \\mathbf { \\tau }$ DataConversionTool() text_processing $\\mathbf { \\tau } = \\mathbf { \\tau }$ TextProcessingTool() ",
        "id": 208,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 67,
        "text": "#将工具包装为LangChain工具格式$\\mathrm { t o o l } s = [ \\mathsf { T o o l } ( \\ldots ) , \\mathsf { T o o l } ( \\ldots ) , \\mathsf { T o o l } ( \\ldots ) ]$ ",
        "id": 209,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 72,
        "text": "#初始化语言模型 Im $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tongyi(model_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"qwen-turbo\", dashscope_api_key $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ DASHSCOPE_API_KEY) ",
        "id": 210,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 90,
        "text": "#创建提示模板   \nprompt $\\mathbf { \\tau } = \\mathbf { \\tau }$ PromptTemplate.from_template(..)   \n#创建代理   \nagent $\\mathbf { \\tau } = \\mathbf { \\tau }$ create_react_agent(llm, tools, prompt)   \n#创建代理执行器   \nagent_executor $\\mathbf { \\tau } = \\mathbf { \\tau }$ AgentExecutor.from_agent_and_tools(...)   \nretur",
        "id": 211,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 30,
        "length_tokens": 13,
        "text": "$ AgentExecutor.from_agent_and_tools(...)   \nreturn agent_executor ",
        "id": 212,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 5,
        "text": "CASE：工具链组合",
        "id": 213,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 12,
        "text": "Thinking: 提示词模版是怎样的？ ",
        "id": 214,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 26,
        "text": "你是一个有用的AI助手，可以使用以下工具：  \n{tools}  \n可用工具名称:{tool_names}",
        "id": 215,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 4,
        "text": "使用以下格式：",
        "id": 216,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 40,
        "text": "问题：你需要回答的问题  \n思考：你应该始终思考要做什么  \n行动：要使用的工具名称  \n行动输入：工具的输入  \n观察：工具的结果",
        "id": 217,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 26,
        "text": "... (这个思考/行动/行动输入/观察可以重复多次)回答：对原始问题的最终回答",
        "id": 218,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 18,
        "text": "开始!  \n问题: {input}  \n思考: {agent_scratchpad}",
        "id": 219,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 62,
        "text": "在LangChain中，{agent_scratchpad} 是一个重要的占位符变量，用于在智能体（Agent）运行过程中临时存储和传递中间步骤的信息（比如思考过程、工具调用记录等）。它的作用类似于一个\"草稿本\"",
        "id": 220,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 31,
        "length_tokens": 81,
        "text": "create_react_agent是 LangChain中自定义 ReAct智能体的底层方法。  \n它允许你自定义提示词（Prompt），并将工具链、推理流程等信息以变量的形式插入到提示词中。  \n当你用PromptTemplate创建提示词时，LangChain会自动把{tools}、{tool_names}替换为实际内容。",
        "id": 221,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 32,
        "length_tokens": 4,
        "text": "实现细节 ",
        "id": 222,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 32,
        "length_tokens": 26,
        "text": "ReAct框架：使用LangChain的ReAct框架，允许代理执行思考-行动-观察的循环：",
        "id": 223,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 32,
        "length_tokens": 67,
        "text": "1.\\*\\*思考\\*\\*：分析任务，确定下一步行动  \n2.\\*\\*行动\\*\\*：调用适当的工具  \n3.\\*\\*观察\\*\\*：分析工具返回的结果  \n4.\\*\\*重复\\*\\*：根据观察结果继续思考，直到任务完成",
        "id": 224,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 32,
        "length_tokens": 54,
        "text": "工具注册与调用：每个工具需要以特定格式注册，包括名称、描述和执行函数：  \nTool(name $\\ c =$ tool_instance.name,func $\\mathbf { \\sigma } =$ tool_instance.run,description $\\ c =$ \"工具描述...\"  \n）",
        "id": 225,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 33,
        "length_tokens": 4,
        "text": "实现细节 ",
        "id": 226,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 33,
        "length_tokens": 68,
        "text": "内存与上下文：系统使用\\`ConversationBufferMemory'存储对话历史，使代理能够参考之前的交互memory $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ ConversationBufferMemory(memory_key $= ^ { \\mathsf { \\Gamma } }$ \"chat_history\")",
        "id": 227,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 34,
        "length_tokens": 7,
        "text": "打卡：工具链组合设计",
        "id": 228,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 34,
        "length_tokens": 52,
        "text": "在我们的工作中，会有很多工具可以使用，比如：  \n文本分析工具(TextAnalysisTool)  \n数据转换工具(DataConversionTool)  \n文本处理工具(TextProcessingTool)  \n使用LangChain将这些工具组合起来进行使用，完成复杂的任务",
        "id": 229,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 35,
        "length_tokens": 14,
        "text": "CASE：搭建故障诊断Agent (LangChain) ",
        "id": 230,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 231,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 17,
        "text": "@1-simple_toolchain.py理解代码，帮撰写文档.md ",
        "id": 232,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 23,
        "text": "好的，我将为你分析 1-simple_toolchain.py 文件并创建一个 Markdown 文档来解释它。",
        "id": 233,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 92,
        "text": "这个脚本的核心功能是演示如何使用LangChain 框架创建一个包含自定义工具的 Agent。它定义了三个自定义工具: TextAnalysisTool (文本分析)， DataConversionTool (数据转换),和 TextProcessingTool (文本处理)，然后将这些工具集成到一个 ReAct Agent 中，该 Agent 使用通义千问 (Tongyi) LLM 来决定调用哪个工具来完成用户指定的任务。",
        "id": 234,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 19,
        "text": "我现在将为你创建README.md文件，其中包含对该脚本的详细说明。",
        "id": 235,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 23,
        "text": "$\\textcircled{ i}$ README.md (new) $+ 8 1 - 7$ ：",
        "id": 236,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 16,
        "text": "\\*\\*\\* □ × √ <: 1-simple_toolchain.py 文档",
        "id": 237,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 0,
        "text": "",
        "id": 238,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 27,
        "text": "本文档介绍了‘1-simple_toolchain.py 脚本的功能和用法。该脚本演示了如",
        "id": 239,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "##功能概述",
        "id": 240,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "脚本的主要功能包括：",
        "id": 241,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 15,
        "text": "\\*\\*定义自定义工具 $^ { * * }$ .",
        "id": 242,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 65,
        "text": "$*$ TextAnalysisTool\\`：分析文本内容，提取字数、字符数和基本的情$*$ DataConversionTool\\`：在 JSoN 和 cSV 数据格式之间进行转换。$*$ TextProcessingTool\\`：对文本进行处理，如统计行数、查找文本、",
        "id": 243,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 13,
        "text": "2. \\*\\*创建 LangChain Agent\\*\\*;",
        "id": 244,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 11,
        "text": "1 √# 1-simple_toolchain.py 文档",
        "id": 245,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 44,
        "text": "3本文档介绍了‘1-simple_toolchain.py’脚本的功能和用法。该脚本演示了如何使用LangChain 框架创建一个集成自定义工具的智能Agento",
        "id": 246,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 4,
        "text": "##功能概述",
        "id": 247,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 7,
        "text": "脚本的主要功能包括：",
        "id": 248,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 12,
        "text": "1. \\*\\*定义自定义工具\\*\\*:",
        "id": 249,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 77,
        "text": "\\* \\`TextAnalysisTool\\`：分析文本内容，提取字数、字符数和基本的情感倾向。  \n\\* \\`DataConversionTool\\`：在 JSON 和 CSV 数据格式之间进行转换。  \n$^ *$ ‘TextProcessingTool：对文本进行处理，如统计行数、查找文本、替换文本。",
        "id": 250,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 13,
        "text": "132． \\*\\*创建 LangChain Agent\\*\\*: ",
        "id": 251,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 93,
        "text": "$*$ 使用通义千问（Tongyi）‘qwen-turbo’模型作为 LLM。$^ *$ 将上述自定义工具集成到 Agent 中。  \n$^ *$ 使用 ReAct（Reasoning and Acting）模式，让 Agent 能够思考并选择合适的工具来执行任务。  \n$*$ （20 包含对话记忆（ConversationBufferMemory\\`）以支持多轮交互。",
        "id": 252,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 2,
        "text": "17 ",
        "id": 253,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 9,
        "text": "\\*\\*执行任务\\*\\*: ",
        "id": 254,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 36,
        "length_tokens": 34,
        "text": "$*$ 提供‘process_task’函数，接收用户输入的任务描述。  \n\\* 使用创建的 Agent Executor 来处理任务，并返回最终结果。",
        "id": 255,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 256,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 72,
        "text": "帮我搭建一个网络故障诊断类的Agent，工具之间存在串联，第一个工具的输出是第二个工具的输入；如果有10个工具的话，会有很多输入输出的关系。希望Agent，在适当的时候调用适合的工具；二二=可以参考@1-simple_toolchain.py编写新的Python",
        "id": 257,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 15,
        "text": "Let's create the new file 2-network_diagnosis_agent.py . ",
        "id": 258,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 75,
        "text": "2-network_diagnosis_agent.py +281 -1·10 $\\vee$ □  \nimport os  \nimport json  \nimport re  \nfrom typing import List，Union，Dict，Any，Optional  \nfrom langchain.agents import Tool，AgentExecutor，create_react_ag  \nfrom langchain.prompts import PromptTemplate  \nfrom langchain.schema import AgentAction，AgentFi",
        "id": 259,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 94,
        "text": " \nfrom langchain.schema import AgentAction，AgentFinish  \nfrom langchain_community.llms import Tongyi  \nfrom langchain.memory import ConversationBufferMemory  \n# --- 环境设置 -  \n# 确保设置了您的通义千问 API 密钥  \n#您可以通过环境变量DASHSCOPE API KEY设置，或者直接在这里修改  \n> 10 linter errors Auto-fix <  \n2-network_diagnosis_agent.py>",
        "id": 260,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 73,
        "text": " errors Auto-fix <  \n2-network_diagnosis_agent.py>..1 import os2 import json3 import re4 from typing import List，Union，Dict，Any，Optional56 from langchain.agents import Tool，AgentExecutor，create_reac7 from langchain.prompts import PromptTemplate8 from langchain.schema import AgentAction， AgentFinish9",
        "id": 261,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 93,
        "text": " langchain.schema import AgentAction， AgentFinish9 from langchain_community.llms import Tongyi  \n10 from langchain.memory import ConversationBufferMemory  \n11  \n12 # ---环境设置  \n13 # 确保设置了您的通义千问 API 密钥  \n14 # 您可以通过环境变量 DASHSCOPE_API_KEY 设置，或者直接在这里修改  \n15 # DASHSCOPE_API_KEY $\\mathbf { \\sigma } = \\math",
        "id": 262,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 127,
        "text": "15 # DASHSCOPE_API_KEY $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ OS.getenv('DASHSCOPE_API_KEY'，'您的API  \n16 #为方便演示，我们直接在此处硬编码（请注意在生产环境中保护好您的密钅  \n17 DASHSCOPE_API_KEY $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ 'sk-882e296067b744289acf27e6e20f3ec0' #请  \n18  \n19 # --- 自定义网络诊断工具  \n20Qodo Gen: Options |Tes",
        "id": 263,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 104,
        "text": "18  \n19 # --- 自定义网络诊断工具  \n20Qodo Gen: Options |Test this class  \n21 class PingTool:  \n22 \"\"\"执行 Ping 操作以检查与目标的网络连通性。Qodo Gen: Options |Test this method |  \n23 def__init__(self):  \n24 self.name $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"网络连通性检查（Ping)\"  \n25 self.description $\\mathbf { \\sigma } = \\mathb",
        "id": 264,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 67,
        "text": " \n25 self.description $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"检查本机到指定主机名或 IP 地址的网络  \n26Qodo Gen: Options |Test this method|  \n27 def run(self，target: str) -> str:  \n28 \"\"\"模拟执行 ping 命令。",
        "id": 265,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 37,
        "length_tokens": 0,
        "text": "",
        "id": 266,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 267,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 19,
        "text": "帮我理解 @2-network_diagnosis_agent.py并撰写项目逻辑.md",
        "id": 268,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "Thought for 11 seconds ",
        "id": 269,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 20,
        "text": "network_diagnosis_agent_logic.md $+ 1 3 7 - 1 =$ ",
        "id": 270,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 0,
        "text": "",
        "id": 271,
        "type": "image",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "#网络故障诊断 Agent项目逻辑",
        "id": 272,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 21,
        "text": "本文档详细介绍了‘2-network_diagnosis_agent.py’ 的项目逻辑，它是一个",
        "id": 273,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "##1．项目概述",
        "id": 274,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 21,
        "text": "该项目创建了一个智能Agent，能够根据用户描述的网络问题，通过逻辑分析和二",
        "id": 275,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "关键特点：",
        "id": 276,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 93,
        "text": "使用\\*\\*通义千问（Tongyi）\\*\\*作为底层大模型采用 \\*\\*ReAct (Reasoning and Acting) \\*\\*推理模式提供多种模拟的\\*\\*网络诊断工具\\*\\*实现了工具之间的\\*\\*串联调用\\*\\*，其中一个工具的输出可以成为另一个工具的车具备\\*\\*会话记忆\\*\\*功能",
        "id": 277,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "#网络故障诊断 Agent项目逻辑",
        "id": 278,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 47,
        "text": "本文档详细介绍了‘2-network_diagnosis_agent.py’ 的项目逻辑,它是一个使用LangChain 框架和大型语言模型（LLM）构建的网络故障诊断智能系统。",
        "id": 279,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "##1，项目概述",
        "id": 280,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 41,
        "text": "该项目创建了一个智能Agent，能够根据用户描述的网络问题，通过逻辑分析和工具调用，一步步诊断网络故障，最终给出可能的问题原因和解决方案。",
        "id": 281,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 3,
        "text": "关键特点：",
        "id": 282,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 102,
        "text": "－使用\\*\\*通义千问（Tongyi）\\*\\*作为底层大模型  \n、采用 \\*\\*ReAct （Reasoning and Acting）\\*\\*推理模式  \n提供多种模拟的\\*\\*网络诊断工具\\*\\*  \n－实现了工具之间的\\*\\*串联调用\\*\\*，其中一个工具的输出可以成为另一个  \n工具的输入  \n－具备\\*\\*会话记忆\\*\\*功能",
        "id": 283,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 6,
        "text": "##2．系统架构",
        "id": 284,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 38,
        "length_tokens": 10,
        "text": "系统架构由以下核心组件构成：",
        "id": 285,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 286,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 8,
        "text": "##3.诊断工具详解",
        "id": 287,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 15,
        "text": "###3.3本地网络接口检查工具(InterfaceCheckTool)",
        "id": 288,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 175,
        "text": "###3.1网络连通性检查工具 (PingTool)  \n-\\*\\*功能\\*\\*：检查从本机到指定主机名或IP的网络连通性  \n- \\*\\*输入\\*\\*：目标主机名或IP地址  \n-\\*\\*输出\\*\\*：连通性状态（成功/失败）和网络延迟  \n\\*\\*使用场景\\*\\*：验证网络连接是否通畅，检测网络延迟  \n\\*\\*功能\\*\\*：检查本地网络接口的状态  \n-\\*\\*输入\\*\\*：（可选）接口名称  \n\\*\\*输出\\*\\*：接口状态信息 (是否启用、IP地址、子网掩码等)  \n-\\*\\*使用场景\\*\\*：检查本地网络配置是否正确",
        "id": 289,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 290,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 14,
        "text": "###3.2 DNS 解析查询工具 (DNSTool)",
        "id": 291,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 16,
        "text": "-\\*\\*功能\\*\\*：将主机名解析为IP地址",
        "id": 292,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 13,
        "text": "### 3.4 网络日志分析工具(LogAnalysisTool)",
        "id": 293,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 14,
        "text": "-\\*\\*输入\\*\\*：需要解析的主机名",
        "id": 294,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 73,
        "text": "-\\*\\*功能\\*\\*：在系统或应用日志中搜索网络相关问题  \n-\\*\\*输入\\*\\*：关键词和可选的时间范围  \n-\\*\\*输出\\*\\*：匹配的日志条目  \n-\\*\\*使用场景\\*\\*：查找历史网络错误记录，发现非实时故障的",
        "id": 295,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 46,
        "text": "-\\*\\*输出\\*\\*：解析后的IP地址或解析失败信息-\\*\\*使用场景\\*\\*：诊断DNS解析问题，为后续的连通性测试提 线索供IP地址",
        "id": 296,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 39,
        "length_tokens": 0,
        "text": "",
        "id": 297,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 298,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 40,
        "length_tokens": 8,
        "text": "###4.1工具链接示例",
        "id": 299,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 40,
        "length_tokens": 11,
        "text": "系统能够实现工具间的串联调用，例如：",
        "id": 300,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 40,
        "length_tokens": 101,
        "text": "问题：无法访问网站www.example.com  \n√  \nDNS解析查询(www.example.com) $$ 返回 IP: 93.184.216.34  \n√  \n网络连通性检查(93.184.216.34) $\\mid $ 返回连接超时  \n√  \n本地网络接口检查() $$ 返回接口正常  \n√  \n网络日志分析(\"timeout\") $$ 发现相关错误日志  \n√  \n诊断结论：可能是网络路由问题或目标服务器不可用",
        "id": 301,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 41,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 302,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 41,
        "length_tokens": 38,
        "text": "这个例子中，可以使用AgentType.ZERO_SHOT_REACT_DESCRIPTION这是LangChain 框架内置的一种Agent类型，属于\"Zero-Shot ReAct\"范式。",
        "id": 303,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 304,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 41,
        "length_tokens": 36,
        "text": "Zero-Shot：指的是大模型在没有额外训练或示例的情况下，直接根据提示词（Prompt）和工具描述来推理如何调用工具。",
        "id": 305,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 41,
        "length_tokens": 62,
        "text": "ReAct：是一种\"思考-行动-观察\"循环范式 (Reasoning $^ +$ Acting），即·模型会先思考 (Thought）,再决定调用哪个工具（Action）然后观察工具的输出 （Observation），·再继续推理，直到得出结论",
        "id": 306,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 41,
        "length_tokens": 0,
        "text": "",
        "id": 307,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 42,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 308,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 42,
        "length_tokens": 90,
        "text": "AgentType.ZERO_SHOT_REACT_DESCRIPTION的特点:自动读取你传入的工具（TooI）列表，每个工具的name和description会被自动拼接到系统提示词中。Agent会根据用户输入和工具描述，自动决定调用哪个工具、如何调用。你不需要自己写复杂的Prompt，LangChain 内部会自动生成一份标准的英文提示词，格式大致如右侧：",
        "id": 309,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 42,
        "length_tokens": 77,
        "text": "Answer the following questions as best you can. You have   \naccess to the following tools: <工具1名称>:<工具1描述> <工具2名称>:<工具2描述> Use the following format:   \nQuestion: the input question you must answer   \nThought: you should always think about what to do   \nAction: the action to take, should be one of[工具",
        "id": 310,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 42,
        "length_tokens": 74,
        "text": "  \nAction: the action to take, should be one of[工具1, 工具2, ...] Action Input: the input to the action Observation: the result of the action ... (this Thought/Action/Action Input/Observation can repeat   \nN times)   \nThought: I now know the final answer   \nFinal Answer: the final answer to the origina",
        "id": 311,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 42,
        "length_tokens": 14,
        "text": "r   \nFinal Answer: the final answer to the original input question ",
        "id": 312,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 11,
        "text": "CASE: 搭建故障诊断Agent ",
        "id": 313,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 14,
        "text": "需要检查本机到www.example.com的网络连通性。",
        "id": 314,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 11,
        "text": "Action:网络连通性检查(Ping) ",
        "id": 315,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 15,
        "text": "Action Input: www.example.com--模拟执行 Ping: www.example.com -",
        "id": 316,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 5,
        "text": "Action:网络日志分析",
        "id": 317,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 71,
        "text": "Action Input: keywords:'timeout', time_range:'过去1小时'---模拟分 析日志：关键词 $\\mathbf { \\alpha } = \\mathbf { \\alpha } ^ { \\prime }$ keywords:'timeout',time_range:'过去1小时\",时 间范围 $= ^ { \\prime }$ 过去1小时'--- ",
        "id": 318,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 16,
        "text": "Observation: Ping www.example.com 成功：延迟 59ms。 ",
        "id": 319,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 33,
        "text": "Thought:网络连通性检查显示可以成功访问www.example.com，因此问题可能不在于网络连接。接下来我需要检查DNS解析是否正常。",
        "id": 320,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 6,
        "text": "Action:DNS解析查询 ",
        "id": 321,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 16,
        "text": "Action Input: www.example.com--- 模拟 DNs 查询: www.example.com",
        "id": 322,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 17,
        "text": "Observation:在过去1小时的日志中找到3条与'keywords: ",
        "id": 323,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 16,
        "text": "'timeout',time_range:'过去1小时\"相关的条目：",
        "id": 324,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 36,
        "text": "-[Error]连接到10.0.0.88:8080超时-[Warning]对api.external.com的请求超时-[Error]内部服务通信超时",
        "id": 325,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 326,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 0,
        "text": "",
        "id": 327,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 22,
        "text": "Observation:DNs 解析www.example.com 成功： IP地址是93.184.216.34",
        "id": 328,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 40,
        "text": "Thought:DNs解析查询显示www.example.com的IP地址解析正常.既然网络连通性和DNS解析都没有问题，可能是其他因素导致浏览器连接超时。",
        "id": 329,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 74,
        "text": "Thought:网络日志分析显示有几条连接超时的记录，但它们与外部服务或内部网络相关，可能并不直接涉及www.example.com。由于网络连通性和DNS解析都没有问题，浏览器无法访问www.example.com的原因可能与其他因素有关，例如防火墙规则、代理设置或浏览器配置。",
        "id": 330,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 43,
        "length_tokens": 27,
        "text": "FinalAnswer:您的网络连通性和DNS解析均正常，但仍然无法通过浏览器访问www.example.com。建议...",
        "id": 331,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 44,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 332,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 333,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 59,
        "text": "LCEL是 LangChain推出的链式表达式语言，支持用\"I\"操作符将各类单元（如Prompt、LLM、Parser等）组合。  \n每个\"|\"左侧的输出会自动作为右侧的输入，实现数据流式传递。",
        "id": 334,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 3,
        "text": "优势: ",
        "id": 335,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 18,
        "text": "·代码简洁，逻辑清晰，易于多步任务编排 ",
        "id": 336,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 15,
        "text": "·支持多分支、条件、并行等复杂链路。",
        "id": 337,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 16,
        "text": "·易于插拔、复用和调试每个子任务。",
        "id": 338,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 5,
        "text": "典型用法：",
        "id": 339,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 28,
        "text": "·串联：\\`A丨B丨C\\`，A的输出传给B，B的输出传给C。",
        "id": 340,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 51,
        "text": "·分支： $\\because A ^ { \\prime \\prime } \\times \\dots = A , \\because y ^ { \\prime \\prime } \\colon B \\} ^ { \\cdot }$ ，并行执行A和B。",
        "id": 341,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 45,
        "length_tokens": 17,
        "text": "·支持流式：如‘.stream()方法可边生成边消费。",
        "id": 342,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 46,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 343,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 46,
        "length_tokens": 87,
        "text": "from langchain_core.prompts import ChatPromptTemplate   \nfrom langchain_community.llms import Tongyi #导入通义干问Tongyi模型   \nfrom langchain_core.output_parsers import StrOutputParser   \nIIm $\\mathbf { \\tau } = \\mathbf { \\tau }$ Tongyi(model_name $\\mathbf { \\tau } = \\mathbf { \\tau }$ 'qwen-turbo\",dashscop",
        "id": 344,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 46,
        "length_tokens": 104,
        "text": "{ \\tau } = \\mathbf { \\tau }$ 'qwen-turbo\",dashscope_api_key $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ DASHSCOPE_API_KEY, stream $\\Finv$ True)   \n#定义三个子任务：翻译 $\\cdot >$ 处理 $\\cdot >$ 回译   \ntranslate_to_en $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatPromptTemplate.from_template(\"Translate this to Eng",
        "id": 345,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 46,
        "length_tokens": 80,
        "text": "romptTemplate.from_template(\"Translate this to English: {input}\") | IIm | StrOutputParser()   \nprocess_text $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatPromptTemplate.from_template(\"Analyze this text: {text}\") | IIm | StrOutputParser()   \ntranslate_to_cn $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatPromp",
        "id": 346,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 46,
        "length_tokens": 88,
        "text": "cn $\\mathbf { \\tau } = \\mathbf { \\tau }$ ChatPromptTemplate.from_template(\"Translate this to Chinese: {output}\") | IIm | StrOutputParser()   \n#组合成多任务链   \nworkflow $\\equiv$ {\"text\": translate_to_en} 丨 process_text 丨translate_to_cn   \n#使用stream方法，边生成边打印   \nfor chunk in workflow.stream({\"input\": \"北京有哪些",
        "id": 347,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 46,
        "length_tokens": 58,
        "text": "印   \nfor chunk in workflow.stream({\"input\": \"北京有哪些好吃的地方，简略回答不超过200字\"}): print(chunk, end $= ^ { \\mathsf { \\Gamma } }$ \", flush $\\ c =$ True)   \nprint() #换行 ",
        "id": 348,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 47,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 349,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 47,
        "length_tokens": 21,
        "text": "TODO: 将工具链组合1-simple_toolchain.py， 改成LCEL任务链的形式",
        "id": 350,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 47,
        "length_tokens": 9,
        "text": "#工具链 (LCEL风格）",
        "id": 351,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 47,
        "length_tokens": 89,
        "text": "tools $= \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ \"文本分析\": RunnableLambda(lambda x: text_analysis.run(x[\"text\"])), \"数据转换\": RunnableLambda(lambda x:data_conversion.run(x[\"input_data\"],x[\"input_format\"],x[\"output_format\"]), \"文本处理\": RunnableLambda(lambdax: text_procesing.run(x[\"operation\"],x[\"",
        "id": 352,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 47,
        "length_tokens": 32,
        "text": "bda(lambdax: text_procesing.run(x[\"operation\"],x[\"content\"],\\*\\*x.get(\"kwargs\",{),   \nY ",
        "id": 353,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 47,
        "length_tokens": 40,
        "text": "#LCEL任务链 def Icel_task_chain(task_type, params): if task_type not in tools: return\"不支持的工具类型\" return tools[task_type].invoke(params) ",
        "id": 354,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 355,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 48,
        "length_tokens": 7,
        "text": "#示例1：文本分析",
        "id": 356,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 48,
        "length_tokens": 55,
        "text": "result1 $\\mathbf { \\tau } = \\mathbf { \\tau }$ lcel_task_chain(\"文本分析\",{\"text\":\"这个产品非常好用，我很喜欢它的设计，使用体验非常棒！\"})print(\"示例1结果:\",result1)",
        "id": 357,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 48,
        "length_tokens": 125,
        "text": "#示例2：数据格式转换  \ncsv_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"name,age,comment\\n张三,25,这个产品很好\\n李四,30,服务态度差\\n王五,28,性价比高'  \nresult2 $\\mathbf { \\tau } = \\mathbf { \\tau }$ lcel_task_chain(\"数据转换\",{\"input_data\": csv_data,\"input_format\":\"csv\",\"output_format\": \"json\"})  \nprint(\"示例2结果：\",result2)  \n#示例3：文本处理  ",
        "id": 358,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 48,
        "length_tokens": 101,
        "text": ": \"json\"})  \nprint(\"示例2结果：\",result2)  \n#示例3：文本处理  \ntext $\\mathbf { \\tau } = \\mathbf { \\tau }$ \"第一行内容\\n第二行内容\\n第三行内容\"  \nresult3 $\\mathbf { \\tau } = \\mathbf { \\tau }$ Icel_task_chain(\"文本处理\",{\"operation\": \"count_lines\",\"content\": text})  \nprint(\"示例3结果：\",result3)",
        "id": 359,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 48,
        "length_tokens": 0,
        "text": "",
        "id": 360,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 49,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 361,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 49,
        "length_tokens": 18,
        "text": "#示例4：多步串联 (先文本分析，再统计行数)",
        "id": 362,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 49,
        "length_tokens": 78,
        "text": "#先分析文本情感，再统计文本行数，展示LCEL链式组合  \ntext4 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"这个产品非常好用，我很喜欢它的设计，使用体验非常棒！\\n价格也很合理，推荐大家购买。\\n客服态度也很好，解  \n答问题很及时。\"",
        "id": 363,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 49,
        "length_tokens": 36,
        "text": "#第一步：文本分析analysis_result $\\mathbf { \\tau } = \\mathbf { \\tau }$ Icel_task_chain(\"文本分析\",{\"text\": text4})",
        "id": 364,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 49,
        "length_tokens": 7,
        "text": "#第二步：统计行数",
        "id": 365,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 49,
        "length_tokens": 69,
        "text": "line_count_result $\\mathbf { \\tau } = \\mathbf { \\tau }$ Icel_task_chain(\"文本处理\",{\"operation\": \"count_lines\",\"content\": text4}) print(\"示例4结果(多步串联）:\\n文本分析->\",analysis_result,\"\\n行数统计->\",line_count_result) ",
        "id": 366,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 50,
        "length_tokens": 7,
        "text": "LCEL构建任务链 ",
        "id": 367,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 50,
        "length_tokens": 135,
        "text": "#示例5：条件分支 (根据文本长度选择不同处理方式)  \n# 如果文本长度大于20，做文本分析，否则只统计行数  \ntext5 $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \"短文本示例\"  \nif len(text5) $> 2 0$ result5 $\\mathbf { \\tau } = \\mathbf { \\tau }$ Icel_task_chain(\"文本分析\",{\"text\": text5})print(\"示例5结果（条件分支）：文本较长，执行文本分析 $- > \"$ , result5)  \nelse:result5 $\\mathbf { \\",
        "id": 368,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 50,
        "length_tokens": 77,
        "text": "本分析 $- > \"$ , result5)  \nelse:result5 $\\mathbf { \\tau } = \\mathbf { \\tau }$ Icel_task_chain(\"文本处理\",{\"operation\": \"count_lines\",\"content\": text5})print(\"示例5结果（条件分支）：文本较短，只统计行数- $\\cdot > \"$ , result5)",
        "id": 369,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 51,
        "length_tokens": 17,
        "text": "Thinking:1-simple_toolchain.py 和2-simple_toolchain.py的区别是什么?",
        "id": 370,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 51,
        "length_tokens": 72,
        "text": "1-simple_toolchain.py是基于LangChain的Agent框架（如create_react_agent、AgentExecutor等），通过Agent结合工具链，自动解析用户输入，智能选择和调用合适的工具，支持多轮推理和工具调用。适合需要\"智能决策+多工具自动调度\"的复杂任务。",
        "id": 371,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 51,
        "length_tokens": 130,
        "text": "2-simple_toolchain.py 是基于LCEL（LangChain Expression Language）表达式链式组合。  \n核心思想是用LCEL的RunnableLambda等方式，将各个工具函数以\"数据流\"方式串联或分支，手动调度任务链。  \n适合需要\"自定义流程、明确步骤、可控组合\"的多工具任务。任务链的每一步由开发者显式指定（如先文本分析再统计行数，或条件分支）。  \n不具备Agent的\"自主决策\"能力，所有流程和分支都需手动编排。",
        "id": 372,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 51,
        "length_tokens": 0,
        "text": "",
        "id": 373,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 52,
        "length_tokens": 4,
        "text": "Al Agent对比",
        "id": 374,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 52,
        "length_tokens": 0,
        "text": "",
        "id": 375,
        "type": "table",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 4,
        "text": "Al Agent对比",
        "id": 376,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 7,
        "text": "（1）工作流编排",
        "id": 377,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 19,
        "text": "LangChain：线性链，适合固定流程任务 (如文档问答）。",
        "id": 378,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 28,
        "text": "LangGraph：支持循环、条件边和状态传递，适合动态调整的复杂逻辑（如多轮决策），",
        "id": 379,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 23,
        "text": "Coze：可视化工作流，支持嵌套和批处理，但灵活性较低",
        "id": 380,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 20,
        "text": "Dify：基于自然语言定义工作流，适合API集成和Prompt调优",
        "id": 381,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 9,
        "text": "(2）工具调用与扩展性",
        "id": 382,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 24,
        "text": "LangChain/LangGraph：工具作为链或图的节点，支持自定义工具和重试逻辑。",
        "id": 383,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 16,
        "text": "Coze：依赖预置插件生态，扩展需通过开放平台",
        "id": 384,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 53,
        "length_tokens": 19,
        "text": "Dify：支持OpenAPI集成，适合技术栈复杂的场景.",
        "id": 385,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 4,
        "text": "Al Agent对比",
        "id": 386,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 12,
        "text": "(3) RAG (检索增强生成) ",
        "id": 387,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 18,
        "text": "LangChain：开箱即用的文档加载、 向量检索功能",
        "id": 388,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 19,
        "text": "LangGraph：需手动设计RAG节点，但支持反馈循环优化检索质量。",
        "id": 389,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 21,
        "text": "Dify/Coze：Dify提供基础RAG支持，Coze依赖知识库管理",
        "id": 390,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 8,
        "text": "(4）多模态与部署",
        "id": 391,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 18,
        "text": "Coze：支持图像、视频生成， 可直接发布至社交平台。",
        "id": 392,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 25,
        "text": "Qwen-Agent：开源架构，支持三级索引，以及工具调用，MCP协议调用，使用方便。",
        "id": 393,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 54,
        "length_tokens": 15,
        "text": "Dify：专注私有化部署，适合企业内网",
        "id": 394,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 55,
        "length_tokens": 4,
        "text": "Al Agent对比",
        "id": 395,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 55,
        "length_tokens": 6,
        "text": "AIAgent选择建议：",
        "id": 396,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 55,
        "length_tokens": 78,
        "text": "·无代码开发：Coze  \n·快速原型开发：LangChain（线性任务）或Qwen-Agent。  \n·复杂Agent系统：LangGraph（多Agent协作）或 Dify（API深度集成）。  \n·企业私有化：Dify (开源部署）,Qwen-Agent或 LangChain+LangGraph（灵活组合)",
        "id": 397,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 15,
        "text": "CASE: 搭建故障诊断Agent (Coze) ",
        "id": 398,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 9,
        "text": "Coze工作流适配性分析：",
        "id": 399,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 6,
        "text": "需注意的局限性",
        "id": 400,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 9,
        "text": "适合搭建的典型场景",
        "id": 401,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 19,
        "text": "实时设备交互：无法直接SSH登录思科设备 (需通过API中转)",
        "id": 402,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 13,
        "text": "标准化诊断流程 (如OSI分层排查)",
        "id": 403,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 17,
        "text": "复杂协议分析：如BGP状态机诊断需依赖外部系统",
        "id": 404,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 15,
        "text": "多工具串联调用(Ping→Traceroute→路由检查)",
        "id": 405,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 17,
        "text": "大规模拓扑处理：超过50节点的网络建议拆分子工作流",
        "id": 406,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 15,
        "text": "条件分支决策 (根据前序结果动态调整路径) ",
        "id": 407,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 56,
        "length_tokens": 13,
        "text": "团队知识沉淀 (解决方案自动入库) ",
        "id": 408,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 57,
        "length_tokens": 15,
        "text": "CASE: 搭建故障诊断Agent (Coze) ",
        "id": 409,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 57,
        "length_tokens": 8,
        "text": "Coze工作流中的节点设计：",
        "id": 410,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 57,
        "length_tokens": 0,
        "text": "",
        "id": 411,
        "type": "image",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 57,
        "length_tokens": 3,
        "text": "关键关系说明",
        "id": 412,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 57,
        "length_tokens": 71,
        "text": "数据流：上游节点的输出变量（如ping_result）作为下游节点的输入参数控制流：条件分支节点决定后续执行路径(类似if-else)异步调用：HTTP请求节点与其他节点可并行执行状态共享：通过全局变量（如global.failed_devices）跨节点传递数据",
        "id": 413,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      },
      {
        "page": 58,
        "length_tokens": 8,
        "text": "Thank You Using data to solve problems ",
        "id": 414,
        "type": "text",
        "file_name": "9-LangChain：多任务应用开发"
      }
    ]
  }
}
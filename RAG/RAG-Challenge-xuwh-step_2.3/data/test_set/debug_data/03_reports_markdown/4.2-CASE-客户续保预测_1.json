[
    {
        "type": "text",
        "text": "客户续保预测 ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Case: 客户续保预测 ",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "Case：客户续保预测 ",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "寿险行业是一个高度依赖于客户忠诚度和持续支付保费的领域。准确预测客户是否续保可以帮助保险公司提前采取措施，减少流失率，比如提供更加个性化的服务或者优化产品设计。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "训练集：train.csv 1000条   \n测试集：test.csv200条   \nhttps://www.kaggle.c0m/t/467370365f17478   \n68eadbd65eeb970c5 ",
        "page_idx": 1
    },
    {
        "type": "table",
        "img_path": "images/4547115459ca336e8faf2c08383cbcfe109d2d5a9fca0b8fedfce4da4fc6cfad.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>英文名称</td><td>含义描述</td></tr><tr><td>policy_id</td><td>每个保单的唯一标识符</td></tr><tr><td>age</td><td>客户的年龄，范围从18岁到70岁。</td></tr><tr><td>gender</td><td>客户的性别，分为\"男\"和\"女\"。</td></tr><tr><td>birth_region</td><td>客户的出生地</td></tr><tr><td>insurance_region</td><td>客户投保时所在的地区</td></tr><tr><td>lincome_level</td><td>客户的收入水平，分为\"低\"、“中\"和\"高\"。</td></tr><tr><td>education_level</td><td>客户的最高教育程度，分为\"高中\"、“本科\"、“硕士\"和\"博士\"。</td></tr><tr><td>occupation</td><td>客户的职业，例如\"销售”、“经理\"、“设计师\"、“工程师\"、“医生\"等。</td></tr><tr><td>marital_status</td><td>客户的婚姻状况，分为\"单身\"、“已婚\"和\"离异\"。</td></tr><tr><td>family_members</td><td>客户的家庭成员数量，单身客户通常有1-2人，已婚客户通常有3-6人，</td></tr><tr><td>policy_type</td><td>保单的类型，例如\"平安六福保\"、“盛世福尊悦版\"、“优悦版\"等。</td></tr><tr><td>policy_term</td><td>保单的有效期限，分为\"1年\"、“5年\"、“10年\"和\"20年\"。</td></tr><tr><td>premium_amount</td><td>客户每年需要支付的保费金额</td></tr><tr><td>policy_start_date</td><td>保单开始生效的日期</td></tr><tr><td>policy_end_date</td><td>保单到期的日期，根据保单生效日期和保单期限计算。</td></tr><tr><td>claim_history</td><td>保单是否有过理赔记录，分为\"是\"和\"否\"。</td></tr><tr><td>renewal</td><td>是否续保，Yes或者No</td></tr></table></body></html>",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "Case: 客户续保预测 ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "提交结果以cSV的格式，采用accuracy进行评价标准工作中，可能还会用到其他评价标准：",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "$F 1 = 2 { \\frac { p \\cdot r } { p + r } } { \\mathrm { ~ w h e r e ~ } } p = { \\frac { t p } { t p + f p } } , r = { \\frac { t p } { t p + f n } }$ 比如F1值，可以平衡精确率和召回率精确率 Precision：True Positive在all predicted positives的比例召回率 Recall:True Positive在all actual positives的比例",
        "page_idx": 2
    },
    {
        "type": "table",
        "img_path": "images/e35875a3e9a13bdf1daca9123691cd5e19d5e8ff1a8141150219efe55cb26a8e.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>policy_id</td><td>renewal</td></tr><tr><td>10001</td><td>Yes</td></tr><tr><td>10002</td><td>No</td></tr><tr><td>10003</td><td>Yes</td></tr><tr><td>10004</td><td>Yes</td></tr><tr><td>10005</td><td>Yes</td></tr><tr><td>10006</td><td>Yes</td></tr><tr><td>10007</td><td>No</td></tr><tr><td>10008</td><td>No</td></tr><tr><td>10009</td><td>Yes</td></tr><tr><td>10010</td><td>Yes</td></tr><tr><td>10011</td><td>Yes</td></tr><tr><td>10012</td><td>Yes</td></tr><tr><td></td><td></td></tr><tr><td>10200</td><td>Yes</td></tr></table></body></html>",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "policyresult.csv，提交预测结果",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "Case: 客户续保预测 ",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "table",
        "img_path": "images/018a0429a6904f5ab59b43a237a2c09b4ae1375c2972f5b411f88568ae4bdffd.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>policy_id</td><td>renewal</td></tr><tr><td>10001</td><td>Yes</td></tr><tr><td>10002</td><td>No</td></tr><tr><td>10003</td><td>Yes</td></tr><tr><td>10004</td><td>Yes</td></tr><tr><td>10005</td><td>Yes</td></tr><tr><td>10006</td><td>Yes</td></tr><tr><td>10007</td><td>No</td></tr><tr><td>10008</td><td>No</td></tr><tr><td>10009</td><td>Yes</td></tr><tr><td>10010</td><td>Yes</td></tr><tr><td>10011</td><td>Yes</td></tr><tr><td>10012</td><td>Yes</td></tr><tr><td></td><td></td></tr><tr><td>10200</td><td>Yes</td></tr></table></body></html>",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Step1，数据预处理  \n对数据进行可视化探索  \n缺失值处理，异常值处理，唯一值统计  \n分类变量数值化  \nStep2，模型选择（训练&评估）  \n随机森林,XGBoost,LightGBM  \n决策树、逻辑回归  \nStep3，模型预测（提交预测结果）",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "policyresult.csv，提交预测结果",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "To DO: 数据预处理",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "数据探索",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "Thinking: 针对客户续保， 都有哪些维度可以进行数据探索？",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "基本人口统计特征",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "年龄分布  \n性别差异  \n出生地区与投保所在地区的关联  \n经济状况  \n收入水平  \n教育背景  \n，职业类型",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "家庭结构",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "·婚姻状况  \n·家庭成员数量  \n保单详情  \n·保单类型  \n·保费金额  \n·保单期限  \n·理赔历史  \n时间和地域因素  \n·保单生效日期  \n·投保所在地区",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "数据探索",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "#年龄分布  \nplt.figure(figsize=(10, 6))  \nsns.histplot(df['age'], bins $\\scriptstyle \\mathtt { \\mathtt { = 5 0 } }$ ,kde $\\risingdotseq$ True)  \nplt.title('客户年龄分布')  \nplt.xlabel('年龄')  \nplt.ylabel('人数)  \nplt.show()  \n# 出生地区与投保所在地区的关联  \nregion_cross $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.crosstab(df['birth_region'], df['insurance_region'])  \nplt.figure(figsize $\\ c =$ (12, 10))  \nsns.heatmap(region_cross, cmap $= ^ { \\mathsf { 1 } }$ YIGnBu',annot $\\ c =$ False, fmt='.0f',  \ncbar_kws $\\ c =$ {\"label':'人数'})  \nplt.title('出生地区与投保所在地区的热力图')  \nplt.xlabel('投保所在地区')  \nplt.ylabel('出生地区')  \nplt.show()  \n# 性别差异  \ngender_renewal $\\mathbf { \\tau } = \\mathbf { \\tau }$   \ndf.groupby('gender')['renewal'].value_counts(normalize $\\circleddash$ True).unstack()  \ngender_renewal.plot(kind $= ^ { \\mathsf { I } }$ bar'，stacked $\\ c =$ True, figsize=(8, 6), title $\\bullet ^ { \\prime }$ 不同  \n性别续保情况\")  \nplt.ylabel('比例\")  \nplt.show()",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "数据探索 （人口特征）",
        "text_level": 1,
        "page_idx": 6
    },
    {
        "type": "image",
        "img_path": "images/90dbf1758108f81341000682b7f2d9d20b7c20e8a6f3728ff17c9241741e0668.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "数据探索 （人口特征）",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "image",
        "img_path": "",
        "img_caption": [
            "出生地区与投保所在地区的热力图"
        ],
        "img_footnote": [],
        "page_idx": 7
    },
    {
        "type": "image",
        "img_path": "images/0ef0bb59352ae8f1d37f149a87204671404c201839a240b1ee78e75b4711604e.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "数据探索 （经济情况）",
        "text_level": 1,
        "page_idx": 8
    },
    {
        "type": "image",
        "img_path": "images/22e1c972ab2ba1b3c4275cc79f471dc00be528f86e27e6e26d23d046f33eabde.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "数据探索 （经济情况）",
        "text_level": 1,
        "page_idx": 9
    },
    {
        "type": "image",
        "img_path": "images/7fd9aa7c3ccd711fc1bf68d717aa02d4bd20b6a4614d502223218600c1f740c0.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "数据探索 （家庭结构）",
        "text_level": 1,
        "page_idx": 10
    },
    {
        "type": "image",
        "img_path": "images/979c7f088d6ca882dac3bf9da6884b7049fe4153aa75a0538b93580030c51da1.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "数据探索 （保单详情",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "image",
        "img_path": "images/7e382da62352c53d0890e34b4283553d8c435ce11eb0d1a871c2faaef061a655.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 11
    },
    {
        "type": "image",
        "img_path": "images/393f7c32836d590852a629975182d4aff5cff9e22c6551d86f2593c3964a3243.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "数据探索 （保单详情",
        "text_level": 1,
        "page_idx": 12
    },
    {
        "type": "image",
        "img_path": "images/173225ce66ce54f4b494006e6e64f1025a18f6d80215a134e197fe6661fc4a04.jpg",
        "img_caption": [],
        "img_footnote": [],
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "数据探索 （时间和地域因素）",
        "text_level": 1,
        "page_idx": 13
    },
    {
        "type": "image",
        "img_path": "images/d524758bed223e95042ca4c01a45172c8846466eddecb73e9996dfa791cb129e.jpg",
        "img_caption": [
            "每年保单续保率变化趋势 "
        ],
        "img_footnote": [],
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "数据探索 （时间和地域因素）",
        "text_level": 1,
        "page_idx": 14
    },
    {
        "type": "image",
        "img_path": "images/6e70cd41ea1757bd5ebc446f96ccd42b18a6fe58a99fef616738ad1b7068762f.jpg",
        "img_caption": [
            "不同投保所在地区续保情况"
        ],
        "img_footnote": [],
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "数据预处理",
        "text_level": 1,
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "#查看分类变量   \ncate_cols $\\mathbf { \\tau } = \\mathbf { \\tau }$ df.select_dtypes(include $\\mathop { \\bf { \\phi } } =$ ['object']).columns   \ncate_cols ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "Index(['gender','birth_region','insurance_region','income_level', 'education_level','occupation','marital_status','policy_type', 'policy_term','claim_history','renewal'], dtype $\\mathbf { \\lambda } = \\mathbf { \\vec { \\lambda } }$ object') ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "# policy_term字段：去掉'年'字，并转换为整数 df['policy_term'] $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ df['policy_term'].str.replace('年',\").astype(int) ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "数据预处理",
        "text_level": 1,
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "#对income_level进行数值编码 income_map $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {'低': 0,'中': 1,'高': 2} df['income_level'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['income_level'].map(income_map) ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "#对education_level进行数值编码education_map $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ {高中':0,'本科':1,'硕士':2,'博士':3}df['education_level'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['education_level'].map(education_map)",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "#对marital_status进行数值编码 marital_ $m a p = \\{ ^ { \\prime }$ 单身':0,'已婚':1,'离异': 2} df['marital_status'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['marital_status'].map(marital_map) ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "#对gender进行数值编码   \ngender_map $\\mathbf { \\tau } = \\mathbf { \\tau }$ {女': 0,'男': 1}   \ndf['gender'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['gender'].map(gender_map)   \n# 对claim_map进行数值编码   \nrenewal_ $\\mathsf { m a p } = \\{ { } ^ { \\prime } \\mathsf { Y } \\mathsf { e s } ^ { \\prime } \\colon 1 , { } ^ { \\prime } \\mathsf { N o } ^ { \\prime } \\colon 0 \\}$   \ndf['renewal'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ df['renewal'].map(renewal_map)   \n#将分类变量转换为数值型   \nle $\\mathbf { \\tau } = \\mathbf { \\tau }$ LabelEncoder()   \ncate_cols $\\mathbf { \\tau } = \\mathbf { \\tau }$ ['birth_region','insurance_region',   \n'occupation','policy_type']   \nfor col in cate_cols: df[col] $\\mathbf { \\tau } = \\mathbf { \\tau }$ le.fit_transform(df[col]) ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 16
    },
    {
        "type": "table",
        "img_path": "images/5cc87aa013863953ada7b10e3b21bef2c285c51e2fc23e4f5378f4331d2f2a51.jpg",
        "table_caption": [
            "数据预处理"
        ],
        "table_footnote": [
            "1000 rows $\\times 1 7$ columns "
        ],
        "table_body": "<html><body><table><tr><td></td><td>policy_id</td><td>age</td><td> gender</td><td>birth_region</td><td>insurance_region</td><td>income_level</td><td>education_level</td><td>occupation</td><td>marital_status</td><td>family_members</td><td>policy_type</td><td>policy_te</td></tr><tr><td>0</td><td>10001</td><td>56</td><td></td><td>20</td><td>5</td><td>2</td><td></td><td>1</td><td>0</td><td>1</td><td>5</td><td>0</td></tr><tr><td>1</td><td>10002</td><td>69</td><td>1</td><td>31</td><td>31</td><td>2</td><td></td><td>3 0</td><td></td><td>0</td><td>1</td><td>7</td></tr><tr><td>2</td><td>10003</td><td>46</td><td>1</td><td>30</td><td>10</td><td>1</td><td>1</td><td>1</td><td></td><td>0</td><td>1</td><td>7</td></tr><tr><td>3</td><td>10004</td><td>32</td><td>0</td><td>16</td><td>16</td><td>1</td><td>2</td><td>2</td><td></td><td>1</td><td>6</td><td>2</td></tr><tr><td>4</td><td>10005</td><td>60</td><td>1</td><td>29</td><td>29</td><td>2</td><td>1</td><td>1</td><td></td><td>1</td><td>3</td><td>8</td></tr><tr><td></td><td>：</td><td>…</td><td>：</td><td>：</td><td>：</td><td>：</td><td></td><td>：</td><td></td><td></td><td>…</td><td></td></tr><tr><td>95</td><td>10996</td><td>60</td><td>0</td><td>16</td><td>16</td><td>2</td><td>2</td><td>0</td><td></td><td>2</td><td>6</td><td>1</td></tr><tr><td>96</td><td>10997</td><td>64</td><td>1</td><td>32</td><td>18</td><td>2</td><td>1</td><td>4</td><td></td><td>1</td><td>4</td><td>8</td></tr><tr><td>97</td><td>10998</td><td>62</td><td>0</td><td>22</td><td>22</td><td>2</td><td>3</td><td>1</td><td></td><td>0</td><td>2</td><td>5</td></tr><tr><td>98</td><td>10999</td><td>35</td><td>1</td><td>27</td><td>27</td><td>1</td><td>2</td><td>0</td><td></td><td>0</td><td>2</td><td>8</td></tr><tr><td>99</td><td>11000</td><td>55</td><td>1</td><td>5</td><td>5</td><td>2</td><td>1</td><td>2</td><td></td><td>1</td><td>3</td><td>7</td></tr></table></body></html>",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "续保预测：随机森林",
        "text_level": 1,
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "import pandas as pd   \ndf $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.read_excel('./policy_clean.xlsx')   \n#转换为自某一起始点的天数   \ndf['policy_start_date'].min()   \nbase_date $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.to_datetime('2010-01-01')   \ndf['policy_start_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (df['policy_start_date'] -   \nbase_date).dt.days   \ndf[['policy_start_date','policy_start_date_day']]   \ndf['policy_end_date_day'] $\\mathbf { \\tau } = \\mathbf { \\tau }$ (df['policy_end_date'] -   \nbase_date).dt.days   \ndf[['policy_end_date','policy_end_date_day'l] ",
        "page_idx": 18
    },
    {
        "type": "table",
        "img_path": "images/d584aaeb0ef761c19149ee8ad6b3332505fbc287f099312510e275ea2094f67e.jpg",
        "table_caption": [],
        "table_footnote": [
            "1000 rows $\\times 2$ columns "
        ],
        "table_body": "<html><body><table><tr><td></td><td>policy_start_datepolicy_start_date_day</td><td></td><td></td><td>policy_end_datepolicy_end_date_day</td><td></td></tr><tr><td>0</td><td>2015-01-17</td><td>1842</td><td>0</td><td>2035-01-17</td><td>9147</td></tr><tr><td>1</td><td>2015-05-20</td><td>1965</td><td>1</td><td>2035-05-20</td><td>9270</td></tr><tr><td>２</td><td>2021-06-10</td><td>4178</td><td>2</td><td>2031-06-10</td><td>7830</td></tr><tr><td>3</td><td>2017-01-29</td><td>2585</td><td>3</td><td>2027-01-29</td><td>6237</td></tr><tr><td>4</td><td>2013-06-04</td><td>1250</td><td>4</td><td>2033-06-04</td><td>8555</td></tr><tr><td>：</td><td>：</td><td>：</td><td></td><td>：</td><td>：</td></tr><tr><td>995</td><td>2015-07-05</td><td>2011</td><td>995</td><td>2025-07-05</td><td>5664</td></tr><tr><td>996</td><td>2022-10-24</td><td>4679</td><td>996</td><td>2027-10-24</td><td>6505</td></tr><tr><td>997</td><td>2017-09-21</td><td>2820</td><td>997</td><td>2037-09-21</td><td>10125</td></tr><tr><td>998</td><td>2015-04-21</td><td>1936</td><td>998</td><td>2025-04-21</td><td>5589</td></tr><tr><td>999</td><td>2011-02-18</td><td>413</td><td>999</td><td>2031-02-18</td><td>7718</td></tr></table></body></html>",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "续保预测：随机森林",
        "text_level": 1,
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "from sklearn.model_selection import train_test_split   \nfrom sklearn.preprocessing import StandardScaler   \nfrom sklearn.ensemble import RandomForestClassifier   \nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix   \n#特征和目标变量   \n$\\mathsf { X } =$ df.drop(['renewal','policy_start_date','policy_end_date'], axis ${ \\bf \\varepsilon } = 1$ ）   \n$\\boldsymbol { \\mathsf { y } } = \\mathsf { d } \\boldsymbol { \\mathsf { f } } [$ 'renewal']   \n#标准化特征   \nscaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ StandardScaler()   \nX_scaler $\\mathbf { \\tau } = \\mathbf { \\tau }$ scaler.fit_transform(X) 以上代码都可以复用，用于决策树、逻辑回归等   \n#划分训练集和测试集   \nX_train,X_test, y_train, Y_test $\\mathbf { \\tau } = \\mathbf { \\tau }$ train_test_split(X_scaler, y, test_size ${ \\tt \\tt = } 0 . 2$ , random_state=42) ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "续保预测：随机森林",
        "text_level": 1,
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "#创建随机森林分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ RandomForestClassifier(n_estimators=100, random_state=42)   \n# 训练模型   \nclf.fit(X_train, y_train)   \n#预测   \nY_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test)   \n#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred))   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Accuracy: 0.925 ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Confusion Matrix:   \n[[33 11]   \n[4152]] ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Classification Report: ",
        "page_idx": 20
    },
    {
        "type": "table",
        "img_path": "images/1ebfaad2ac5b4f5a2dc0cf40ece01fdec2293367f09b2ffb216c17021ccec1c2.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>precision</td><td>recall f1-score support</td><td></td><td></td></tr><tr><td>0 0.89</td><td>0.75 0.81</td><td>44</td><td></td></tr><tr><td>1 0.93</td><td>0.97 0.95</td><td>156</td><td></td></tr><tr><td>accuracy</td><td></td><td>0.93</td><td>200</td></tr><tr><td>macro avg</td><td>0.91</td><td>0.86 0.88</td><td>200</td></tr><tr><td>weighted avg</td><td>0.92 0.93</td><td>0.92</td><td>200</td></tr></table></body></html>",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "续保预测：决策树 ",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "#创建决策树分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ DecisionTreeClassifier(random_state=42,max_depth=4)   \n#训练模型   \nclf.fit(X_train, Y_train)   \n#预测   \nY_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test)   \n#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, Y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred))   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "Accuracy: 0.93 ",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "Confusion Matrix:   \n[[34 10]   \n[4152]] ",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "Classification Report: ",
        "page_idx": 21
    },
    {
        "type": "table",
        "img_path": "images/cc8224ea6022a56d45cfe32425ae38c48ace914a105135349b7ea8fc38659929.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>precision</td><td colspan=\"2\">recall f1-score support</td><td></td></tr><tr><td>0 0.89</td><td>0.77 0.83</td><td>44</td><td rowspan=\"3\"></td></tr><tr><td>1</td><td>0.94 0.97</td><td>0.96 156</td></tr><tr><td>accuracy</td><td>0.93</td><td>200</td></tr><tr><td>macro avg</td><td>0.92</td><td>0.87 0.89</td><td>200</td></tr><tr><td>weighted avg</td><td>0.93</td><td>0.93 0.93</td><td>200</td></tr></table></body></html>",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "续保预测：决策树 ",
        "text_level": 1,
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "#可视化决策树 ",
        "text_level": 1,
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "dot_data $\\mathbf { \\tau } = \\mathbf { \\tau }$ export_graphviz(clf, out_file $\\ c =$ None, feature_names=X.columns, class_names $\\ c =$ ['Not   \nRenewed', 'Renewed'], filled $\\mathbf { \\lambda } = \\mathbf { \\dot { \\lambda } }$ True, rounded $\\ c = { \\overrightarrow { \\vert \\mathbf { \\mu } } }$ True, special_characters $\\ c =$ True)   \ngraph $\\mathbf { \\tau } = \\mathbf { \\tau }$ pydotplus.graph_from_dot_data(dot_data)   \nImage(graph.create_png()) ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "class=Renewed True False family_members≤2.5 age ≤60.5 gini=0.499 samp1 due=e5 class=Not Renewed class=Renewe policy_stait_date_day≤703.0 marital stus 1.5 poey family_members≤3.5 gini =0.294 gini = 0.449 gini=0.449 val15 samples =106 valpg /alue=[36,70] [8,481] class=NotRenewed class=Renewed class=Renewed class=Renewed n1-195 国 G oc535 educaion iel0. Ca samples = 5 class=newed samples = 87 Can clss=N= [1.nwed Ce =Not Renewed class = Renewed class= Not Renewed va class = Not Renewed class = Renewed class =Not Renewed class =NotRenew Ga class = Renewed valtg-0.4 class=Renewed somples=419 class =Renewed vamuples.6g class = Not Renewed E class = Renewed class =Not Renewec ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "续保预测：决策树 ",
        "text_level": 1,
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "from sklearn.tree import DecisionTreeClassifier, export_text #输出决策树的文本表示   \ntree_rules $\\mathbf { \\tau } = \\mathbf { \\tau }$ export_text(clf, feature_names=list(X.columns)) print(tree_rules) ",
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "--- age <= 29.50 |--- family_members <= 2.50 :policy_start_date_day $< = 7 0 3 . 0 0$ （2 - age <= 19.50 |--- class: 0 |--- age > 19.50 1 --- class:1 -- policy_start_date_day $>$ 703.00 |--- age <= 21.50 1 |--- class: 0 |--- age > 21.50 |--- class: 0 l--- family_members $>$ 2.50 : marital_status $< = \\ 1 . 5 8$ --- occupation $< = ~ 2 . 5 8$ |--- class: 1 |--- occupation $>$ 2.50 |--- class: 0 -- marital_status $>$ 1.50 |--- policy_end_date_day $\\scriptstyle < =$ 8918.50 --- class:0 |--- policy_end_date_day $>$ 8918.50 |--- class: 1 age > 29.50 age $< = ~ 6 0 . 5 8$ - policy_end_date_day $\\scriptstyle < =$ 5506.00 |--- class: 0 --- policy_end_date_day $>$ 5506.00 |--- occupation $< = ~ 3 . 5 0$ 1 |--- class: 1 |--- occupation $>$ 3.50 |--- class: 1 |--- age > 60.50 |--- family_members $< = ~ 3 . 5 0$ （20 - education_level $< = ~ 9 . 5 8$ （20 |--- class: 0 |--- education_level $>$ 0.50 |--- class: 1 --- family_members > 3.50 |--- marital_status $< = ~ 1 . 5 0$ （204 |--- class: 1 - marital_status $>$ 1.50 |--- class: 0 ",
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "续保预测：逻辑回归 ",
        "text_level": 1,
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "#创建逻辑回归分类器   \nclf $\\mathbf { \\tau } = \\mathbf { \\tau }$ LogisticRegression(random_state $= 4 2$ ,max_iter=200) # 增加   \nmax_iter以确保收敛 ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "# 训练模型 clf.fit(X_train, y_train) ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "#预测 Y_pred $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.predict(X_test) ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "#评估模型   \nprint(\"Accuracy:\",accuracy_score(y_test, y_pred))   \nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_test, Y_pred)   \nprint(\"Classification Report:\\n\", classification_report(y_test, Y_pred)) ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "Accuracy: 0.835 ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "Confusion Matrix:   \n[[11 33]   \n[0 156]]   \nClassification Report: ",
        "page_idx": 24
    },
    {
        "type": "table",
        "img_path": "images/aff2901d5e66746e4336b6449d2c95ba7ce51f107de9a744cc38752ba4d24c77.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>precision</td><td>recall f1-score support</td><td></td><td></td></tr><tr><td>0 1.00</td><td>0.25</td><td>0.40</td><td>44</td></tr><tr><td>1 0.83</td><td>1.00</td><td>0.90</td><td>156</td></tr><tr><td>accuracy</td><td></td><td>0.83</td><td>200</td></tr><tr><td>macro avg</td><td>0.91</td><td>0.62 0.65</td><td>200</td></tr><tr><td>weighted avg</td><td>0.86</td><td>0.83 0.79</td><td>200</td></tr></table></body></html>",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "续保预测：逻辑回归 ",
        "text_level": 1,
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "#获取特征重要性（通过系数）  \nfeature_importance $\\mathbf { \\tau } = \\mathbf { \\tau }$ clf.coef_[0]#取第一个类别的系数绝对值  \nfeature_names $\\mathbf { \\tau } = \\mathbf { \\tau }$ X.columns  \n#将特征重要性和特征名称组合成一个DataFrame  \nimportances_df $\\mathbf { \\tau } = \\mathbf { \\tau }$ pd.DataFrame({'Feature': feature_names,'lmportance': feature_impor  \n# 按照重要性从大到小排序  \nimportances_df $\\mathbf { \\tau } = \\mathbf { \\tau }$ importances_df.sort_values(by='lmportance', ascending=False)  \n#绘制水平柱状图  \nplt.figure(figsize=(10, 8))  \nplt.barh(importances_df['Feature'], importances_df['lmportance'], color='skyblue')  \nplt.xlabel('Feature lmportance (Absolute Coefficient Value)')  \nplt.title('Feature Importance from Logistic Regression Model')  \nplt.gca().invert_yaxis()#使得最重要的特征在顶部  \nplt.show()",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "续保预测：逻辑回归 ",
        "text_level": 1,
        "page_idx": 26
    },
    {
        "type": "image",
        "img_path": "images/81013e81ea4009fc6d92a6ff4db9adf0789984cd8221445e54ab8a46a44c6077.jpg",
        "img_caption": [
            "Feature Importance from Logistic Regression Model "
        ],
        "img_footnote": [],
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "模型洞察",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "常用模型对比",
        "text_level": 1,
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "常用模型对比：",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "评分卡模型: ",
        "page_idx": 28
    },
    {
        "type": "table",
        "img_path": "images/987b482ec29de059ee3e4832b8dd2e4728203a4af8d7b223d431460462a89772.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>模型</td><td>优势</td><td>劣势</td></tr><tr><td>逻辑回归</td><td>简单、稳定 可解释性强 易于检测和部署</td><td>不适用于非线性问题 准确率不高</td></tr><tr><td>决策树</td><td>对数据质量要求低 可解释性强</td><td>易于过拟合 准确度不高</td></tr><tr><td>集成模型 (RF、GBDT)</td><td>准确度高 鲁棒性好 泛化能力强</td><td>可解释性差 计算量大 部署较困难</td></tr></table></body></html>",
        "page_idx": 28
    },
    {
        "type": "table",
        "img_path": "images/70481ed5408b85d76a9fb63e2bab9bb57f32d890064d7112320178f35a5d8db3.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>变量</td><td>分箱类别</td><td>分数</td></tr><tr><td>基准分</td><td>:</td><td>A-B00</td></tr><tr><td rowspan=\"4\">X1</td><td>1</td><td>-B0W1</td></tr><tr><td>2</td><td>-B0W12</td></tr><tr><td></td><td></td></tr><tr><td>k</td><td>-B0Wik1</td></tr><tr><td></td><td></td><td>：</td></tr><tr><td rowspan=\"4\">Xn</td><td>1</td><td>-B0nWn1</td></tr><tr><td>2</td><td>-B0nWn2</td></tr><tr><td>…</td><td>:</td></tr><tr><td>kn</td><td>n -B0nWnkn</td></tr></table></body></html>",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "LR模型是评分卡模型最经常使用的算法",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "0为模型中第i个变量的系数 ${ \\mathbf { \\nabla } } _ { \\mathbf { \\mu } } , w _ { i j }$ 为第i个变量第j个分箱WOE值， 影响每个分箱分数的因素：参数B，系数 $\\cdot \\theta _ { i } ,$ 该分箱WOE编码 $w _ { i j }$ ",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "Thinking: 如何对决策树模型进行解读？",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "--- age <= 29.50 |--- family_members <= 2.50 policy_start_date_day $< = 7 0 3 . 0 0$ - age <= 19.50 |--- class: 0 |--- age > 19.50 1 |--- class: 1 |--- policy_start_date_day $>$ 703.00 |--- age <= 21.50 --- class: 0 --- age > 21.50 |--- class: 0 l--- family_members $>$ 2.50 : marital_status $< = \\ 1 . 5 8$ |--- occupation $< = ~ 2 . 5 8$ |--- class: 1 l--- occupation $>$ 2.50 |--- class: 0 --- marital_status $>$ 1.50 |--- policy_end_date_day $\\scriptstyle < =$ 8918.50 |--- class: 0 l--- policy_end_date_day $>$ 8918.50 |--- class: 1 age > 29.50 age $< = ~ 6 0 . 5 8$ - policy_end_date_day $\\scriptstyle < =$ 5506.00 |--- class: 0 |--- policy_end_date_day $>$ 5506.00 |--- occupation $< = ~ 3 . 5 0$ 1 |--- class: 1 |--- occupation $>$ 3.50 |--- class: 1 |--- age > 60.50 l--- family_members $< = ~ 3 . 5 0$ （20 - education_level $< = ~ 9 . 5 8$ |--- class: 0 l--- education_level $>$ 0.50 |--- class: 1 |--- family_members > 3.50 |--- marital_status $< = ~ 1 . 5 0$ （204号 |--- class: 1 - marital_status $>$ 1.50 |--- class: 0 ",
        "page_idx": 29
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "我在做寿险续保预测，构建了决策树：   \n二二   \n|-- age <= 29.50 |--- family_members $< = 2 . 5 0$ |--- policy_start_date_day $< = 7 0 3 . 0 0$ |--- age <= 19.50 --- class: 0 --- age > 19.50 I|--- class: 1 |--- policy_start_date_day $>$ 703.00 --- age <= 21.50 |--- class: 0 --- age > 21.50 --- class: 0 |--- family_members $>$ 2.50 --- marital_status $< = 1 . 5 0$ |--- occupation $< = 2 . 5 0$ l|--- class: 1 |--- occupation $>$ 2.50 --- class: 0 |--- marital_status $>$ 1.50 ",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "||--- policy_end_date_day $< = 8 9 1 8 . 5 0$ --- class: 0 | |--- policy_end_date_day $>$ 8918.50 ||--- class: 1 --- age > 29.50 -- age <= 60.50 --- policy_end_date_day $< =$ 5506.00 --- class: 0 I--- policy_end_date_day $>$ 5506.00 |--- occupation $< = 3 . 5 0$ --- class: 1 -- occupation > 3.50 |--- class: 1 |--- age > 60.50 |--- family_members $< = 3 . 5 0$ |--- education_level $< = 0 . 5 0$ --- class: 0 |--- education_level $>$ 0.50 |--- class: 1 |--- family_members $>$ 3.50 I||--- marital_status $< = 1 . 5 0$ ",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "--- class: 1--- marital status > 1.50|--- class: 0二==policy_start_date_day:距离 2010-01-01的天数policy_end_date_day:距离 2010-01-01的天数class:0代表不续保，1代表续保marital_status:'单身': 0,'已婚':1,'离异': 2occupation:0:医生,1:工程师,2:律师，3：经理,4:设计师,5:销售education_level: '高中':0,'本科':1,'硕士':2, 博士':3===帮我解释这个决策树，告诉我寿险客户续保有哪些特点",
        "page_idx": 30
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "这个决策树模型根据一系列的条件来预测寿险客户是否会续保。让我们逐层分析，看看哪些因素对续保决策有影响。",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "1.年龄 (age) ",
        "text_level": 1,
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "。年龄小于等于29.5岁的客户：",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "■家庭成员数量(family_members)少于或等于2.5时:■如果保险开始日期(policy_start_date_day)距离2010-01-01不超过703天 (约2年)，那么更年轻的客户( $< = 1 9 . 5$ 岁)倾向于不续保；而较年长的客户 $( > 1 9 . 5$ 岁)则倾向于续保。■如果保险开始日期超过703天，那么更年轻的客户( $< = 2 1 . 5$ 岁)和稍微年长一点的客户( $> 2 1 . 5$ 岁)都倾向于不续保。",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "■当家庭成员数大于2.5时：",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "■婚姻状况(marital_status)为单身或已婚 $< = 1 . 5 )$ 时，职业(occupation)为医生、工程师或律师( $< = 2 . 5$ 的人倾向于续保，而其他职业则倾向于不续保。  \n■对于婚姻状况为离异 $( > 1 . 5 )$ 的客户，如果保险结束日期(policy_end_date_day)距离2010-01-01不超过8918.5天（约24.5年）则倾向于不续保；否则，倾向于续保。",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "。年龄大于29.5岁的客户：",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "■年龄在60.5岁以下时，若保险结束日期早于或等于5506天 (约15.1年)，则倾向于不续保；否则，无论职业如何，都倾向于续保。  \n■年龄超过60.5岁时，家庭成员较少( $\\scriptstyle \\left\\{ < = 3 . 5 \\right\\}$ 且教育水平较低( $\\scriptstyle < = 0 . 5 ,$ 高中)的客户倾向于不续保；而教育水平较高 $( > 0 . 5 )$ 的客户则倾向于续保。对于家庭成员较多 $( > 3 . 5 )$ 的客户，如果是单身或已婚( $( < = 1 . 5 )$ ，则倾向于续保；反之，则倾向于不续保。",
        "page_idx": 31
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "从上述决策树可以看出，影响续保的因素包括但不限于：",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "·年龄：年轻客户与老年客户的续保倾向有所不同。  \n·家庭成员数量：家庭规模大小会影响续保决策。  \n·婚姻状态：不同婚姻状态下的个人续保意愿存在差异。  \n·职业：某些职业可能比其他职业更有可能续保。  \n·教育水平：受教育程度较高的个体可能更倾向于续保。  \n·保险起始/结束日期：保险合同的时间长度也对续保决定有一定影响。",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "这些特征共同作用，帮助模型判断客户是否具有较高的续保可能性。请注意，这只是一个基于给定数据集的统计模型，实际应用中还需要考虑更多因素和个人情况。",
        "page_idx": 32
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "在这个决策树中：年龄、家庭成员数量、婚姻状态、职业、教育水平、保险起始/结束日期如何影响续保可能性，给我一些洞察结论",
        "text_level": 1,
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "基于您提供的决策树，我们可以得出以下关于不同特征如何影响寿险客户续保可能性的洞察结论：",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "1.年龄 (Age) ",
        "text_level": 1,
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "。年轻客户（特别是29.5岁以下）与年长客户（尤其是60.5岁以上）在续保行为上表现出不同的模式。年轻客户中，家庭规模较小且保险开始日期较早的群体更可能不续保，而那些年龄稍大一些的年轻客户则更倾向于续保。）对于年龄较大的客户 （超过 $6 0 . 5 \\mathcal { \\sharp }$ )，如果他们的教育水平较高，那么他们更有可能续保；反之，则不太可能续保。",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "2.家庭成员数量 (FamilyMembers)",
        "text_level": 1,
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "○家庭成员较少的年轻人（ $< = 2 . 5$ 人）通常在特定条件下(如保险开始日期较早）更可能选择不续保。。当家庭成员较多时，特别是在老年人群中（ $> 3 . 5$ 人)，婚姻状况成为决定性因素之一。单身或已婚者更可能续保，而离异状态下的个人则倾向于不续保。",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "3.婚姻状态 (Marital Status) ",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "。婚姻状况对续保的影响主要体现在家庭成员较多的老年群体中。单身或已婚人士比离异的人更可能续保。○在某些情况下，比如对于拥有较大家庭的年轻客户，婚姻状况也会影响续保决策，但这种影响是通过与其他变量结合来体现的。",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "4.职业 (Occupation) ",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "。职业类型对年轻客户的续保意愿有显著影响。医生、工程师和律师等职业的年轻客户更倾向于续保，而其他职业 类型的客户则相反。 ○对于年龄介于29.5至60.5岁之间的客户，职业不再是一个区分是否续保的关键因素。 ",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "5.教育水平 (Education Level)",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "$0$ 教育水平仅在老年客户群体中被用作区分续保与否的标准。高学历的老年人更可能续保",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "6.保险起始/结束日期 (Policy Start/End Date) ",
        "text_level": 1,
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "。保险合同的时间长度对续保决策有重要影响。例如，保险开始日期较早（距离2010-01-01不超过703天）的年轻客户更可能选择不续保。。对于年龄较大的客户，如果保险结束日期远 (距离2010-01-01超过8918.5天)，则更可能续保。",
        "page_idx": 33
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "综合来看，给我续保用户的特点",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "根据决策树分析，我们可以总结出以下续保用户的一些特点：",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "1.年龄: ",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "○年轻客户（小于等于29.5岁）中，年龄稍大一些的客户（大于19.5岁）更可能续保。  \n○对于年龄较大的客户 (超过29.5岁)，尤其是那些年龄在60.5岁以下且保险结束日期较晚的客户，倾向于续保。",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "2.家庭成员数量：",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "。家庭成员较多的老年客户（大于3.5人）如果教育水平较高，则更可能续保。  \n。年轻客户中，家庭成员较少的情况下，保险开始日期较早的客户不太可能续保；而家庭成员较多的老年客户如果是单身或已婚状态，更可能续保。",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "3.婚姻状态：",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "○单身或已婚状态下的年轻和老年客户更可能续保。  \n。离异状态下的老年客户不太可能续保。",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "4.职业：",
        "text_level": 1,
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "○职业为医生、工程师或律师的年轻客户更可能续保。  \n。对于年龄介于29.5至60.5岁的客户，职业类型不是续保的关键因素。  \n○但对于年龄大于60.5岁的客户，无论职业如何，都倾向于续保。",
        "page_idx": 34
    },
    {
        "type": "text",
        "text": "模型洞察",
        "text_level": 1,
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "5.教育水平：",
        "text_level": 1,
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "教育水平较高的老年客户更可能续保",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "6.保险起始/结束日期：",
        "text_level": 1,
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "。保险开始日期较晚（距离2010-01-01超过703天）的年轻客户更可能续保。  \n。保险结束日期较晚（对于年龄较大的客户来说，距离2010-01-01超过8918.5天）的客户更可能续保。  \n。对于年龄在60.5岁以下的客户，保险结束日期较晚（距离2010-01-01超过5506天）也增加了续保的可能性。",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "综上所述，续保用户的典型特征可以概括为：",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "·年龄方面，中等年龄段 (比如29.5岁以上但未达到老年）的客户以及特定条件下的年轻客户 (年龄略大)。  \n·拥有较大或适中的家庭规模。  \n·婚姻状态稳定，如单身或已婚。  \n·在某些年龄段内，从事专业性较强的职业 (如医生、工程师、律师)。  \n·教育背景较好，尤其是在老年群体中。  \n·保险合同的有效期较长，特别是保险结束日期较远的客户。",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "这些特征反映了续保用户通常具有一定的财务稳定性、对未来规划的关注以及对保险产品价值的认可。保险公司可以根据这些特点来优化其产品和服务，以提高客户的续保率。",
        "page_idx": 35
    },
    {
        "type": "text",
        "text": "Thank You Using data to solve problems ",
        "text_level": 1,
        "page_idx": 36
    }
]